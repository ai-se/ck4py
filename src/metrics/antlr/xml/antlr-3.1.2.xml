<metrics>

	<class>
		<name>org.antlr.runtime.tree.RewriteEmptyStreamException</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>5</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public void _init_(String arg0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$Visitor</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>5</cbo>
		<rfc>4</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>10</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5833333333333334</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>2.3333333333333335</amc>
		<cc>
			<method name="public abstract void visit(Object)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void visit(Object arg0, Object arg1, int arg2, java.util.Map arg3)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.MismatchedRangeException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>10</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>40</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.666666666666666</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_(int arg0, int arg1, org.antlr.runtime.IntStream arg2)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenRewriteStream$InsertBeforeOp</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>7</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>33</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.6</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>15.0</amc>
		<cc>
			<method name="public int execute(StringBuffer arg0)">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenRewriteStream arg0, int arg1, Object arg2)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$WildcardTreePattern</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>5</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.Token arg0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.UnBufferedTreeNodeStream</name>
		<wmc>33</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>18</cbo>
		<rfc>67</rfc>
		<lcom>312</lcom>
		<ca>1</ca>
		<ce>18</ce>
		<npm>25</npm>
		<lcom3>0.7640625</lcom3>
		<loc>918</loc>
		<dam>0.9</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.22943722943722944</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>26.21212121212121</amc>
		<cc>
			<method name="public void setUniqueNavigationNodes(boolean arg0)">1</method>
			<method name="public int mark()">4</method>
			<method name="public void replaceChildren(Object arg0, int arg1, int arg2, Object arg3)">1</method>
			<method name="public void reset()">1</method>
			<method name="protected Object visitChild(int arg0)">3</method>
			<method name="public int size()">1</method>
			<method name="public String toString(Object arg0, Object arg1)">5</method>
			<method name="public void seek(int arg0)">3</method>
			<method name="protected Object handleRootNode()">3</method>
			<method name="public String toString()">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public Object getTreeSource()">1</method>
			<method name="protected void addNavigationNode(int arg0)">4</method>
			<method name="public Object get(int arg0)">1</method>
			<method name="public void setTokenStream(org.antlr.runtime.TokenStream arg0)">1</method>
			<method name="protected void addLookahead(Object arg0)">2</method>
			<method name="public org.antlr.runtime.tree.TreeAdaptor getTreeAdaptor()">1</method>
			<method name="public void release(int arg0)">1</method>
			<method name="protected void fill(int arg0)">2</method>
			<method name="public void rewind()">1</method>
			<method name="public org.antlr.runtime.TokenStream getTokenStream()">1</method>
			<method name="public int index()">1</method>
			<method name="public Object LT(int arg0)">4</method>
			<method name="protected void toStringWork(Object arg0, Object arg1, StringBuffer arg2)">9</method>
			<method name="public Object next()">5</method>
			<method name="public int LA(int arg0)">2</method>
			<method name="protected void walkBackToMostRecentNodeWithUnvisitedChildren()">7</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor arg0, Object arg1)">1</method>
			<method name="public boolean hasUniqueNavigationNodes()">1</method>
			<method name="protected int getLookaheadSize()">2</method>
			<method name="public void consume()">1</method>
			<method name="public void rewind(int arg0)">3</method>
			<method name="public void _init_(Object arg0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.CommonTreeAdaptor</name>
		<wmc>18</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>13</cbo>
		<rfc>38</rfc>
		<lcom>153</lcom>
		<ca>5</ca>
		<ce>8</ce>
		<npm>18</npm>
		<lcom3>2.0</lcom3>
		<loc>169</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4444444444444444</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.38888888888889</amc>
		<cc>
			<method name="public String getText(Object arg0)">2</method>
			<method name="public Object create(org.antlr.runtime.Token arg0)">1</method>
			<method name="public Object getParent(Object arg0)">2</method>
			<method name="public void setParent(Object arg0, Object arg1)">2</method>
			<method name="public void replaceChildren(Object arg0, int arg1, int arg2, Object arg3)">2</method>
			<method name="public void setTokenBoundaries(Object arg0, org.antlr.runtime.Token arg1, org.antlr.runtime.Token arg2)">4</method>
			<method name="public org.antlr.runtime.Token createToken(int arg0, String arg1)">1</method>
			<method name="public int getTokenStopIndex(Object arg0)">2</method>
			<method name="public void setChildIndex(Object arg0, int arg1)">2</method>
			<method name="public int getTokenStartIndex(Object arg0)">2</method>
			<method name="public int getChildCount(Object arg0)">2</method>
			<method name="public Object getChild(Object arg0, int arg1)">2</method>
			<method name="public Object dupNode(Object arg0)">2</method>
			<method name="public int getChildIndex(Object arg0)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public int getType(Object arg0)">2</method>
			<method name="public org.antlr.runtime.Token getToken(Object arg0)">2</method>
			<method name="public org.antlr.runtime.Token createToken(org.antlr.runtime.Token arg0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreePatternLexer</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>9</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>0.9285714285714286</lcom3>
		<loc>255</loc>
		<dam>0.2857142857142857</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>79.33333333333333</amc>
		<cc>
			<method name="protected void consume()">2</method>
			<method name="public void _init_(String arg0)">1</method>
			<method name="public int nextToken()">27</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.UnwantedTokenException</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>12</rfc>
		<lcom>4</lcom>
		<ca>2</ca>
		<ce>7</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>61</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.25</amc>
		<cc>
			<method name="public String toString()">3</method>
			<method name="public org.antlr.runtime.Token getUnexpectedToken()">1</method>
			<method name="public void _init_(int arg0, org.antlr.runtime.IntStream arg1)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.ANTLRInputStream</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>10</rfc>
		<lcom>15</lcom>
		<ca>0</ca>
		<ce>8</ce>
		<npm>6</npm>
		<lcom3>2.0</lcom3>
		<loc>55</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.7083333333333334</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.166666666666666</amc>
		<cc>
			<method name="public void _init_(java.io.InputStream arg0)">1</method>
			<method name="public void _init_(java.io.InputStream arg0, String arg1)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(java.io.InputStream arg0, int arg1, String arg2)">1</method>
			<method name="public void _init_(java.io.InputStream arg0, int arg1)">1</method>
			<method name="public void _init_(java.io.InputStream arg0, int arg1, int arg2, String arg3)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeAdaptor</name>
		<wmc>31</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>23</cbo>
		<rfc>31</rfc>
		<lcom>465</lcom>
		<ca>18</ca>
		<ce>6</ce>
		<npm>31</npm>
		<lcom3>2.0</lcom3>
		<loc>31</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.35023041474654376</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void setTokenBoundaries(Object, org.antlr.runtime.Token, org.antlr.runtime.Token)">1</method>
			<method name="public abstract Object becomeRoot(org.antlr.runtime.Token, Object)">1</method>
			<method name="public abstract int getUniqueID(Object)">1</method>
			<method name="public abstract void setParent(Object, Object)">1</method>
			<method name="public abstract Object nil()">1</method>
			<method name="public abstract Object errorNode(org.antlr.runtime.TokenStream, org.antlr.runtime.Token, org.antlr.runtime.Token, org.antlr.runtime.RecognitionException)">1</method>
			<method name="public abstract Object getParent(Object)">1</method>
			<method name="public abstract int getChildCount(Object)">1</method>
			<method name="public abstract void replaceChildren(Object, int, int, Object)">1</method>
			<method name="public abstract void setText(Object, String)">1</method>
			<method name="public abstract Object create(org.antlr.runtime.Token)">1</method>
			<method name="public abstract Object dupTree(Object)">1</method>
			<method name="public abstract Object dupNode(Object)">1</method>
			<method name="public abstract Object create(int, String)">1</method>
			<method name="public abstract Object getChild(Object, int)">1</method>
			<method name="public abstract int getTokenStartIndex(Object)">1</method>
			<method name="public abstract String getText(Object)">1</method>
			<method name="public abstract int getChildIndex(Object)">1</method>
			<method name="public abstract int getTokenStopIndex(Object)">1</method>
			<method name="public abstract Object create(int, org.antlr.runtime.Token)">1</method>
			<method name="public abstract int getType(Object)">1</method>
			<method name="public abstract Object deleteChild(Object, int)">1</method>
			<method name="public abstract void setType(Object, int)">1</method>
			<method name="public abstract void addChild(Object, Object)">1</method>
			<method name="public abstract Object create(int, org.antlr.runtime.Token, String)">1</method>
			<method name="public abstract Object rulePostProcessing(Object)">1</method>
			<method name="public abstract void setChild(Object, int, Object)">1</method>
			<method name="public abstract Object becomeRoot(Object, Object)">1</method>
			<method name="public abstract org.antlr.runtime.Token getToken(Object)">1</method>
			<method name="public abstract void setChildIndex(Object, int)">1</method>
			<method name="public abstract boolean isNil(Object)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.RewriteEarlyExitException</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>0</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>10</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public void _init_(String arg0)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugTreeAdaptor</name>
		<wmc>37</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>77</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>8</ce>
		<npm>36</npm>
		<lcom3>0.3194444444444444</lcom3>
		<loc>376</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.26426426426426425</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.108108108108109</amc>
		<cc>
			<method name="public String getText(Object arg0)">1</method>
			<method name="public int getUniqueID(Object arg0)">1</method>
			<method name="public void setParent(Object arg0, Object arg1)">1</method>
			<method name="public void replaceChildren(Object arg0, int arg1, int arg2, Object arg3)">1</method>
			<method name="public void setType(Object arg0, int arg1)">1</method>
			<method name="public Object becomeRoot(Object arg0, Object arg1)">1</method>
			<method name="public void setChildIndex(Object arg0, int arg1)">1</method>
			<method name="public Object create(int arg0, String arg1)">1</method>
			<method name="public Object deleteChild(Object arg0, int arg1)">1</method>
			<method name="public int getTokenStartIndex(Object arg0)">1</method>
			<method name="public void _init_(org.antlr.runtime.debug.DebugEventListener arg0, org.antlr.runtime.tree.TreeAdaptor arg1)">1</method>
			<method name="public void setText(Object arg0, String arg1)">1</method>
			<method name="public Object rulePostProcessing(Object arg0)">1</method>
			<method name="public Object create(int arg0, org.antlr.runtime.Token arg1, String arg2)">1</method>
			<method name="public Object nil()">1</method>
			<method name="public int getType(Object arg0)">1</method>
			<method name="public org.antlr.runtime.Token getToken(Object arg0)">1</method>
			<method name="protected void simulateTreeConstruction(Object arg0)">2</method>
			<method name="public Object create(int arg0, org.antlr.runtime.Token arg1)">1</method>
			<method name="public org.antlr.runtime.tree.TreeAdaptor getTreeAdaptor()">1</method>
			<method name="public Object errorNode(org.antlr.runtime.TokenStream arg0, org.antlr.runtime.Token arg1, org.antlr.runtime.Token arg2, org.antlr.runtime.RecognitionException arg3)">2</method>
			<method name="public Object becomeRoot(org.antlr.runtime.Token arg0, Object arg1)">1</method>
			<method name="public Object create(org.antlr.runtime.Token arg0)">2</method>
			<method name="public Object getParent(Object arg0)">1</method>
			<method name="public void setDebugListener(org.antlr.runtime.debug.DebugEventListener arg0)">1</method>
			<method name="public void setTokenBoundaries(Object arg0, org.antlr.runtime.Token arg1, org.antlr.runtime.Token arg2)">4</method>
			<method name="public void addChild(Object arg0, Object arg1)">3</method>
			<method name="public int getTokenStopIndex(Object arg0)">1</method>
			<method name="public int getChildCount(Object arg0)">1</method>
			<method name="public Object getChild(Object arg0, int arg1)">1</method>
			<method name="public void addChild(Object arg0, org.antlr.runtime.Token arg1)">1</method>
			<method name="public Object dupNode(Object arg0)">1</method>
			<method name="public org.antlr.runtime.debug.DebugEventListener getDebugListener()">1</method>
			<method name="public void setChild(Object arg0, int arg1, Object arg2)">1</method>
			<method name="public int getChildIndex(Object arg0)">1</method>
			<method name="public Object dupTree(Object arg0)">1</method>
			<method name="public boolean isNil(Object arg0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeParser</name>
		<wmc>18</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>20</cbo>
		<rfc>51</rfc>
		<lcom>95</lcom>
		<ca>1</ca>
		<ce>19</ce>
		<npm>13</npm>
		<lcom3>0.907563025210084</lcom3>
		<loc>391</loc>
		<dam>0.14285714285714285</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.23529411764705882</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>20.333333333333332</amc>
		<cc>
			<method name="public void matchAny(org.antlr.runtime.IntStream arg0)">7</method>
			<method name="public org.antlr.runtime.tree.TreeNodeStream getTreeNodeStream()">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeNodeStream arg0, org.antlr.runtime.RecognizerSharedState arg1)">1</method>
			<method name="public void reset()">2</method>
			<method name="public boolean inContext(String arg0)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeNodeStream arg0)">1</method>
			<method name="public void traceOut(String arg0, int arg1)">1</method>
			<method name="protected Object getCurrentInputSymbol(org.antlr.runtime.IntStream arg0)">1</method>
			<method name="protected Object getMissingSymbol(org.antlr.runtime.IntStream arg0, org.antlr.runtime.RecognitionException arg1, int arg2, org.antlr.runtime.BitSet arg3)">1</method>
			<method name="public void setTreeNodeStream(org.antlr.runtime.tree.TreeNodeStream arg0)">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public static boolean inContext(org.antlr.runtime.tree.TreeAdaptor arg0, String[] arg1, Object arg2, String arg3)">11</method>
			<method name="public String getErrorMessage(org.antlr.runtime.RecognitionException arg0, String[] arg1)">3</method>
			<method name="protected void mismatch(org.antlr.runtime.IntStream arg0, int arg1, org.antlr.runtime.BitSet arg2)">1</method>
			<method name="public String getErrorHeader(org.antlr.runtime.RecognitionException arg0)">2</method>
			<method name="static void _clinit_()">1</method>
			<method name="protected static Object getAncestor(org.antlr.runtime.tree.TreeAdaptor arg0, String[] arg1, Object arg2, String arg3)">3</method>
			<method name="public void traceIn(String arg0, int arg1)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.CharStreamState</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>3</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>2</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>7</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenRewriteStream</name>
		<wmc>46</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>24</cbo>
		<rfc>85</rfc>
		<lcom>949</lcom>
		<ca>4</ca>
		<ce>23</ce>
		<npm>36</npm>
		<lcom3>0.9333333333333333</lcom3>
		<loc>1024</loc>
		<dam>0.2857142857142857</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3070652173913043</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>21.108695652173914</amc>
		<cc>
			<method name="public void delete(int arg0, int arg1)">1</method>
			<method name="public void deleteProgram()">1</method>
			<method name="public int getLastRewriteTokenIndex()">1</method>
			<method name="public void deleteProgram(String arg0)">1</method>
			<method name="protected java.util.List getKindOfOps(java.util.List arg0, Class arg1)">1</method>
			<method name="protected void setLastRewriteTokenIndex(String arg0, int arg1)">1</method>
			<method name="public void delete(int arg0)">1</method>
			<method name="public String toString(int arg0, int arg1)">1</method>
			<method name="public void delete(String arg0, int arg1, int arg2)">1</method>
			<method name="public String toString(String arg0, int arg1, int arg2)">10</method>
			<method name="public String toString(String arg0)">1</method>
			<method name="public void delete(org.antlr.runtime.Token arg0, org.antlr.runtime.Token arg1)">1</method>
			<method name="public void insertBefore(String arg0, org.antlr.runtime.Token arg1, Object arg2)">1</method>
			<method name="protected String catOpText(Object arg0, Object arg1)">3</method>
			<method name="public String toString()">1</method>
			<method name="public void replace(int arg0, int arg1, Object arg2)">1</method>
			<method name="private java.util.List initializeProgram(String arg0)">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenSource arg0, int arg1)">1</method>
			<method name="public void rollback(int arg0)">1</method>
			<method name="public String toDebugString()">1</method>
			<method name="static Class class$(String arg0)">1</method>
			<method name="protected void init()">1</method>
			<method name="public void rollback(String arg0, int arg1)">2</method>
			<method name="public void insertAfter(String arg0, org.antlr.runtime.Token arg1, Object arg2)">1</method>
			<method name="protected java.util.List getProgram(String arg0)">2</method>
			<method name="public void delete(org.antlr.runtime.Token arg0)">1</method>
			<method name="protected java.util.List getKindOfOps(java.util.List arg0, Class arg1, int arg2)">5</method>
			<method name="public String toOriginalString()">1</method>
			<method name="public void delete(String arg0, org.antlr.runtime.Token arg1, org.antlr.runtime.Token arg2)">1</method>
			<method name="public void replace(org.antlr.runtime.Token arg0, org.antlr.runtime.Token arg1, Object arg2)">1</method>
			<method name="public void replace(String arg0, int arg1, int arg2, Object arg3)">5</method>
			<method name="public void insertAfter(int arg0, Object arg1)">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenSource arg0)">1</method>
			<method name="public void replace(String arg0, org.antlr.runtime.Token arg1, org.antlr.runtime.Token arg2, Object arg3)">1</method>
			<method name="public void insertBefore(String arg0, int arg1, Object arg2)">1</method>
			<method name="protected java.util.Map reduceToSingleOperationPerIndex(java.util.List arg0)">32</method>
			<method name="public void insertAfter(String arg0, int arg1, Object arg2)">1</method>
			<method name="public void insertBefore(int arg0, Object arg1)">1</method>
			<method name="public void replace(int arg0, Object arg1)">1</method>
			<method name="public void insertAfter(org.antlr.runtime.Token arg0, Object arg1)">1</method>
			<method name="public String toDebugString(int arg0, int arg1)">4</method>
			<method name="public void insertBefore(org.antlr.runtime.Token arg0, Object arg1)">1</method>
			<method name="public String toOriginalString(int arg0, int arg1)">4</method>
			<method name="public void _init_()">1</method>
			<method name="public void replace(org.antlr.runtime.Token arg0, Object arg1)">1</method>
			<method name="protected int getLastRewriteTokenIndex(String arg0)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$ContextVisitor</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>4</ca>
		<ce>3</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void visit(Object, Object, int, java.util.Map)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.RewriteRuleNodeStream</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>12</rfc>
		<lcom>15</lcom>
		<ca>0</ca>
		<ce>7</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>36</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.0</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor arg0, String arg1, java.util.List arg2)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor arg0, String arg1)">1</method>
			<method name="protected Object toTree(Object arg0)">1</method>
			<method name="public Object nextNode()">1</method>
			<method name="protected Object dup(Object arg0)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor arg0, String arg1, Object arg2)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.ClassicToken</name>
		<wmc>19</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>30</rfc>
		<lcom>75</lcom>
		<ca>0</ca>
		<ce>6</ce>
		<npm>19</npm>
		<lcom3>0.7685185185185185</lcom3>
		<loc>205</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3368421052631579</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.473684210526315</amc>
		<cc>
			<method name="public int getTokenIndex()">1</method>
			<method name="public int getChannel()">1</method>
			<method name="public void setTokenIndex(int arg0)">1</method>
			<method name="public void _init_(org.antlr.runtime.Token arg0)">1</method>
			<method name="public void setChannel(int arg0)">1</method>
			<method name="public org.antlr.runtime.CharStream getInputStream()">1</method>
			<method name="public String toString()">3</method>
			<method name="public void setLine(int arg0)">1</method>
			<method name="public String getText()">1</method>
			<method name="public void setText(String arg0)">1</method>
			<method name="public int getLine()">1</method>
			<method name="public int getCharPositionInLine()">1</method>
			<method name="public int getType()">1</method>
			<method name="public void setCharPositionInLine(int arg0)">1</method>
			<method name="public void _init_(int arg0)">1</method>
			<method name="public void _init_(int arg0, String arg1)">1</method>
			<method name="public void _init_(int arg0, String arg1, int arg2)">1</method>
			<method name="public void setType(int arg0)">1</method>
			<method name="public void setInputStream(org.antlr.runtime.CharStream arg0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.CommonTree</name>
		<wmc>20</wmc>
		<dit>0</dit>
		<noc>2</noc>
		<cbo>13</cbo>
		<rfc>33</rfc>
		<lcom>12</lcom>
		<ca>8</ca>
		<ce>7</ce>
		<npm>20</npm>
		<lcom3>0.6842105263157895</lcom3>
		<loc>292</loc>
		<dam>0.4</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.26</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.35</amc>
		<cc>
			<method name="public org.antlr.runtime.Token getToken()">1</method>
			<method name="public void setTokenStopIndex(int arg0)">1</method>
			<method name="public void setChildIndex(int arg0)">1</method>
			<method name="public void _init_(org.antlr.runtime.Token arg0)">1</method>
			<method name="public int getTokenStartIndex()">3</method>
			<method name="public void setTokenStartIndex(int arg0)">1</method>
			<method name="public org.antlr.runtime.tree.Tree getParent()">1</method>
			<method name="public String toString()">4</method>
			<method name="public org.antlr.runtime.tree.Tree dupNode()">1</method>
			<method name="public String getText()">2</method>
			<method name="public void setParent(org.antlr.runtime.tree.Tree arg0)">1</method>
			<method name="public boolean isNil()">2</method>
			<method name="public int getLine()">4</method>
			<method name="public int getCharPositionInLine()">4</method>
			<method name="public int getType()">2</method>
			<method name="public int getChildIndex()">1</method>
			<method name="public void setUnknownTokenBoundaries()">8</method>
			<method name="public void _init_(org.antlr.runtime.tree.CommonTree arg0)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public int getTokenStopIndex()">3</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.MismatchedNotSetException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>11</rfc>
		<lcom>3</lcom>
		<ca>2</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>28</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.333333333333334</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_(org.antlr.runtime.BitSet arg0, org.antlr.runtime.IntStream arg1)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.BaseTree</name>
		<wmc>28</wmc>
		<dit>1</dit>
		<noc>3</noc>
		<cbo>13</cbo>
		<rfc>53</rfc>
		<lcom>306</lcom>
		<ca>3</ca>
		<ce>11</ce>
		<npm>27</npm>
		<lcom3>0.5925925925925926</lcom3>
		<loc>629</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.32142857142857145</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>21.428571428571427</amc>
		<cc>
			<method name="public void addChildren(java.util.List arg0)">2</method>
			<method name="public org.antlr.runtime.tree.Tree getAncestor(int arg0)">3</method>
			<method name="public org.antlr.runtime.tree.Tree getChild(int arg0)">3</method>
			<method name="public void sanityCheckParentAndChildIndexes()">1</method>
			<method name="public void setChild(int arg0, org.antlr.runtime.tree.Tree arg1)">4</method>
			<method name="public void replaceChildren(int arg0, int arg1, Object arg2)">9</method>
			<method name="public void _init_(org.antlr.runtime.tree.Tree arg0)">1</method>
			<method name="public String toStringTree()">8</method>
			<method name="public int getLine()">1</method>
			<method name="public int getChildIndex()">1</method>
			<method name="public int getChildCount()">2</method>
			<method name="public void setChildIndex(int arg0)">1</method>
			<method name="public java.util.List getChildren()">1</method>
			<method name="protected java.util.List createChildrenList()">1</method>
			<method name="public void freshenParentAndChildIndexes(int arg0)">2</method>
			<method name="public void addChild(org.antlr.runtime.tree.Tree arg0)">8</method>
			<method name="public org.antlr.runtime.tree.Tree getParent()">1</method>
			<method name="public void setParent(org.antlr.runtime.tree.Tree arg0)">1</method>
			<method name="public java.util.List getAncestors()">3</method>
			<method name="public boolean isNil()">1</method>
			<method name="public void sanityCheckParentAndChildIndexes(org.antlr.runtime.tree.Tree arg0, int arg1)">4</method>
			<method name="public int getCharPositionInLine()">1</method>
			<method name="public abstract String toString()">1</method>
			<method name="public void freshenParentAndChildIndexes()">1</method>
			<method name="public Object deleteChild(int arg0)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public org.antlr.runtime.tree.Tree getFirstChildWithType(int arg0)">4</method>
			<method name="public boolean hasAncestor(int arg0)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenRewriteStream$ReplaceOp</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>7</cbo>
		<rfc>9</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>6</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>52</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>15.666666666666666</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public int execute(StringBuffer arg0)">2</method>
			<method name="public void _init_(org.antlr.runtime.TokenRewriteStream arg0, int arg1, int arg2, Object arg3)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$TreePattern</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>12</cbo>
		<rfc>7</rfc>
		<lcom>1</lcom>
		<ca>6</ca>
		<ce>6</ce>
		<npm>2</npm>
		<lcom3>1.5</lcom3>
		<loc>29</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.5</amc>
		<cc>
			<method name="public String toString()">2</method>
			<method name="public void _init_(org.antlr.runtime.Token arg0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.ParseTree</name>
		<wmc>12</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>22</rfc>
		<lcom>60</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>12</npm>
		<lcom3>0.7272727272727273</lcom3>
		<loc>137</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.25</amc>
		<cc>
			<method name="public String toString()">3</method>
			<method name="public org.antlr.runtime.tree.Tree dupNode()">1</method>
			<method name="public String getText()">1</method>
			<method name="public void setTokenStopIndex(int arg0)">1</method>
			<method name="public void _toStringLeaves(StringBuffer arg0)">4</method>
			<method name="public int getType()">1</method>
			<method name="public String toStringWithHiddenTokens()">4</method>
			<method name="public int getTokenStartIndex()">1</method>
			<method name="public String toInputString()">1</method>
			<method name="public int getTokenStopIndex()">1</method>
			<method name="public void _init_(Object arg0)">1</method>
			<method name="public void setTokenStartIndex(int arg0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.Profiler</name>
		<wmc>25</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>20</cbo>
		<rfc>64</rfc>
		<lcom>160</lcom>
		<ca>0</ca>
		<ce>20</ce>
		<npm>22</npm>
		<lcom3>0.8256172839506174</lcom3>
		<loc>1404</loc>
		<dam>0.2222222222222222</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.204</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>54.08</amc>
		<cc>
			<method name="public void exitDecision(int arg0)">5</method>
			<method name="public int getNumberOfHiddenTokens(int arg0, int arg1)">4</method>
			<method name="public void enterRule(String arg0, String arg1)">2</method>
			<method name="public void beginBacktrack(int arg0)">1</method>
			<method name="public void recognitionException(org.antlr.runtime.RecognitionException arg0)">1</method>
			<method name="protected int[] trim(int[] arg0, int arg1)">2</method>
			<method name="public static String toString(String arg0)">2</method>
			<method name="public String toString()">1</method>
			<method name="public void exitRule(String arg0, String arg1)">1</method>
			<method name="public String toNotifyString()">5</method>
			<method name="public void examineRuleMemoization(org.antlr.runtime.IntStream arg0, int arg1, String arg2)">2</method>
			<method name="public void consumeHiddenToken(org.antlr.runtime.Token arg0)">1</method>
			<method name="public void terminate()">1</method>
			<method name="public void _init_(org.antlr.runtime.debug.DebugParser arg0)">1</method>
			<method name="public boolean inDecision()">2</method>
			<method name="public void memoize(org.antlr.runtime.IntStream arg0, int arg1, int arg2, String arg3)">1</method>
			<method name="protected static String[] decodeReportData(String arg0)">3</method>
			<method name="public void consumeToken(org.antlr.runtime.Token arg0)">1</method>
			<method name="public void semanticPredicate(boolean arg0, String arg1)">2</method>
			<method name="public void LT(int arg0, org.antlr.runtime.Token arg1)">3</method>
			<method name="public void enterDecision(int arg0)">1</method>
			<method name="protected int[] toArray(java.util.List arg0)">2</method>
			<method name="public void endBacktrack(int arg0, boolean arg1)">1</method>
			<method name="public void setParser(org.antlr.runtime.debug.DebugParser arg0)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.ANTLRFileStream</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>12</rfc>
		<lcom>4</lcom>
		<ca>0</ca>
		<ce>9</ce>
		<npm>4</npm>
		<lcom3>0.3333333333333333</lcom3>
		<loc>73</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.875</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.0</amc>
		<cc>
			<method name="public void load(String arg0, String arg1)">1</method>
			<method name="public void _init_(String arg0)">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public void _init_(String arg0, String arg1)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.BitSet</name>
		<wmc>28</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>20</cbo>
		<rfc>42</rfc>
		<lcom>106</lcom>
		<ca>9</ca>
		<ce>11</ce>
		<npm>24</npm>
		<lcom3>0.8055555555555556</lcom3>
		<loc>605</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.20918367346938777</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>20.464285714285715</amc>
		<cc>
			<method name="public void remove(int arg0)">2</method>
			<method name="public String toString(String[] arg0)">6</method>
			<method name="public long[] toPackedArray()">1</method>
			<method name="public Object clone()">1</method>
			<method name="public int size()">5</method>
			<method name="private static final long bitMask(int arg0)">1</method>
			<method name="public void add(int arg0)">2</method>
			<method name="public String toString()">1</method>
			<method name="private void setSize(int arg0)">1</method>
			<method name="public void growToInclude(int arg0)">1</method>
			<method name="public boolean member(int arg0)">4</method>
			<method name="public static org.antlr.runtime.BitSet of(int arg0)">1</method>
			<method name="public static org.antlr.runtime.BitSet of(int arg0, int arg1)">1</method>
			<method name="public void _init_(java.util.List arg0)">2</method>
			<method name="private final int numWordsToHold(int arg0)">1</method>
			<method name="public int lengthInLongWords()">1</method>
			<method name="public int numBits()">1</method>
			<method name="public void orInPlace(org.antlr.runtime.BitSet arg0)">4</method>
			<method name="public void _init_(long[] arg0)">1</method>
			<method name="public boolean equals(Object arg0)">10</method>
			<method name="public int[] toArray()">3</method>
			<method name="public static org.antlr.runtime.BitSet of(int arg0, int arg1, int arg2)">1</method>
			<method name="private static final int wordNumber(int arg0)">1</method>
			<method name="public org.antlr.runtime.BitSet or(org.antlr.runtime.BitSet arg0)">2</method>
			<method name="public boolean isNil()">3</method>
			<method name="public void _init_(int arg0)">1</method>
			<method name="public static org.antlr.runtime.BitSet of(int arg0, int arg1, int arg2, int arg3)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenRewriteStream$DeleteOp</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>7</rfc>
		<lcom>1</lcom>
		<ca>0</ca>
		<ce>6</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>30</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.5</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.TokenRewriteStream arg0, int arg1, int arg2)">1</method>
			<method name="public String toString()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.CharStream</name>
		<wmc>6</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>6</rfc>
		<lcom>15</lcom>
		<ca>8</ca>
		<ce>4</ce>
		<npm>6</npm>
		<lcom3>1.2</lcom3>
		<loc>7</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.8333333333333334</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract int getLine()">1</method>
			<method name="public abstract void setLine(int)">1</method>
			<method name="public abstract void setCharPositionInLine(int)">1</method>
			<method name="public abstract int getCharPositionInLine()">1</method>
			<method name="public abstract int LT(int)">1</method>
			<method name="public abstract String substring(int, int)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugParser</name>
		<wmc>11</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>21</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>11</ce>
		<npm>11</npm>
		<lcom3>0.45</lcom3>
		<loc>118</loc>
		<dam>0.5</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.2727272727272727</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.545454545454545</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.TokenStream arg0, org.antlr.runtime.debug.DebugEventListener arg1, org.antlr.runtime.RecognizerSharedState arg2)">2</method>
			<method name="public void reportError(org.antlr.runtime.RecognitionException arg0)">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream arg0, org.antlr.runtime.debug.DebugEventListener arg1)">2</method>
			<method name="public void setDebugListener(org.antlr.runtime.debug.DebugEventListener arg0)">2</method>
			<method name="public void endBacktrack(int arg0, boolean arg1)">1</method>
			<method name="public org.antlr.runtime.debug.DebugEventListener getDebugListener()">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream arg0, org.antlr.runtime.RecognizerSharedState arg1)">2</method>
			<method name="public void beginBacktrack(int arg0)">1</method>
			<method name="public void endResync()">1</method>
			<method name="public void reportError(java.io.IOException arg0)">1</method>
			<method name="public void beginResync()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.CommonErrorNode</name>
		<wmc>5</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>16</cbo>
		<rfc>18</rfc>
		<lcom>6</lcom>
		<ca>1</ca>
		<ce>15</ce>
		<npm>5</npm>
		<lcom3>0.5625</lcom3>
		<loc>188</loc>
		<dam>0.0</dam>
		<moa>4</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>35.8</amc>
		<cc>
			<method name="public String toString()">5</method>
			<method name="public String getText()">4</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream arg0, org.antlr.runtime.Token arg1, org.antlr.runtime.Token arg2, org.antlr.runtime.RecognitionException arg3)">4</method>
			<method name="public boolean isNil()">1</method>
			<method name="public int getType()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeNodeStream</name>
		<wmc>8</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>8</rfc>
		<lcom>28</lcom>
		<ca>8</ca>
		<ce>6</ce>
		<npm>8</npm>
		<lcom3>2.0</lcom3>
		<loc>8</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract String toString(Object, Object)">1</method>
			<method name="public abstract Object LT(int)">1</method>
			<method name="public abstract void replaceChildren(Object, int, int, Object)">1</method>
			<method name="public abstract Object get(int)">1</method>
			<method name="public abstract void setUniqueNavigationNodes(boolean)">1</method>
			<method name="public abstract Object getTreeSource()">1</method>
			<method name="public abstract org.antlr.runtime.tree.TreeAdaptor getTreeAdaptor()">1</method>
			<method name="public abstract org.antlr.runtime.TokenStream getTokenStream()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$TreePatternTreeAdaptor</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>4</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>10</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public Object create(org.antlr.runtime.Token arg0)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeRuleReturnScope</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>3</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>0</ca>
		<ce>3</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public void _init_()">1</method>
			<method name="public Object getStart()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.BaseTreeAdaptor</name>
		<wmc>24</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>15</cbo>
		<rfc>50</rfc>
		<lcom>274</lcom>
		<ca>1</ca>
		<ce>14</ce>
		<npm>24</npm>
		<lcom3>0.9782608695652174</lcom3>
		<loc>305</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.35119047619047616</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.625</amc>
		<cc>
			<method name="public Object errorNode(org.antlr.runtime.TokenStream arg0, org.antlr.runtime.Token arg1, org.antlr.runtime.Token arg2, org.antlr.runtime.RecognitionException arg3)">1</method>
			<method name="public Object becomeRoot(org.antlr.runtime.Token arg0, Object arg1)">1</method>
			<method name="public String getText(Object arg0)">1</method>
			<method name="public abstract org.antlr.runtime.Token createToken(org.antlr.runtime.Token)">1</method>
			<method name="public int getUniqueID(Object arg0)">3</method>
			<method name="public void setType(Object arg0, int arg1)">1</method>
			<method name="public void addChild(Object arg0, Object arg1)">3</method>
			<method name="public Object becomeRoot(Object arg0, Object arg1)">5</method>
			<method name="public Object create(int arg0, String arg1)">1</method>
			<method name="public Object deleteChild(Object arg0, int arg1)">1</method>
			<method name="public int getChildCount(Object arg0)">1</method>
			<method name="public Object getChild(Object arg0, int arg1)">1</method>
			<method name="public void setText(Object arg0, String arg1)">1</method>
			<method name="public Object rulePostProcessing(Object arg0)">5</method>
			<method name="public Object create(int arg0, org.antlr.runtime.Token arg1, String arg2)">1</method>
			<method name="public void setChild(Object arg0, int arg1, Object arg2)">1</method>
			<method name="public abstract org.antlr.runtime.Token createToken(int, String)">1</method>
			<method name="public Object dupTree(Object arg0)">1</method>
			<method name="public Object dupTree(Object arg0, Object arg1)">3</method>
			<method name="public void _init_()">1</method>
			<method name="public Object nil()">1</method>
			<method name="public int getType(Object arg0)">1</method>
			<method name="public boolean isNil(Object arg0)">1</method>
			<method name="public Object create(int arg0, org.antlr.runtime.Token arg1)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugTreeNodeStream</name>
		<wmc>20</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>43</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>20</npm>
		<lcom3>0.7157894736842105</lcom3>
		<loc>199</loc>
		<dam>1.0</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.275</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.7</amc>
		<cc>
			<method name="public void setUniqueNavigationNodes(boolean arg0)">1</method>
			<method name="public void release(int arg0)">1</method>
			<method name="public int mark()">1</method>
			<method name="public void setDebugListener(org.antlr.runtime.debug.DebugEventListener arg0)">1</method>
			<method name="public void rewind()">1</method>
			<method name="public void replaceChildren(Object arg0, int arg1, int arg2, Object arg3)">1</method>
			<method name="public int index()">1</method>
			<method name="public org.antlr.runtime.TokenStream getTokenStream()">1</method>
			<method name="public Object LT(int arg0)">1</method>
			<method name="public int LA(int arg0)">1</method>
			<method name="public int size()">1</method>
			<method name="public String toString(Object arg0, Object arg1)">1</method>
			<method name="public void seek(int arg0)">1</method>
			<method name="public void consume()">1</method>
			<method name="public void rewind(int arg0)">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public Object getTreeSource()">1</method>
			<method name="public Object get(int arg0)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeNodeStream arg0, org.antlr.runtime.debug.DebugEventListener arg1)">1</method>
			<method name="public org.antlr.runtime.tree.TreeAdaptor getTreeAdaptor()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.RewriteRuleTokenStream</name>
		<wmc>7</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>13</rfc>
		<lcom>21</lcom>
		<ca>0</ca>
		<ce>8</ce>
		<npm>5</npm>
		<lcom3>2.0</lcom3>
		<loc>44</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4857142857142857</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.285714285714286</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor arg0, String arg1, java.util.List arg2)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor arg0, String arg1)">1</method>
			<method name="protected Object toTree(Object arg0)">1</method>
			<method name="public Object nextNode()">1</method>
			<method name="public org.antlr.runtime.Token nextToken()">1</method>
			<method name="protected Object dup(Object arg0)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor arg0, String arg1, Object arg2)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.BlankDebugEventListener</name>
		<wmc>32</wmc>
		<dit>1</dit>
		<noc>5</noc>
		<cbo>11</cbo>
		<rfc>33</rfc>
		<lcom>496</lcom>
		<ca>5</ca>
		<ce>6</ce>
		<npm>32</npm>
		<lcom3>2.0</lcom3>
		<loc>66</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2857142857142857</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>1.0625</amc>
		<cc>
			<method name="public void exitDecision(int arg0)">1</method>
			<method name="public void createNode(Object arg0)">1</method>
			<method name="public void enterAlt(int arg0)">1</method>
			<method name="public void enterRule(String arg0, String arg1)">1</method>
			<method name="public void beginBacktrack(int arg0)">1</method>
			<method name="public void mark(int arg0)">1</method>
			<method name="public void location(int arg0, int arg1)">1</method>
			<method name="public void recognitionException(org.antlr.runtime.RecognitionException arg0)">1</method>
			<method name="public void setTokenBoundaries(Object arg0, int arg1, int arg2)">1</method>
			<method name="public void exitRule(String arg0, String arg1)">1</method>
			<method name="public void nilNode(Object arg0)">1</method>
			<method name="public void exitSubRule(int arg0)">1</method>
			<method name="public void becomeRoot(Object arg0, Object arg1)">1</method>
			<method name="public void consumeHiddenToken(org.antlr.runtime.Token arg0)">1</method>
			<method name="public void terminate()">1</method>
			<method name="public void rewind()">1</method>
			<method name="public void consumeNode(Object arg0)">1</method>
			<method name="public void errorNode(Object arg0)">1</method>
			<method name="public void endResync()">1</method>
			<method name="public void LT(int arg0, Object arg1)">1</method>
			<method name="public void addChild(Object arg0, Object arg1)">1</method>
			<method name="public void consumeToken(org.antlr.runtime.Token arg0)">1</method>
			<method name="public void semanticPredicate(boolean arg0, String arg1)">1</method>
			<method name="public void createNode(Object arg0, org.antlr.runtime.Token arg1)">1</method>
			<method name="public void LT(int arg0, org.antlr.runtime.Token arg1)">1</method>
			<method name="public void enterDecision(int arg0)">1</method>
			<method name="public void endBacktrack(int arg0, boolean arg1)">1</method>
			<method name="public void rewind(int arg0)">1</method>
			<method name="public void enterSubRule(int arg0)">1</method>
			<method name="public void commence()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void beginResync()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard</name>
		<wmc>23</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>25</cbo>
		<rfc>57</rfc>
		<lcom>187</lcom>
		<ca>4</ca>
		<ce>25</ce>
		<npm>18</npm>
		<lcom3>0.6969696969696969</lcom3>
		<loc>585</loc>
		<dam>0.6666666666666666</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.30434782608695654</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>24.304347826086957</amc>
		<cc>
			<method name="public boolean parse(Object arg0, String arg1)">1</method>
			<method name="public Object findFirst(Object arg0, String arg1)">1</method>
			<method name="protected void _index(Object arg0, java.util.Map arg1)">4</method>
			<method name="public java.util.List find(Object arg0, int arg1)">1</method>
			<method name="public boolean parse(Object arg0, String arg1, java.util.Map arg2)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor arg0, java.util.Map arg1)">1</method>
			<method name="public static boolean equals(Object arg0, Object arg1, org.antlr.runtime.tree.TreeAdaptor arg2)">1</method>
			<method name="protected static boolean _equals(Object arg0, Object arg1, org.antlr.runtime.tree.TreeAdaptor arg2)">8</method>
			<method name="protected boolean _parse(Object arg0, org.antlr.runtime.tree.TreeWizard$TreePattern arg1, java.util.Map arg2)">13</method>
			<method name="public java.util.List find(Object arg0, String arg1)">5</method>
			<method name="public void _init_(String[] arg0)">1</method>
			<method name="public java.util.Map index(Object arg0)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor arg0, String[] arg1)">1</method>
			<method name="public void visit(Object arg0, int arg1, org.antlr.runtime.tree.TreeWizard$ContextVisitor arg2)">1</method>
			<method name="public void visit(Object arg0, String arg1, org.antlr.runtime.tree.TreeWizard$ContextVisitor arg2)">5</method>
			<method name="public Object create(String arg0)">1</method>
			<method name="static Class class$(String arg0)">1</method>
			<method name="public Object findFirst(Object arg0, int arg1)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor arg0)">1</method>
			<method name="public java.util.Map computeTokenTypes(String[] arg0)">3</method>
			<method name="public boolean equals(Object arg0, Object arg1)">1</method>
			<method name="public int getTokenType(String arg0)">3</method>
			<method name="protected void _visit(Object arg0, Object arg1, int arg2, int arg3, org.antlr.runtime.tree.TreeWizard$ContextVisitor arg4)">4</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.CommonToken</name>
		<wmc>23</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>36</rfc>
		<lcom>83</lcom>
		<ca>8</ca>
		<ce>7</ce>
		<npm>23</npm>
		<lcom3>0.7727272727272727</lcom3>
		<loc>310</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.33043478260869563</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.08695652173913</amc>
		<cc>
			<method name="public int getTokenIndex()">1</method>
			<method name="public int getChannel()">1</method>
			<method name="public void _init_(org.antlr.runtime.CharStream arg0, int arg1, int arg2, int arg3, int arg4)">1</method>
			<method name="public void setTokenIndex(int arg0)">1</method>
			<method name="public void _init_(org.antlr.runtime.Token arg0)">2</method>
			<method name="public int getStartIndex()">1</method>
			<method name="public int getStopIndex()">1</method>
			<method name="public void setChannel(int arg0)">1</method>
			<method name="public org.antlr.runtime.CharStream getInputStream()">1</method>
			<method name="public String toString()">3</method>
			<method name="public void setLine(int arg0)">1</method>
			<method name="public String getText()">3</method>
			<method name="public void setText(String arg0)">1</method>
			<method name="public void setStartIndex(int arg0)">1</method>
			<method name="public void setStopIndex(int arg0)">1</method>
			<method name="public int getLine()">1</method>
			<method name="public int getCharPositionInLine()">1</method>
			<method name="public int getType()">1</method>
			<method name="public void setCharPositionInLine(int arg0)">1</method>
			<method name="public void _init_(int arg0)">1</method>
			<method name="public void _init_(int arg0, String arg1)">1</method>
			<method name="public void setType(int arg0)">1</method>
			<method name="public void setInputStream(org.antlr.runtime.CharStream arg0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugEventSocketProxy</name>
		<wmc>42</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>24</cbo>
		<rfc>82</rfc>
		<lcom>719</lcom>
		<ca>0</ca>
		<ce>24</ce>
		<npm>36</npm>
		<lcom3>0.7886178861788619</lcom3>
		<loc>895</loc>
		<dam>0.8888888888888888</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.20714285714285716</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>20.095238095238095</amc>
		<cc>
			<method name="public void exitDecision(int arg0)">1</method>
			<method name="public void createNode(Object arg0)">1</method>
			<method name="public void enterAlt(int arg0)">1</method>
			<method name="public void enterRule(String arg0, String arg1)">1</method>
			<method name="public void beginBacktrack(int arg0)">1</method>
			<method name="public void mark(int arg0)">1</method>
			<method name="public void _init_(org.antlr.runtime.BaseRecognizer arg0, org.antlr.runtime.tree.TreeAdaptor arg1)">1</method>
			<method name="protected void transmit(String arg0)">1</method>
			<method name="public void location(int arg0, int arg1)">1</method>
			<method name="protected void serializeText(StringBuffer arg0, String arg1)">2</method>
			<method name="public void recognitionException(org.antlr.runtime.RecognitionException arg0)">1</method>
			<method name="public void setTokenBoundaries(Object arg0, int arg1, int arg2)">1</method>
			<method name="public void exitRule(String arg0, String arg1)">1</method>
			<method name="public void nilNode(Object arg0)">1</method>
			<method name="public void exitSubRule(int arg0)">1</method>
			<method name="protected void ack()">1</method>
			<method name="public void setTreeAdaptor(org.antlr.runtime.tree.TreeAdaptor arg0)">1</method>
			<method name="public void becomeRoot(Object arg0, Object arg1)">1</method>
			<method name="public org.antlr.runtime.tree.TreeAdaptor getTreeAdaptor()">1</method>
			<method name="public void consumeHiddenToken(org.antlr.runtime.Token arg0)">1</method>
			<method name="public void terminate()">1</method>
			<method name="public void rewind()">1</method>
			<method name="public void _init_(org.antlr.runtime.BaseRecognizer arg0, int arg1, org.antlr.runtime.tree.TreeAdaptor arg2)">1</method>
			<method name="public void consumeNode(Object arg0)">1</method>
			<method name="public void errorNode(Object arg0)">1</method>
			<method name="public void endResync()">1</method>
			<method name="public void LT(int arg0, Object arg1)">1</method>
			<method name="public void addChild(Object arg0, Object arg1)">1</method>
			<method name="public void handshake()">1</method>
			<method name="public void consumeToken(org.antlr.runtime.Token arg0)">1</method>
			<method name="public void semanticPredicate(boolean arg0, String arg1)">1</method>
			<method name="public void createNode(Object arg0, org.antlr.runtime.Token arg1)">1</method>
			<method name="protected String escapeNewlines(String arg0)">1</method>
			<method name="public void LT(int arg0, org.antlr.runtime.Token arg1)">2</method>
			<method name="public void enterDecision(int arg0)">1</method>
			<method name="protected String serializeToken(org.antlr.runtime.Token arg0)">1</method>
			<method name="public void endBacktrack(int arg0, boolean arg1)">2</method>
			<method name="public void rewind(int arg0)">1</method>
			<method name="public void enterSubRule(int arg0)">1</method>
			<method name="public void commence()">1</method>
			<method name="public void beginResync()">1</method>
			<method name="protected void serializeNode(StringBuffer arg0, Object arg1)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.Lexer</name>
		<wmc>27</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>19</cbo>
		<rfc>59</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>19</ce>
		<npm>27</npm>
		<lcom3>0.3076923076923077</lcom3>
		<loc>632</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.20833333333333334</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>22.37037037037037</amc>
		<cc>
			<method name="public org.antlr.runtime.CharStream getCharStream()">1</method>
			<method name="public void setCharStream(org.antlr.runtime.CharStream arg0)">1</method>
			<method name="public void emit(org.antlr.runtime.Token arg0)">1</method>
			<method name="public void reset()">3</method>
			<method name="public void traceOut(String arg0, int arg1)">1</method>
			<method name="public void skip()">1</method>
			<method name="public void setText(String arg0)">1</method>
			<method name="public void match(String arg0)">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public int getLine()">1</method>
			<method name="public void _init_(org.antlr.runtime.CharStream arg0)">1</method>
			<method name="public int getCharIndex()">1</method>
			<method name="public void _init_(org.antlr.runtime.CharStream arg0, org.antlr.runtime.RecognizerSharedState arg1)">1</method>
			<method name="public String getCharErrorDisplay(int arg0)">6</method>
			<method name="public void recover(org.antlr.runtime.RecognitionException arg0)">1</method>
			<method name="public abstract void mTokens()">1</method>
			<method name="public void reportError(org.antlr.runtime.RecognitionException arg0)">1</method>
			<method name="public String getText()">2</method>
			<method name="public org.antlr.runtime.Token nextToken()">4</method>
			<method name="public void matchAny()">1</method>
			<method name="public int getCharPositionInLine()">1</method>
			<method name="public String getErrorMessage(org.antlr.runtime.RecognitionException arg0, String[] arg1)">7</method>
			<method name="public void matchRange(int arg0, int arg1)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void match(int arg0)">1</method>
			<method name="public org.antlr.runtime.Token emit()">1</method>
			<method name="public void traceIn(String arg0, int arg1)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.misc.Stats</name>
		<wmc>8</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>24</rfc>
		<lcom>28</lcom>
		<ca>1</ca>
		<ce>12</ce>
		<npm>8</npm>
		<lcom3>1.1428571428571428</lcom3>
		<loc>226</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>27.125</amc>
		<cc>
			<method name="public static int min(int[] arg0)">4</method>
			<method name="public static void writeReport(String arg0, String arg1)">1</method>
			<method name="public static int sum(int[] arg0)">3</method>
			<method name="public static double stddev(int[] arg0)">3</method>
			<method name="public static String getAbsoluteFileName(String arg0)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public static int max(int[] arg0)">4</method>
			<method name="public static double avg(int[] arg0)">4</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.RemoteDebugEventSocketListener$ProxyTree</name>
		<wmc>10</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>11</rfc>
		<lcom>35</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>10</npm>
		<lcom3>0.8703703703703705</lcom3>
		<loc>78</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.2</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public org.antlr.runtime.tree.Tree dupNode()">1</method>
			<method name="public String getText()">1</method>
			<method name="public void setTokenStopIndex(int arg0)">1</method>
			<method name="public int getType()">1</method>
			<method name="public void _init_(int arg0)">1</method>
			<method name="public void _init_(int arg0, int arg1, int arg2, int arg3, int arg4, String arg5)">1</method>
			<method name="public int getTokenStartIndex()">1</method>
			<method name="public int getTokenStopIndex()">1</method>
			<method name="public void setTokenStartIndex(int arg0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.MissingTokenException</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>11</rfc>
		<lcom>4</lcom>
		<ca>2</ca>
		<ce>7</ce>
		<npm>4</npm>
		<lcom3>0.6666666666666666</lcom3>
		<loc>61</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.0</amc>
		<cc>
			<method name="public String toString()">4</method>
			<method name="public void _init_(int arg0, org.antlr.runtime.IntStream arg1, Object arg2)">1</method>
			<method name="public int getMissingType()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.EarlyExitException</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>4</rfc>
		<lcom>1</lcom>
		<ca>2</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>13</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.0</amc>
		<cc>
			<method name="public void _init_(int arg0, org.antlr.runtime.IntStream arg1)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenRewriteStream$RewriteOperation</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>2</noc>
		<cbo>8</cbo>
		<rfc>14</rfc>
		<lcom>0</lcom>
		<ca>3</ca>
		<ce>6</ce>
		<npm>2</npm>
		<lcom3>0.75</lcom3>
		<loc>59</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.333333333333332</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public int execute(StringBuffer arg0)">1</method>
			<method name="protected void _init_(org.antlr.runtime.TokenRewriteStream arg0, int arg1, Object arg2)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.RecognitionException</name>
		<wmc>4</wmc>
		<dit>3</dit>
		<noc>7</noc>
		<cbo>38</cbo>
		<rfc>21</rfc>
		<lcom>0</lcom>
		<ca>26</ca>
		<ce>13</ce>
		<npm>3</npm>
		<lcom3>0.625</lcom3>
		<loc>216</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.9130434782608695</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>51.0</amc>
		<cc>
			<method name="protected void extractInformationFromTreeNodeStream(org.antlr.runtime.IntStream arg0)">7</method>
			<method name="public int getUnexpectedType()">3</method>
			<method name="public void _init_(org.antlr.runtime.IntStream arg0)">4</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.Token</name>
		<wmc>15</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>46</cbo>
		<rfc>16</rfc>
		<lcom>105</lcom>
		<ca>42</ca>
		<ce>5</ce>
		<npm>14</npm>
		<lcom3>1.051948051948052</lcom3>
		<loc>42</loc>
		<dam>0.0</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>1.0666666666666667</amc>
		<cc>
			<method name="public abstract int getLine()">1</method>
			<method name="public abstract void setCharPositionInLine(int)">1</method>
			<method name="public abstract int getChannel()">1</method>
			<method name="public abstract int getCharPositionInLine()">1</method>
			<method name="public abstract void setText(String)">1</method>
			<method name="public abstract int getType()">1</method>
			<method name="public abstract void setTokenIndex(int)">1</method>
			<method name="public abstract void setChannel(int)">1</method>
			<method name="public abstract org.antlr.runtime.CharStream getInputStream()">1</method>
			<method name="public abstract void setType(int)">1</method>
			<method name="public abstract void setLine(int)">1</method>
			<method name="public abstract String getText()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public abstract int getTokenIndex()">1</method>
			<method name="public abstract void setInputStream(org.antlr.runtime.CharStream)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugTokenStream</name>
		<wmc>19</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>40</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>18</npm>
		<lcom3>0.5972222222222222</lcom3>
		<loc>222</loc>
		<dam>0.75</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.3157894736842105</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.473684210526315</amc>
		<cc>
			<method name="public void release(int arg0)">1</method>
			<method name="public int mark()">1</method>
			<method name="public void setDebugListener(org.antlr.runtime.debug.DebugEventListener arg0)">1</method>
			<method name="public void rewind()">1</method>
			<method name="public org.antlr.runtime.Token get(int arg0)">1</method>
			<method name="public int index()">1</method>
			<method name="public String toString(int arg0, int arg1)">1</method>
			<method name="public org.antlr.runtime.TokenSource getTokenSource()">1</method>
			<method name="public int LA(int arg0)">2</method>
			<method name="public int size()">1</method>
			<method name="public void seek(int arg0)">1</method>
			<method name="protected void consumeInitialHiddenTokens()">2</method>
			<method name="public String toString()">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream arg0, org.antlr.runtime.debug.DebugEventListener arg1)">1</method>
			<method name="public void consume()">4</method>
			<method name="public void rewind(int arg0)">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public org.antlr.runtime.Token LT(int arg0)">2</method>
			<method name="public String toString(org.antlr.runtime.Token arg0, org.antlr.runtime.Token arg1)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.TraceDebugEventListener</name>
		<wmc>14</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>24</rfc>
		<lcom>19</lcom>
		<ca>0</ca>
		<ce>9</ce>
		<npm>14</npm>
		<lcom3>0.38461538461538464</lcom3>
		<loc>278</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.36904761904761907</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>18.785714285714285</amc>
		<cc>
			<method name="public void createNode(Object arg0)">1</method>
			<method name="public void consumeNode(Object arg0)">1</method>
			<method name="public void LT(int arg0, Object arg1)">1</method>
			<method name="public void addChild(Object arg0, Object arg1)">1</method>
			<method name="public void exitRule(String arg0)">1</method>
			<method name="public void location(int arg0, int arg1)">1</method>
			<method name="public void enterRule(String arg0)">1</method>
			<method name="public void createNode(Object arg0, org.antlr.runtime.Token arg1)">1</method>
			<method name="public void setTokenBoundaries(Object arg0, int arg1, int arg2)">1</method>
			<method name="public void nilNode(Object arg0)">1</method>
			<method name="public void enterSubRule(int arg0)">1</method>
			<method name="public void exitSubRule(int arg0)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor arg0)">1</method>
			<method name="public void becomeRoot(Object arg0, Object arg1)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugTreeParser</name>
		<wmc>12</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>24</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>13</ce>
		<npm>11</npm>
		<lcom3>0.45454545454545453</lcom3>
		<loc>132</loc>
		<dam>0.5</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.24166666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.833333333333334</amc>
		<cc>
			<method name="public void reportError(org.antlr.runtime.RecognitionException arg0)">1</method>
			<method name="public void setDebugListener(org.antlr.runtime.debug.DebugEventListener arg0)">2</method>
			<method name="public void endBacktrack(int arg0, boolean arg1)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeNodeStream arg0, org.antlr.runtime.RecognizerSharedState arg1)">2</method>
			<method name="public org.antlr.runtime.debug.DebugEventListener getDebugListener()">1</method>
			<method name="public void beginBacktrack(int arg0)">1</method>
			<method name="public void endResync()">1</method>
			<method name="public void reportError(java.io.IOException arg0)">1</method>
			<method name="public void beginResync()">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeNodeStream arg0, org.antlr.runtime.debug.DebugEventListener arg1, org.antlr.runtime.RecognizerSharedState arg2)">2</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeNodeStream arg0, org.antlr.runtime.debug.DebugEventListener arg1)">2</method>
			<method name="protected Object getMissingSymbol(org.antlr.runtime.IntStream arg0, org.antlr.runtime.RecognitionException arg1, int arg2, org.antlr.runtime.BitSet arg3)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreePatternParser</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>17</cbo>
		<rfc>20</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>17</ce>
		<npm>4</npm>
		<lcom3>0.30000000000000004</lcom3>
		<loc>299</loc>
		<dam>0.8</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.32</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>57.8</amc>
		<cc>
			<method name="public Object pattern()">4</method>
			<method name="public Object parseTree()">10</method>
			<method name="static Class class$(String arg0)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreePatternLexer arg0, org.antlr.runtime.tree.TreeWizard arg1, org.antlr.runtime.tree.TreeAdaptor arg2)">1</method>
			<method name="public Object parseNode()">16</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.Parser</name>
		<wmc>10</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>13</cbo>
		<rfc>26</rfc>
		<lcom>15</lcom>
		<ca>1</ca>
		<ce>12</ce>
		<npm>8</npm>
		<lcom3>0.2222222222222222</lcom3>
		<loc>128</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.2875</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.7</amc>
		<cc>
			<method name="public org.antlr.runtime.TokenStream getTokenStream()">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public void reset()">2</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream arg0, org.antlr.runtime.RecognizerSharedState arg1)">1</method>
			<method name="public void traceOut(String arg0, int arg1)">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream arg0)">1</method>
			<method name="protected Object getCurrentInputSymbol(org.antlr.runtime.IntStream arg0)">1</method>
			<method name="public void setTokenStream(org.antlr.runtime.TokenStream arg0)">1</method>
			<method name="protected Object getMissingSymbol(org.antlr.runtime.IntStream arg0, org.antlr.runtime.RecognitionException arg1, int arg2, org.antlr.runtime.BitSet arg3)">3</method>
			<method name="public void traceIn(String arg0, int arg1)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.Tracer</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>14</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>11</ce>
		<npm>4</npm>
		<lcom3>0.16666666666666666</lcom3>
		<loc>102</loc>
		<dam>0.5</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>24.0</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.IntStream arg0)">1</method>
			<method name="public Object getInputSymbol(int arg0)">2</method>
			<method name="public void exitRule(String arg0)">2</method>
			<method name="public void enterRule(String arg0)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeVisitor</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>10</rfc>
		<lcom>1</lcom>
		<ca>0</ca>
		<ce>5</ce>
		<npm>3</npm>
		<lcom3>0.0</lcom3>
		<loc>62</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>19.333333333333332</amc>
		<cc>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor arg0)">1</method>
			<method name="public Object visit(Object arg0, org.antlr.runtime.tree.TreeVisitorAction arg1)">6</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenSource</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>2</rfc>
		<lcom>1</lcom>
		<ca>5</ca>
		<ce>3</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>2</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract String getSourceName()">1</method>
			<method name="public abstract org.antlr.runtime.Token nextToken()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.CommonTreeNodeStream</name>
		<wmc>37</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>18</cbo>
		<rfc>71</rfc>
		<lcom>220</lcom>
		<ca>2</ca>
		<ce>17</ce>
		<npm>33</npm>
		<lcom3>0.767094017094017</lcom3>
		<loc>746</loc>
		<dam>0.7692307692307693</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.24324324324324326</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>18.81081081081081</amc>
		<cc>
			<method name="public void setUniqueNavigationNodes(boolean arg0)">1</method>
			<method name="protected void fillBuffer()">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor arg0, Object arg1, int arg2)">1</method>
			<method name="public int mark()">2</method>
			<method name="public void replaceChildren(Object arg0, int arg1, int arg2, Object arg3)">2</method>
			<method name="public void reset()">2</method>
			<method name="public void push(int arg0)">2</method>
			<method name="public int pop()">1</method>
			<method name="public int size()">2</method>
			<method name="public String toString(Object arg0, Object arg1)">14</method>
			<method name="public Object getCurrentSymbol()">1</method>
			<method name="public void seek(int arg0)">2</method>
			<method name="protected Object LB(int arg0)">3</method>
			<method name="public String toString()">3</method>
			<method name="public String toTokenString(int arg0, int arg1)">4</method>
			<method name="public void fillBuffer(Object arg0)">7</method>
			<method name="public String getSourceName()">1</method>
			<method name="protected void addNavigationNode(int arg0)">4</method>
			<method name="public Object getTreeSource()">1</method>
			<method name="public Object get(int arg0)">2</method>
			<method name="public void _init_(org.antlr.runtime.tree.CommonTreeNodeStream arg0, int arg1, int arg2)">1</method>
			<method name="public void setTokenStream(org.antlr.runtime.TokenStream arg0)">1</method>
			<method name="public void setTreeAdaptor(org.antlr.runtime.tree.TreeAdaptor arg0)">1</method>
			<method name="public org.antlr.runtime.tree.TreeAdaptor getTreeAdaptor()">1</method>
			<method name="public void release(int arg0)">1</method>
			<method name="public void rewind()">1</method>
			<method name="public org.antlr.runtime.TokenStream getTokenStream()">1</method>
			<method name="public int index()">1</method>
			<method name="public Object LT(int arg0)">5</method>
			<method name="public int LA(int arg0)">1</method>
			<method name="public java.util.Iterator iterator()">2</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor arg0, Object arg1)">1</method>
			<method name="public boolean hasUniqueNavigationNodes()">1</method>
			<method name="public void consume()">2</method>
			<method name="public void rewind(int arg0)">1</method>
			<method name="protected int getNodeIndex(Object arg0)">4</method>
			<method name="public void _init_(Object arg0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.ParseTreeBuilder</name>
		<wmc>11</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>25</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>12</ce>
		<npm>11</npm>
		<lcom3>0.675</lcom3>
		<loc>174</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.30303030303030304</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.454545454545455</amc>
		<cc>
			<method name="public org.antlr.runtime.tree.ParseTree getTree()">1</method>
			<method name="public void consumeHiddenToken(org.antlr.runtime.Token arg0)">2</method>
			<method name="public void exitDecision(int arg0)">1</method>
			<method name="public void enterDecision(int arg0)">1</method>
			<method name="public void exitRule(String arg0, String arg1)">3</method>
			<method name="public org.antlr.runtime.tree.ParseTree epsilonNode()">1</method>
			<method name="public void _init_(String arg0)">1</method>
			<method name="public void enterRule(String arg0, String arg1)">2</method>
			<method name="public void consumeToken(org.antlr.runtime.Token arg0)">2</method>
			<method name="public void recognitionException(org.antlr.runtime.RecognitionException arg0)">2</method>
			<method name="public org.antlr.runtime.tree.ParseTree create(Object arg0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.RemoteDebugEventSocketListener$ProxyToken</name>
		<wmc>17</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>22</rfc>
		<lcom>74</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>17</npm>
		<lcom3>0.8020833333333333</lcom3>
		<loc>146</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.39705882352941174</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.235294117647059</amc>
		<cc>
			<method name="public int getTokenIndex()">1</method>
			<method name="public int getChannel()">1</method>
			<method name="public void _init_(int arg0, int arg1, int arg2, int arg3, int arg4, String arg5)">1</method>
			<method name="public void setTokenIndex(int arg0)">1</method>
			<method name="public void setChannel(int arg0)">1</method>
			<method name="public org.antlr.runtime.CharStream getInputStream()">1</method>
			<method name="public String toString()">2</method>
			<method name="public String getText()">1</method>
			<method name="public void setLine(int arg0)">1</method>
			<method name="public void setText(String arg0)">1</method>
			<method name="public int getLine()">1</method>
			<method name="public int getCharPositionInLine()">1</method>
			<method name="public int getType()">1</method>
			<method name="public void setCharPositionInLine(int arg0)">1</method>
			<method name="public void _init_(int arg0)">1</method>
			<method name="public void setType(int arg0)">1</method>
			<method name="public void setInputStream(org.antlr.runtime.CharStream arg0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.RewriteRuleElementStream</name>
		<wmc>12</wmc>
		<dit>1</dit>
		<noc>3</noc>
		<cbo>11</cbo>
		<rfc>19</rfc>
		<lcom>24</lcom>
		<ca>3</ca>
		<ce>8</ce>
		<npm>9</npm>
		<lcom3>0.5606060606060607</lcom3>
		<loc>224</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.38333333333333336</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.166666666666668</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor arg0, String arg1, java.util.List arg2)">1</method>
			<method name="public Object nextTree()">4</method>
			<method name="public boolean hasNext()">5</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor arg0, String arg1)">1</method>
			<method name="protected Object toTree(Object arg0)">1</method>
			<method name="public String getDescription()">1</method>
			<method name="public void add(Object arg0)">4</method>
			<method name="protected Object _next()">5</method>
			<method name="public void reset()">1</method>
			<method name="public int size()">3</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor arg0, String arg1, Object arg2)">1</method>
			<method name="protected abstract Object dup(Object)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.DOTTreeGenerator</name>
		<wmc>10</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>31</rfc>
		<lcom>31</lcom>
		<ca>0</ca>
		<ce>10</ce>
		<npm>4</npm>
		<lcom3>0.6222222222222222</lcom3>
		<loc>319</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.46296296296296297</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>30.4</amc>
		<cc>
			<method name="public org.antlr.stringtemplate.StringTemplate toDOT(Object arg0, org.antlr.runtime.tree.TreeAdaptor arg1)">1</method>
			<method name="protected void toDOTDefineEdges(Object arg0, org.antlr.runtime.tree.TreeAdaptor arg1, org.antlr.stringtemplate.StringTemplate arg2)">4</method>
			<method name="protected void toDOTDefineNodes(Object arg0, org.antlr.runtime.tree.TreeAdaptor arg1, org.antlr.stringtemplate.StringTemplate arg2)">4</method>
			<method name="protected org.antlr.stringtemplate.StringTemplate getNodeST(org.antlr.runtime.tree.TreeAdaptor arg0, Object arg1)">1</method>
			<method name="public org.antlr.stringtemplate.StringTemplate toDOT(org.antlr.runtime.tree.Tree arg0)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public org.antlr.stringtemplate.StringTemplate toDOT(Object arg0, org.antlr.runtime.tree.TreeAdaptor arg1, org.antlr.stringtemplate.StringTemplate arg2, org.antlr.stringtemplate.StringTemplate arg3)">1</method>
			<method name="public void _init_()">1</method>
			<method name="protected String fixString(String arg0)">3</method>
			<method name="protected int getNodeNumber(Object arg0)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugEventRepeater</name>
		<wmc>32</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>64</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>6</ce>
		<npm>32</npm>
		<lcom3>0.0</lcom3>
		<loc>201</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.25390625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.25</amc>
		<cc>
			<method name="public void exitDecision(int arg0)">1</method>
			<method name="public void createNode(Object arg0)">1</method>
			<method name="public void enterAlt(int arg0)">1</method>
			<method name="public void enterRule(String arg0, String arg1)">1</method>
			<method name="public void beginBacktrack(int arg0)">1</method>
			<method name="public void mark(int arg0)">1</method>
			<method name="public void location(int arg0, int arg1)">1</method>
			<method name="public void recognitionException(org.antlr.runtime.RecognitionException arg0)">1</method>
			<method name="public void setTokenBoundaries(Object arg0, int arg1, int arg2)">1</method>
			<method name="public void exitRule(String arg0, String arg1)">1</method>
			<method name="public void nilNode(Object arg0)">1</method>
			<method name="public void exitSubRule(int arg0)">1</method>
			<method name="public void becomeRoot(Object arg0, Object arg1)">1</method>
			<method name="public void consumeHiddenToken(org.antlr.runtime.Token arg0)">1</method>
			<method name="public void terminate()">1</method>
			<method name="public void _init_(org.antlr.runtime.debug.DebugEventListener arg0)">1</method>
			<method name="public void rewind()">1</method>
			<method name="public void consumeNode(Object arg0)">1</method>
			<method name="public void errorNode(Object arg0)">1</method>
			<method name="public void endResync()">1</method>
			<method name="public void LT(int arg0, Object arg1)">1</method>
			<method name="public void addChild(Object arg0, Object arg1)">1</method>
			<method name="public void consumeToken(org.antlr.runtime.Token arg0)">1</method>
			<method name="public void semanticPredicate(boolean arg0, String arg1)">1</method>
			<method name="public void createNode(Object arg0, org.antlr.runtime.Token arg1)">1</method>
			<method name="public void LT(int arg0, org.antlr.runtime.Token arg1)">1</method>
			<method name="public void enterDecision(int arg0)">1</method>
			<method name="public void endBacktrack(int arg0, boolean arg1)">1</method>
			<method name="public void rewind(int arg0)">1</method>
			<method name="public void enterSubRule(int arg0)">1</method>
			<method name="public void commence()">1</method>
			<method name="public void beginResync()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.CommonTreeNodeStream$StreamIterator</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>8</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>0.3333333333333333</lcom3>
		<loc>56</loc>
		<dam>0.5</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.5</amc>
		<cc>
			<method name="public boolean hasNext()">2</method>
			<method name="public void remove()">1</method>
			<method name="public Object next()">2</method>
			<method name="protected void _init_(org.antlr.runtime.tree.CommonTreeNodeStream arg0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.RecognizerSharedState</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>7</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>44</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>28.0</amc>
		<cc>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.NoViableAltException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>11</rfc>
		<lcom>1</lcom>
		<ca>4</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>0.8333333333333334</lcom3>
		<loc>61</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>18.333333333333332</amc>
		<cc>
			<method name="public String toString()">2</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(String arg0, int arg1, int arg2, org.antlr.runtime.IntStream arg3)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.misc.IntArray</name>
		<wmc>7</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>9</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>7</npm>
		<lcom3>0.611111111111111</lcom3>
		<loc>103</loc>
		<dam>0.3333333333333333</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.7142857142857143</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.285714285714286</amc>
		<cc>
			<method name="public void clear()">1</method>
			<method name="public void push(int arg0)">1</method>
			<method name="public int pop()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public int size()">1</method>
			<method name="public void ensureCapacity(int arg0)">4</method>
			<method name="public void add(int arg0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.FailedPredicateException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>8</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>35</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.0</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_(org.antlr.runtime.IntStream arg0, String arg1, String arg2)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.CommonTokenStream</name>
		<wmc>33</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>16</cbo>
		<rfc>62</rfc>
		<lcom>222</lcom>
		<ca>1</ca>
		<ce>15</ce>
		<npm>29</npm>
		<lcom3>0.5390625</lcom3>
		<loc>594</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.24675324675324675</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>16.757575757575758</amc>
		<cc>
			<method name="protected void fillBuffer()">10</method>
			<method name="public int mark()">2</method>
			<method name="public void setTokenTypeChannel(int arg0, int arg1)">2</method>
			<method name="public org.antlr.runtime.Token get(int arg0)">1</method>
			<method name="public void discardOffChannelTokens(boolean arg0)">1</method>
			<method name="public void reset()">1</method>
			<method name="public String toString(int arg0, int arg1)">6</method>
			<method name="public org.antlr.runtime.TokenSource getTokenSource()">1</method>
			<method name="public int size()">1</method>
			<method name="public void seek(int arg0)">1</method>
			<method name="protected int skipOffTokenChannels(int arg0)">3</method>
			<method name="public java.util.List getTokens()">2</method>
			<method name="public String toString()">2</method>
			<method name="public java.util.List getTokens(int arg0, int arg1, org.antlr.runtime.BitSet arg2)">9</method>
			<method name="public void discardTokenType(int arg0)">2</method>
			<method name="public String getSourceName()">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenSource arg0, int arg1)">1</method>
			<method name="public java.util.List getTokens(int arg0, int arg1)">1</method>
			<method name="public java.util.List getTokens(int arg0, int arg1, java.util.List arg2)">1</method>
			<method name="public String toString(org.antlr.runtime.Token arg0, org.antlr.runtime.Token arg1)">3</method>
			<method name="public void release(int arg0)">1</method>
			<method name="protected org.antlr.runtime.Token LB(int arg0)">6</method>
			<method name="public void rewind()">1</method>
			<method name="public int index()">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenSource arg0)">1</method>
			<method name="public java.util.List getTokens(int arg0, int arg1, int arg2)">1</method>
			<method name="public int LA(int arg0)">1</method>
			<method name="protected int skipOffTokenChannelsReverse(int arg0)">3</method>
			<method name="public void setTokenSource(org.antlr.runtime.TokenSource arg0)">1</method>
			<method name="public void consume()">2</method>
			<method name="public void rewind(int arg0)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public org.antlr.runtime.Token LT(int arg0)">7</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.MismatchedTreeNodeException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>10</rfc>
		<lcom>1</lcom>
		<ca>2</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>31</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.0</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_(int arg0, org.antlr.runtime.tree.TreeNodeStream arg1)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenStream</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>21</cbo>
		<rfc>5</rfc>
		<lcom>10</lcom>
		<ca>15</ca>
		<ce>6</ce>
		<npm>5</npm>
		<lcom3>2.0</lcom3>
		<loc>5</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract org.antlr.runtime.Token LT(int)">1</method>
			<method name="public abstract org.antlr.runtime.Token get(int)">1</method>
			<method name="public abstract org.antlr.runtime.TokenSource getTokenSource()">1</method>
			<method name="public abstract String toString(int, int)">1</method>
			<method name="public abstract String toString(org.antlr.runtime.Token, org.antlr.runtime.Token)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.ParserRuleReturnScope</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>4</rfc>
		<lcom>3</lcom>
		<ca>0</ca>
		<ce>4</ce>
		<npm>3</npm>
		<lcom3>1.0</lcom3>
		<loc>14</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getStop()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object getStart()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.RuleReturnScope</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>2</noc>
		<cbo>4</cbo>
		<rfc>6</rfc>
		<lcom>10</lcom>
		<ca>2</ca>
		<ce>2</ce>
		<npm>5</npm>
		<lcom3>2.0</lcom3>
		<loc>16</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>2.2</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public Object getTemplate()">1</method>
			<method name="public Object getStop()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object getStart()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.ANTLRStringStream</name>
		<wmc>20</wmc>
		<dit>1</dit>
		<noc>2</noc>
		<cbo>9</cbo>
		<rfc>29</rfc>
		<lcom>62</lcom>
		<ca>2</ca>
		<ce>7</ce>
		<npm>20</npm>
		<lcom3>0.6900584795321637</lcom3>
		<loc>303</loc>
		<dam>0.8888888888888888</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3875</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.7</amc>
		<cc>
			<method name="public void release(int arg0)">1</method>
			<method name="public int mark()">3</method>
			<method name="public void _init_(String arg0)">1</method>
			<method name="public void rewind()">1</method>
			<method name="public int index()">1</method>
			<method name="public void reset()">1</method>
			<method name="public int LA(int arg0)">5</method>
			<method name="public int size()">1</method>
			<method name="public void seek(int arg0)">3</method>
			<method name="public String substring(int arg0, int arg1)">1</method>
			<method name="public void _init_(char[] arg0, int arg1)">1</method>
			<method name="public void setLine(int arg0)">1</method>
			<method name="public void consume()">3</method>
			<method name="public void rewind(int arg0)">1</method>
			<method name="public int getLine()">1</method>
			<method name="public int getCharPositionInLine()">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public void setCharPositionInLine(int arg0)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public int LT(int arg0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.ANTLRReaderStream</name>
		<wmc>5</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>7</cbo>
		<rfc>9</rfc>
		<lcom>10</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>5</npm>
		<lcom3>1.25</lcom3>
		<loc>103</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.8</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>19.2</amc>
		<cc>
			<method name="public void _init_(java.io.Reader arg0, int arg1)">1</method>
			<method name="public void _init_(java.io.Reader arg0)">1</method>
			<method name="public void load(java.io.Reader arg0, int arg1, int arg2)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(java.io.Reader arg0, int arg1, int arg2)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.IntStream</name>
		<wmc>10</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>26</cbo>
		<rfc>10</rfc>
		<lcom>45</lcom>
		<ca>23</ca>
		<ce>3</ce>
		<npm>10</npm>
		<lcom3>2.0</lcom3>
		<loc>10</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.7</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract int size()">1</method>
			<method name="public abstract void rewind()">1</method>
			<method name="public abstract int index()">1</method>
			<method name="public abstract void rewind(int)">1</method>
			<method name="public abstract void release(int)">1</method>
			<method name="public abstract void consume()">1</method>
			<method name="public abstract String getSourceName()">1</method>
			<method name="public abstract void seek(int)">1</method>
			<method name="public abstract int LA(int)">1</method>
			<method name="public abstract int mark()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugEventListener</name>
		<wmc>31</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>31</rfc>
		<lcom>465</lcom>
		<ca>9</ca>
		<ce>5</ce>
		<npm>31</npm>
		<lcom3>1.0333333333333334</lcom3>
		<loc>34</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2903225806451613</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void mark(int)">1</method>
			<method name="public abstract void terminate()">1</method>
			<method name="public abstract void enterRule(String, String)">1</method>
			<method name="public abstract void consumeToken(org.antlr.runtime.Token)">1</method>
			<method name="public abstract void rewind(int)">1</method>
			<method name="public abstract void exitDecision(int)">1</method>
			<method name="public abstract void endResync()">1</method>
			<method name="public abstract void createNode(Object)">1</method>
			<method name="public abstract void rewind()">1</method>
			<method name="public abstract void errorNode(Object)">1</method>
			<method name="public abstract void LT(int, org.antlr.runtime.Token)">1</method>
			<method name="public abstract void beginBacktrack(int)">1</method>
			<method name="public abstract void semanticPredicate(boolean, String)">1</method>
			<method name="public abstract void commence()">1</method>
			<method name="public abstract void LT(int, Object)">1</method>
			<method name="public abstract void endBacktrack(int, boolean)">1</method>
			<method name="public abstract void nilNode(Object)">1</method>
			<method name="public abstract void enterAlt(int)">1</method>
			<method name="public abstract void enterSubRule(int)">1</method>
			<method name="public abstract void exitSubRule(int)">1</method>
			<method name="public abstract void exitRule(String, String)">1</method>
			<method name="public abstract void enterDecision(int)">1</method>
			<method name="public abstract void becomeRoot(Object, Object)">1</method>
			<method name="public abstract void location(int, int)">1</method>
			<method name="public abstract void addChild(Object, Object)">1</method>
			<method name="public abstract void beginResync()">1</method>
			<method name="public abstract void setTokenBoundaries(Object, int, int)">1</method>
			<method name="public abstract void consumeNode(Object)">1</method>
			<method name="public abstract void recognitionException(org.antlr.runtime.RecognitionException)">1</method>
			<method name="public abstract void createNode(Object, org.antlr.runtime.Token)">1</method>
			<method name="public abstract void consumeHiddenToken(org.antlr.runtime.Token)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.RewriteCardinalityException</name>
		<wmc>2</wmc>
		<dit>4</dit>
		<noc>2</noc>
		<cbo>7</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>3</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>17</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.9545454545454546</mfa>
		<cam>0.75</cam>
		<ic>1</ic>
		<cbm>1</cbm>
		<amc>7.0</amc>
		<cc>
			<method name="public void _init_(String arg0)">1</method>
			<method name="public String getMessage()">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.UnBufferedTreeNodeStream$TreeWalkState</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>3</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>15</loc>
		<dam>0.125</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.0</amc>
		<cc>
			<method name="protected void _init_(org.antlr.runtime.tree.UnBufferedTreeNodeStream arg0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$1</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>4</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>1</npm>
		<lcom3>0.5</lcom3>
		<loc>19</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.5</amc>
		<cc>
			<method name="void _init_(org.antlr.runtime.tree.TreeWizard arg0, java.util.List arg1)">1</method>
			<method name="public void visit(Object arg0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$3</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>6</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>42</loc>
		<dam>1.0</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.6428571428571429</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>18.0</amc>
		<cc>
			<method name="void _init_(org.antlr.runtime.tree.TreeWizard arg0, java.util.Map arg1, org.antlr.runtime.tree.TreeWizard$TreePattern arg2, org.antlr.runtime.tree.TreeWizard$ContextVisitor arg3)">1</method>
			<method name="public void visit(Object arg0, Object arg1, int arg2, java.util.Map arg3)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugEventHub</name>
		<wmc>34</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>70</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>8</ce>
		<npm>34</npm>
		<lcom3>0.0</lcom3>
		<loc>668</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2536764705882353</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>18.61764705882353</amc>
		<cc>
			<method name="public void exitDecision(int arg0)">2</method>
			<method name="public void createNode(Object arg0)">2</method>
			<method name="public void enterAlt(int arg0)">2</method>
			<method name="public void enterRule(String arg0, String arg1)">2</method>
			<method name="public void beginBacktrack(int arg0)">2</method>
			<method name="public void mark(int arg0)">2</method>
			<method name="public void location(int arg0, int arg1)">2</method>
			<method name="public void recognitionException(org.antlr.runtime.RecognitionException arg0)">2</method>
			<method name="public void setTokenBoundaries(Object arg0, int arg1, int arg2)">2</method>
			<method name="public void exitRule(String arg0, String arg1)">2</method>
			<method name="public void _init_(org.antlr.runtime.debug.DebugEventListener arg0, org.antlr.runtime.debug.DebugEventListener arg1)">1</method>
			<method name="public void nilNode(Object arg0)">2</method>
			<method name="public void exitSubRule(int arg0)">2</method>
			<method name="public void becomeRoot(Object arg0, Object arg1)">2</method>
			<method name="public void consumeHiddenToken(org.antlr.runtime.Token arg0)">2</method>
			<method name="public void terminate()">2</method>
			<method name="public void _init_(org.antlr.runtime.debug.DebugEventListener arg0)">1</method>
			<method name="public void rewind()">2</method>
			<method name="public void consumeNode(Object arg0)">2</method>
			<method name="public void errorNode(Object arg0)">2</method>
			<method name="public void endResync()">2</method>
			<method name="public void LT(int arg0, Object arg1)">2</method>
			<method name="public void addChild(Object arg0, Object arg1)">2</method>
			<method name="public void consumeToken(org.antlr.runtime.Token arg0)">2</method>
			<method name="public void semanticPredicate(boolean arg0, String arg1)">2</method>
			<method name="public void createNode(Object arg0, org.antlr.runtime.Token arg1)">2</method>
			<method name="public void LT(int arg0, org.antlr.runtime.Token arg1)">2</method>
			<method name="public void enterDecision(int arg0)">2</method>
			<method name="public void endBacktrack(int arg0, boolean arg1)">2</method>
			<method name="public void rewind(int arg0)">2</method>
			<method name="public void enterSubRule(int arg0)">2</method>
			<method name="public void commence()">2</method>
			<method name="public void beginResync()">2</method>
			<method name="public void addListener(org.antlr.runtime.debug.DebugEventListener arg0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$2</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>5</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>31</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.5714285714285714</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.0</amc>
		<cc>
			<method name="void _init_(org.antlr.runtime.tree.TreeWizard arg0, org.antlr.runtime.tree.TreeWizard$TreePattern arg1, java.util.List arg2)">1</method>
			<method name="public void visit(Object arg0, Object arg1, int arg2, java.util.Map arg3)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.RewriteRuleSubtreeStream</name>
		<wmc>5</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>12</rfc>
		<lcom>8</lcom>
		<ca>0</ca>
		<ce>6</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>53</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.56</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.6</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor arg0, String arg1, java.util.List arg2)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor arg0, String arg1)">1</method>
			<method name="public Object nextNode()">4</method>
			<method name="protected Object dup(Object arg0)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor arg0, String arg1, Object arg2)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeVisitorAction</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>2</cbo>
		<rfc>2</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>1</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>2</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract Object post(Object)">1</method>
			<method name="public abstract Object pre(Object)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.MismatchedSetException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>10</cbo>
		<rfc>11</rfc>
		<lcom>1</lcom>
		<ca>3</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>31</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.0</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_(org.antlr.runtime.BitSet arg0, org.antlr.runtime.IntStream arg1)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.MismatchedTokenException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>2</noc>
		<cbo>11</cbo>
		<rfc>10</rfc>
		<lcom>0</lcom>
		<ca>5</ca>
		<ce>6</ce>
		<npm>3</npm>
		<lcom3>0.0</lcom3>
		<loc>37</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.0</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_(int arg0, org.antlr.runtime.IntStream arg1)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.Tree</name>
		<wmc>27</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>17</cbo>
		<rfc>28</rfc>
		<lcom>351</lcom>
		<ca>12</ca>
		<ce>6</ce>
		<npm>26</npm>
		<lcom3>1.0</lcom3>
		<loc>34</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.2222222222222222</amc>
		<cc>
			<method name="public abstract java.util.List getAncestors()">1</method>
			<method name="public abstract void freshenParentAndChildIndexes()">1</method>
			<method name="public abstract int getLine()">1</method>
			<method name="public abstract int getCharPositionInLine()">1</method>
			<method name="public abstract void addChild(org.antlr.runtime.tree.Tree)">1</method>
			<method name="public abstract int getType()">1</method>
			<method name="public abstract org.antlr.runtime.tree.Tree getAncestor(int)">1</method>
			<method name="public abstract void setChild(int, org.antlr.runtime.tree.Tree)">1</method>
			<method name="public abstract boolean hasAncestor(int)">1</method>
			<method name="public abstract void setTokenStopIndex(int)">1</method>
			<method name="public abstract org.antlr.runtime.tree.Tree dupNode()">1</method>
			<method name="public abstract void setParent(org.antlr.runtime.tree.Tree)">1</method>
			<method name="public abstract boolean isNil()">1</method>
			<method name="public abstract int getTokenStartIndex()">1</method>
			<method name="public abstract void setChildIndex(int)">1</method>
			<method name="public abstract int getChildCount()">1</method>
			<method name="public abstract int getChildIndex()">1</method>
			<method name="public abstract String getText()">1</method>
			<method name="public abstract org.antlr.runtime.tree.Tree getChild(int)">1</method>
			<method name="public abstract int getTokenStopIndex()">1</method>
			<method name="public abstract void setTokenStartIndex(int)">1</method>
			<method name="public abstract org.antlr.runtime.tree.Tree getParent()">1</method>
			<method name="public abstract String toString()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public abstract Object deleteChild(int)">1</method>
			<method name="public abstract void replaceChildren(int, int, Object)">1</method>
			<method name="public abstract String toStringTree()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.BaseRecognizer</name>
		<wmc>42</wmc>
		<dit>1</dit>
		<noc>3</noc>
		<cbo>33</cbo>
		<rfc>89</rfc>
		<lcom>481</lcom>
		<ca>5</ca>
		<ce>28</ce>
		<npm>35</npm>
		<lcom3>0.940766550522648</lcom3>
		<loc>1162</loc>
		<dam>0.14285714285714285</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.1684981684981685</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>26.5</amc>
		<cc>
			<method name="public int getRuleMemoizationCacheSize()">4</method>
			<method name="public void matchAny(org.antlr.runtime.IntStream arg0)">1</method>
			<method name="public java.util.List getRuleInvocationStack()">1</method>
			<method name="public void reset()">4</method>
			<method name="public String getTokenErrorDisplay(org.antlr.runtime.Token arg0)">3</method>
			<method name="protected Object recoverFromMismatchedToken(org.antlr.runtime.IntStream arg0, int arg1, org.antlr.runtime.BitSet arg2)">1</method>
			<method name="public void emitErrorMessage(String arg0)">1</method>
			<method name="public int getRuleMemoization(int arg0, int arg1)">3</method>
			<method name="public boolean mismatchIsMissingToken(org.antlr.runtime.IntStream arg0, org.antlr.runtime.BitSet arg1)">6</method>
			<method name="protected Object getMissingSymbol(org.antlr.runtime.IntStream arg0, org.antlr.runtime.RecognitionException arg1, int arg2, org.antlr.runtime.BitSet arg3)">1</method>
			<method name="public static java.util.List getRuleInvocationStack(Throwable arg0, String arg1)">5</method>
			<method name="public boolean alreadyParsedRule(org.antlr.runtime.IntStream arg0, int arg1)">3</method>
			<method name="public void consumeUntil(org.antlr.runtime.IntStream arg0, org.antlr.runtime.BitSet arg1)">3</method>
			<method name="public abstract String getSourceName()">1</method>
			<method name="public void displayRecognitionError(String[] arg0, org.antlr.runtime.RecognitionException arg1)">1</method>
			<method name="public Object recoverFromMismatchedSet(org.antlr.runtime.IntStream arg0, org.antlr.runtime.RecognitionException arg1, org.antlr.runtime.BitSet arg2)">1</method>
			<method name="public String getGrammarFileName()">1</method>
			<method name="public void traceOut(String arg0, int arg1, Object arg2)">3</method>
			<method name="public int getBacktrackingLevel()">1</method>
			<method name="public int getNumberOfSyntaxErrors()">1</method>
			<method name="public boolean mismatchIsUnwantedToken(org.antlr.runtime.IntStream arg0, int arg1)">2</method>
			<method name="public void _init_(org.antlr.runtime.RecognizerSharedState arg0)">2</method>
			<method name="protected org.antlr.runtime.BitSet computeContextSensitiveRuleFOLLOW()">1</method>
			<method name="public void consumeUntil(org.antlr.runtime.IntStream arg0, int arg1)">3</method>
			<method name="protected void pushFollow(org.antlr.runtime.BitSet arg0)">2</method>
			<method name="public java.util.List toStrings(java.util.List arg0)">3</method>
			<method name="protected org.antlr.runtime.BitSet computeErrorRecoverySet()">1</method>
			<method name="public void endResync()">1</method>
			<method name="protected org.antlr.runtime.BitSet combineFollows(boolean arg0)">5</method>
			<method name="protected Object getCurrentInputSymbol(org.antlr.runtime.IntStream arg0)">1</method>
			<method name="public void reportError(org.antlr.runtime.RecognitionException arg0)">2</method>
			<method name="public void memoize(org.antlr.runtime.IntStream arg0, int arg1, int arg2)">5</method>
			<method name="public Object match(org.antlr.runtime.IntStream arg0, int arg1, org.antlr.runtime.BitSet arg2)">1</method>
			<method name="public String getErrorMessage(org.antlr.runtime.RecognitionException arg0, String[] arg1)">14</method>
			<method name="public void traceIn(String arg0, int arg1, Object arg2)">2</method>
			<method name="public String getErrorHeader(org.antlr.runtime.RecognitionException arg0)">1</method>
			<method name="public void setBacktrackingLevel(int arg0)">1</method>
			<method name="public boolean failed()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void recover(org.antlr.runtime.IntStream arg0, org.antlr.runtime.RecognitionException arg1)">2</method>
			<method name="public void beginResync()">1</method>
			<method name="public String[] getTokenNames()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.RemoteDebugEventSocketListener</name>
		<wmc>14</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>33</cbo>
		<rfc>92</rfc>
		<lcom>65</lcom>
		<ca>0</ca>
		<ce>33</ce>
		<npm>5</npm>
		<lcom3>0.8012820512820512</lcom3>
		<loc>1236</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.34285714285714286</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>86.42857142857143</amc>
		<cc>
			<method name="protected void closeConnection()">10</method>
			<method name="public String[] getEventElements(String arg0)">5</method>
			<method name="protected void dispatch(String arg0)">36</method>
			<method name="protected org.antlr.runtime.debug.RemoteDebugEventSocketListener$ProxyTree deserializeNode(String[] arg0, int arg1)">1</method>
			<method name="protected String unEscapeNewlines(String arg0)">1</method>
			<method name="public void run()">1</method>
			<method name="public void start()">1</method>
			<method name="public void _init_(org.antlr.runtime.debug.DebugEventListener arg0, String arg1, int arg2)">1</method>
			<method name="protected void handshake()">1</method>
			<method name="protected org.antlr.runtime.debug.RemoteDebugEventSocketListener$ProxyToken deserializeToken(String[] arg0, int arg1)">1</method>
			<method name="public boolean tokenIndexesAreInvalid()">1</method>
			<method name="protected void eventHandler()">2</method>
			<method name="protected boolean openConnection()">1</method>
			<method name="protected void ack()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.DFA</name>
		<wmc>8</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>16</rfc>
		<lcom>28</lcom>
		<ca>0</ca>
		<ce>8</ce>
		<npm>6</npm>
		<lcom3>0.9857142857142858</lcom3>
		<loc>320</loc>
		<dam>0.9</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.35</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>37.75</amc>
		<cc>
			<method name="protected void error(org.antlr.runtime.NoViableAltException arg0)">1</method>
			<method name="public String getDescription()">1</method>
			<method name="public static char[] unpackEncodedStringToUnsignedChars(String arg0)">4</method>
			<method name="public int predict(org.antlr.runtime.IntStream arg0)">1</method>
			<method name="public int specialStateTransition(int arg0, org.antlr.runtime.IntStream arg1)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public static short[] unpackEncodedString(String arg0)">4</method>
			<method name="protected void noViableAlt(int arg0, org.antlr.runtime.IntStream arg1)">1</method>
		</cc>
	</class>



	<class>
		<name>org.antlr.analysis.DFAState</name>
		<wmc>29</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>44</cbo>
		<rfc>81</rfc>
		<lcom>198</lcom>
		<ca>18</ca>
		<ce>28</ce>
		<npm>26</npm>
		<lcom3>0.911764705882353</lcom3>
		<loc>895</loc>
		<dam>0.5294117647058824</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.13505747126436782</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>29.275862068965516</amc>
		<cc>
			<method name="public void removeTransition(int trans)">1</method>
			<method name="protected java.util.Set getConflictingAlts()">17</method>
			<method name="public void reset()">1</method>
			<method name="public org.antlr.analysis.NFAConfiguration addNFAConfiguration(org.antlr.analysis.NFAState state, int alt, org.antlr.analysis.NFAContext context, org.antlr.analysis.SemanticContext semanticContext)">1</method>
			<method name="public void _init_(org.antlr.analysis.DFA dfa)">1</method>
			<method name="public boolean isResolvedWithPredicates()">1</method>
			<method name="public void setNFAConfigurations(org.antlr.misc.OrderedHashSet configs)">1</method>
			<method name="public java.util.Set getDisabledAlternatives()">3</method>
			<method name="protected java.util.Set getNonDeterministicAlts()">5</method>
			<method name="public String toString()">3</method>
			<method name="public int hashCode()">2</method>
			<method name="public org.antlr.analysis.Transition getTransition(int trans)">1</method>
			<method name="public void addNFAConfiguration(org.antlr.analysis.NFAState state, org.antlr.analysis.NFAConfiguration c)">8</method>
			<method name="public void setAcceptStateReachable(int acceptStateReachable)">1</method>
			<method name="public org.antlr.misc.OrderedHashSet getReachableLabels()">1</method>
			<method name="public int addTransition(org.antlr.analysis.DFAState target, org.antlr.analysis.Label label)">1</method>
			<method name="public boolean equals(Object o)">1</method>
			<method name="public java.util.Set getGatedSyntacticPredicatesInNFAConfigurations()">5</method>
			<method name="public org.antlr.analysis.SemanticContext getGatedPredicatesInNFAConfigurations()">7</method>
			<method name="public int getAcceptStateReachable()">1</method>
			<method name="public int getNumberOfTransitions()">1</method>
			<method name="public org.antlr.analysis.Transition transition(int i)">1</method>
			<method name="public int getUniqueAlt()">4</method>
			<method name="public java.util.Set getAltSet()">3</method>
			<method name="public void setLookaheadDepth(int k)">2</method>
			<method name="public int getUniquelyPredictedAlt()">6</method>
			<method name="public int getLookaheadDepth()">1</method>
			<method name="public void addTransition(org.antlr.analysis.Transition t)">1</method>
			<method name="protected void addReachableLabel(org.antlr.analysis.Label label)">8</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Rule</name>
		<wmc>36</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>54</cbo>
		<rfc>91</rfc>
		<lcom>386</lcom>
		<ca>29</ca>
		<ce>32</ce>
		<npm>35</npm>
		<lcom3>0.9549783549783549</lcom3>
		<loc>1071</loc>
		<dam>0.21212121212121213</dam>
		<moa>10</moa>
		<mfa>0.0</mfa>
		<cam>0.22857142857142856</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>27.833333333333332</amc>
		<cc>
			<method name="public org.antlr.tool.AttributeScope getLocalAttributeScope(String name)">6</method>
			<method name="public String setOption(String key, Object value, antlr.Token optionsStartToken)">8</method>
			<method name="public void defineLabel(antlr.Token label, org.antlr.tool.GrammarAST elementRef, int type)">9</method>
			<method name="public java.util.Map getRuleLabels()">1</method>
			<method name="public java.util.Set getAllTokenRefsInAltsWithRewrites()">6</method>
			<method name="public String getSingleValueReturnName()">3</method>
			<method name="public org.antlr.tool.Grammar$LabelElementPair getRuleListLabel(String name)">2</method>
			<method name="public java.util.List getRuleRefsInAlt(String ref, int outerAltNum)">2</method>
			<method name="public String toString()">1</method>
			<method name="public org.antlr.tool.Grammar$LabelElementPair getLabel(String name)">1</method>
			<method name="public org.antlr.tool.Grammar$LabelElementPair getTokenLabel(String name)">2</method>
			<method name="public java.util.List getInlineActions()">1</method>
			<method name="public boolean getHasSingleReturnValue()">6</method>
			<method name="public void setOptions(java.util.Map options, antlr.Token optionsStartToken)">3</method>
			<method name="public boolean getHasReturnValue()">6</method>
			<method name="public void trackAltsWithRewrites(org.antlr.tool.GrammarAST altAST, int outerAltNum)">5</method>
			<method name="public void trackInlineAction(org.antlr.tool.GrammarAST actionAST)">1</method>
			<method name="public java.util.List getTokenRefsInAlt(String ref, int outerAltNum)">2</method>
			<method name="public java.util.Set getRuleRefsInAlt(int outerAltNum)">1</method>
			<method name="public boolean getHasMultipleReturnValues()">6</method>
			<method name="public void defineNamedAction(org.antlr.tool.GrammarAST ampersandAST, org.antlr.tool.GrammarAST nameAST, org.antlr.tool.GrammarAST actionAST)">2</method>
			<method name="public org.antlr.tool.AttributeScope getAttributeScope(String name)">4</method>
			<method name="public String getSingleValueReturnType()">3</method>
			<method name="public void trackTokenReferenceInAlt(org.antlr.tool.GrammarAST refAST, int outerAltNum)">2</method>
			<method name="public String getElementLabel(String refdSymbol, int outerAltNum, org.antlr.codegen.CodeGenerator generator)">7</method>
			<method name="public java.util.Set getTokenRefsInAlt(int altNum)">1</method>
			<method name="public java.util.Map getActions()">1</method>
			<method name="public org.antlr.tool.Grammar$LabelElementPair getTokenListLabel(String name)">2</method>
			<method name="public void trackRuleReferenceInAlt(org.antlr.tool.GrammarAST refAST, int outerAltNum)">2</method>
			<method name="public java.util.Set getAllRuleRefsInAltsWithRewrites()">3</method>
			<method name="public java.util.Map getRuleListLabels()">1</method>
			<method name="public void _init_(org.antlr.tool.Grammar grammar, String ruleName, int ruleIndex, int numberOfAlts)">2</method>
			<method name="static void _clinit_()">1</method>
			<method name="public boolean hasRewrite(int i)">2</method>
			<method name="public org.antlr.tool.Grammar$LabelElementPair getRuleLabel(String name)">2</method>
			<method name="public void setActions(java.util.Map actions)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$DFA72</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>38</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.5</amc>
		<cc>
			<method name="public String getDescription()">1</method>
			<method name="public void _init_(org.antlr.grammar.v3.ANTLRv3Parser, org.antlr.runtime.BaseRecognizer recognizer)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.DFA</name>
		<wmc>51</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>62</cbo>
		<rfc>137</rfc>
		<lcom>961</lcom>
		<ca>33</ca>
		<ce>41</ce>
		<npm>42</npm>
		<lcom3>0.9333333333333332</lcom3>
		<loc>1701</loc>
		<dam>0.38095238095238093</dam>
		<moa>8</moa>
		<mfa>0.0</mfa>
		<cam>0.19714285714285715</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>31.529411764705884</amc>
		<cc>
			<method name="protected void createMinMaxTables(org.antlr.analysis.DFAState s)">14</method>
			<method name="public java.util.List getJavaCompressedSpecial()">1</method>
			<method name="public boolean isTokensRuleDecision()">3</method>
			<method name="public java.util.List getJavaCompressedAccept()">1</method>
			<method name="public java.util.List getRunLengthEncoding(java.util.List data)">8</method>
			<method name="public boolean analysisTimedOut()">1</method>
			<method name="public void createStateTables(org.antlr.codegen.CodeGenerator generator)">6</method>
			<method name="public void removeState(org.antlr.analysis.DFAState d)">2</method>
			<method name="public int predict(org.antlr.runtime.IntStream input)">1</method>
			<method name="public int getNumberOfAlts()">1</method>
			<method name="public void _init_(int decisionNumber, org.antlr.analysis.NFAState decisionStartState)">4</method>
			<method name="public boolean canInlineDecision()">4</method>
			<method name="public boolean isCyclic()">3</method>
			<method name="public java.util.List getJavaCompressedMin()">1</method>
			<method name="public void setState(int stateNumber, org.antlr.analysis.DFAState d)">1</method>
			<method name="public org.antlr.analysis.NFAState getNFADecisionStartState()">1</method>
			<method name="public boolean okToRetryDFAWithK1()">7</method>
			<method name="public boolean getAutoBacktrackMode()">1</method>
			<method name="public void setUserMaxLookahead(int k)">1</method>
			<method name="public java.util.List getUnreachableAlts()">1</method>
			<method name="protected org.antlr.analysis.DFAState addState(org.antlr.analysis.DFAState d)">3</method>
			<method name="public String getReasonForFailure()">7</method>
			<method name="static void _clinit_()">1</method>
			<method name="public int getMaxLookaheadDepth()">2</method>
			<method name="public org.antlr.analysis.DFAState getAcceptState(int alt)">1</method>
			<method name="public String getDescription()">1</method>
			<method name="public int getMaxStateNumber()">1</method>
			<method name="public java.util.List getJavaCompressedTransition()">4</method>
			<method name="public java.util.List getJavaCompressedMax()">1</method>
			<method name="public java.util.List getJavaCompressedEOF()">1</method>
			<method name="protected void initAltRelatedInfo()">2</method>
			<method name="public org.antlr.analysis.DFAState newState()">1</method>
			<method name="protected void _init_()">1</method>
			<method name="public String toString()">2</method>
			<method name="protected void createEOTAndEOFTables(org.antlr.analysis.DFAState s)">9</method>
			<method name="public int getUserMaxLookahead()">2</method>
			<method name="public boolean isGreedy()">3</method>
			<method name="public org.antlr.analysis.DFAState getState(int stateNumber)">1</method>
			<method name="public java.util.List getJavaCompressedEOT()">1</method>
			<method name="protected void createSpecialTable(org.antlr.analysis.DFAState s)">6</method>
			<method name="public void findAllGatedSynPredsUsedInDFAAcceptStates()">5</method>
			<method name="public int getDecisionNumber()">1</method>
			<method name="public void verify()">1</method>
			<method name="protected boolean doesStateReachAcceptState(org.antlr.analysis.DFAState d)">8</method>
			<method name="public org.antlr.tool.GrammarAST getDecisionASTNode()">1</method>
			<method name="protected void createTransitionTableEntryForState(org.antlr.analysis.DFAState s)">8</method>
			<method name="public boolean isReduced()">1</method>
			<method name="public void setAcceptState(int alt, org.antlr.analysis.DFAState acceptState)">1</method>
			<method name="public java.util.Map getUniqueStates()">1</method>
			<method name="public void resetStateNumbersToBeContiguous()">7</method>
			<method name="public int getNumberOfStates()">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.Tool</name>
		<wmc>23</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>56</cbo>
		<rfc>119</rfc>
		<lcom>165</lcom>
		<ca>16</ca>
		<ce>45</ce>
		<npm>16</npm>
		<lcom3>0.8227272727272728</lcom3>
		<loc>1538</loc>
		<dam>0.7</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.33636363636363636</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>65.0</amc>
		<cc>
			<method name="public java.io.File getImportedVocabFile(String vocabName)">2</method>
			<method name="public String getLibraryFile(String fileName)">1</method>
			<method name="protected void generateRecognizer(org.antlr.tool.Grammar grammar)">7</method>
			<method name="protected void writeDOTFile(org.antlr.tool.Grammar g, String name, String dot)">1</method>
			<method name="private static void Xhelp()">1</method>
			<method name="public static void main(String[] args)">3</method>
			<method name="public java.io.Writer getOutputFile(org.antlr.tool.Grammar g, String fileName)">1</method>
			<method name="public void setOutputDirectory(String outputDirectory)">1</method>
			<method name="public void process()">10</method>
			<method name="public void generateDFAs(org.antlr.tool.Grammar g)">4</method>
			<method name="public org.antlr.tool.Grammar getRootGrammar(String grammarFileName)">1</method>
			<method name="protected void writeDOTFile(org.antlr.tool.Grammar g, org.antlr.tool.Rule r, String dot)">1</method>
			<method name="public void _init_(String[] args)">1</method>
			<method name="public void panic()">1</method>
			<method name="private static void help()">1</method>
			<method name="public String getFileDirectory(String fileName)">1</method>
			<method name="public static String getCurrentTimeStamp()">6</method>
			<method name="static void _clinit_()">1</method>
			<method name="public String getLibraryDirectory()">1</method>
			<method name="public void _init_()">1</method>
			<method name="protected void generateNFAs(org.antlr.tool.Grammar g)">2</method>
			<method name="public java.io.File getOutputDirectory(String fileNameWithPath)">8</method>
			<method name="public void processArgs(String[] args)">46</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v2.ANTLRParser$1</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>8</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>40</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.0</amc>
		<cc>
			<method name="public antlr.collections.AST create(int i)">1</method>
			<method name="public antlr.collections.AST create(antlr.Token token)">1</method>
			<method name="void _init_(org.antlr.grammar.v2.ANTLRParser)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.ErrorManager$5</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>10</rfc>
		<lcom>6</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>42</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.5</amc>
		<cc>
			<method name="void _init_()">1</method>
			<method name="public void debug(String s)">1</method>
			<method name="public void error(String s, Throwable e)">2</method>
			<method name="public void warning(String s)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.ErrorManager$4</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>11</rfc>
		<lcom>10</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>61</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.45</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.2</amc>
		<cc>
			<method name="void _init_()">1</method>
			<method name="public void info(String msg)">2</method>
			<method name="public void warning(org.antlr.tool.Message msg)">2</method>
			<method name="public void error(org.antlr.tool.Message msg)">2</method>
			<method name="public void error(org.antlr.tool.ToolMessage msg)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.LookaheadSet</name>
		<wmc>15</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>27</rfc>
		<lcom>0</lcom>
		<ca>6</ca>
		<ce>6</ce>
		<npm>15</npm>
		<lcom3>0.0</lcom3>
		<loc>128</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.28888888888888886</cam>
		<ic>1</ic>
		<cbm>1</cbm>
		<amc>7.466666666666667</amc>
		<cc>
			<method name="public boolean member(int a)">1</method>
			<method name="public void _init_(org.antlr.misc.IntSet s)">1</method>
			<method name="public void _init_(int atom)">1</method>
			<method name="public boolean equals(Object other)">1</method>
			<method name="public org.antlr.analysis.LookaheadSet intersection(org.antlr.analysis.LookaheadSet s)">1</method>
			<method name="public void _init_(org.antlr.analysis.LookaheadSet other)">1</method>
			<method name="public void orInPlace(org.antlr.analysis.LookaheadSet other)">1</method>
			<method name="public void remove(int a)">1</method>
			<method name="public String toString()">1</method>
			<method name="public int hashCode()">1</method>
			<method name="public String toString(org.antlr.tool.Grammar g)">2</method>
			<method name="public boolean isNil()">1</method>
			<method name="public org.antlr.analysis.LookaheadSet or(org.antlr.analysis.LookaheadSet other)">1</method>
			<method name="public org.antlr.analysis.LookaheadSet subtract(org.antlr.analysis.LookaheadSet other)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.ErrorManager$7</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>8</rfc>
		<lcom>6</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>24</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.0</amc>
		<cc>
			<method name="void _init_()">1</method>
			<method name="public void debug(String s)">1</method>
			<method name="public void error(String s, Throwable e)">2</method>
			<method name="public void warning(String s)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.ErrorManager$6</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>5</rfc>
		<lcom>6</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>10</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>1.5</amc>
		<cc>
			<method name="void _init_()">1</method>
			<method name="public void debug(String s)">1</method>
			<method name="public void error(String s, Throwable e)">1</method>
			<method name="public void warning(String s)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.DecisionProbe</name>
		<wmc>45</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>44</cbo>
		<rfc>127</rfc>
		<lcom>546</lcom>
		<ca>13</ca>
		<ce>34</ce>
		<npm>35</npm>
		<lcom3>0.9191919191919191</lcom3>
		<loc>1336</loc>
		<dam>0.7222222222222222</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.18863636363636363</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>28.288888888888888</amc>
		<cc>
			<method name="protected java.util.Set getDFAPathStatesToTarget(org.antlr.analysis.DFAState targetState)">3</method>
			<method name="public String getDescription()">1</method>
			<method name="public java.util.Set getDFAStatesWithSyntacticallyAmbiguousAlts()">1</method>
			<method name="public void reportDanglingState(org.antlr.analysis.DFAState d)">1</method>
			<method name="public boolean analysisTimedOut()">1</method>
			<method name="public void reset()">1</method>
			<method name="public boolean hasPredicate()">2</method>
			<method name="public void removeRecursiveOverflowState(org.antlr.analysis.DFAState d)">1</method>
			<method name="protected void stripWildCardAlts(java.util.Set disabledAlts)">5</method>
			<method name="public void _init_(org.antlr.analysis.DFA dfa)">1</method>
			<method name="public java.util.Set getDisabledAlternatives(org.antlr.analysis.DFAState d)">1</method>
			<method name="public String getInputSequenceDisplay(java.util.List labels)">2</method>
			<method name="public java.util.Set getNondeterministicStatesResolvedWithSemanticPredicate()">1</method>
			<method name="protected boolean reachesState(org.antlr.analysis.DFAState startState, org.antlr.analysis.DFAState targetState, java.util.Set states)">7</method>
			<method name="public void reportAltPredicateContext(org.antlr.analysis.DFAState d, java.util.Map altPredicateContext)">1</method>
			<method name="public java.util.List getSampleNonDeterministicInputSequence(org.antlr.analysis.DFAState targetState)">3</method>
			<method name="protected void getSampleInputSequenceUsingStateSet(org.antlr.analysis.State startState, org.antlr.analysis.State targetState, java.util.Set states, java.util.List labels)">5</method>
			<method name="public java.util.Set getNonDeterministicAlts()">1</method>
			<method name="public java.util.Set getDanglingStates()">1</method>
			<method name="public String getTokenNameForTokensRuleAlt(int alt)">1</method>
			<method name="public boolean isCyclic()">1</method>
			<method name="protected void issueRecursionWarnings()">2</method>
			<method name="public java.util.List getNFAPathStatesForAlt(int firstAlt, int alt, java.util.List labels)">2</method>
			<method name="public void reportNondeterminismResolvedWithSemanticPredicate(org.antlr.analysis.DFAState d)">2</method>
			<method name="public boolean analysisOverflowed()">2</method>
			<method name="public void reportNonLLStarDecision(org.antlr.analysis.DFA dfa)">1</method>
			<method name="public void reportNondeterminism(org.antlr.analysis.DFAState d, java.util.Set nondeterministicAlts)">1</method>
			<method name="public void reportAnalysisTimeout()">1</method>
			<method name="protected String getStateLabelIndexKey(int s, int i)">1</method>
			<method name="public java.util.List getUnreachableAlts()">1</method>
			<method name="protected boolean getNFAPath(org.antlr.analysis.NFAState s, int labelIndex, java.util.List labels, java.util.List path)">9</method>
			<method name="public void issueWarnings()">19</method>
			<method name="public void reportIncompletelyCoveredAlts(org.antlr.analysis.DFAState d, java.util.Map altToLocationsReachableWithoutPredicate)">1</method>
			<method name="public java.util.List getNonDeterministicAltsForState(org.antlr.analysis.DFAState targetState)">2</method>
			<method name="public void reportLexerRuleNondeterminism(org.antlr.analysis.DFAState d, java.util.Set nondeterministicAlts)">1</method>
			<method name="private java.util.Set getUnaliasedDFAStateSet(java.util.Set dfaStatesWithRecursionProblems)">2</method>
			<method name="public boolean isReduced()">1</method>
			<method name="private void computeAltToProblemMaps(java.util.Set dfaStatesUnaliased, java.util.Map configurationsMap, java.util.Map altToTargetToCallSitesMap, java.util.Map altToDFAState)">5</method>
			<method name="public java.util.Map getIncompletelyCoveredAlts(org.antlr.analysis.DFAState d)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public boolean isNonLLStarDecision()">1</method>
			<method name="public boolean isDeterministic()">6</method>
			<method name="public org.antlr.analysis.SemanticContext getSemanticContextForAlt(org.antlr.analysis.DFAState d, int alt)">2</method>
			<method name="public void reportRecursionOverflow(org.antlr.analysis.DFAState d, org.antlr.analysis.NFAConfiguration recursionNFAConfiguration)">2</method>
			<method name="public int getNumberOfStates()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.codegen.DelphiTarget</name>
		<wmc>7</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>27</rfc>
		<lcom>19</lcom>
		<ca>0</ca>
		<ce>13</ce>
		<npm>6</npm>
		<lcom3>2.0</lcom3>
		<loc>262</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.30158730158730157</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>36.42857142857143</amc>
		<cc>
			<method name="protected org.antlr.stringtemplate.StringTemplate chooseWhereCyclicDFAsGo(org.antlr.Tool tool, org.antlr.codegen.CodeGenerator generator, org.antlr.tool.Grammar grammar, org.antlr.stringtemplate.StringTemplate recognizerST, org.antlr.stringtemplate.StringTemplate cyclicDFAST)">1</method>
			<method name="public String encodeIntAsCharEscape(int v)">2</method>
			<method name="public String getTargetStringLiteralFromANTLRStringLiteral(org.antlr.codegen.CodeGenerator generator, String literal)">1</method>
			<method name="public String getTarget64BitStringFromValue(long word)">2</method>
			<method name="public String getTargetStringLiteralFromString(String s, boolean quoted)">9</method>
			<method name="public void _init_()">1</method>
			<method name="public String getTargetCharLiteralFromANTLRCharLiteral(org.antlr.codegen.CodeGenerator generator, String literal)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.misc.IntervalSet</name>
		<wmc>29</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>29</cbo>
		<rfc>73</rfc>
		<lcom>62</lcom>
		<ca>12</ca>
		<ce>18</ce>
		<npm>27</npm>
		<lcom3>0.5178571428571429</lcom3>
		<loc>974</loc>
		<dam>0.5</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.2193877551020408</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>32.51724137931034</amc>
		<cc>
			<method name="public boolean member(int el)">5</method>
			<method name="public org.antlr.misc.IntSet complement(org.antlr.misc.IntSet vocabulary)">7</method>
			<method name="public void remove(int el)">1</method>
			<method name="public void addAll(org.antlr.misc.IntSet set)">4</method>
			<method name="public int size()">3</method>
			<method name="protected void add(org.antlr.misc.Interval addition)">9</method>
			<method name="public org.antlr.misc.IntSet complement(int minElement, int maxElement)">1</method>
			<method name="public String toString()">1</method>
			<method name="public boolean equals(Object obj)">3</method>
			<method name="public void _init_(java.util.List intervals)">1</method>
			<method name="public void add(int a, int b)">1</method>
			<method name="public org.antlr.misc.IntSet or(org.antlr.misc.IntSet a)">1</method>
			<method name="public org.antlr.misc.IntSet subtract(org.antlr.misc.IntSet other)">1</method>
			<method name="public int getMaxElement()">2</method>
			<method name="public org.antlr.misc.IntSet and(org.antlr.misc.IntSet other)">13</method>
			<method name="public static org.antlr.misc.IntervalSet of(int a, int b)">1</method>
			<method name="public int get(int i)">4</method>
			<method name="public int getMinElement()">5</method>
			<method name="public int[] toArray()">3</method>
			<method name="public int getSingleElement()">4</method>
			<method name="public String toString(org.antlr.tool.Grammar g)">9</method>
			<method name="public java.util.List toList()">3</method>
			<method name="public void add(int el)">1</method>
			<method name="public boolean isNil()">3</method>
			<method name="public java.util.List getIntervals()">1</method>
			<method name="public static org.antlr.misc.IntervalSet of(int a)">1</method>
			<method name="public org.antlr.runtime.BitSet toRuntimeBitSet()">3</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$terminal_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.GrammarAST</name>
		<wmc>41</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>51</cbo>
		<rfc>77</rfc>
		<lcom>510</lcom>
		<ca>37</ca>
		<ce>18</ce>
		<npm>40</npm>
		<lcom3>0.9044117647058825</lcom3>
		<loc>745</loc>
		<dam>0.11764705882352941</dam>
		<moa>5</moa>
		<mfa>0.0</mfa>
		<cam>0.14423076923076922</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>16.75609756097561</amc>
		<cc>
			<method name="public void setBlockOptions(java.util.Map blockOptions)">1</method>
			<method name="public org.antlr.tool.GrammarAST getLastSibling()">2</method>
			<method name="public org.antlr.tool.GrammarAST getLastChild()">1</method>
			<method name="public void _init_(int t, String txt)">1</method>
			<method name="public void initialize(antlr.collections.AST ast)">1</method>
			<method name="public org.antlr.misc.IntSet getSetValue()">1</method>
			<method name="public boolean equals(Object ast)">6</method>
			<method name="public static org.antlr.tool.GrammarAST dupTreeNoActions(org.antlr.tool.GrammarAST t, org.antlr.tool.GrammarAST parent)">5</method>
			<method name="public void setOptions(org.antlr.tool.Grammar grammar, java.util.Map options)">3</method>
			<method name="public org.antlr.tool.GrammarAST getFirstChildWithType(int ttype)">3</method>
			<method name="public String setOption(java.util.Map options, java.util.Set legalOptions, org.antlr.tool.Grammar grammar, String key, Object value)">7</method>
			<method name="public int getLine()">4</method>
			<method name="public int getType()">2</method>
			<method name="public void setNFAStartState(org.antlr.analysis.NFAState nfaStartState)">1</method>
			<method name="public void setSetValue(org.antlr.misc.IntSet setValue)">1</method>
			<method name="public void setTreeEnclosingRuleNameDeeply(String rname)">2</method>
			<method name="public String setBlockOption(org.antlr.tool.Grammar grammar, String key, Object value)">2</method>
			<method name="public void setLine(int line)">1</method>
			<method name="public org.antlr.tool.GrammarAST getChild(int i)">3</method>
			<method name="public org.antlr.tool.GrammarAST findFirstType(int ttype)">4</method>
			<method name="public java.util.Map getBlockOptions()">1</method>
			<method name="public void initialize(antlr.Token token)">1</method>
			<method name="public String setTerminalOption(org.antlr.tool.Grammar grammar, String key, Object value)">2</method>
			<method name="public void setType(int type)">1</method>
			<method name="public void initialize(int i, String s)">1</method>
			<method name="public boolean hasSameTreeStructure(antlr.collections.AST t)">5</method>
			<method name="public static org.antlr.tool.GrammarAST dupListNoActions(org.antlr.tool.GrammarAST t, org.antlr.tool.GrammarAST parent)">5</method>
			<method name="public org.antlr.analysis.DFA getLookaheadDFA()">1</method>
			<method name="public org.antlr.analysis.NFAState getNFAStartState()">1</method>
			<method name="public String getText()">2</method>
			<method name="public int getColumn()">4</method>
			<method name="public antlr.Token getToken()">1</method>
			<method name="public Object getBlockOption(String key)">2</method>
			<method name="public void setText(String text)">1</method>
			<method name="public void setLookaheadDFA(org.antlr.analysis.DFA lookaheadDFA)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public boolean hasSameListStructure(antlr.collections.AST t)">10</method>
			<method name="public void _init_()">1</method>
			<method name="public void setColumn(int col)">1</method>
			<method name="public org.antlr.tool.GrammarAST[] getChildrenAsArray()">2</method>
			<method name="public static org.antlr.tool.GrammarAST dup(antlr.collections.AST t)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Attribute</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>15</rfc>
		<lcom>0</lcom>
		<ca>6</ca>
		<ce>6</ce>
		<npm>3</npm>
		<lcom3>0.25</lcom3>
		<loc>208</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.875</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>50.0</amc>
		<cc>
			<method name="public String toString()">2</method>
			<method name="public void _init_(String decl)">1</method>
			<method name="protected void extractAttribute(String decl)">18</method>
			<method name="public void _init_(String name, String decl)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v2.ANTLRTreePrinterTokenTypes</name>
		<wmc>0</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>3</cbo>
		<rfc>0</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>2</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>100</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$DFA64</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>14</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>103</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>33.0</amc>
		<cc>
			<method name="public String getDescription()">1</method>
			<method name="public int specialStateTransition(int s, org.antlr.runtime.IntStream _input)">1</method>
			<method name="public void _init_(org.antlr.grammar.v3.ANTLRv3Parser, org.antlr.runtime.BaseRecognizer recognizer)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.NFAState</name>
		<wmc>15</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>42</cbo>
		<rfc>27</rfc>
		<lcom>65</lcom>
		<ca>33</ca>
		<ce>13</ce>
		<npm>15</npm>
		<lcom3>0.9705882352941176</lcom3>
		<loc>232</loc>
		<dam>0.17647058823529413</dam>
		<moa>5</moa>
		<mfa>0.0</mfa>
		<cam>0.22857142857142856</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.333333333333334</amc>
		<cc>
			<method name="public String getDescription()">1</method>
			<method name="public void setEOTTargetState(boolean eot)">1</method>
			<method name="public boolean isEOTTargetState()">1</method>
			<method name="public void setTransition0(org.antlr.analysis.Transition e)">2</method>
			<method name="public boolean isDecisionState()">2</method>
			<method name="public int getNumberOfTransitions()">1</method>
			<method name="public void setDecisionNumber(int decisionNumber)">1</method>
			<method name="public void addTransition(org.antlr.analysis.Transition e)">7</method>
			<method name="public String toString()">1</method>
			<method name="public void _init_(org.antlr.analysis.NFA nfa)">1</method>
			<method name="public int translateDisplayAltToWalkAlt(int displayAlt)">5</method>
			<method name="public void setDecisionASTNode(org.antlr.tool.GrammarAST decisionASTNode)">1</method>
			<method name="public org.antlr.analysis.Transition transition(int i)">1</method>
			<method name="public void setDescription(String description)">1</method>
			<method name="public int getDecisionNumber()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$DFA67</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>38</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.5</amc>
		<cc>
			<method name="public String getDescription()">1</method>
			<method name="public void _init_(org.antlr.grammar.v3.ANTLRv3Parser, org.antlr.runtime.BaseRecognizer recognizer)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.SemanticContext$TruePredicate</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>6</rfc>
		<lcom>3</lcom>
		<ca>4</ca>
		<ce>8</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>22</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.333333333333333</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public org.antlr.stringtemplate.StringTemplate genExpr(org.antlr.codegen.CodeGenerator generator, org.antlr.stringtemplate.StringTemplateGroup templates, org.antlr.analysis.DFA dfa)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.AttributeScope</name>
		<wmc>11</wmc>
		<dit>1</dit>
		<noc>4</noc>
		<cbo>26</cbo>
		<rfc>35</rfc>
		<lcom>0</lcom>
		<ca>12</ca>
		<ce>16</ce>
		<npm>10</npm>
		<lcom3>0.8272727272727274</lcom3>
		<loc>268</loc>
		<dam>0.18181818181818182</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.3333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>22.363636363636363</amc>
		<cc>
			<method name="public String toString()">2</method>
			<method name="public void addAttribute(String name, String decl)">1</method>
			<method name="public java.util.Set intersection(org.antlr.tool.AttributeScope other)">6</method>
			<method name="public void _init_(String name, antlr.Token derivedFromToken)">1</method>
			<method name="public String getName()">3</method>
			<method name="static void _clinit_()">1</method>
			<method name="public org.antlr.tool.Attribute getAttribute(String name)">1</method>
			<method name="public void _init_(org.antlr.tool.Grammar grammar, String name, antlr.Token derivedFromToken)">1</method>
			<method name="public void addAttributes(String definitions, int separator)">4</method>
			<method name="public int size()">2</method>
			<method name="public java.util.List getAttributes()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$rewrite_tree_element_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.codegen.JavaTarget</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>0</ca>
		<ce>7</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>7</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>2.5</amc>
		<cc>
			<method name="protected org.antlr.stringtemplate.StringTemplate chooseWhereCyclicDFAsGo(org.antlr.Tool tool, org.antlr.codegen.CodeGenerator generator, org.antlr.tool.Grammar grammar, org.antlr.stringtemplate.StringTemplate recognizerST, org.antlr.stringtemplate.StringTemplate cyclicDFAST)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Interp</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>22</cbo>
		<rfc>36</rfc>
		<lcom>1</lcom>
		<ca>0</ca>
		<ce>22</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>198</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>98.0</amc>
		<cc>
			<method name="public static void main(String[] args)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v2.ANTLRParser</name>
		<wmc>125</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>33</cbo>
		<rfc>200</rfc>
		<lcom>3650</lcom>
		<ca>3</ca>
		<ce>32</ce>
		<npm>65</npm>
		<lcom3>0.9484149054505006</lcom3>
		<loc>11013</loc>
		<dam>0.08620689655172414</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.07258064516129033</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>86.64</amc>
		<cc>
			<method name="public final void attrScopes()">1</method>
			<method name="public void _init_(antlr.ParserSharedInputState state)">1</method>
			<method name="private static final long[] mk_tokenSet_3()">1</method>
			<method name="public final void grammar(org.antlr.tool.Grammar g)">1</method>
			<method name="public final void rewrite_ebnf()">1</method>
			<method name="protected org.antlr.tool.GrammarAST createBlockFromDupAlt(org.antlr.tool.GrammarAST alt)">1</method>
			<method name="private static final long[] mk_tokenSet_42()">1</method>
			<method name="public final Object optionValue()">7</method>
			<method name="public final void attrScope()">1</method>
			<method name="protected void prefixWithSynPred(org.antlr.tool.GrammarAST alt)">7</method>
			<method name="private static final long[] mk_tokenSet_23()">1</method>
			<method name="private static final long[] mk_tokenSet_27()">1</method>
			<method name="private static final long[] mk_tokenSet_46()">1</method>
			<method name="public final void rewrite_tree()">1</method>
			<method name="public void setGtype(int gtype)">1</method>
			<method name="public void cleanup(org.antlr.tool.GrammarAST root)">4</method>
			<method name="public final void range()">1</method>
			<method name="public final void ruleref()">1</method>
			<method name="public final void alternative()">1</method>
			<method name="public final void finallyClause()">1</method>
			<method name="private static final long[] mk_tokenSet_7()">1</method>
			<method name="public final void element()">1</method>
			<method name="private static final long[] mk_tokenSet_30()">1</method>
			<method name="private static final long[] mk_tokenSet_34()">1</method>
			<method name="public final void exceptionHandler()">1</method>
			<method name="public final void terminal()">1</method>
			<method name="private static final long[] mk_tokenSet_11()">1</method>
			<method name="private static final long[] mk_tokenSet_38()">1</method>
			<method name="private static final long[] mk_tokenSet_15()">1</method>
			<method name="public final void tokensSpec()">1</method>
			<method name="public final void rewrite_element()">1</method>
			<method name="private static final long[] mk_tokenSet_19()">1</method>
			<method name="public final void elementOption(org.antlr.tool.GrammarAST terminalAST)">1</method>
			<method name="private static final long[] mk_tokenSet_0()">1</method>
			<method name="public final void elementNoOptionSpec()">1</method>
			<method name="public final void defaultNodeOption(org.antlr.tool.GrammarAST terminalAST)">1</method>
			<method name="public final void rewrite_template()">1</method>
			<method name="private static final long[] mk_tokenSet_4()">1</method>
			<method name="private static final long[] mk_tokenSet_41()">1</method>
			<method name="public final void option(java.util.Map opts)">1</method>
			<method name="public final void idList()">1</method>
			<method name="public final void rewrite_template_arg()">1</method>
			<method name="private static final long[] mk_tokenSet_22()">1</method>
			<method name="private static final long[] mk_tokenSet_49()">1</method>
			<method name="public final void notTerminal()">4</method>
			<method name="private static final long[] mk_tokenSet_26()">1</method>
			<method name="private static final long[] mk_tokenSet_45()">1</method>
			<method name="public void reportError(antlr.RecognitionException ex)">1</method>
			<method name="protected void buildTokenTypeASTClassMap()">1</method>
			<method name="public final void rewrite_template_args()">1</method>
			<method name="public final void id()">3</method>
			<method name="public final java.util.Map optionsSpec()">1</method>
			<method name="public final void ruleActions()">1</method>
			<method name="public final void atom()">1</method>
			<method name="public final org.antlr.tool.GrammarAST ebnfSuffix(org.antlr.tool.GrammarAST elemAST, boolean inRewrite)">1</method>
			<method name="public final void block()">1</method>
			<method name="private static final long[] mk_tokenSet_8()">1</method>
			<method name="public final void rule()">1</method>
			<method name="private static final long[] mk_tokenSet_10()">1</method>
			<method name="private static final long[] mk_tokenSet_33()">1</method>
			<method name="private static final long[] mk_tokenSet_14()">1</method>
			<method name="private static final long[] mk_tokenSet_37()">1</method>
			<method name="private static final long[] mk_tokenSet_18()">1</method>
			<method name="public final void rewrite()">1</method>
			<method name="private static final long[] mk_tokenSet_1()">1</method>
			<method name="public final void tokenSpec()">3</method>
			<method name="public final void treeRoot()">1</method>
			<method name="private static final long[] mk_tokenSet_5()">1</method>
			<method name="public final void action()">1</method>
			<method name="public final void rewrite_indirect_template_head()">1</method>
			<method name="public org.antlr.tool.Grammar getGrammar()">1</method>
			<method name="public final void altList(java.util.Map opts)">1</method>
			<method name="public final void rewrite_block()">1</method>
			<method name="private static final long[] mk_tokenSet_40()">1</method>
			<method name="public final void notSet()">5</method>
			<method name="public final void delegateGrammar()">1</method>
			<method name="private static final long[] mk_tokenSet_48()">1</method>
			<method name="private static final long[] mk_tokenSet_21()">1</method>
			<method name="protected org.antlr.tool.GrammarAST setToBlockWithSet(org.antlr.tool.GrammarAST b)">1</method>
			<method name="private static final long[] mk_tokenSet_44()">1</method>
			<method name="public final void grammarType()">5</method>
			<method name="private static final long[] mk_tokenSet_25()">1</method>
			<method name="public final void ruleAction()">1</method>
			<method name="public final void ruleScopeSpec()">1</method>
			<method name="private static final long[] mk_tokenSet_29()">1</method>
			<method name="public final void ebnf()">1</method>
			<method name="public final void exceptionGroup()">10</method>
			<method name="public final void throwsSpec()">1</method>
			<method name="protected void _init_(antlr.TokenStream lexer, int k)">1</method>
			<method name="private static final long[] mk_tokenSet_9()">1</method>
			<method name="private static final long[] mk_tokenSet_51()">1</method>
			<method name="private static final long[] mk_tokenSet_13()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="private static final long[] mk_tokenSet_32()">1</method>
			<method name="private static final long[] mk_tokenSet_17()">1</method>
			<method name="private static final long[] mk_tokenSet_36()">1</method>
			<method name="public final void rewrite_alternative()">1</method>
			<method name="protected org.antlr.tool.GrammarAST createSynSemPredFromBlock(org.antlr.tool.GrammarAST synpredBlockAST, int synpredTokenType)">1</method>
			<method name="private static final long[] mk_tokenSet_2()">1</method>
			<method name="private static final long[] mk_tokenSet_6()">1</method>
			<method name="public final void actions()">1</method>
			<method name="public final void tree()">1</method>
			<method name="public final void rewrite_template_head()">1</method>
			<method name="public void _init_(antlr.TokenBuffer tokenBuf)">1</method>
			<method name="private static final long[] mk_tokenSet_20()">1</method>
			<method name="public int getGtype()">1</method>
			<method name="public final void delegateGrammars()">1</method>
			<method name="private static final long[] mk_tokenSet_24()">1</method>
			<method name="private static final long[] mk_tokenSet_47()">1</method>
			<method name="private static final long[] mk_tokenSet_28()">1</method>
			<method name="private static final long[] mk_tokenSet_43()">1</method>
			<method name="public final void actionScopeName()">5</method>
			<method name="public final void rewrite_atom()">1</method>
			<method name="protected void _init_(antlr.TokenBuffer tokenBuf, int k)">1</method>
			<method name="public final void rules()">1</method>
			<method name="public org.antlr.tool.GrammarAST createSimpleRuleAST(String name, org.antlr.tool.GrammarAST block, boolean fragment)">2</method>
			<method name="public final void elementOptions(org.antlr.tool.GrammarAST terminalAST)">1</method>
			<method name="private static final long[] mk_tokenSet_50()">1</method>
			<method name="private static final long[] mk_tokenSet_31()">1</method>
			<method name="private static final long[] mk_tokenSet_12()">1</method>
			<method name="private static final long[] mk_tokenSet_35()">1</method>
			<method name="public void setGrammar(org.antlr.tool.Grammar grammar)">1</method>
			<method name="private static final long[] mk_tokenSet_16()">1</method>
			<method name="private static final long[] mk_tokenSet_39()">1</method>
			<method name="public void _init_(antlr.TokenStream lexer)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.misc.MutableInteger</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>2</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>0</ca>
		<ce>2</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>13</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.0</amc>
		<cc>
			<method name="public void _init_(int value)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Grammar$LabelElementPair</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>7</rfc>
		<lcom>0</lcom>
		<ca>7</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>0.9166666666666666</lcom3>
		<loc>35</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.666666666666666</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_(org.antlr.tool.Grammar, antlr.Token label, org.antlr.tool.GrammarAST elementRef)">1</method>
			<method name="public org.antlr.tool.Rule getReferencedRule()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.CompositeGrammar</name>
		<wmc>24</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>35</cbo>
		<rfc>72</rfc>
		<lcom>56</lcom>
		<ca>14</ca>
		<ce>25</ce>
		<npm>23</npm>
		<lcom3>0.9006211180124224</lcom3>
		<loc>761</loc>
		<dam>0.42857142857142855</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.24404761904761904</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>30.125</amc>
		<cc>
			<method name="public org.antlr.tool.Grammar getDelegator(org.antlr.tool.Grammar g)">3</method>
			<method name="public java.util.Set getDelegatedRules(org.antlr.tool.Grammar g)">4</method>
			<method name="public org.antlr.tool.Rule getRule(String ruleName)">1</method>
			<method name="public void _init_(org.antlr.tool.Grammar g)">1</method>
			<method name="public org.antlr.tool.Grammar getGrammar(String grammarName)">2</method>
			<method name="public void setDelegationRoot(org.antlr.tool.Grammar root)">1</method>
			<method name="public void assignTokenTypes()">1</method>
			<method name="public void defineGrammarSymbols()">5</method>
			<method name="protected void initTokenSymbolTables()">1</method>
			<method name="public int getNewNFAStateNumber()">1</method>
			<method name="public java.util.List getDelegates(org.antlr.tool.Grammar g)">2</method>
			<method name="public java.util.List getDirectDelegates(org.antlr.tool.Grammar g)">4</method>
			<method name="public java.util.Set getAllImportedRules(org.antlr.tool.Grammar g)">3</method>
			<method name="public org.antlr.tool.Grammar getRootGrammar()">2</method>
			<method name="public void minimizeRuleSet()">1</method>
			<method name="public void addGrammar(org.antlr.tool.Grammar delegator, org.antlr.tool.Grammar delegate)">2</method>
			<method name="public void createNFAs()">7</method>
			<method name="public java.util.List getIndirectDelegates(org.antlr.tool.Grammar g)">1</method>
			<method name="public java.util.List getDelegators(org.antlr.tool.Grammar g)">3</method>
			<method name="public void _init_()">1</method>
			<method name="public void _minimizeRuleSet(java.util.Set ruleDefs, org.antlr.tool.CompositeGrammarTree p)">5</method>
			<method name="public void addState(org.antlr.analysis.NFAState state)">1</method>
			<method name="public Object getOption(String key)">1</method>
			<method name="public org.antlr.analysis.NFAState getState(int s)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.codegen.CTarget</name>
		<wmc>7</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>28</rfc>
		<lcom>15</lcom>
		<ca>0</ca>
		<ce>13</ce>
		<npm>4</npm>
		<lcom3>0.6666666666666666</lcom3>
		<loc>364</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5306122448979592</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>50.857142857142854</amc>
		<cc>
			<method name="protected void genRecognizerFile(org.antlr.Tool tool, org.antlr.codegen.CodeGenerator generator, org.antlr.tool.Grammar grammar, org.antlr.stringtemplate.StringTemplate outputFileST)">1</method>
			<method name="protected org.antlr.stringtemplate.StringTemplate chooseWhereCyclicDFAsGo(org.antlr.Tool tool, org.antlr.codegen.CodeGenerator generator, org.antlr.tool.Grammar grammar, org.antlr.stringtemplate.StringTemplate recognizerST, org.antlr.stringtemplate.StringTemplate cyclicDFAST)">1</method>
			<method name="protected void genRecognizerHeaderFile(org.antlr.Tool tool, org.antlr.codegen.CodeGenerator generator, org.antlr.tool.Grammar grammar, org.antlr.stringtemplate.StringTemplate headerFileST, String extName)">1</method>
			<method name="public boolean isValidActionScope(int grammarType, String scope)">23</method>
			<method name="public String getTargetStringLiteralFromANTLRStringLiteral(org.antlr.codegen.CodeGenerator generator, String literal)">17</method>
			<method name="public void _init_()">1</method>
			<method name="public String getTargetCharLiteralFromANTLRCharLiteral(org.antlr.codegen.CodeGenerator generator, String literal)">4</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.NonLLStarDecisionException</name>
		<wmc>1</wmc>
		<dit>4</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>4</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>8</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>1.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.0</amc>
		<cc>
			<method name="public void _init_(org.antlr.analysis.DFA abortedDFA)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.AssignTokenTypesBehavior</name>
		<wmc>12</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>20</cbo>
		<rfc>47</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>20</ce>
		<npm>2</npm>
		<lcom3>0.6493506493506493</lcom3>
		<loc>547</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6363636363636364</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>44.0</amc>
		<cc>
			<method name="protected void defineTokenNamesAndLiteralsInGrammar(org.antlr.tool.Grammar root)">3</method>
			<method name="protected void alias(org.antlr.tool.GrammarAST t, org.antlr.tool.GrammarAST s)">7</method>
			<method name="protected void init(org.antlr.tool.Grammar g)">2</method>
			<method name="protected void assignStringTypes(org.antlr.tool.Grammar root)">2</method>
			<method name="protected void trackToken(org.antlr.tool.GrammarAST t)">3</method>
			<method name="static void _clinit_()">1</method>
			<method name="protected void assignTokenIDTypes(org.antlr.tool.Grammar root)">2</method>
			<method name="public void defineTokens(org.antlr.tool.Grammar root)">1</method>
			<method name="public void _init_()">1</method>
			<method name="protected void aliasTokenIDsAndLiterals(org.antlr.tool.Grammar root)">3</method>
			<method name="protected void trackString(org.antlr.tool.GrammarAST t)">10</method>
			<method name="protected void trackTokenRule(org.antlr.tool.GrammarAST t, org.antlr.tool.GrammarAST modifier, org.antlr.tool.GrammarAST block)">12</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.GrammarSemanticsMessage</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>11</rfc>
		<lcom>4</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>4</npm>
		<lcom3>0.0</lcom3>
		<loc>84</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>19.5</amc>
		<cc>
			<method name="public String toString()">5</method>
			<method name="public void _init_(int msgID, org.antlr.tool.Grammar g, antlr.Token offendingToken, Object arg, Object arg2)">1</method>
			<method name="public void _init_(int msgID, org.antlr.tool.Grammar g, antlr.Token offendingToken)">1</method>
			<method name="public void _init_(int msgID, org.antlr.tool.Grammar g, antlr.Token offendingToken, Object arg)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.GrammarAnalysisAbortedMessage</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>11</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>12</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>51</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>24.0</amc>
		<cc>
			<method name="public String toString()">2</method>
			<method name="public void _init_(org.antlr.analysis.DecisionProbe probe)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.ActionLabel</name>
		<wmc>5</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>10</rfc>
		<lcom>8</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>5</npm>
		<lcom3>0.5</lcom3>
		<loc>32</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.2</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public String toString(org.antlr.tool.Grammar g)">1</method>
			<method name="public void _init_(org.antlr.tool.GrammarAST actionAST)">1</method>
			<method name="public boolean isEpsilon()">1</method>
			<method name="public boolean isAction()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$rewrite_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.codegen.ActionScriptTarget</name>
		<wmc>7</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>26</rfc>
		<lcom>21</lcom>
		<ca>0</ca>
		<ce>13</ce>
		<npm>5</npm>
		<lcom3>2.0</lcom3>
		<loc>186</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.30158730158730157</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>25.571428571428573</amc>
		<cc>
			<method name="public String getTokenTypeAsTargetLabel(org.antlr.codegen.CodeGenerator generator, int ttype)">4</method>
			<method name="protected org.antlr.stringtemplate.StringTemplate chooseWhereCyclicDFAsGo(org.antlr.Tool tool, org.antlr.codegen.CodeGenerator generator, org.antlr.tool.Grammar grammar, org.antlr.stringtemplate.StringTemplate recognizerST, org.antlr.stringtemplate.StringTemplate cyclicDFAST)">1</method>
			<method name="public String encodeIntAsCharEscape(int v)">4</method>
			<method name="public String getTarget64BitStringFromValue(long word)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public String getTargetCharLiteralFromANTLRCharLiteral(org.antlr.codegen.CodeGenerator generator, String literal)">1</method>
			<method name="private void writeHexWithPadding(StringBuffer buf, String digits)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.DOTGenerator</name>
		<wmc>11</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>33</cbo>
		<rfc>63</rfc>
		<lcom>9</lcom>
		<ca>1</ca>
		<ce>33</ce>
		<npm>6</npm>
		<lcom3>0.7166666666666666</lcom3>
		<loc>782</loc>
		<dam>0.6666666666666666</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.2857142857142857</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>69.54545454545455</amc>
		<cc>
			<method name="protected void walkRuleNFACreatingDOT(org.antlr.stringtemplate.StringTemplate dot, org.antlr.analysis.State s)">14</method>
			<method name="protected void walkCreatingDFADOT(org.antlr.stringtemplate.StringTemplate dot, org.antlr.analysis.DFAState s)">4</method>
			<method name="public void setArrowheadType(String arrowhead)">1</method>
			<method name="public String getDOT(org.antlr.analysis.State startState)">3</method>
			<method name="protected String getStateLabel(org.antlr.analysis.State s)">22</method>
			<method name="public void _init_(org.antlr.tool.Grammar grammar)">1</method>
			<method name="public String getArrowheadType()">1</method>
			<method name="public String getRankdir()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void setRankdir(String rankdir)">1</method>
			<method name="protected String getEdgeLabel(org.antlr.analysis.Transition edge)">5</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$altpair_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.SemanticContext</name>
		<wmc>9</wmc>
		<dit>1</dit>
		<noc>4</noc>
		<cbo>24</cbo>
		<rfc>16</rfc>
		<lcom>30</lcom>
		<ca>19</ca>
		<ce>12</ce>
		<npm>8</npm>
		<lcom3>0.75</lcom3>
		<loc>124</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.25</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.666666666666666</amc>
		<cc>
			<method name="public static org.antlr.analysis.SemanticContext not(org.antlr.analysis.SemanticContext a)">1</method>
			<method name="public abstract org.antlr.analysis.SemanticContext getGatedPredicateContext()">1</method>
			<method name="public void trackUseOfSyntacticPredicates(org.antlr.tool.Grammar g)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public abstract org.antlr.stringtemplate.StringTemplate genExpr(org.antlr.codegen.CodeGenerator, org.antlr.stringtemplate.StringTemplateGroup, org.antlr.analysis.DFA)">1</method>
			<method name="public abstract boolean isSyntacticPredicate()">1</method>
			<method name="public static org.antlr.analysis.SemanticContext and(org.antlr.analysis.SemanticContext a, org.antlr.analysis.SemanticContext b)">6</method>
			<method name="public static org.antlr.analysis.SemanticContext or(org.antlr.analysis.SemanticContext a, org.antlr.analysis.SemanticContext b)">12</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ActionAnalysis</name>
		<wmc>18</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>25</cbo>
		<rfc>55</rfc>
		<lcom>5</lcom>
		<ca>1</ca>
		<ce>25</ce>
		<npm>18</npm>
		<lcom3>0.9019607843137255</lcom3>
		<loc>983</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.19444444444444445</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>53.111111111111114</amc>
		<cc>
			<method name="public final void synpred1_ActionAnalysis_fragment()">1</method>
			<method name="public void _init_(org.antlr.runtime.CharStream input, org.antlr.runtime.RecognizerSharedState state)">1</method>
			<method name="public final void mX_Y()">1</method>
			<method name="public boolean alreadyParsedRule(org.antlr.runtime.IntStream input, int ruleIndex)">2</method>
			<method name="public final void mID()">1</method>
			<method name="public final boolean synpred1_ActionAnalysis()">2</method>
			<method name="public void memoize(org.antlr.runtime.IntStream input, int ruleIndex, int ruleStartIndex)">2</method>
			<method name="public void _init_(org.antlr.tool.Grammar grammar, String ruleName, org.antlr.tool.GrammarAST actionAST)">1</method>
			<method name="public org.antlr.runtime.Token nextToken()">3</method>
			<method name="public final void synpred2_ActionAnalysis_fragment()">1</method>
			<method name="public void analyze()">2</method>
			<method name="public final void mX()">1</method>
			<method name="public void _init_(org.antlr.runtime.CharStream input)">1</method>
			<method name="public final void mY()">1</method>
			<method name="public void mTokens()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public String getGrammarFileName()">1</method>
			<method name="public final boolean synpred2_ActionAnalysis()">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.RuleClosureTransition</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>16</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>10</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>14</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.0</amc>
		<cc>
			<method name="public void _init_(org.antlr.tool.Rule rule, org.antlr.analysis.NFAState ruleStart, org.antlr.analysis.NFAState followState)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.codegen.RubyTarget</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>16</rfc>
		<lcom>6</lcom>
		<ca>0</ca>
		<ce>7</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>92</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>22.0</amc>
		<cc>
			<method name="public String getTokenTypeAsTargetLabel(org.antlr.codegen.CodeGenerator generator, int ttype)">2</method>
			<method name="public int getMaxCharValue(org.antlr.codegen.CodeGenerator generator)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public String getTargetCharLiteralFromANTLRCharLiteral(org.antlr.codegen.CodeGenerator generator, String literal)">4</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.misc.MultiMap</name>
		<wmc>2</wmc>
		<dit>3</dit>
		<noc>1</noc>
		<cbo>10</cbo>
		<rfc>7</rfc>
		<lcom>1</lcom>
		<ca>5</ca>
		<ce>5</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>26</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.9848484848484849</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.0</amc>
		<cc>
			<method name="public void _init_()">1</method>
			<method name="public void map(Object key, Object value)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$notTerminal_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Grammar$Decision</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>5</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>8</loc>
		<dam>0.0</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.SemanticContext$NOT</name>
		<wmc>7</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>20</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>7</npm>
		<lcom3>0.0</lcom3>
		<loc>85</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.2653061224489796</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.0</amc>
		<cc>
			<method name="public boolean isSyntacticPredicate()">1</method>
			<method name="public String toString()">1</method>
			<method name="public void _init_(org.antlr.analysis.SemanticContext ctx)">1</method>
			<method name="public void trackUseOfSyntacticPredicates(org.antlr.tool.Grammar g)">1</method>
			<method name="public org.antlr.analysis.SemanticContext getGatedPredicateContext()">2</method>
			<method name="public boolean equals(Object object)">2</method>
			<method name="public org.antlr.stringtemplate.StringTemplate genExpr(org.antlr.codegen.CodeGenerator generator, org.antlr.stringtemplate.StringTemplateGroup templates, org.antlr.analysis.DFA dfa)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.ErrorManager$1</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>31</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>30.0</amc>
		<cc>
			<method name="void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.StateCluster</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>3</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>12</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.0</amc>
		<cc>
			<method name="public void _init_(org.antlr.analysis.NFAState left, org.antlr.analysis.NFAState right)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.ErrorManager$3</name>
		<wmc>1</wmc>
		<dit>3</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>4</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>11</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>1.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.0</amc>
		<cc>
			<method name="void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.NonRegularDecisionMessage</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>18</cbo>
		<rfc>14</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>17</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>72</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>34.0</amc>
		<cc>
			<method name="public String toString()">2</method>
			<method name="public void _init_(org.antlr.analysis.DecisionProbe probe, java.util.Set altsWithRecursion)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$atom_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.ErrorManager$2</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>22</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>21.0</amc>
		<cc>
			<method name="void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.NFAToDFAConverter$1</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>1</npm>
		<lcom3>1.0</lcom3>
		<loc>31</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.0</amc>
		<cc>
			<method name="void _init_(org.antlr.analysis.NFAToDFAConverter)">1</method>
			<method name="public int compare(Object a, Object b)">3</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$alternative_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Message</name>
		<wmc>9</wmc>
		<dit>1</dit>
		<noc>11</noc>
		<cbo>19</cbo>
		<rfc>19</rfc>
		<lcom>12</lcom>
		<ca>14</ca>
		<ce>6</ce>
		<npm>9</npm>
		<lcom3>0.8409090909090908</lcom3>
		<loc>159</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4444444444444444</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>15.444444444444445</amc>
		<cc>
			<method name="public void setMessageID(int msgID)">1</method>
			<method name="public void setLine(int line)">1</method>
			<method name="public org.antlr.stringtemplate.StringTemplate getLocationTemplate()">1</method>
			<method name="public String toString(org.antlr.stringtemplate.StringTemplate messageST)">5</method>
			<method name="public void _init_(int msgID, Object arg, Object arg2)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void setColumn(int column)">1</method>
			<method name="public void _init_(int msgID)">1</method>
			<method name="public org.antlr.stringtemplate.StringTemplate getMessageTemplate()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.GrammarReport</name>
		<wmc>9</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>25</cbo>
		<rfc>54</rfc>
		<lcom>14</lcom>
		<ca>1</ca>
		<ce>24</ce>
		<npm>6</npm>
		<lcom3>0.9</lcom3>
		<loc>1337</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.3125</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>147.0</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_(org.antlr.tool.Grammar grammar)">1</method>
			<method name="protected static String[] decodeReportData(String data)">3</method>
			<method name="public String toNotifyString()">10</method>
			<method name="public String getAnalysisTimeoutReport()">1</method>
			<method name="protected String getDFALocations(java.util.Set dfas)">3</method>
			<method name="static void _clinit_()">1</method>
			<method name="public String getBacktrackingReport()">1</method>
			<method name="public static String toString(String notifyDataLine)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Interpreter$LexerActionGetTokenType</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>6</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>2</npm>
		<lcom3>0.33333333333333326</lcom3>
		<loc>39</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.0</amc>
		<cc>
			<method name="public void exitRule(String grammarFileName, String ruleName)">2</method>
			<method name="public void _init_(org.antlr.tool.Interpreter, org.antlr.tool.Grammar g)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.misc.OrderedHashSet</name>
		<wmc>9</wmc>
		<dit>4</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>21</rfc>
		<lcom>0</lcom>
		<ca>4</ca>
		<ce>7</ce>
		<npm>9</npm>
		<lcom3>0.125</lcom3>
		<loc>78</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.7894736842105263</mfa>
		<cam>0.5185185185185185</cam>
		<ic>2</ic>
		<cbm>5</cbm>
		<amc>7.555555555555555</amc>
		<cc>
			<method name="public void clear()">1</method>
			<method name="public String toString()">1</method>
			<method name="public Object get(int i)">1</method>
			<method name="public Object set(int i, Object value)">1</method>
			<method name="public boolean remove(Object o)">1</method>
			<method name="public java.util.List elements()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public int size()">1</method>
			<method name="public boolean add(Object value)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v2.DefineGrammarItemsWalker</name>
		<wmc>42</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>29</cbo>
		<rfc>104</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>29</ce>
		<npm>38</npm>
		<lcom3>0.7134146341463414</lcom3>
		<loc>6097</loc>
		<dam>0.875</dam>
		<moa>4</moa>
		<mfa>0.0</mfa>
		<cam>0.33739837398373984</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>143.97619047619048</amc>
		<cc>
			<method name="protected void trimGrammar()">6</method>
			<method name="public final void ruleAction(antlr.collections.AST _t, org.antlr.tool.Rule r)">1</method>
			<method name="public final void rewrite_ebnf(antlr.collections.AST _t)">1</method>
			<method name="public final void ebnf(antlr.collections.AST _t)">1</method>
			<method name="public final void grammarSpec(antlr.collections.AST _t)">1</method>
			<method name="public final void rewrite_alternative(antlr.collections.AST _t)">1</method>
			<method name="public final void rewrite_element(antlr.collections.AST _t)">1</method>
			<method name="public final void action(antlr.collections.AST _t)">1</method>
			<method name="public final void block(antlr.collections.AST _t)">1</method>
			<method name="public final void ast_suffix(antlr.collections.AST _t)">1</method>
			<method name="public final void actions(antlr.collections.AST _t)">1</method>
			<method name="public final String modifier(antlr.collections.AST _t)">1</method>
			<method name="public final void atom(antlr.collections.AST _t, org.antlr.tool.GrammarAST scope)">1</method>
			<method name="public final void rewrite_block(antlr.collections.AST _t)">1</method>
			<method name="public final int countAltsForRule(antlr.collections.AST _t)">1</method>
			<method name="public final void rewrite_template(antlr.collections.AST _t)">1</method>
			<method name="public final void ruleScopeSpec(antlr.collections.AST _t, org.antlr.tool.Rule r)">1</method>
			<method name="public final void rules(antlr.collections.AST _t)">1</method>
			<method name="public final void tree(antlr.collections.AST _t)">1</method>
			<method name="protected void finish()">1</method>
			<method name="public void reportError(antlr.RecognitionException ex)">3</method>
			<method name="public final void exceptionHandler(antlr.collections.AST _t)">1</method>
			<method name="public final void element(antlr.collections.AST _t)">1</method>
			<method name="public final void blockAction(antlr.collections.AST _t)">1</method>
			<method name="public final void rewrite_tree(antlr.collections.AST _t)">1</method>
			<method name="public final void exceptionGroup(antlr.collections.AST _t)">1</method>
			<method name="public final void delegateGrammars(antlr.collections.AST _t)">1</method>
			<method name="public final void rule(antlr.collections.AST _t)">1</method>
			<method name="protected void trackInlineAction(org.antlr.tool.GrammarAST actionAST)">2</method>
			<method name="public final void attrScope(antlr.collections.AST _t)">1</method>
			<method name="public final void finallyClause(antlr.collections.AST _t)">1</method>
			<method name="public final void tokensSpec(antlr.collections.AST _t)">1</method>
			<method name="public final void grammar(antlr.collections.AST _t, org.antlr.tool.Grammar g)">1</method>
			<method name="public final void alternative(antlr.collections.AST _t)">1</method>
			<method name="public final void optionsSpec(antlr.collections.AST _t)">1</method>
			<method name="public final void rewrite_atom(antlr.collections.AST _t)">1</method>
			<method name="public final void tokenSpec(antlr.collections.AST _t)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public final void dotBlock(antlr.collections.AST _t)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public final void rewrite(antlr.collections.AST _t)">1</method>
			<method name="public final void dotLoop(antlr.collections.AST _t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.NFAConfiguration</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>16</rfc>
		<lcom>0</lcom>
		<ca>6</ca>
		<ce>7</ce>
		<npm>5</npm>
		<lcom3>0.53125</lcom3>
		<loc>152</loc>
		<dam>0.5</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.3333333333333333</cam>
		<ic>1</ic>
		<cbm>1</cbm>
		<amc>27.8</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public int hashCode()">1</method>
			<method name="public String toString(boolean showAlt)">7</method>
			<method name="public boolean equals(Object o)">6</method>
			<method name="public void _init_(int state, int alt, org.antlr.analysis.NFAContext context, org.antlr.analysis.SemanticContext semanticContext)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.GrammarSyntaxMessage</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>10</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>3</npm>
		<lcom3>0.16666666666666674</lcom3>
		<loc>71</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>21.666666666666668</amc>
		<cc>
			<method name="public String toString()">4</method>
			<method name="public void _init_(int msgID, org.antlr.tool.Grammar grammar, antlr.Token offendingToken, Object arg, antlr.RecognitionException exception)">1</method>
			<method name="public void _init_(int msgID, org.antlr.tool.Grammar grammar, antlr.Token offendingToken, antlr.RecognitionException exception)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$exceptionHandler_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.SemanticContext$OR</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>25</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>14</ce>
		<npm>6</npm>
		<lcom3>0.0</lcom3>
		<loc>188</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3055555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>30.166666666666668</amc>
		<cc>
			<method name="public boolean isSyntacticPredicate()">2</method>
			<method name="public String toString()">3</method>
			<method name="public void _init_(org.antlr.analysis.SemanticContext a, org.antlr.analysis.SemanticContext b)">5</method>
			<method name="public void trackUseOfSyntacticPredicates(org.antlr.tool.Grammar g)">2</method>
			<method name="public org.antlr.analysis.SemanticContext getGatedPredicateContext()">2</method>
			<method name="public org.antlr.stringtemplate.StringTemplate genExpr(org.antlr.codegen.CodeGenerator generator, org.antlr.stringtemplate.StringTemplateGroup templates, org.antlr.analysis.DFA dfa)">3</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.codegen.Target</name>
		<wmc>14</wmc>
		<dit>1</dit>
		<noc>12</noc>
		<cbo>31</cbo>
		<rfc>44</rfc>
		<lcom>85</lcom>
		<ca>17</ca>
		<ce>16</ce>
		<npm>11</npm>
		<lcom3>0.7692307692307693</lcom3>
		<loc>406</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2662337662337662</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>27.928571428571427</amc>
		<cc>
			<method name="protected void genRecognizerFile(org.antlr.Tool tool, org.antlr.codegen.CodeGenerator generator, org.antlr.tool.Grammar grammar, org.antlr.stringtemplate.StringTemplate outputFileST)">1</method>
			<method name="protected void performGrammarAnalysis(org.antlr.codegen.CodeGenerator generator, org.antlr.tool.Grammar grammar)">1</method>
			<method name="public String getTargetStringLiteralFromANTLRStringLiteral(org.antlr.codegen.CodeGenerator generator, String literal)">13</method>
			<method name="public int getMaxCharValue(org.antlr.codegen.CodeGenerator generator)">1</method>
			<method name="public String getTargetCharLiteralFromANTLRCharLiteral(org.antlr.codegen.CodeGenerator generator, String literal)">6</method>
			<method name="public String getTokenTypeAsTargetLabel(org.antlr.codegen.CodeGenerator generator, int ttype)">2</method>
			<method name="protected void genRecognizerHeaderFile(org.antlr.Tool tool, org.antlr.codegen.CodeGenerator generator, org.antlr.tool.Grammar grammar, org.antlr.stringtemplate.StringTemplate headerFileST, String extName)">1</method>
			<method name="public boolean isValidActionScope(int grammarType, String scope)">7</method>
			<method name="public String encodeIntAsCharEscape(int v)">2</method>
			<method name="public java.util.List postProcessAction(java.util.List chunks, antlr.Token actionToken)">1</method>
			<method name="public String getTarget64BitStringFromValue(long word)">2</method>
			<method name="public String getTargetStringLiteralFromString(String s, boolean quoted)">8</method>
			<method name="public void _init_()">1</method>
			<method name="public String getTargetStringLiteralFromString(String s)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ActionTranslator</name>
		<wmc>107</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>38</cbo>
		<rfc>181</rfc>
		<lcom>0</lcom>
		<ca>3</ca>
		<ce>38</ce>
		<npm>102</npm>
		<lcom3>0.9519000797236248</lcom3>
		<loc>8560</loc>
		<dam>0.028169014084507043</dam>
		<moa>5</moa>
		<mfa>0.0</mfa>
		<cam>0.11063464837049743</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>78.33644859813084</amc>
		<cc>
			<method name="public org.antlr.tool.Grammar$LabelElementPair getElementLabel(String id)">1</method>
			<method name="public final boolean synpred11_ActionTranslator()">2</method>
			<method name="static org.antlr.runtime.RecognizerSharedState access$100(org.antlr.grammar.v3.ActionTranslator x0)">1</method>
			<method name="public boolean isRuleRefInAlt(String id)">2</method>
			<method name="public final void mSET_DYNAMIC_SCOPE_ATTR()">1</method>
			<method name="public void checkElementRefUniqueness(String ref, boolean isToken)">4</method>
			<method name="public final void synpred12_ActionTranslator_fragment()">1</method>
			<method name="public boolean isTokenRefInAlt(String id)">2</method>
			<method name="public final void mRULE_SCOPE_ATTR()">1</method>
			<method name="public final boolean synpred24_ActionTranslator()">2</method>
			<method name="public final void mLABEL_REF()">1</method>
			<method name="public final void mTEMPLATE_INSTANCE()">1</method>
			<method name="public final boolean synpred21_ActionTranslator()">2</method>
			<method name="public final void mERROR_SCOPED_XY()">1</method>
			<method name="public final void synpred13_ActionTranslator_fragment()">1</method>
			<method name="public final void mACTION()">2</method>
			<method name="public final void synpred6_ActionTranslator_fragment()">1</method>
			<method name="public boolean alreadyParsedRule(org.antlr.runtime.IntStream input, int ruleIndex)">2</method>
			<method name="public final void mSET_TOKEN_SCOPE_ATTR()">1</method>
			<method name="public final void mID()">1</method>
			<method name="static org.antlr.runtime.RecognizerSharedState access$000(org.antlr.grammar.v3.ActionTranslator x0)">1</method>
			<method name="public final void mINT()">1</method>
			<method name="org.antlr.tool.AttributeScope resolveDynamicScope(String scopeName)">3</method>
			<method name="public final void mSET_RULE_SCOPE_ATTR()">1</method>
			<method name="public final void synpred1_ActionTranslator_fragment()">1</method>
			<method name="public final void synpred18_ActionTranslator_fragment()">1</method>
			<method name="public final void mSCOPE_INDEX_EXPR()">1</method>
			<method name="public final void synpred4_ActionTranslator_fragment()">1</method>
			<method name="public final boolean synpred10_ActionTranslator()">2</method>
			<method name="protected org.antlr.stringtemplate.StringTemplate template(String name)">1</method>
			<method name="public final void synpred16_ActionTranslator_fragment()">1</method>
			<method name="public final void mDYNAMIC_ABSOLUTE_INDEXED_SCOPE_ATTR()">1</method>
			<method name="public final void mINDIRECT_TEMPLATE_INSTANCE()">1</method>
			<method name="public final void mTEMPLATE_EXPR()">1</method>
			<method name="public final boolean synpred25_ActionTranslator()">2</method>
			<method name="public final void mTEXT()">1</method>
			<method name="public final void mERROR_XY()">1</method>
			<method name="public final void mSET_ENCLOSING_RULE_SCOPE_ATTR()">1</method>
			<method name="public final void mISOLATED_DYNAMIC_SCOPE()">1</method>
			<method name="public final boolean synpred20_ActionTranslator()">2</method>
			<method name="public final void synpred22_ActionTranslator_fragment()">1</method>
			<method name="public final void synpred17_ActionTranslator_fragment()">1</method>
			<method name="public final boolean synpred17_ActionTranslator()">2</method>
			<method name="public final boolean synpred18_ActionTranslator()">2</method>
			<method name="public final boolean synpred19_ActionTranslator()">2</method>
			<method name="public final void mTOKEN_SCOPE_ATTR()">1</method>
			<method name="public final boolean synpred15_ActionTranslator()">2</method>
			<method name="public org.antlr.runtime.Token nextToken()">3</method>
			<method name="public final boolean synpred16_ActionTranslator()">2</method>
			<method name="public final boolean synpred14_ActionTranslator()">2</method>
			<method name="public final boolean synpred13_ActionTranslator()">2</method>
			<method name="public final void mARG()">1</method>
			<method name="public final boolean synpred12_ActionTranslator()">2</method>
			<method name="public final void synpred5_ActionTranslator_fragment()">1</method>
			<method name="public void mTokens()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public final void synpred11_ActionTranslator_fragment()">1</method>
			<method name="public final void mSET_EXPR_ATTRIBUTE()">1</method>
			<method name="public final void synpred15_ActionTranslator_fragment()">1</method>
			<method name="public final void synpred20_ActionTranslator_fragment()">1</method>
			<method name="public void _init_(org.antlr.runtime.CharStream input, org.antlr.runtime.RecognizerSharedState state)">1</method>
			<method name="public final void synpred8_ActionTranslator_fragment()">1</method>
			<method name="public final void mATTR_VALUE_EXPR()">1</method>
			<method name="public final void synpred10_ActionTranslator_fragment()">1</method>
			<method name="public final void synpred25_ActionTranslator_fragment()">1</method>
			<method name="public org.antlr.tool.Attribute getRuleLabelAttribute(String ruleName, String attrName)">3</method>
			<method name="public final void synpred3_ActionTranslator_fragment()">1</method>
			<method name="public final boolean synpred26_ActionTranslator()">2</method>
			<method name="public void _init_(org.antlr.runtime.CharStream input)">1</method>
			<method name="public final void mSET_ATTRIBUTE()">1</method>
			<method name="public void _init_(org.antlr.codegen.CodeGenerator generator, String ruleName, antlr.Token actionToken, int outerAltNum)">1</method>
			<method name="public final void mENCLOSING_RULE_SCOPE_ATTR()">1</method>
			<method name="public final boolean synpred22_ActionTranslator()">2</method>
			<method name="public final void mWS()">1</method>
			<method name="public final void mISOLATED_TOKEN_REF()">1</method>
			<method name="public final void mDYNAMIC_SCOPE_ATTR()">1</method>
			<method name="public final void synpred21_ActionTranslator_fragment()">1</method>
			<method name="static void _clinit_()">3</method>
			<method name="public java.util.List translateAction(String action)">2</method>
			<method name="public final void synpred9_ActionTranslator_fragment()">1</method>
			<method name="public final void synpred24_ActionTranslator_fragment()">1</method>
			<method name="public final void synpred19_ActionTranslator_fragment()">1</method>
			<method name="public final void mUNKNOWN_SYNTAX()">1</method>
			<method name="public final void mERROR_X()">1</method>
			<method name="public java.util.List translateToChunks()">2</method>
			<method name="public final void mESC()">1</method>
			<method name="public void _init_(org.antlr.codegen.CodeGenerator generator, String ruleName, org.antlr.tool.GrammarAST actionAST)">1</method>
			<method name="public final void synpred7_ActionTranslator_fragment()">1</method>
			<method name="public String getGrammarFileName()">1</method>
			<method name="public final void synpred26_ActionTranslator_fragment()">1</method>
			<method name="public final void mSET_LOCAL_ATTR()">1</method>
			<method name="public final boolean synpred2_ActionTranslator()">2</method>
			<method name="public final boolean synpred3_ActionTranslator()">2</method>
			<method name="public final boolean synpred1_ActionTranslator()">2</method>
			<method name="public final void synpred2_ActionTranslator_fragment()">1</method>
			<method name="public final void mISOLATED_LEXER_RULE_REF()">1</method>
			<method name="public String translate()">2</method>
			<method name="public final void mLOCAL_ATTR()">1</method>
			<method name="public final void synpred14_ActionTranslator_fragment()">1</method>
			<method name="public void memoize(org.antlr.runtime.IntStream input, int ruleIndex, int ruleStartIndex)">2</method>
			<method name="public final void mDYNAMIC_NEGATIVE_INDEXED_SCOPE_ATTR()">1</method>
			<method name="public final boolean synpred6_ActionTranslator()">2</method>
			<method name="public final boolean synpred5_ActionTranslator()">2</method>
			<method name="public final boolean synpred4_ActionTranslator()">2</method>
			<method name="public final boolean synpred7_ActionTranslator()">2</method>
			<method name="public final boolean synpred9_ActionTranslator()">2</method>
			<method name="public final boolean synpred8_ActionTranslator()">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.Label</name>
		<wmc>22</wmc>
		<dit>1</dit>
		<noc>2</noc>
		<cbo>33</cbo>
		<rfc>44</rfc>
		<lcom>0</lcom>
		<ca>20</ca>
		<ce>13</ce>
		<npm>22</npm>
		<lcom3>0.9629629629629629</lcom3>
		<loc>438</loc>
		<dam>0.1111111111111111</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.24242424242424243</cam>
		<ic>1</ic>
		<cbm>1</cbm>
		<amc>18.09090909090909</amc>
		<cc>
			<method name="public org.antlr.analysis.SemanticContext getSemanticContext()">1</method>
			<method name="public static boolean intersect(org.antlr.analysis.Label label, org.antlr.analysis.Label edgeLabel)">13</method>
			<method name="public boolean matches(int atom)">3</method>
			<method name="public boolean isSemanticPredicate()">1</method>
			<method name="public boolean equals(Object o)">5</method>
			<method name="public void _init_(org.antlr.misc.IntSet labelSet)">3</method>
			<method name="public Object clone()">1</method>
			<method name="public int getAtom()">2</method>
			<method name="public org.antlr.misc.IntSet getSet()">2</method>
			<method name="public void setSet(org.antlr.misc.IntSet set)">1</method>
			<method name="public void add(org.antlr.analysis.Label a)">7</method>
			<method name="public boolean isAction()">1</method>
			<method name="public boolean matches(org.antlr.misc.IntSet set)">4</method>
			<method name="public String toString()">3</method>
			<method name="public int hashCode()">2</method>
			<method name="public int compareTo(Object o)">1</method>
			<method name="public String toString(org.antlr.tool.Grammar g)">3</method>
			<method name="public boolean matches(org.antlr.analysis.Label other)">3</method>
			<method name="public boolean isAtom()">2</method>
			<method name="public void _init_(int label)">1</method>
			<method name="public boolean isEpsilon()">2</method>
			<method name="public boolean isSet()">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.GrammarInsufficientPredicatesMessage</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>22</cbo>
		<rfc>24</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>21</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>117</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>56.0</amc>
		<cc>
			<method name="public String toString()">3</method>
			<method name="public void _init_(org.antlr.analysis.DecisionProbe probe, org.antlr.analysis.DFAState problemState, java.util.Map altToLocations)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$rewrite_tree_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.AnalysisTimeoutException</name>
		<wmc>1</wmc>
		<dit>4</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>4</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>8</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>1.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.0</amc>
		<cc>
			<method name="public void _init_(org.antlr.analysis.DFA abortedDFA)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$throwsSpec_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$rewrite_tree_block_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.NFA</name>
		<wmc>6</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>20</cbo>
		<rfc>10</rfc>
		<lcom>0</lcom>
		<ca>17</ca>
		<ce>6</ce>
		<npm>6</npm>
		<lcom3>0.85</lcom3>
		<loc>43</loc>
		<dam>0.25</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.3333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.5</amc>
		<cc>
			<method name="public org.antlr.tool.NFAFactory getFactory()">1</method>
			<method name="public void _init_(org.antlr.tool.Grammar g)">1</method>
			<method name="public void addState(org.antlr.analysis.NFAState state)">1</method>
			<method name="public int getNewNFAStateNumber()">1</method>
			<method name="public org.antlr.analysis.NFAState getState(int s)">1</method>
			<method name="public void setFactory(org.antlr.tool.NFAFactory factory)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.ANTLRErrorListener</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>4</rfc>
		<lcom>6</lcom>
		<ca>2</ca>
		<ce>5</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>4</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void error(org.antlr.tool.ToolMessage)">1</method>
			<method name="public abstract void warning(org.antlr.tool.Message)">1</method>
			<method name="public abstract void info(String)">1</method>
			<method name="public abstract void error(org.antlr.tool.Message)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.DFAOptimizer</name>
		<wmc>6</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>18</cbo>
		<rfc>28</rfc>
		<lcom>0</lcom>
		<ca>3</ca>
		<ce>15</ce>
		<npm>2</npm>
		<lcom3>0.6666666666666667</lcom3>
		<loc>210</loc>
		<dam>0.3333333333333333</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.45</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>33.0</amc>
		<cc>
			<method name="public void optimize()">2</method>
			<method name="public void _init_(org.antlr.tool.Grammar grammar)">1</method>
			<method name="protected void optimizeEOTBranches(org.antlr.analysis.DFAState d)">8</method>
			<method name="protected void optimize(org.antlr.analysis.DFA dfa)">10</method>
			<method name="protected void optimizeExitBranches(org.antlr.analysis.DFAState d)">5</method>
			<method name="static void _clinit_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$rewrite_template_arg_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$rewrite_indirect_template_head_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.codegen.ACyclicDFACodeGenerator</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>19</cbo>
		<rfc>30</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>19</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>278</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>91.33333333333333</amc>
		<cc>
			<method name="public org.antlr.stringtemplate.StringTemplate genFixedLookaheadDecision(org.antlr.stringtemplate.StringTemplateGroup templates, org.antlr.analysis.DFA dfa)">1</method>
			<method name="public void _init_(org.antlr.codegen.CodeGenerator parent)">1</method>
			<method name="protected org.antlr.stringtemplate.StringTemplate walkFixedDFAGeneratingStateMachine(org.antlr.stringtemplate.StringTemplateGroup templates, org.antlr.analysis.DFA dfa, org.antlr.analysis.DFAState s, int k)">15</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$id_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$range_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$attrScope_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$optionValue_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Strip$8</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>8</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>25</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.0</amc>
		<cc>
			<method name="void _init_(org.antlr.runtime.TokenRewriteStream)">1</method>
			<method name="public void visit(Object t)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Strip$7</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>7</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>25</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.0</amc>
		<cc>
			<method name="void _init_(org.antlr.runtime.TokenRewriteStream)">1</method>
			<method name="public void visit(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Strip$9</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>7</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>34</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>15.5</amc>
		<cc>
			<method name="void _init_(org.antlr.runtime.TokenRewriteStream)">1</method>
			<method name="public void visit(Object t)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$treeSpec_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Interpreter</name>
		<wmc>12</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>38</cbo>
		<rfc>79</rfc>
		<lcom>6</lcom>
		<ca>3</ca>
		<ce>37</ce>
		<npm>11</npm>
		<lcom3>0.2727272727272727</lcom3>
		<loc>645</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.2833333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>52.583333333333336</amc>
		<cc>
			<method name="public org.antlr.runtime.CommonToken scan(String startRule)">1</method>
			<method name="public int predict(org.antlr.analysis.DFA dfa)">6</method>
			<method name="public void reportScanError(org.antlr.runtime.RecognitionException re)">1</method>
			<method name="public org.antlr.runtime.Token nextToken()">5</method>
			<method name="public org.antlr.runtime.tree.ParseTree parse(String startRule)">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public void scan(String startRule, org.antlr.runtime.debug.DebugEventListener actions, java.util.List visitedStates)">1</method>
			<method name="public org.antlr.runtime.CommonToken scan(String startRule, java.util.List visitedStates)">1</method>
			<method name="public void _init_(org.antlr.tool.Grammar grammar, org.antlr.runtime.IntStream input)">1</method>
			<method name="protected void parseEngine(String startRule, org.antlr.analysis.NFAState start, org.antlr.analysis.NFAState stop, org.antlr.runtime.IntStream input, java.util.Stack ruleInvocationStack, org.antlr.runtime.debug.DebugEventListener actions, java.util.List visitedStates)">1</method>
			<method name="public void parse(String startRule, org.antlr.runtime.debug.DebugEventListener actions, java.util.List visitedStates)">1</method>
			<method name="public org.antlr.runtime.tree.ParseTree parse(String startRule, java.util.List visitedStates)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.Transition</name>
		<wmc>9</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>27</cbo>
		<rfc>23</rfc>
		<lcom>0</lcom>
		<ca>21</ca>
		<ce>7</ce>
		<npm>9</npm>
		<lcom3>0.25</lcom3>
		<loc>94</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.3333333333333333</cam>
		<ic>1</ic>
		<cbm>1</cbm>
		<amc>9.222222222222221</amc>
		<cc>
			<method name="public void _init_(org.antlr.analysis.Label label, org.antlr.analysis.State target)">1</method>
			<method name="public String toString()">1</method>
			<method name="public int hashCode()">1</method>
			<method name="public int compareTo(Object o)">1</method>
			<method name="public boolean isSemanticPredicate()">1</method>
			<method name="public boolean equals(Object o)">3</method>
			<method name="public void _init_(int label, org.antlr.analysis.State target)">1</method>
			<method name="public boolean isEpsilon()">1</method>
			<method name="public boolean isAction()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.FASerializer</name>
		<wmc>6</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>27</cbo>
		<rfc>43</rfc>
		<lcom>3</lcom>
		<ca>2</ca>
		<ce>27</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>381</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4166666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>61.833333333333336</amc>
		<cc>
			<method name="public String serialize(org.antlr.analysis.State s)">2</method>
			<method name="public void _init_(org.antlr.tool.Grammar grammar)">1</method>
			<method name="protected void walkSerializingFA(java.util.List lines, org.antlr.analysis.State s)">11</method>
			<method name="private String getStateString(int n, org.antlr.analysis.State s)">3</method>
			<method name="protected void walkFANormalizingStateNumbers(org.antlr.analysis.State s)">5</method>
			<method name="public String serialize(org.antlr.analysis.State s, boolean renumber)">4</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$rule_scope</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>5</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="protected void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Lexer</name>
		<wmc>66</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>20</cbo>
		<rfc>91</rfc>
		<lcom>0</lcom>
		<ca>5</ca>
		<ce>19</ce>
		<npm>65</npm>
		<lcom3>1.009602478058854</lcom3>
		<loc>4056</loc>
		<dam>0.026845637583892617</dam>
		<moa>4</moa>
		<mfa>0.0</mfa>
		<cam>0.3487179487179487</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>58.196969696969695</amc>
		<cc>
			<method name="public final void mBANG()">1</method>
			<method name="public final void mREWRITE()">1</method>
			<method name="public final void mCHAR_LITERAL()">1</method>
			<method name="public void _init_(org.antlr.runtime.CharStream input, org.antlr.runtime.RecognizerSharedState state)">1</method>
			<method name="public final void mT__81()">1</method>
			<method name="public final void mT__83()">1</method>
			<method name="public final void mT__85()">1</method>
			<method name="public final void mARG_ACTION()">1</method>
			<method name="public final void mT__87()">1</method>
			<method name="public final void mT__68()">1</method>
			<method name="public final void mT__89()">1</method>
			<method name="public void _init_(org.antlr.runtime.CharStream input)">1</method>
			<method name="public final void mXDIGIT()">1</method>
			<method name="public final void mACTION()">2</method>
			<method name="public final void mWS()">1</method>
			<method name="public final void mNESTED_ACTION()">1</method>
			<method name="public final void mT__90()">1</method>
			<method name="public final void mT__71()">1</method>
			<method name="public final void mSCOPE()">1</method>
			<method name="public final void mT__73()">1</method>
			<method name="public final void mOPTIONS()">1</method>
			<method name="public final void mT__75()">1</method>
			<method name="public final void mT__77()">1</method>
			<method name="public final void mINT()">1</method>
			<method name="public final void mT__79()">1</method>
			<method name="public final void mDOUBLE_ANGLE_STRING_LITERAL()">2</method>
			<method name="static void _clinit_()">5</method>
			<method name="public final void mLITERAL_CHAR()">1</method>
			<method name="public final void mACTION_CHAR_LITERAL()">1</method>
			<method name="public final void mSL_COMMENT()">2</method>
			<method name="public final void mSTRING_LITERAL()">2</method>
			<method name="public final void mDOUBLE_QUOTE_STRING_LITERAL()">1</method>
			<method name="public final void mSRC()">1</method>
			<method name="public final void mT__80()">1</method>
			<method name="public final void mT__82()">1</method>
			<method name="public final void mT__84()">1</method>
			<method name="public final void mT__86()">1</method>
			<method name="public final void mML_COMMENT()">2</method>
			<method name="public final void mT__88()">1</method>
			<method name="public final void mESC()">1</method>
			<method name="public final void mT__67()">1</method>
			<method name="public final void mTOKENS()">1</method>
			<method name="public final void mT__69()">1</method>
			<method name="public final void mACTION_STRING_LITERAL()">1</method>
			<method name="public final void mAT()">1</method>
			<method name="public String getGrammarFileName()">1</method>
			<method name="public final void mFRAGMENT()">1</method>
			<method name="public final void mNESTED_ARG_ACTION()">1</method>
			<method name="public final void mRULE_REF()">1</method>
			<method name="public final void mRANGE()">1</method>
			<method name="public final void mACTION_ESC()">1</method>
			<method name="public final void mT__91()">1</method>
			<method name="public final void mT__70()">1</method>
			<method name="public final void mROOT()">1</method>
			<method name="public final void mLABEL_ASSIGN()">1</method>
			<method name="public final void mT__72()">1</method>
			<method name="public final void mT__74()">1</method>
			<method name="public final void mT__76()">1</method>
			<method name="public final void mT__78()">1</method>
			<method name="public final void mTOKEN_REF()">1</method>
			<method name="public final void mTREE_BEGIN()">1</method>
			<method name="public final void mRET()">1</method>
			<method name="public final void mLIST_LABEL_ASSIGN()">1</method>
			<method name="public final void mWS_LOOP()">1</method>
			<method name="public void mTokens()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v2.TreeToNFAConverterTokenTypes</name>
		<wmc>0</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>3</cbo>
		<rfc>0</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>2</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>100</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
		</cc>
	</class>
	<class>
		<name>org.antlr.codegen.CPPTarget</name>
		<wmc>7</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>25</rfc>
		<lcom>21</lcom>
		<ca>0</ca>
		<ce>13</ce>
		<npm>6</npm>
		<lcom3>2.0</lcom3>
		<loc>188</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3877551020408163</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>25.857142857142858</amc>
		<cc>
			<method name="protected void genRecognizerHeaderFile(org.antlr.Tool tool, org.antlr.codegen.CodeGenerator generator, org.antlr.tool.Grammar grammar, org.antlr.stringtemplate.StringTemplate headerFileST, String extName)">1</method>
			<method name="public String escapeString(String s)">2</method>
			<method name="public String getTargetCharLiteralFromANTLRCharLiteral(org.antlr.codegen.CodeGenerator codegen, String literal)">3</method>
			<method name="public int getMaxCharValue(org.antlr.codegen.CodeGenerator codegen)">2</method>
			<method name="public String escapeChar(int c)">12</method>
			<method name="public void _init_()">1</method>
			<method name="public String getTargetStringLiteralFromANTLRStringLiteral(org.antlr.codegen.CodeGenerator codegen, String literal)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$option_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Strip$4</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>6</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>27</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.0</amc>
		<cc>
			<method name="void _init_(org.antlr.runtime.TokenRewriteStream)">1</method>
			<method name="public void visit(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Strip$3</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>7</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>30</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.5</amc>
		<cc>
			<method name="void _init_(org.antlr.runtime.TokenRewriteStream)">1</method>
			<method name="public void visit(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Strip$6</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>10</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>38</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.5</amc>
		<cc>
			<method name="void _init_(org.antlr.runtime.TokenRewriteStream)">1</method>
			<method name="public void visit(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$rule_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Strip$5</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>9</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>30</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.5</amc>
		<cc>
			<method name="void _init_(org.antlr.runtime.TokenRewriteStream)">1</method>
			<method name="public void visit(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$DFA46</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>38</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.5</amc>
		<cc>
			<method name="public String getDescription()">1</method>
			<method name="public void _init_(org.antlr.grammar.v3.ANTLRv3Parser, org.antlr.runtime.BaseRecognizer recognizer)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.misc.BitSet</name>
		<wmc>49</wmc>
		<dit>1</dit>
		<noc>2</noc>
		<cbo>30</cbo>
		<rfc>83</rfc>
		<lcom>420</lcom>
		<ca>6</ca>
		<ce>24</ce>
		<npm>45</npm>
		<lcom3>0.7864583333333334</lcom3>
		<loc>1167</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.11773940345368916</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>22.73469387755102</amc>
		<cc>
			<method name="public void notInPlace(int minBit, int maxBit)">2</method>
			<method name="public void notInPlace()">2</method>
			<method name="public int size()">5</method>
			<method name="public org.antlr.misc.IntSet complement()">1</method>
			<method name="public void orInPlace(org.antlr.misc.BitSet a)">4</method>
			<method name="public void _init_(long[] bits_)">1</method>
			<method name="public void clear(int el)">2</method>
			<method name="public org.antlr.misc.IntSet complement(org.antlr.misc.IntSet set)">2</method>
			<method name="public static org.antlr.misc.BitSet of(java.util.Map elements)">1</method>
			<method name="public static org.antlr.misc.BitSet of(java.util.Collection elements)">2</method>
			<method name="public void _init_(int nbits)">1</method>
			<method name="public org.antlr.misc.IntSet or(org.antlr.misc.IntSet a)">2</method>
			<method name="public boolean equals(Object other)">10</method>
			<method name="public org.antlr.misc.IntSet subtract(org.antlr.misc.IntSet a)">3</method>
			<method name="public void addAll(Iterable elements)">4</method>
			<method name="public String toStringOfHalfWords()">3</method>
			<method name="private void setSize(int nwords)">1</method>
			<method name="public int numBits()">1</method>
			<method name="public void notInPlace(int maxBit)">1</method>
			<method name="public int[] toArray()">3</method>
			<method name="public String toString(org.antlr.tool.Grammar g)">6</method>
			<method name="public void add(int el)">2</method>
			<method name="public boolean isNil()">3</method>
			<method name="private final int numWordsToHold(int el)">1</method>
			<method name="public boolean member(int el)">3</method>
			<method name="public void remove(int el)">2</method>
			<method name="public void addAll(org.antlr.misc.IntSet set)">3</method>
			<method name="public long[] toPackedArray()">1</method>
			<method name="private static final int wordNumber(int bit)">1</method>
			<method name="public Object clone()">1</method>
			<method name="public void clear()">2</method>
			<method name="public static org.antlr.misc.BitSet of(org.antlr.misc.IntSet set)">4</method>
			<method name="public String toString()">1</method>
			<method name="public static org.antlr.misc.BitSet of(int el)">1</method>
			<method name="public org.antlr.misc.IntSet and(org.antlr.misc.IntSet a)">1</method>
			<method name="public void growToInclude(int bit)">1</method>
			<method name="public String toString(String separator, java.util.List vocabulary)">7</method>
			<method name="public String toStringOfWords()">3</method>
			<method name="public static org.antlr.misc.BitSet range(int a, int b)">2</method>
			<method name="public String toStringWithRanges()">1</method>
			<method name="public int lengthInLongWords()">1</method>
			<method name="public int getSingleElement()">3</method>
			<method name="public void subtractInPlace(org.antlr.misc.BitSet a)">4</method>
			<method name="public java.util.List toList()">1</method>
			<method name="public void andInPlace(org.antlr.misc.BitSet a)">3</method>
			<method name="private static final long bitMask(int bitNumber)">1</method>
			<method name="public void addAll(int[] elements)">3</method>
			<method name="public boolean subset(org.antlr.misc.BitSet a)">2</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Strip$2</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>10</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>50</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>23.5</amc>
		<cc>
			<method name="void _init_(org.antlr.runtime.TokenRewriteStream)">1</method>
			<method name="public void visit(Object t)">4</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Strip$1</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>4</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>15</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.0</amc>
		<cc>
			<method name="void _init_(org.antlr.runtime.TokenRewriteStream)">1</method>
			<method name="public void visit(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.misc.IntSet</name>
		<wmc>15</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>25</cbo>
		<rfc>15</rfc>
		<lcom>105</lcom>
		<ca>21</ca>
		<ce>5</ce>
		<npm>15</npm>
		<lcom3>2.0</lcom3>
		<loc>15</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void addAll(org.antlr.misc.IntSet)">1</method>
			<method name="public abstract boolean equals(Object)">1</method>
			<method name="public abstract String toString(org.antlr.tool.Grammar)">1</method>
			<method name="public abstract org.antlr.misc.IntSet and(org.antlr.misc.IntSet)">1</method>
			<method name="public abstract java.util.List toList()">1</method>
			<method name="public abstract org.antlr.misc.IntSet complement(org.antlr.misc.IntSet)">1</method>
			<method name="public abstract org.antlr.misc.IntSet subtract(org.antlr.misc.IntSet)">1</method>
			<method name="public abstract org.antlr.misc.IntSet or(org.antlr.misc.IntSet)">1</method>
			<method name="public abstract int size()">1</method>
			<method name="public abstract void add(int)">1</method>
			<method name="public abstract void remove(int)">1</method>
			<method name="public abstract boolean isNil()">1</method>
			<method name="public abstract boolean member(int)">1</method>
			<method name="public abstract String toString()">1</method>
			<method name="public abstract int getSingleElement()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Rule$1</name>
		<wmc>1</wmc>
		<dit>4</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>20</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>1.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>19.0</amc>
		<cc>
			<method name="void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Strip$12</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>4</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>15</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.0</amc>
		<cc>
			<method name="void _init_(org.antlr.runtime.TokenRewriteStream)">1</method>
			<method name="public void visit(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Strip$13</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>4</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>15</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.0</amc>
		<cc>
			<method name="void _init_(org.antlr.runtime.TokenRewriteStream)">1</method>
			<method name="public void visit(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$rewrite_tree_alternative_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.RandomPhrase</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>30</cbo>
		<rfc>67</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>30</ce>
		<npm>2</npm>
		<lcom3>0.8333333333333334</lcom3>
		<loc>418</loc>
		<dam>0.5</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.25</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>103.0</amc>
		<cc>
			<method name="public static void main(String[] args)">9</method>
			<method name="public void _init_()">1</method>
			<method name="protected static void randomPhrase(org.antlr.tool.Grammar g, java.util.List tokenTypes, String startRule)">10</method>
			<method name="protected static Integer getTokenType(org.antlr.analysis.Label label)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Strip$10</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>6</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>30</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.5</amc>
		<cc>
			<method name="void _init_(org.antlr.runtime.TokenRewriteStream)">1</method>
			<method name="public void visit(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Strip$11</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>9</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>44</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>20.5</amc>
		<cc>
			<method name="void _init_(org.antlr.runtime.TokenRewriteStream)">1</method>
			<method name="public void visit(Object t)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$block_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$rewrite_tree_ebnf_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$element_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.misc.Utils</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>27</cbo>
		<rfc>13</rfc>
		<lcom>4</lcom>
		<ca>22</ca>
		<ce>5</ce>
		<npm>3</npm>
		<lcom3>1.0</lcom3>
		<loc>90</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>21.0</amc>
		<cc>
			<method name="public static Integer integer(int x)">4</method>
			<method name="public static String replace(String src, String replacee, String replacer)">3</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Strip</name>
		<wmc>6</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>37</cbo>
		<rfc>52</rfc>
		<lcom>15</lcom>
		<ca>7</ca>
		<ce>37</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>287</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>46.833333333333336</amc>
		<cc>
			<method name="public static void AST_SUFFIX(org.antlr.runtime.TokenRewriteStream tokens, org.antlr.runtime.tree.CommonTree t)">1</method>
			<method name="private static void killTrailingNewline(org.antlr.runtime.TokenRewriteStream tokens, int index)">6</method>
			<method name="public static void main(String[] args)">1</method>
			<method name="public static void ACTION(org.antlr.runtime.TokenRewriteStream tokens, org.antlr.runtime.tree.CommonTree t)">5</method>
			<method name="static void access$000(org.antlr.runtime.TokenRewriteStream x0, int x1)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ActionTranslator$DFA28</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>37</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>334</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>110.0</amc>
		<cc>
			<method name="public String getDescription()">1</method>
			<method name="public void _init_(org.antlr.grammar.v3.ActionTranslator, org.antlr.runtime.BaseRecognizer recognizer)">1</method>
			<method name="public int specialStateTransition(int s, org.antlr.runtime.IntStream _input)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.PredicateLabel</name>
		<wmc>8</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>16</rfc>
		<lcom>0</lcom>
		<ca>3</ca>
		<ce>9</ce>
		<npm>8</npm>
		<lcom3>0.14285714285714285</lcom3>
		<loc>71</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.3</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.75</amc>
		<cc>
			<method name="public void _init_(org.antlr.analysis.SemanticContext semCtx)">1</method>
			<method name="public org.antlr.analysis.SemanticContext getSemanticContext()">1</method>
			<method name="public String toString()">1</method>
			<method name="public int hashCode()">1</method>
			<method name="public String toString(org.antlr.tool.Grammar g)">1</method>
			<method name="public boolean equals(Object o)">4</method>
			<method name="public boolean isSemanticPredicate()">1</method>
			<method name="public void _init_(org.antlr.tool.GrammarAST predicateASTNode)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.codegen.CSharp2Target</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>9</rfc>
		<lcom>3</lcom>
		<ca>0</ca>
		<ce>10</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>45</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4444444444444444</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.0</amc>
		<cc>
			<method name="protected org.antlr.stringtemplate.StringTemplate chooseWhereCyclicDFAsGo(org.antlr.Tool tool, org.antlr.codegen.CodeGenerator generator, org.antlr.tool.Grammar grammar, org.antlr.stringtemplate.StringTemplate recognizerST, org.antlr.stringtemplate.StringTemplate cyclicDFAST)">1</method>
			<method name="public String encodeIntAsCharEscape(int v)">2</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ActionTranslator$DFA22</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>38</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.5</amc>
		<cc>
			<method name="public String getDescription()">1</method>
			<method name="public void _init_(org.antlr.grammar.v3.ActionTranslator, org.antlr.runtime.BaseRecognizer recognizer)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$tokenSpec_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.NFAFactory</name>
		<wmc>28</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>23</cbo>
		<rfc>74</rfc>
		<lcom>296</lcom>
		<ca>3</ca>
		<ce>22</ce>
		<npm>25</npm>
		<lcom3>0.18518518518518517</lcom3>
		<loc>1048</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.18506493506493507</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>36.357142857142854</amc>
		<cc>
			<method name="public org.antlr.analysis.StateCluster build_AlternativeBlockFromSet(org.antlr.analysis.StateCluster set)">2</method>
			<method name="public org.antlr.analysis.StateCluster build_SemanticPredicate(org.antlr.tool.GrammarAST pred)">2</method>
			<method name="public org.antlr.analysis.StateCluster build_Atom(org.antlr.tool.GrammarAST atomAST)">1</method>
			<method name="public org.antlr.analysis.StateCluster build_AB(org.antlr.analysis.StateCluster A, org.antlr.analysis.StateCluster B)">3</method>
			<method name="public org.antlr.analysis.StateCluster build_Aplus(org.antlr.analysis.StateCluster A)">2</method>
			<method name="public void setCurrentRule(org.antlr.tool.Rule currentRule)">1</method>
			<method name="public org.antlr.analysis.StateCluster build_CharLiteralAtom(org.antlr.tool.GrammarAST charLiteralAST)">1</method>
			<method name="public void _init_(org.antlr.analysis.NFA nfa)">1</method>
			<method name="private void build_EOFState(org.antlr.analysis.NFAState endNFAState)">2</method>
			<method name="public org.antlr.analysis.StateCluster build_Action(org.antlr.tool.GrammarAST action)">1</method>
			<method name="public org.antlr.analysis.NFAState newState()">1</method>
			<method name="protected org.antlr.misc.IntSet getCollapsedBlockAsSet(org.antlr.analysis.State blk)">6</method>
			<method name="public org.antlr.analysis.StateCluster build_WildcardTree(org.antlr.tool.GrammarAST associatedAST)">1</method>
			<method name="public org.antlr.analysis.StateCluster build_StringLiteralAtom(org.antlr.tool.GrammarAST stringLiteralAST)">3</method>
			<method name="public org.antlr.analysis.StateCluster build_Astar(org.antlr.analysis.StateCluster A)">2</method>
			<method name="public org.antlr.analysis.StateCluster build_Epsilon()">1</method>
			<method name="public org.antlr.analysis.StateCluster build_Aoptional(org.antlr.analysis.StateCluster A)">2</method>
			<method name="private void transitionBetweenStates(org.antlr.analysis.NFAState a, org.antlr.analysis.NFAState b, int label)">1</method>
			<method name="public org.antlr.tool.Rule getCurrentRule()">1</method>
			<method name="public org.antlr.analysis.StateCluster build_Set(org.antlr.misc.IntSet set, org.antlr.tool.GrammarAST associatedAST)">1</method>
			<method name="public org.antlr.analysis.StateCluster build_Range(int a, int b)">1</method>
			<method name="public org.antlr.analysis.StateCluster build_AlternativeBlock(java.util.List alternativeStateClusters)">6</method>
			<method name="public org.antlr.analysis.StateCluster build_Atom(int label, org.antlr.tool.GrammarAST associatedAST)">1</method>
			<method name="public void optimizeAlternative(org.antlr.analysis.StateCluster alt)">9</method>
			<method name="public org.antlr.analysis.StateCluster build_CharRange(String a, String b)">1</method>
			<method name="public org.antlr.analysis.StateCluster build_RuleRef(org.antlr.tool.Rule refDef, org.antlr.analysis.NFAState ruleStart)">1</method>
			<method name="public int build_EOFStates(java.util.List rules)">2</method>
			<method name="public org.antlr.analysis.StateCluster build_Wildcard(org.antlr.tool.GrammarAST associatedAST)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Lexer$DFA13</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>7</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>3</npm>
		<lcom3>1.0</lcom3>
		<loc>346</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>114.0</amc>
		<cc>
			<method name="public String getDescription()">1</method>
			<method name="public void _init_(org.antlr.grammar.v3.ANTLRv3Lexer, org.antlr.runtime.BaseRecognizer recognizer)">1</method>
			<method name="public int specialStateTransition(int s, org.antlr.runtime.IntStream _input)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.GrammarNonDeterminismMessage</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>18</cbo>
		<rfc>28</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>17</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>205</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>100.5</amc>
		<cc>
			<method name="public String toString()">8</method>
			<method name="public void _init_(org.antlr.analysis.DecisionProbe probe, org.antlr.analysis.DFAState problemState)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$action_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.NFAContext</name>
		<wmc>9</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>14</rfc>
		<lcom>2</lcom>
		<ca>4</ca>
		<ce>5</ce>
		<npm>7</npm>
		<lcom3>0.59375</lcom3>
		<loc>178</loc>
		<dam>0.25</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.35</cam>
		<ic>1</ic>
		<cbm>1</cbm>
		<amc>18.333333333333332</amc>
		<cc>
			<method name="public String toString()">2</method>
			<method name="public void _init_(org.antlr.analysis.NFAContext parent, org.antlr.analysis.NFAState invokingState)">3</method>
			<method name="public int hashCode()">1</method>
			<method name="public boolean equals(Object o)">8</method>
			<method name="public int recursionDepthEmanatingFromState(int state)">3</method>
			<method name="static void _clinit_()">1</method>
			<method name="public boolean conflictsWith(org.antlr.analysis.NFAContext other)">1</method>
			<method name="public boolean isEmpty()">2</method>
			<method name="protected boolean suffix(org.antlr.analysis.NFAContext other)">4</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$ebnf_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v2.AssignTokenTypesWalker</name>
		<wmc>41</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>22</cbo>
		<rfc>62</rfc>
		<lcom>166</lcom>
		<ca>2</ca>
		<ce>20</ce>
		<npm>29</npm>
		<lcom3>0.8785714285714287</lcom3>
		<loc>3806</loc>
		<dam>0.8571428571428571</dam>
		<moa>5</moa>
		<mfa>0.0</mfa>
		<cam>0.32916666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>91.65853658536585</amc>
		<cc>
			<method name="protected void alias(org.antlr.tool.GrammarAST t, org.antlr.tool.GrammarAST s)">1</method>
			<method name="protected void defineStringLiteralsFromDelegates()">1</method>
			<method name="public final void charSetElement(antlr.collections.AST _t)">1</method>
			<method name="public final void ebnf(antlr.collections.AST _t)">1</method>
			<method name="public final void grammarSpec(antlr.collections.AST _t)">1</method>
			<method name="protected void initASTPatterns()">1</method>
			<method name="public final void charSet(antlr.collections.AST _t)">1</method>
			<method name="public final void block(antlr.collections.AST _t)">1</method>
			<method name="public final void atom(antlr.collections.AST _t)">1</method>
			<method name="public final void ast_suffix(antlr.collections.AST _t)">1</method>
			<method name="protected void assignStringTypes(org.antlr.tool.Grammar root)">1</method>
			<method name="protected void trackToken(org.antlr.tool.GrammarAST t)">1</method>
			<method name="protected void trackString(org.antlr.tool.GrammarAST t)">1</method>
			<method name="public final void rules(antlr.collections.AST _t)">1</method>
			<method name="public final void tree(antlr.collections.AST _t)">1</method>
			<method name="public void reportError(antlr.RecognitionException ex)">3</method>
			<method name="public final void modifier(antlr.collections.AST _t)">1</method>
			<method name="public final void exceptionHandler(antlr.collections.AST _t)">1</method>
			<method name="public final void element(antlr.collections.AST _t)">1</method>
			<method name="public final java.util.Map optionsSpec(antlr.collections.AST _t)">1</method>
			<method name="protected void assignTokenIDTypes(org.antlr.tool.Grammar root)">1</method>
			<method name="public final Object optionValue(antlr.collections.AST _t)">1</method>
			<method name="public final void exceptionGroup(antlr.collections.AST _t)">1</method>
			<method name="public final void delegateGrammars(antlr.collections.AST _t)">1</method>
			<method name="public final void rule(antlr.collections.AST _t)">1</method>
			<method name="public final void attrScope(antlr.collections.AST _t)">1</method>
			<method name="public final void finallyClause(antlr.collections.AST _t)">1</method>
			<method name="protected void init(org.antlr.tool.Grammar root)">1</method>
			<method name="public final void tokensSpec(antlr.collections.AST _t)">1</method>
			<method name="protected void defineTokenNamesAndLiteralsInGrammar(org.antlr.tool.Grammar root)">1</method>
			<method name="public final void grammar(antlr.collections.AST _t, org.antlr.tool.Grammar g)">1</method>
			<method name="public final void alternative(antlr.collections.AST _t)">1</method>
			<method name="public final void tokenSpec(antlr.collections.AST _t)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void defineTokens(org.antlr.tool.Grammar root)">1</method>
			<method name="public final void option(antlr.collections.AST _t, java.util.Map opts)">1</method>
			<method name="protected void aliasTokenIDsAndLiterals(org.antlr.tool.Grammar root)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public final void rewrite(antlr.collections.AST _t)">1</method>
			<method name="protected void trackTokenRule(org.antlr.tool.GrammarAST t, org.antlr.tool.GrammarAST modifier, org.antlr.tool.GrammarAST block)">1</method>
			<method name="public final void ruleScopeSpec(antlr.collections.AST _t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v2.DefineGrammarItemsWalkerTokenTypes</name>
		<wmc>0</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>3</cbo>
		<rfc>0</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>2</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>100</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
		</cc>
	</class>
	<class>
		<name>org.antlr.codegen.CSharpTarget</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>9</rfc>
		<lcom>3</lcom>
		<ca>0</ca>
		<ce>10</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>45</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4444444444444444</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.0</amc>
		<cc>
			<method name="protected org.antlr.stringtemplate.StringTemplate chooseWhereCyclicDFAsGo(org.antlr.Tool tool, org.antlr.codegen.CodeGenerator generator, org.antlr.tool.Grammar grammar, org.antlr.stringtemplate.StringTemplate recognizerST, org.antlr.stringtemplate.StringTemplate cyclicDFAST)">1</method>
			<method name="public String encodeIntAsCharEscape(int v)">2</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.codegen.Perl5Target</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>18</rfc>
		<lcom>1</lcom>
		<ca>0</ca>
		<ce>12</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>140</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>45.666666666666664</amc>
		<cc>
			<method name="public String encodeIntAsCharEscape(int v)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public String getTargetCharLiteralFromANTLRCharLiteral(org.antlr.codegen.CodeGenerator generator, String literal)">7</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$altList_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v2.CodeGenTreeWalker</name>
		<wmc>45</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>44</cbo>
		<rfc>152</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>44</ce>
		<npm>39</npm>
		<lcom3>0.768939393939394</lcom3>
		<loc>7275</loc>
		<dam>0.9444444444444444</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.2128099173553719</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>160.26666666666668</amc>
		<cc>
			<method name="public final void exceptionHandler(antlr.collections.AST _t, org.antlr.stringtemplate.StringTemplate ruleST)">1</method>
			<method name="public final void grammarSpec(antlr.collections.AST _t)">1</method>
			<method name="public void reportError(String s)">1</method>
			<method name="public final void grammar(antlr.collections.AST _t, org.antlr.tool.Grammar g, org.antlr.stringtemplate.StringTemplate recognizerST, org.antlr.stringtemplate.StringTemplate outputFileST, org.antlr.stringtemplate.StringTemplate headerFileST)">1</method>
			<method name="public final org.antlr.stringtemplate.StringTemplate atom(antlr.collections.AST _t, org.antlr.tool.GrammarAST scope, org.antlr.tool.GrammarAST label, org.antlr.tool.GrammarAST astSuffix)">1</method>
			<method name="public final org.antlr.stringtemplate.StringTemplate rewrite_alternative(antlr.collections.AST _t)">1</method>
			<method name="public void setCurrentRuleName(String currentRuleName)">1</method>
			<method name="public final org.antlr.stringtemplate.StringTemplate setBlock(antlr.collections.AST _t)">1</method>
			<method name="public final org.antlr.stringtemplate.StringTemplate ebnf(antlr.collections.AST _t)">1</method>
			<method name="public final org.antlr.stringtemplate.StringTemplate rewrite_block(antlr.collections.AST _t, String blockTemplateName)">1</method>
			<method name="public final void rules(antlr.collections.AST _t, org.antlr.stringtemplate.StringTemplate recognizerST)">1</method>
			<method name="public final org.antlr.stringtemplate.StringTemplate block(antlr.collections.AST _t, String blockTemplateName, org.antlr.analysis.DFA dfa)">1</method>
			<method name="public final void exceptionGroup(antlr.collections.AST _t, org.antlr.stringtemplate.StringTemplate ruleST)">1</method>
			<method name="protected org.antlr.stringtemplate.StringTemplate getWildcardST(org.antlr.tool.GrammarAST elementAST, org.antlr.tool.GrammarAST ast_suffix, String label)">2</method>
			<method name="public final void ast_suffix(antlr.collections.AST _t)">1</method>
			<method name="public final org.antlr.stringtemplate.StringTemplate rewrite_atom(antlr.collections.AST _t, boolean isRoot)">1</method>
			<method name="public final org.antlr.stringtemplate.StringTemplate tree(antlr.collections.AST _t)">1</method>
			<method name="protected String getSTSuffix(org.antlr.tool.GrammarAST elementAST, org.antlr.tool.GrammarAST ast_suffix, String label)">9</method>
			<method name="public final void finallyClause(antlr.collections.AST _t, org.antlr.stringtemplate.StringTemplate ruleST)">1</method>
			<method name="public final org.antlr.stringtemplate.StringTemplate element_action(antlr.collections.AST _t)">1</method>
			<method name="public final org.antlr.stringtemplate.StringTemplate rewrite_tree(antlr.collections.AST _t)">1</method>
			<method name="public final org.antlr.stringtemplate.StringTemplate element(antlr.collections.AST _t, org.antlr.tool.GrammarAST label, org.antlr.tool.GrammarAST astSuffix)">1</method>
			<method name="public final org.antlr.stringtemplate.StringTemplate rewrite_ebnf(antlr.collections.AST _t)">1</method>
			<method name="public boolean isListLabel(String label)">7</method>
			<method name="public void reportError(antlr.RecognitionException ex)">3</method>
			<method name="public final void modifier(antlr.collections.AST _t)">1</method>
			<method name="protected org.antlr.stringtemplate.StringTemplate getRuleElementST(String name, String ruleTargetName, org.antlr.tool.GrammarAST elementAST, org.antlr.tool.GrammarAST ast_suffix, String label)">7</method>
			<method name="protected java.util.List getTokenTypesAsTargetLabels(java.util.Set refs)">6</method>
			<method name="public final org.antlr.stringtemplate.StringTemplate rewrite_element(antlr.collections.AST _t)">1</method>
			<method name="public int getOuterAltNum()">1</method>
			<method name="public final void attrScope(antlr.collections.AST _t)">1</method>
			<method name="public void setOuterAltNum(int outerAltNum)">1</method>
			<method name="protected org.antlr.stringtemplate.StringTemplate getTokenElementST(String name, String elementName, org.antlr.tool.GrammarAST elementAST, org.antlr.tool.GrammarAST ast_suffix, String label)">7</method>
			<method name="public final org.antlr.stringtemplate.StringTemplate rewrite(antlr.collections.AST _t)">1</method>
			<method name="public final org.antlr.stringtemplate.StringTemplate alternative(antlr.collections.AST _t)">1</method>
			<method name="public final org.antlr.stringtemplate.StringTemplate notElement(antlr.collections.AST _t, org.antlr.tool.GrammarAST n, org.antlr.tool.GrammarAST label, org.antlr.tool.GrammarAST astSuffix)">1</method>
			<method name="public final org.antlr.stringtemplate.StringTemplate set(antlr.collections.AST _t, org.antlr.tool.GrammarAST label, org.antlr.tool.GrammarAST astSuffix)">1</method>
			<method name="public final org.antlr.stringtemplate.StringTemplate rewrite_template(antlr.collections.AST _t)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public final org.antlr.stringtemplate.StringTemplate rule(antlr.collections.AST _t)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public final void setElement(antlr.collections.AST _t)">1</method>
			<method name="public String getCurrentRuleName()">1</method>
			<method name="public void init(org.antlr.tool.Grammar g)">1</method>
			<method name="public final void ruleScopeSpec(antlr.collections.AST _t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Lexer$DFA22</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>7</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>3</npm>
		<lcom3>1.0</lcom3>
		<loc>806</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>267.3333333333333</amc>
		<cc>
			<method name="public String getDescription()">1</method>
			<method name="public void _init_(org.antlr.grammar.v3.ANTLRv3Lexer, org.antlr.runtime.BaseRecognizer recognizer)">1</method>
			<method name="public int specialStateTransition(int s, org.antlr.runtime.IntStream _input)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Grammar$10</name>
		<wmc>1</wmc>
		<dit>4</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>8</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>1.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.0</amc>
		<cc>
			<method name="void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$elementNoOptionSpec_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.misc.Barrier</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>6</rfc>
		<lcom>1</lcom>
		<ca>2</ca>
		<ce>3</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>40</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.666666666666666</amc>
		<cc>
			<method name="public void _init_(int t)">1</method>
			<method name="public void action()">1</method>
			<method name="public synchronized void waitForRelease()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.AnalysisRecursionOverflowException</name>
		<wmc>1</wmc>
		<dit>4</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>5</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>12</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>1.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.0</amc>
		<cc>
			<method name="public void _init_(org.antlr.analysis.DFAState ovfState, org.antlr.analysis.NFAConfiguration proposedNFAConfiguration)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.LL1DFA</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>24</cbo>
		<rfc>32</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>24</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>297</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5416666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>73.25</amc>
		<cc>
			<method name="public void _init_(int decisionNumber, org.antlr.analysis.NFAState decisionStartState, org.antlr.analysis.LookaheadSet[] altLook)">2</method>
			<method name="public void _init_(int decisionNumber, org.antlr.analysis.NFAState decisionStartState, org.antlr.misc.MultiMap edgeMap)">5</method>
			<method name="protected org.antlr.analysis.SemanticContext$Predicate getSynPredForAlt(org.antlr.analysis.NFAState decisionStartState, int alt)">5</method>
			<method name="protected org.antlr.analysis.Label getLabelForSet(org.antlr.misc.IntervalSet edgeSet)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.ErrorManager</name>
		<wmc>52</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>82</cbo>
		<rfc>126</rfc>
		<lcom>1234</lcom>
		<ca>30</ca>
		<ce>59</ce>
		<npm>45</npm>
		<lcom3>0.9970501474926254</lcom3>
		<loc>1419</loc>
		<dam>0.07079646017699115</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.08304498269896193</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>24.115384615384617</amc>
		<cc>
			<method name="public static void removeErrorListener()">1</method>
			<method name="public static void warning(int msgID, Object arg)">1</method>
			<method name="public static void setLocale(java.util.Locale locale)">11</method>
			<method name="public static void error(int msgID, Throwable e)">1</method>
			<method name="public static org.antlr.tool.ErrorManager$ErrorState getErrorState()">2</method>
			<method name="public static org.antlr.tool.ANTLRErrorListener getErrorListener()">2</method>
			<method name="protected static boolean verifyFormat()">4</method>
			<method name="public static void setErrorListener(org.antlr.tool.ANTLRErrorListener listener)">1</method>
			<method name="public static void analysisAborted(org.antlr.analysis.DecisionProbe probe)">1</method>
			<method name="public static org.antlr.stringtemplate.StringTemplate getMessage(int msgID)">1</method>
			<method name="public static boolean formatWantsSingleLineMessage()">1</method>
			<method name="public static org.antlr.stringtemplate.StringTemplate getLocationFormat()">1</method>
			<method name="public static void nondeterminism(org.antlr.analysis.DecisionProbe probe, org.antlr.analysis.DFAState d)">1</method>
			<method name="public static void error(int msgID, Object arg)">1</method>
			<method name="public static boolean doNotAttemptAnalysis()">2</method>
			<method name="public static void setTool(org.antlr.Tool tool)">1</method>
			<method name="static void rawError(String msg, Throwable e)">1</method>
			<method name="public static void grammarError(int msgID, org.antlr.tool.Grammar g, antlr.Token token, Object arg)">1</method>
			<method name="public static void info(String msg)">1</method>
			<method name="public static void grammarWarning(int msgID, org.antlr.tool.Grammar g, antlr.Token token)">1</method>
			<method name="public static void unreachableAlts(org.antlr.analysis.DecisionProbe probe, java.util.List alts)">1</method>
			<method name="public static org.antlr.stringtemplate.StringTemplate getReportFormat()">1</method>
			<method name="public static void grammarWarning(int msgID, org.antlr.tool.Grammar g, antlr.Token token, Object arg)">1</method>
			<method name="public static void recursionOverflow(org.antlr.analysis.DecisionProbe probe, org.antlr.analysis.DFAState sampleBadState, int alt, java.util.Collection targetRules, java.util.Collection callSiteStates)">1</method>
			<method name="public static org.antlr.stringtemplate.StringTemplateErrorListener getStringTemplateErrorListener()">1</method>
			<method name="public static void setFormat(String formatName)">8</method>
			<method name="public static void error(int msgID, Object arg, Throwable e)">1</method>
			<method name="public static void assertTrue(boolean condition, String message)">2</method>
			<method name="static void _clinit_()">1</method>
			<method name="public static void grammarError(int msgID, org.antlr.tool.Grammar g, antlr.Token token)">1</method>
			<method name="protected static boolean initIdToMessageNameMapping()">5</method>
			<method name="public static void nonLLStarDecision(org.antlr.analysis.DecisionProbe probe)">1</method>
			<method name="public static void leftRecursionCycles(java.util.Collection cycles)">1</method>
			<method name="public static void syntaxError(int msgID, org.antlr.tool.Grammar grammar, antlr.Token token, Object arg, antlr.RecognitionException re)">1</method>
			<method name="public static String getMessageType(int msgID)">3</method>
			<method name="private static StackTraceElement getLastNonErrorManagerCodeLocation(Throwable e)">3</method>
			<method name="public static void error(int msgID)">1</method>
			<method name="public static void panic()">2</method>
			<method name="public static int getNumErrors()">1</method>
			<method name="public static void insufficientPredicates(org.antlr.analysis.DecisionProbe probe, org.antlr.analysis.DFAState d, java.util.Map altToUncoveredLocations)">1</method>
			<method name="protected static boolean verifyMessages()">6</method>
			<method name="public static void internalError(Object error, Throwable e)">1</method>
			<method name="public static void grammarError(int msgID, org.antlr.tool.Grammar g, antlr.Token token, Object arg, Object arg2)">1</method>
			<method name="public static void danglingState(org.antlr.analysis.DecisionProbe probe, org.antlr.analysis.DFAState d)">2</method>
			<method name="public static void error(int msgID, Object arg, Object arg2)">1</method>
			<method name="public static org.antlr.stringtemplate.StringTemplate getMessageFormat()">1</method>
			<method name="public static boolean doNotAttemptCodeGen()">3</method>
			<method name="public static void grammarWarning(int msgID, org.antlr.tool.Grammar g, antlr.Token token, Object arg, Object arg2)">1</method>
			<method name="public static void resetErrorState()">1</method>
			<method name="static void rawError(String msg)">1</method>
			<method name="public static void internalError(Object error)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$actionScopeName_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$notSet_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$grammarDef_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>2</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.SemanticContext$AND</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>18</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>6</npm>
		<lcom3>0.0</lcom3>
		<loc>111</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.3055555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.166666666666668</amc>
		<cc>
			<method name="public boolean isSyntacticPredicate()">3</method>
			<method name="public String toString()">1</method>
			<method name="public void _init_(org.antlr.analysis.SemanticContext a, org.antlr.analysis.SemanticContext b)">1</method>
			<method name="public void trackUseOfSyntacticPredicates(org.antlr.tool.Grammar g)">1</method>
			<method name="public org.antlr.analysis.SemanticContext getGatedPredicateContext()">3</method>
			<method name="public org.antlr.stringtemplate.StringTemplate genExpr(org.antlr.codegen.CodeGenerator generator, org.antlr.stringtemplate.StringTemplateGroup templates, org.antlr.analysis.DFA dfa)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.LL1Analyzer</name>
		<wmc>9</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>24</cbo>
		<rfc>41</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>24</ce>
		<npm>6</npm>
		<lcom3>0.6964285714285714</lcom3>
		<loc>553</loc>
		<dam>0.14285714285714285</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>59.666666666666664</amc>
		<cc>
			<method name="public org.antlr.analysis.SemanticContext getPredicates(org.antlr.analysis.NFAState altStartState)">1</method>
			<method name="public org.antlr.analysis.LookaheadSet LOOK(org.antlr.analysis.NFAState s)">7</method>
			<method name="protected int _detectConfoundingPredicates(org.antlr.analysis.NFAState s, org.antlr.tool.Rule enclosingRule, boolean chaseFollowTransitions)">16</method>
			<method name="public void _init_(org.antlr.tool.Grammar grammar)">1</method>
			<method name="protected org.antlr.analysis.LookaheadSet _FIRST(org.antlr.analysis.NFAState s, boolean chaseFollowTransitions)">18</method>
			<method name="public org.antlr.analysis.LookaheadSet FIRST(org.antlr.analysis.NFAState s)">1</method>
			<method name="public org.antlr.analysis.LookaheadSet FOLLOW(org.antlr.tool.Rule r)">2</method>
			<method name="public boolean detectConfoundingPredicates(org.antlr.analysis.NFAState s)">2</method>
			<method name="protected org.antlr.analysis.SemanticContext _getPredicates(org.antlr.analysis.NFAState s, org.antlr.analysis.NFAState altStartState)">10</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.NFAConversionThread</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>8</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>54</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>24.0</amc>
		<cc>
			<method name="public void _init_(org.antlr.tool.Grammar grammar, org.antlr.misc.Barrier barrier, int i, int j)">1</method>
			<method name="public void run()">3</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.State</name>
		<wmc>6</wmc>
		<dit>1</dit>
		<noc>2</noc>
		<cbo>24</cbo>
		<rfc>7</rfc>
		<lcom>9</lcom>
		<ca>22</ca>
		<ce>3</ce>
		<npm>6</npm>
		<lcom3>0.9333333333333333</lcom3>
		<loc>25</loc>
		<dam>0.3333333333333333</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>2.6666666666666665</amc>
		<cc>
			<method name="public abstract org.antlr.analysis.Transition transition(int)">1</method>
			<method name="public abstract void addTransition(org.antlr.analysis.Transition)">1</method>
			<method name="public boolean isAcceptState()">1</method>
			<method name="public abstract int getNumberOfTransitions()">1</method>
			<method name="public void setAcceptState(boolean acceptState)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v2.ANTLRLexer</name>
		<wmc>66</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>29</cbo>
		<rfc>119</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>29</ce>
		<npm>42</npm>
		<lcom3>0.9507692307692307</lcom3>
		<loc>4681</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.28205128205128205</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>69.77272727272727</amc>
		<cc>
			<method name="public final void mCHAR_LITERAL(boolean _createToken)">1</method>
			<method name="public antlr.Token nextToken()">1</method>
			<method name="protected final void mXDIGIT(boolean _createToken)">1</method>
			<method name="protected final void mDIGIT(boolean _createToken)">1</method>
			<method name="private static final long[] mk_tokenSet_1()">2</method>
			<method name="public final void mRANGE(boolean _createToken)">1</method>
			<method name="private static final long[] mk_tokenSet_5()">2</method>
			<method name="public final void mINT(boolean _createToken)">1</method>
			<method name="public final void mRULE_REF(boolean _createToken)">1</method>
			<method name="private static final long[] mk_tokenSet_3()">2</method>
			<method name="protected final void mNESTED_ARG_ACTION(boolean _createToken)">1</method>
			<method name="protected final int mINTERNAL_RULE_REF(boolean _createToken)">1</method>
			<method name="protected final void mWS_OPT(boolean _createToken)">1</method>
			<method name="public final void mARG_ACTION(boolean _createToken)">1</method>
			<method name="public final void mQUESTION(boolean _createToken)">1</method>
			<method name="protected final void mACTION_CHAR_LITERAL(boolean _createToken)">1</method>
			<method name="public final void mDOLLAR(boolean _createToken)">1</method>
			<method name="protected final void mWS_LOOP(boolean _createToken)">1</method>
			<method name="public void _init_(java.io.Reader in)">1</method>
			<method name="public final void mBANG(boolean _createToken)">1</method>
			<method name="private static final long[] mk_tokenSet_7()">2</method>
			<method name="public final void mCOMMENT(boolean _createToken)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="protected final void mSL_COMMENT(boolean _createToken)">1</method>
			<method name="public final void mTOKEN_REF(boolean _createToken)">1</method>
			<method name="protected final void mACTION_ESC(boolean _createToken)">1</method>
			<method name="public final void mRPAREN(boolean _createToken)">1</method>
			<method name="private static final long[] mk_tokenSet_2()">1</method>
			<method name="public final void mOR(boolean _createToken)">1</method>
			<method name="private static final long[] mk_tokenSet_0()">2</method>
			<method name="public void _init_(java.io.InputStream in)">1</method>
			<method name="private static final long[] mk_tokenSet_6()">2</method>
			<method name="public void _init_(antlr.InputBuffer ib)">1</method>
			<method name="private static final long[] mk_tokenSet_4()">2</method>
			<method name="public final void mWS(boolean _createToken)">1</method>
			<method name="public void _init_(antlr.LexerSharedInputState state)">1</method>
			<method name="public final void mSTAR(boolean _createToken)">1</method>
			<method name="public final void mROOT(boolean _createToken)">1</method>
			<method name="public final void mCOMMA(boolean _createToken)">1</method>
			<method name="public final void mRCURLY(boolean _createToken)">1</method>
			<method name="public final void mWILDCARD(boolean _createToken)">1</method>
			<method name="protected final void mESC(boolean _createToken)">1</method>
			<method name="protected final void mML_COMMENT(boolean _createToken)">1</method>
			<method name="public final void mDOUBLE_QUOTE_STRING_LITERAL(boolean _createToken)">1</method>
			<method name="public final void mCLOSE_ELEMENT_OPTION(boolean _createToken)">1</method>
			<method name="public final void mACTION(boolean _createToken)">1</method>
			<method name="public final void mASSIGN(boolean _createToken)">1</method>
			<method name="public final void mTREE_BEGIN(boolean _createToken)">1</method>
			<method name="public final void mPLUS(boolean _createToken)">1</method>
			<method name="public final void mLPAREN(boolean _createToken)">1</method>
			<method name="public void tab()">1</method>
			<method name="public final void mETC(boolean _createToken)">1</method>
			<method name="public final void mOPEN_ELEMENT_OPTION(boolean _createToken)">1</method>
			<method name="public final void mPLUS_ASSIGN(boolean _createToken)">1</method>
			<method name="public final void mCOLON(boolean _createToken)">1</method>
			<method name="protected final void mSRC(boolean _createToken)">1</method>
			<method name="public final void mSEMI(boolean _createToken)">1</method>
			<method name="private static final long[] mk_tokenSet_8()">1</method>
			<method name="public final void mIMPLIES(boolean _createToken)">1</method>
			<method name="public final void mNOT(boolean _createToken)">1</method>
			<method name="public final void mDOUBLE_ANGLE_STRING_LITERAL(boolean _createToken)">1</method>
			<method name="public final void mAMPERSAND(boolean _createToken)">1</method>
			<method name="public final void mSTRAY_BRACKET(boolean _createToken)">1</method>
			<method name="public final void mREWRITE(boolean _createToken)">1</method>
			<method name="protected final void mACTION_STRING_LITERAL(boolean _createToken)">1</method>
			<method name="protected final void mNESTED_ACTION(boolean _createToken)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.GrammarDanglingStateMessage</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>17</cbo>
		<rfc>16</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>16</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>77</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>36.5</amc>
		<cc>
			<method name="public String toString()">2</method>
			<method name="public void _init_(org.antlr.analysis.DecisionProbe probe, org.antlr.analysis.DFAState problemState)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.misc.IntArrayList</name>
		<wmc>16</wmc>
		<dit>3</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>24</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>10</ce>
		<npm>15</npm>
		<lcom3>0.4444444444444444</lcom3>
		<loc>259</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.7083333333333334</mfa>
		<cam>0.5208333333333334</cam>
		<ic>2</ic>
		<cbm>6</cbm>
		<amc>15.0</amc>
		<cc>
			<method name="public Object get(int i)">1</method>
			<method name="public int element(int i)">1</method>
			<method name="public void _init_(int initialCapacity)">1</method>
			<method name="public boolean equals(Object o)">5</method>
			<method name="public int capacity()">1</method>
			<method name="public Object clone()">1</method>
			<method name="public boolean add(int o)">2</method>
			<method name="public int size()">1</method>
			<method name="protected void grow()">1</method>
			<method name="public int[] elements()">1</method>
			<method name="public String toString()">3</method>
			<method name="public void ensureCapacity(int newCapacity)">2</method>
			<method name="public int set(int i, int newValue)">2</method>
			<method name="public void setSize(int newSize)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public boolean contains(int v)">3</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v2.CodeGenTreeWalkerTokenTypes</name>
		<wmc>0</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>3</cbo>
		<rfc>0</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>2</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>100</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Tree</name>
		<wmc>48</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>16</cbo>
		<rfc>66</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>16</ce>
		<npm>47</npm>
		<lcom3>0.9738297872340426</lcom3>
		<loc>7810</loc>
		<dam>0.006666666666666667</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.3546099290780142</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>155.45833333333334</amc>
		<cc>
			<method name="public final void tokensSpec()">1</method>
			<method name="public final void rewrite_alternative()">1</method>
			<method name="public final void rewrite()">2</method>
			<method name="public final void optionValue()">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeNodeStream input, org.antlr.runtime.RecognizerSharedState state)">1</method>
			<method name="public final void rewrite_tree_alternative()">1</method>
			<method name="public final void rewrite_tree_ebnf()">1</method>
			<method name="public final void tokenSpec()">1</method>
			<method name="public final void altList()">1</method>
			<method name="public final void elementNoOptionSpec()">1</method>
			<method name="public final void rewrite_template()">1</method>
			<method name="public final void action()">3</method>
			<method name="public final void option()">1</method>
			<method name="public final void rewrite_indirect_template_head()">1</method>
			<method name="public final void attrScope()">1</method>
			<method name="public final void notSet()">3</method>
			<method name="public final void rewrite_template_arg()">1</method>
			<method name="public final void treeSpec()">1</method>
			<method name="public final void ebnfSuffix()">1</method>
			<method name="public String getGrammarFileName()">1</method>
			<method name="public final void notTerminal()">1</method>
			<method name="public final void grammarType()">1</method>
			<method name="public final void rewrite_tree()">2</method>
			<method name="public final void ruleAction()">1</method>
			<method name="public final void ruleScopeSpec()">1</method>
			<method name="public final void ebnf()">7</method>
			<method name="public final void rewrite_template_args()">1</method>
			<method name="public final void rewrite_tree_block()">1</method>
			<method name="public final void rewrite_tree_atom()">1</method>
			<method name="public final void exceptionGroup()">2</method>
			<method name="public final void throwsSpec()">1</method>
			<method name="public final void atom()">1</method>
			<method name="public final void rewrite_tree_element()">1</method>
			<method name="public final void range()">1</method>
			<method name="public final void alternative()">1</method>
			<method name="public final void finallyClause()">1</method>
			<method name="public final void block()">1</method>
			<method name="public final void modifier()">1</method>
			<method name="public final void element()">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeNodeStream input)">1</method>
			<method name="public final void rule()">2</method>
			<method name="public final void optionsSpec()">1</method>
			<method name="static void _clinit_()">3</method>
			<method name="public final void exceptionHandler()">1</method>
			<method name="public final void terminal()">1</method>
			<method name="public final void grammarDef()">1</method>
			<method name="public String[] getTokenNames()">1</method>
			<method name="public final void rewrite_template_ref()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.codegen.JavaScriptTarget</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>16</rfc>
		<lcom>6</lcom>
		<ca>0</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>80</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>19.0</amc>
		<cc>
			<method name="public String encodeIntAsCharEscape(int v)">1</method>
			<method name="public String getTarget64BitStringFromValue(long word)">1</method>
			<method name="public void _init_()">1</method>
			<method name="private void writeHexWithPadding(StringBuffer buf, String digits)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$tokensSpec_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$ruleScopeSpec_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v2.ANTLRTokenTypes</name>
		<wmc>0</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>0</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>2</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>100</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$exceptionGroup_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.GrammarSanity</name>
		<wmc>8</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>22</cbo>
		<rfc>33</rfc>
		<lcom>8</lcom>
		<ca>2</ca>
		<ce>22</ce>
		<npm>4</npm>
		<lcom3>0.5714285714285714</lcom3>
		<loc>426</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.2777777777777778</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>52.0</amc>
		<cc>
			<method name="public void checkRuleReference(org.antlr.tool.GrammarAST scopeAST, org.antlr.tool.GrammarAST refAST, org.antlr.tool.GrammarAST argsAST, String currentRuleName)">15</method>
			<method name="public java.util.List checkAllRulesForLeftRecursion()">4</method>
			<method name="protected boolean traceStatesLookingForLeftRecursion(org.antlr.analysis.NFAState s, java.util.Set visitedStates, java.util.List listOfRecursiveCycles)">8</method>
			<method name="public void _init_(org.antlr.tool.Grammar grammar)">1</method>
			<method name="public void ensureAltIsSimpleNodeOrTree(org.antlr.tool.GrammarAST altAST, org.antlr.tool.GrammarAST elementAST, int outerAltNum)">12</method>
			<method name="protected boolean isNextNonActionElementEOA(org.antlr.tool.GrammarAST t)">4</method>
			<method name="protected void addRulesToCycle(org.antlr.tool.Rule targetRule, org.antlr.tool.Rule enclosingRule, java.util.List listOfRecursiveCycles)">5</method>
			<method name="protected boolean isValidSimpleElementNode(org.antlr.tool.GrammarAST t)">7</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$optionsSpec_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.NameSpaceChecker</name>
		<wmc>9</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>20</cbo>
		<rfc>47</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>20</ce>
		<npm>4</npm>
		<lcom3>0.0</lcom3>
		<loc>543</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.31746031746031744</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>59.22222222222222</amc>
		<cc>
			<method name="protected void checkForRuleArgumentAndReturnValueConflicts(org.antlr.tool.Rule r)">4</method>
			<method name="protected void lookForReferencesToUndefinedSymbols()">8</method>
			<method name="public boolean checkForLabelTypeMismatch(org.antlr.tool.Rule r, antlr.Token label, int type)">3</method>
			<method name="public void _init_(org.antlr.tool.Grammar grammar)">1</method>
			<method name="public void checkForRuleScopeAttributeConflict(org.antlr.tool.Rule r, org.antlr.tool.Attribute attribute)">7</method>
			<method name="public void checkConflicts()">8</method>
			<method name="protected void checkForGlobalScopeTokenConflict(org.antlr.tool.AttributeScope scope)">2</method>
			<method name="protected void checkForLabelConflict(org.antlr.tool.Rule r, antlr.Token label)">11</method>
			<method name="protected void checkForRuleDefinitionProblems(org.antlr.tool.Rule r)">9</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$finallyClause_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Tree$DFA31</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>38</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.5</amc>
		<cc>
			<method name="public String getDescription()">1</method>
			<method name="public void _init_(org.antlr.grammar.v3.ANTLRv3Tree, org.antlr.runtime.BaseRecognizer recognizer)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.SemanticContext$Predicate</name>
		<wmc>10</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>17</cbo>
		<rfc>22</rfc>
		<lcom>0</lcom>
		<ca>5</ca>
		<ce>13</ce>
		<npm>10</npm>
		<lcom3>0.7777777777777778</lcom3>
		<loc>237</loc>
		<dam>0.42857142857142855</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.2125</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>22.0</amc>
		<cc>
			<method name="public boolean isSyntacticPredicate()">4</method>
			<method name="public String toString()">2</method>
			<method name="public int hashCode()">2</method>
			<method name="public void _init_(org.antlr.analysis.SemanticContext$Predicate p)">1</method>
			<method name="public boolean equals(Object o)">2</method>
			<method name="public void _init_(org.antlr.tool.GrammarAST predicate)">5</method>
			<method name="public void trackUseOfSyntacticPredicates(org.antlr.tool.Grammar g)">2</method>
			<method name="public org.antlr.analysis.SemanticContext getGatedPredicateContext()">2</method>
			<method name="public void _init_()">1</method>
			<method name="public org.antlr.stringtemplate.StringTemplate genExpr(org.antlr.codegen.CodeGenerator generator, org.antlr.stringtemplate.StringTemplateGroup templates, org.antlr.analysis.DFA dfa)">4</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.BuildDependencyGenerator</name>
		<wmc>6</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>27</cbo>
		<rfc>53</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>27</ce>
		<npm>6</npm>
		<lcom3>0.5599999999999999</lcom3>
		<loc>509</loc>
		<dam>1.0</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>83.0</amc>
		<cc>
			<method name="public void _init_(org.antlr.Tool tool, String grammarFileName)">1</method>
			<method name="public java.util.List getDependenciesFileList()">4</method>
			<method name="public org.antlr.stringtemplate.StringTemplate getDependencies()">1</method>
			<method name="public java.util.List getGeneratedFileList()">8</method>
			<method name="public String groomQualifiedFileName(String outputDir, String fileName)">3</method>
			<method name="public void loadDependencyTemplates()">7</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.LeftRecursionCyclesMessage</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>6</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>22</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.5</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_(java.util.Collection cycles)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$ruleAction_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.RuleLabelScope</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>11</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>12</ce>
		<npm>2</npm>
		<lcom3>0.8</lcom3>
		<loc>92</loc>
		<dam>0.0</dam>
		<moa>5</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>28.0</amc>
		<cc>
			<method name="static void _clinit_()">1</method>
			<method name="public org.antlr.tool.Attribute getAttribute(String name)">3</method>
			<method name="public void _init_(org.antlr.tool.Rule referencedRule, antlr.Token actionToken)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.NFAToDFAConverter</name>
		<wmc>25</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>48</cbo>
		<rfc>136</rfc>
		<lcom>50</lcom>
		<ca>5</ca>
		<ce>46</ce>
		<npm>8</npm>
		<lcom3>0.7708333333333334</lcom3>
		<loc>1946</loc>
		<dam>0.6666666666666666</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.19791666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>76.6</amc>
		<cc>
			<method name="public void convert()">7</method>
			<method name="public static int max(java.util.Set s)">4</method>
			<method name="public void closure(org.antlr.analysis.DFAState d)">4</method>
			<method name="protected org.antlr.analysis.DFAState convertToAcceptState(org.antlr.analysis.DFAState d, int alt)">11</method>
			<method name="public void _init_(org.antlr.analysis.DFA dfa)">1</method>
			<method name="protected static int addTransition(org.antlr.analysis.DFAState d, org.antlr.analysis.Label label, org.antlr.analysis.DFAState targetState, java.util.Map targetToLabelMap)">4</method>
			<method name="protected static int getMinAlt(java.util.Set nondeterministicAlts)">2</method>
			<method name="protected void addPredicateTransitions(org.antlr.analysis.DFAState d)">6</method>
			<method name="protected void initContextTrees(int numberOfAlts)">2</method>
			<method name="public void closure(org.antlr.analysis.NFAState p, int alt, org.antlr.analysis.NFAContext context, org.antlr.analysis.SemanticContext semanticContext, org.antlr.analysis.DFAState d, boolean collectPredicates)">27</method>
			<method name="protected void convertToEOTAcceptState(org.antlr.analysis.DFAState d)">5</method>
			<method name="protected static void turnOffOtherAlts(org.antlr.analysis.DFAState d, int min, java.util.Set nondeterministicAlts)">5</method>
			<method name="public static boolean closureIsBusy(org.antlr.analysis.DFAState d, org.antlr.analysis.NFAConfiguration proposedNFAConfiguration)">1</method>
			<method name="protected int resolveByPickingMinAlt(org.antlr.analysis.DFAState d, java.util.Set nondeterministicAlts)">2</method>
			<method name="public org.antlr.analysis.DFAState reach(org.antlr.analysis.DFAState d, org.antlr.analysis.Label label)">10</method>
			<method name="protected static org.antlr.analysis.SemanticContext getUnionOfPredicates(java.util.Map altToPredMap)">3</method>
			<method name="public void resolveNonDeterminisms(org.antlr.analysis.DFAState d)">14</method>
			<method name="protected int resolveByChoosingFirstAlt(org.antlr.analysis.DFAState d, java.util.Set nondeterministicAlts)">3</method>
			<method name="protected void findNewDFAStatesAndAddDFATransitions(org.antlr.analysis.DFAState d)">13</method>
			<method name="protected int resolveByPickingExitAlt(org.antlr.analysis.DFAState d, java.util.Set nondeterministicAlts)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="protected org.antlr.analysis.DFAState addDFAStateToWorkList(org.antlr.analysis.DFAState d)">3</method>
			<method name="protected boolean tryToResolveWithSemanticPredicates(org.antlr.analysis.DFAState d, java.util.Set nondeterministicAlts)">14</method>
			<method name="protected org.antlr.analysis.DFAState computeStartState()">5</method>
			<method name="protected java.util.Map getPredicatesPerNonDeterministicAlt(org.antlr.analysis.DFAState d, java.util.Set nondeterministicAlts)">18</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$rewrite_tree_atom_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Lexer$DFA2</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>7</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>3</npm>
		<lcom3>1.0</lcom3>
		<loc>985</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>327.0</amc>
		<cc>
			<method name="public String getDescription()">1</method>
			<method name="public void _init_(org.antlr.grammar.v3.ANTLRv3Lexer, org.antlr.runtime.BaseRecognizer recognizer)">1</method>
			<method name="public int specialStateTransition(int s, org.antlr.runtime.IntStream _input)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.codegen.CodeGenerator</name>
		<wmc>37</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>87</cbo>
		<rfc>199</rfc>
		<lcom>308</lcom>
		<ca>29</ca>
		<ce>68</ce>
		<npm>27</npm>
		<lcom3>0.9251207729468598</lcom3>
		<loc>2399</loc>
		<dam>0.5652173913043478</dam>
		<moa>4</moa>
		<mfa>0.0</mfa>
		<cam>0.15359477124183007</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>63.21621621621622</amc>
		<cc>
			<method name="public java.util.List translateAction(String ruleName, org.antlr.tool.GrammarAST actionTree)">2</method>
			<method name="protected org.antlr.stringtemplate.StringTemplate genSemanticPredicateExpr(org.antlr.stringtemplate.StringTemplateGroup templates, org.antlr.analysis.Transition edge)">1</method>
			<method name="protected void verifyActionScopesOkForTarget(java.util.Map actions)">2</method>
			<method name="public void translateActionAttributeReferencesForSingleScope(org.antlr.tool.Rule r, java.util.Map scopeActions)">3</method>
			<method name="public String getVocabFileName()">2</method>
			<method name="public void setProfile(boolean profile)">2</method>
			<method name="public org.antlr.stringtemplate.StringTemplateGroup getBaseTemplates()">1</method>
			<method name="protected boolean canGenerateSwitch(org.antlr.analysis.DFAState s)">9</method>
			<method name="public org.antlr.stringtemplate.StringTemplate getRecognizerST()">1</method>
			<method name="public void generateLocalFOLLOW(org.antlr.tool.GrammarAST referencedElementNode, String referencedElementName, String enclosingRuleName, int elementIndex)">6</method>
			<method name="protected void genTokenTypeConstants(org.antlr.stringtemplate.StringTemplate code)">3</method>
			<method name="protected org.antlr.stringtemplate.StringTemplate genTokenVocabOutput()">3</method>
			<method name="public org.antlr.stringtemplate.StringTemplate genLookaheadDecision(org.antlr.stringtemplate.StringTemplate recognizerST, org.antlr.analysis.DFA dfa)">3</method>
			<method name="protected org.antlr.stringtemplate.StringTemplate genLabelExpr(org.antlr.stringtemplate.StringTemplateGroup templates, org.antlr.analysis.Transition edge, int k)">3</method>
			<method name="public String createUniqueLabel(String name)">1</method>
			<method name="protected void loadLanguageTarget(String language)">1</method>
			<method name="public void issueInvalidAttributeError(String x, org.antlr.tool.Rule enclosingRule, antlr.Token actionToken, int outerAltNum)">7</method>
			<method name="protected void genTokenTypeNames(org.antlr.stringtemplate.StringTemplate code)">3</method>
			<method name="public static java.util.List getListOfArgumentsFromAction(String actionText, int separatorChar)">1</method>
			<method name="public org.antlr.stringtemplate.StringTemplate genRecognizer()">30</method>
			<method name="public void issueInvalidScopeError(String x, String y, org.antlr.tool.Rule enclosingRule, antlr.Token actionToken, int outerAltNum)">5</method>
			<method name="public org.antlr.stringtemplate.StringTemplateGroup getTemplates()">1</method>
			<method name="public static int getListOfArgumentsFromAction(String actionText, int start, int targetChar, int separatorChar, java.util.List args)">27</method>
			<method name="public void setTrace(boolean trace)">1</method>
			<method name="public org.antlr.stringtemplate.StringTemplate translateTemplateConstructor(String ruleName, int outerAltNum, antlr.Token actionToken, String templateActionText)">1</method>
			<method name="public org.antlr.stringtemplate.StringTemplate genSetExpr(org.antlr.stringtemplate.StringTemplateGroup templates, org.antlr.misc.IntSet set, int k, boolean partOfDFA)">7</method>
			<method name="public void issueInvalidAttributeError(String x, String y, org.antlr.tool.Rule enclosingRule, antlr.Token actionToken, int outerAltNum)">8</method>
			<method name="public void write(org.antlr.stringtemplate.StringTemplate code, String fileName)">1</method>
			<method name="public org.antlr.stringtemplate.StringTemplate generateSpecialState(org.antlr.analysis.DFAState s)">8</method>
			<method name="public void loadTemplates(String language)">15</method>
			<method name="public void setDebug(boolean debug)">1</method>
			<method name="protected void translateActionAttributeReferences(java.util.Map actions)">2</method>
			<method name="static void _clinit_()">1</method>
			<method name="public String getTokenTypeAsTargetLabel(int ttype)">2</method>
			<method name="public String getRecognizerFileName(String name, int type)">1</method>
			<method name="public void _init_(org.antlr.Tool tool, org.antlr.tool.Grammar grammar, String language)">1</method>
			<method name="public java.util.List translateArgAction(String ruleName, org.antlr.tool.GrammarAST actionTree)">3</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Lexer$DFA9</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>7</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>3</npm>
		<lcom3>1.0</lcom3>
		<loc>187</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>61.0</amc>
		<cc>
			<method name="public String getDescription()">1</method>
			<method name="public void _init_(org.antlr.grammar.v3.ANTLRv3Lexer, org.antlr.runtime.BaseRecognizer recognizer)">1</method>
			<method name="public int specialStateTransition(int s, org.antlr.runtime.IntStream _input)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.ErrorManager$ErrorState</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>19</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.0</amc>
		<cc>
			<method name="void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Grammar$2</name>
		<wmc>1</wmc>
		<dit>4</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>36</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>1.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>35.0</amc>
		<cc>
			<method name="void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Grammar$3</name>
		<wmc>1</wmc>
		<dit>4</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>44</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>1.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>43.0</amc>
		<cc>
			<method name="void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v2.ANTLRTreePrinter</name>
		<wmc>36</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>17</cbo>
		<rfc>58</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>17</ce>
		<npm>35</npm>
		<lcom3>0.5428571428571428</lcom3>
		<loc>4648</loc>
		<dam>0.75</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.34285714285714286</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>128.0</amc>
		<cc>
			<method name="public final void single_rewrite(antlr.collections.AST _t)">1</method>
			<method name="public final void ebnf(antlr.collections.AST _t)">1</method>
			<method name="public static String normalize(String g)">2</method>
			<method name="public final void block(antlr.collections.AST _t, boolean forceParens)">1</method>
			<method name="public final void action(antlr.collections.AST _t)">1</method>
			<method name="public final void ruleAction(antlr.collections.AST _t)">1</method>
			<method name="public final void atom(antlr.collections.AST _t)">1</method>
			<method name="public final void ast_suffix(antlr.collections.AST _t)">1</method>
			<method name="public final void actions(antlr.collections.AST _t)">1</method>
			<method name="public void out(String s)">1</method>
			<method name="public final void rewrite_template(antlr.collections.AST _t)">1</method>
			<method name="public final void grammarSpec(antlr.collections.AST _t, String gtype)">1</method>
			<method name="public final void rules(antlr.collections.AST _t)">1</method>
			<method name="public final void tree(antlr.collections.AST _t)">1</method>
			<method name="public void reportError(antlr.RecognitionException ex)">3</method>
			<method name="public final void grammar(antlr.collections.AST _t)">1</method>
			<method name="public final void modifier(antlr.collections.AST _t)">1</method>
			<method name="public final void exceptionHandler(antlr.collections.AST _t)">1</method>
			<method name="public final int countAltsForBlock(antlr.collections.AST _t)">1</method>
			<method name="public final void element(antlr.collections.AST _t)">1</method>
			<method name="public final void option(antlr.collections.AST _t)">1</method>
			<method name="public final void exceptionGroup(antlr.collections.AST _t)">1</method>
			<method name="public final void rule(antlr.collections.AST _t)">1</method>
			<method name="public final void delegateGrammars(antlr.collections.AST _t)">1</method>
			<method name="public final void attrScope(antlr.collections.AST _t)">1</method>
			<method name="public final void finallyClause(antlr.collections.AST _t)">1</method>
			<method name="public final void tokensSpec(antlr.collections.AST _t)">1</method>
			<method name="public final void alternative(antlr.collections.AST _t)">1</method>
			<method name="public final void optionValue(antlr.collections.AST _t)">1</method>
			<method name="public final String toString(antlr.collections.AST _t, org.antlr.tool.Grammar g, boolean showActions)">1</method>
			<method name="public final void optionsSpec(antlr.collections.AST _t)">1</method>
			<method name="public final void tokenSpec(antlr.collections.AST _t)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public final void rewrite(antlr.collections.AST _t)">1</method>
			<method name="public final void ruleScopeSpec(antlr.collections.AST _t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$ebnfSuffix_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.RecursionOverflowMessage</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>13</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>13</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>88</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.6</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>40.5</amc>
		<cc>
			<method name="public String toString()">2</method>
			<method name="public void _init_(org.antlr.analysis.DecisionProbe probe, org.antlr.analysis.DFAState sampleBadState, int alt, java.util.Collection targetRules, java.util.Collection callSiteStates)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Grammar$1</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>4</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>40</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>39.0</amc>
		<cc>
			<method name="void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Grammar$6</name>
		<wmc>1</wmc>
		<dit>3</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>1.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.0</amc>
		<cc>
			<method name="void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Grammar$7</name>
		<wmc>1</wmc>
		<dit>4</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>20</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>1.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>19.0</amc>
		<cc>
			<method name="void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Grammar$4</name>
		<wmc>1</wmc>
		<dit>4</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>48</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>1.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>47.0</amc>
		<cc>
			<method name="void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Grammar$5</name>
		<wmc>1</wmc>
		<dit>4</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>32</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>1.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>31.0</amc>
		<cc>
			<method name="void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Grammar</name>
		<wmc>156</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>134</cbo>
		<rfc>412</rfc>
		<lcom>10102</lcom>
		<ca>74</ca>
		<ce>93</ce>
		<npm>146</npm>
		<lcom3>0.9740452354467928</lcom3>
		<loc>5341</loc>
		<dam>0.26436781609195403</dam>
		<moa>12</moa>
		<mfa>0.0</mfa>
		<cam>0.08360215053763441</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>32.67948717948718</amc>
		<cc>
			<method name="public boolean validImport(org.antlr.tool.Grammar delegate)">3</method>
			<method name="public String setOption(String key, Object value, antlr.Token optionsStartToken)">6</method>
			<method name="public boolean optionIsValid(String key, Object value)">1</method>
			<method name="public java.util.List getDelegateNames()">3</method>
			<method name="public void setDecisionBlockAST(int decision, org.antlr.tool.GrammarAST blockAST)">1</method>
			<method name="public void buildNFA()">4</method>
			<method name="public java.util.Map getLineColumnToLookaheadDFAMap()">1</method>
			<method name="public int getTokenType(String tokenName)">3</method>
			<method name="public org.antlr.misc.IntSet complement(int atom)">1</method>
			<method name="public org.antlr.analysis.NFAState getNFAStateForAltOfDecision(org.antlr.analysis.NFAState decisionState, int alt)">5</method>
			<method name="public org.antlr.misc.IntSet getTokenTypes()">2</method>
			<method name="public org.antlr.analysis.NFAState getDecisionNFAStartState(int decision)">2</method>
			<method name="public java.util.List getLookaheadDFAColumnsForLineInFile(int line)">2</method>
			<method name="public void createLookaheadDFAs()">1</method>
			<method name="public int getNewTokenType()">1</method>
			<method name="public org.antlr.analysis.LookaheadSet LOOK(org.antlr.analysis.NFAState s)">1</method>
			<method name="public void checkRuleReference(org.antlr.tool.GrammarAST scopeAST, org.antlr.tool.GrammarAST refAST, org.antlr.tool.GrammarAST argsAST, String currentRuleName)">1</method>
			<method name="public void defineWildcardTreeLabel(String ruleName, antlr.Token label, org.antlr.tool.GrammarAST tokenRef)">2</method>
			<method name="public java.util.List getDelegates()">1</method>
			<method name="public void printGrammar(java.io.PrintStream output)">1</method>
			<method name="public void parseAndBuildAST(java.io.Reader r)">7</method>
			<method name="public void defineLexerRuleForAliasedStringLiteral(String tokenID, String literal, int tokenType)">2</method>
			<method name="public void setOptions(java.util.Map options, antlr.Token optionsStartToken)">3</method>
			<method name="public void setRuleAST(String ruleName, org.antlr.tool.GrammarAST t)">2</method>
			<method name="public String getRuleModifier(String ruleName)">2</method>
			<method name="public int assignDecisionNumber(org.antlr.analysis.NFAState state)">1</method>
			<method name="public void setTool(org.antlr.Tool tool)">1</method>
			<method name="protected org.antlr.tool.Grammar$Decision getDecision(int decision)">2</method>
			<method name="public org.antlr.misc.IntSet complement(org.antlr.misc.IntSet set)">1</method>
			<method name="public int getNumberOfCyclicDecisions()">4</method>
			<method name="public org.antlr.analysis.LookaheadSet FIRST(org.antlr.analysis.NFAState s)">1</method>
			<method name="public boolean isBuiltFromString()">1</method>
			<method name="public void defineNamedAction(org.antlr.tool.GrammarAST ampersandAST, String scope, org.antlr.tool.GrammarAST nameAST, org.antlr.tool.GrammarAST actionAST)">7</method>
			<method name="public org.antlr.Tool getTool()">1</method>
			<method name="protected void defineLabel(org.antlr.tool.Rule r, antlr.Token label, org.antlr.tool.GrammarAST element, int type)">2</method>
			<method name="public static StringBuffer getUnescapedStringFromGrammarStringLiteral(String literal)">5</method>
			<method name="public int getMaxTokenType()">1</method>
			<method name="public boolean buildTemplate()">2</method>
			<method name="public java.util.Map getGlobalScopes()">1</method>
			<method name="public org.antlr.tool.GrammarAST addArtificialMatchTokensRule(org.antlr.tool.GrammarAST grammarAST, java.util.List ruleNames, java.util.List delegateNames, boolean filterMode)">6</method>
			<method name="public void _init_(org.antlr.Tool tool, String grammarString)">1</method>
			<method name="public org.antlr.tool.GrammarAST getSyntacticPredicate(String name)">2</method>
			<method name="public boolean allDecisionDFAHaveBeenCreated()">1</method>
			<method name="public String getFileName()">1</method>
			<method name="public org.antlr.misc.IntSet getSetFromRule(org.antlr.grammar.v2.TreeToNFAConverter nfabuilder, String ruleName)">1</method>
			<method name="public boolean NFAToDFAConversionExternallyAborted()">1</method>
			<method name="public String getRuleName(int ruleIndex)">2</method>
			<method name="public java.util.Collection getRules()">1</method>
			<method name="public boolean buildAST()">2</method>
			<method name="public boolean rewriteMode()">2</method>
			<method name="public org.antlr.tool.Rule getLocallyDefinedRule(String ruleName)">1</method>
			<method name="public int getNumberOfDecisions()">1</method>
			<method name="public boolean isValidSet(org.antlr.grammar.v2.TreeToNFAConverter nfabuilder, org.antlr.tool.GrammarAST t)">1</method>
			<method name="public void defineWildcardTreeListLabel(String ruleName, antlr.Token label, org.antlr.tool.GrammarAST tokenRef)">2</method>
			<method name="public void setName(String name)">5</method>
			<method name="public void synPredUsedInDFA(org.antlr.analysis.DFA dfa, org.antlr.analysis.SemanticContext semCtx)">1</method>
			<method name="public String computeTokenNameFromLiteral(int tokenType, String literal)">1</method>
			<method name="public org.antlr.analysis.DFA createLookaheadDFA(int decision, boolean wackTempStructures)">12</method>
			<method name="public void checkNameSpaceAndActions()">1</method>
			<method name="public void setCodeGenerator(org.antlr.codegen.CodeGenerator generator)">1</method>
			<method name="public int getGrammarMaxLookahead()">5</method>
			<method name="public String toString()">1</method>
			<method name="public java.util.List checkAllRulesForLeftRecursion()">1</method>
			<method name="public void defineToken(String text, int tokenType)">7</method>
			<method name="public java.util.LinkedHashMap getSyntacticPredicates()">1</method>
			<method name="public void parseAndBuildAST()">1</method>
			<method name="public org.antlr.tool.GrammarAST getDecisionBlockAST(int decision)">2</method>
			<method name="public void createRuleStartAndStopNFAStates()">3</method>
			<method name="public org.antlr.tool.AttributeScope getGlobalScope(String name)">1</method>
			<method name="public Object getOption(String key)">1</method>
			<method name="public Object getBlockOption(org.antlr.tool.GrammarAST blockAST, String key)">3</method>
			<method name="public boolean getGrammarIsRoot()">2</method>
			<method name="protected java.util.List getArtificialRulesForSyntacticPredicates(org.antlr.grammar.v2.ANTLRParser parser, java.util.LinkedHashMap nameToSynpredASTMap)">4</method>
			<method name="public String grammarTreeToString(org.antlr.tool.GrammarAST t, boolean showActions)">1</method>
			<method name="public java.util.Set getDelegatedRuleReferences()">1</method>
			<method name="public java.util.List getDelegators()">1</method>
			<method name="public String getTokenDisplayName(int ttype)">8</method>
			<method name="public org.antlr.analysis.NFAState getRuleStartState(String scopeName, String ruleName)">2</method>
			<method name="protected org.antlr.tool.Grammar$Decision createDecision(int decision)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public java.util.Set getTokenIDs()">1</method>
			<method name="public org.antlr.misc.IntSet getAllCharValues()">2</method>
			<method name="public org.antlr.analysis.DFA getLookaheadDFA(int decision)">2</method>
			<method name="public org.antlr.tool.AttributeScope createParameterScope(String ruleName, antlr.Token argAction)">1</method>
			<method name="public String getRecognizerName()">6</method>
			<method name="public org.antlr.tool.AttributeScope createRuleScope(String ruleName, antlr.Token scopeAction)">1</method>
			<method name="public String getGrammarTypeString()">1</method>
			<method name="public void defineRuleRefLabel(String ruleName, antlr.Token label, org.antlr.tool.GrammarAST ruleRef)">2</method>
			<method name="public Object getLocallyDefinedOption(String key)">3</method>
			<method name="protected void examineAllExecutableActions()">3</method>
			<method name="public java.util.Set getLabels(java.util.Set rewriteElements, int labelType)">2</method>
			<method name="public boolean isAtomTokenType(int ttype)">8</method>
			<method name="public org.antlr.analysis.NFAState getRuleStopState(String ruleName)">2</method>
			<method name="public void importGrammar(org.antlr.tool.GrammarAST grammarNameAST, String label)">13</method>
			<method name="public String getImplicitlyGeneratedLexerFileName()">1</method>
			<method name="public org.antlr.analysis.DFA getLookaheadDFAFromPositionInFile(int line, int col)">1</method>
			<method name="public java.util.List getIndirectDelegates()">1</method>
			<method name="public java.util.Set getTokenDisplayNames()">2</method>
			<method name="public void setGrammarContent(String grammarString)">1</method>
			<method name="public void defineRuleListLabel(String ruleName, antlr.Token label, org.antlr.tool.GrammarAST element)">3</method>
			<method name="public void externallyAbortNFAToDFAConversion()">1</method>
			<method name="public void defineRule(antlr.Token ruleToken, String modifier, java.util.Map options, org.antlr.tool.GrammarAST tree, org.antlr.tool.GrammarAST argActionAST, int numAlts)">6</method>
			<method name="public static String getANTLRCharLiteralForChar(int c)">8</method>
			<method name="public org.antlr.analysis.NFAState getRuleStartState(String ruleName)">1</method>
			<method name="public void setLookaheadDFA(int decision, org.antlr.analysis.DFA lookaheadDFA)">1</method>
			<method name="public java.util.List getDirectDelegates()">1</method>
			<method name="public void altReferencesRule(String enclosingRuleName, org.antlr.tool.GrammarAST refScopeAST, org.antlr.tool.GrammarAST refAST, int outerAltNum)">3</method>
			<method name="public int getMaxCharValue()">2</method>
			<method name="public org.antlr.tool.AttributeScope createReturnScope(String ruleName, antlr.Token retAction)">1</method>
			<method name="public String getDefaultActionScope(int grammarType)">2</method>
			<method name="public org.antlr.tool.AttributeScope defineGlobalScope(String name, antlr.Token scopeAction)">1</method>
			<method name="public void checkAllRulesForUselessLabels()">3</method>
			<method name="public void referenceRuleLabelPredefinedAttribute(String ruleName)">3</method>
			<method name="public boolean isEmptyRule(org.antlr.tool.GrammarAST block)">6</method>
			<method name="public org.antlr.tool.Rule getRule(String scopeName, String ruleName)">3</method>
			<method name="public org.antlr.tool.Grammar getDelegator()">1</method>
			<method name="public void _init_(String grammarString)">1</method>
			<method name="public void defineTokenListLabel(String ruleName, antlr.Token label, org.antlr.tool.GrammarAST element)">2</method>
			<method name="public static int getCharValueFromGrammarCharLiteral(String literal)">7</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void defineLexerRuleFoundInParser(antlr.Token ruleToken, org.antlr.tool.GrammarAST ruleAST)">11</method>
			<method name="public void altReferencesTokenID(String ruleName, org.antlr.tool.GrammarAST refAST, int outerAltNum)">3</method>
			<method name="public org.antlr.analysis.DFA createLL_1_LookaheadDFA(int decision)">18</method>
			<method name="public java.util.List getDecisionNFAStartStateList()">2</method>
			<method name="public int getUserMaxLookahead(int decision)">4</method>
			<method name="public void defineTokenRefLabel(String ruleName, antlr.Token label, org.antlr.tool.GrammarAST tokenRef)">8</method>
			<method name="public java.util.Set getAllImportedRules()">1</method>
			<method name="public boolean getAutoBacktrackMode(int decision)">4</method>
			<method name="public java.util.Set getStringLiterals()">1</method>
			<method name="public void setDecisionNFA(int decision, org.antlr.analysis.NFAState state)">1</method>
			<method name="public boolean generateMethodForRule(String ruleName)">6</method>
			<method name="public void createLookaheadDFAs(boolean wackTempStructures)">16</method>
			<method name="private void updateLineColumnToLookaheadDFAMap(org.antlr.analysis.DFA lookaheadDFA)">1</method>
			<method name="public java.util.Collection getTokenTypesWithoutID()">3</method>
			<method name="public void setFileName(String fileName)">1</method>
			<method name="public int getRuleIndex(String scopeName, String ruleName)">2</method>
			<method name="public int importTokenVocabulary(org.antlr.tool.Grammar importFromGr)">2</method>
			<method name="protected java.util.List makeEdgeSetsDisjoint(java.util.List edges)">8</method>
			<method name="public org.antlr.tool.Rule getRule(String ruleName)">1</method>
			<method name="public java.util.Set getDelegatedRules()">1</method>
			<method name="public org.antlr.tool.GrammarAST getGrammarTree()">1</method>
			<method name="protected void removeUselessLabels(java.util.Map ruleToElementLabelPairMap)">4</method>
			<method name="public int getNumberOfAltsForDecisionNFA(org.antlr.analysis.NFAState decisionState)">3</method>
			<method name="public void defineGrammarSymbols()">2</method>
			<method name="public String defineSyntacticPredicate(org.antlr.tool.GrammarAST blockAST, String currentRuleName)">2</method>
			<method name="public org.antlr.codegen.CodeGenerator getCodeGenerator()">1</method>
			<method name="public int importTokenVocabulary(org.antlr.tool.GrammarAST tokenVocabOptionAST, String vocabName)">12</method>
			<method name="public void _init_(org.antlr.Tool tool, String fileName, org.antlr.tool.CompositeGrammar composite)">2</method>
			<method name="public java.util.Map getActions()">1</method>
			<method name="public void defineLexerRuleForStringLiteral(String literal, int tokenType)">2</method>
			<method name="public String getLexerGrammar()">6</method>
			<method name="public String grammarTreeToString(org.antlr.tool.GrammarAST t)">1</method>
			<method name="public java.util.Set getLeftRecursiveRules()">3</method>
			<method name="protected void addDelegateGrammar(org.antlr.tool.Grammar delegateGrammar)">1</method>
			<method name="public boolean legalOption(String key)">6</method>
			<method name="public int getRuleIndex(String ruleName)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v2.AssignTokenTypesWalkerTokenTypes</name>
		<wmc>0</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>3</cbo>
		<rfc>0</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>2</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>101</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v2.TreeToNFAConverter</name>
		<wmc>32</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>32</cbo>
		<rfc>117</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>32</ce>
		<npm>28</npm>
		<lcom3>0.6653225806451613</lcom3>
		<loc>5449</loc>
		<dam>0.75</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.22580645161290322</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>169.03125</amc>
		<cc>
			<method name="public final org.antlr.misc.IntSet setRule(antlr.collections.AST _t)">4</method>
			<method name="public final void grammarSpec(antlr.collections.AST _t)">1</method>
			<method name="public final void testSetRule(antlr.collections.AST _t)">4</method>
			<method name="private static final long[] mk_tokenSet_0()">1</method>
			<method name="protected void addFollowTransition(String ruleName, org.antlr.analysis.NFAState following)">3</method>
			<method name="public final org.antlr.analysis.StateCluster atom(antlr.collections.AST _t, String scopeName)">1</method>
			<method name="public final void ast_suffix(antlr.collections.AST _t)">1</method>
			<method name="public final org.antlr.analysis.StateCluster tree(antlr.collections.AST _t)">1</method>
			<method name="public final org.antlr.analysis.StateCluster atom_or_notatom(antlr.collections.AST _t)">1</method>
			<method name="public final org.antlr.analysis.StateCluster ebnf(antlr.collections.AST _t)">1</method>
			<method name="public final org.antlr.analysis.StateCluster block(antlr.collections.AST _t)">1</method>
			<method name="public final void rules(antlr.collections.AST _t)">1</method>
			<method name="protected void finish()">2</method>
			<method name="public void reportError(antlr.RecognitionException ex)">3</method>
			<method name="public final void grammar(antlr.collections.AST _t)">1</method>
			<method name="public final void modifier(antlr.collections.AST _t)">1</method>
			<method name="public final void exceptionHandler(antlr.collections.AST _t)">1</method>
			<method name="public final void testBlockAsSet(antlr.collections.AST _t)">1</method>
			<method name="public final void exceptionGroup(antlr.collections.AST _t)">1</method>
			<method name="public final void rule(antlr.collections.AST _t)">1</method>
			<method name="public final void attrScope(antlr.collections.AST _t)">1</method>
			<method name="public final void finallyClause(antlr.collections.AST _t)">1</method>
			<method name="public final void setElement(antlr.collections.AST _t, org.antlr.misc.IntSet elements)">1</method>
			<method name="public final void testSetElement(antlr.collections.AST _t)">1</method>
			<method name="public final org.antlr.analysis.StateCluster alternative(antlr.collections.AST _t)">1</method>
			<method name="public final org.antlr.analysis.StateCluster set(antlr.collections.AST _t)">1</method>
			<method name="public final org.antlr.analysis.StateCluster element(antlr.collections.AST _t)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public final void rewrite(antlr.collections.AST _t)">1</method>
			<method name="public void _init_(org.antlr.tool.Grammar g, org.antlr.analysis.NFA nfa, org.antlr.tool.NFAFactory factory)">1</method>
			<method name="public final void ruleScopeSpec(antlr.collections.AST _t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$rewrite_template_ref_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$rewrite_template_args_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.CompositeGrammarTree</name>
		<wmc>11</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>20</rfc>
		<lcom>0</lcom>
		<ca>3</ca>
		<ce>7</ce>
		<npm>9</npm>
		<lcom3>0.3666666666666667</lcom3>
		<loc>283</loc>
		<dam>0.3333333333333333</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.34545454545454546</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>24.454545454545453</amc>
		<cc>
			<method name="public org.antlr.tool.CompositeGrammarTree findNode(org.antlr.tool.Grammar g)">6</method>
			<method name="public java.util.List getPostOrderedGrammarList()">1</method>
			<method name="public org.antlr.tool.Rule getRule(String ruleName)">4</method>
			<method name="public void _init_(org.antlr.tool.Grammar g)">1</method>
			<method name="public void trimLexerImportsIntoCombined()">6</method>
			<method name="public java.util.List getPreOrderedGrammarList()">1</method>
			<method name="protected void _getPreOrderedGrammarList(java.util.List grammars)">3</method>
			<method name="public void addChild(org.antlr.tool.CompositeGrammarTree t)">3</method>
			<method name="public org.antlr.tool.CompositeGrammarTree findNode(String grammarName)">6</method>
			<method name="protected void _getPostOrderedGrammarList(java.util.List grammars)">3</method>
			<method name="public Object getOption(String key)">3</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Grammar$8</name>
		<wmc>1</wmc>
		<dit>3</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>1.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.0</amc>
		<cc>
			<method name="void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Grammar$9</name>
		<wmc>1</wmc>
		<dit>3</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>1.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.0</amc>
		<cc>
			<method name="void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$rewrite_alternative_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.ToolMessage</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>12</rfc>
		<lcom>9</lcom>
		<ca>3</ca>
		<ce>7</ce>
		<npm>6</npm>
		<lcom3>2.0</lcom3>
		<loc>77</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.833333333333334</amc>
		<cc>
			<method name="public void _init_(int msgID, Object arg)">1</method>
			<method name="public void _init_(int msgID, Object arg, Throwable e)">1</method>
			<method name="public String toString()">4</method>
			<method name="public void _init_(int msgID, Throwable e)">1</method>
			<method name="public void _init_(int msgID, Object arg, Object arg2)">1</method>
			<method name="public void _init_(int msgID)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser</name>
		<wmc>57</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>79</cbo>
		<rfc>217</rfc>
		<lcom>0</lcom>
		<ca>5</ca>
		<ce>78</ce>
		<npm>54</npm>
		<lcom3>0.971466870930678</lcom3>
		<loc>22787</loc>
		<dam>0.0160857908847185</dam>
		<moa>4</moa>
		<mfa>0.0</mfa>
		<cam>0.21428571428571427</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>392.2280701754386</amc>
		<cc>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$notTerminal_return notTerminal()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$ebnf_return ebnf()">1</method>
			<method name="public final void synpred1_ANTLRv3_fragment()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$rewrite_return rewrite()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$action_return action()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$actionScopeName_return actionScopeName()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$ruleScopeSpec_return ruleScopeSpec()">1</method>
			<method name="public final boolean synpred2_ANTLRv3()">2</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$finallyClause_return finallyClause()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$elementNoOptionSpec_return elementNoOptionSpec()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$rewrite_template_arg_return rewrite_template_arg()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$rewrite_indirect_template_head_return rewrite_indirect_template_head()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$grammarDef_return grammarDef()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$ebnfSuffix_return ebnfSuffix()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$option_return option()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$throwsSpec_return throwsSpec()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$tokenSpec_return tokenSpec()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$treeSpec_return treeSpec()">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream input)">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$element_return element()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$rewrite_tree_alternative_return rewrite_tree_alternative()">1</method>
			<method name="static org.antlr.runtime.RecognizerSharedState access$000(org.antlr.grammar.v3.ANTLRv3Parser x0)">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$atom_return atom()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$rewrite_template_args_return rewrite_template_args()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$rewrite_tree_ebnf_return rewrite_tree_ebnf()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$altpair_return altpair()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$id_return id()">1</method>
			<method name="static void _clinit_()">5</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream input, org.antlr.runtime.RecognizerSharedState state)">1</method>
			<method name="public final boolean synpred1_ANTLRv3()">2</method>
			<method name="static org.antlr.runtime.RecognizerSharedState access$100(org.antlr.grammar.v3.ANTLRv3Parser x0)">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$rewrite_template_return rewrite_template()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$attrScope_return attrScope()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$rewrite_alternative_return rewrite_alternative()">1</method>
			<method name="public final void synpred2_ANTLRv3_fragment()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$exceptionHandler_return exceptionHandler()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$range_return range()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$optionValue_return optionValue()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$alternative_return alternative()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$exceptionGroup_return exceptionGroup()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$terminal_return terminal()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$altList_return altList()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$rewrite_tree_element_return rewrite_tree_element()">1</method>
			<method name="public String getGrammarFileName()">1</method>
			<method name="public org.antlr.runtime.tree.TreeAdaptor getTreeAdaptor()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$ruleAction_return ruleAction()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$tokensSpec_return tokensSpec()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$rewrite_template_ref_return rewrite_template_ref()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$rewrite_tree_return rewrite_tree()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$optionsSpec_return optionsSpec()">1</method>
			<method name="public void setTreeAdaptor(org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$rule_return rule()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$block_return block()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$rewrite_tree_block_return rewrite_tree_block()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$rewrite_tree_atom_return rewrite_tree_atom()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$notSet_return notSet()">1</method>
			<method name="public String[] getTokenNames()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.GrammarUnreachableAltsMessage</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>17</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>13</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>107</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>51.5</amc>
		<cc>
			<method name="public String toString()">3</method>
			<method name="public void _init_(org.antlr.analysis.DecisionProbe probe, java.util.List alts)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.misc.Interval</name>
		<wmc>16</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>23</rfc>
		<lcom>0</lcom>
		<ca>3</ca>
		<ce>5</ce>
		<npm>15</npm>
		<lcom3>0.75</lcom3>
		<loc>269</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>15.3125</amc>
		<cc>
			<method name="public void _init_(int a, int b)">1</method>
			<method name="public boolean startsAfter(org.antlr.misc.Interval other)">2</method>
			<method name="public boolean startsAfterNonDisjoint(org.antlr.misc.Interval other)">3</method>
			<method name="public boolean equals(Object o)">4</method>
			<method name="public boolean startsAfterDisjoint(org.antlr.misc.Interval other)">2</method>
			<method name="public org.antlr.misc.Interval differenceNotProperlyContained(org.antlr.misc.Interval other)">3</method>
			<method name="public boolean disjoint(org.antlr.misc.Interval other)">3</method>
			<method name="public boolean startsBeforeNonDisjoint(org.antlr.misc.Interval other)">3</method>
			<method name="public String toString()">1</method>
			<method name="public org.antlr.misc.Interval intersection(org.antlr.misc.Interval other)">1</method>
			<method name="public boolean startsBeforeDisjoint(org.antlr.misc.Interval other)">3</method>
			<method name="public boolean properlyContains(org.antlr.misc.Interval other)">3</method>
			<method name="public org.antlr.misc.Interval union(org.antlr.misc.Interval other)">1</method>
			<method name="public static org.antlr.misc.Interval create(int a, int b)">5</method>
			<method name="static void _clinit_()">1</method>
			<method name="public boolean adjacent(org.antlr.misc.Interval other)">3</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.RuleLabelScope$1</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>29</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>28.0</amc>
		<cc>
			<method name="void _init_(String x0, antlr.Token x1)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.codegen.ObjCTarget</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>23</rfc>
		<lcom>15</lcom>
		<ca>0</ca>
		<ce>13</ce>
		<npm>5</npm>
		<lcom3>2.0</lcom3>
		<loc>177</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.47619047619047616</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>28.5</amc>
		<cc>
			<method name="public String getTokenTypeAsTargetLabel(org.antlr.codegen.CodeGenerator generator, int ttype)">2</method>
			<method name="protected void genRecognizerHeaderFile(org.antlr.Tool tool, org.antlr.codegen.CodeGenerator generator, org.antlr.tool.Grammar grammar, org.antlr.stringtemplate.StringTemplate headerFileST, String extName)">1</method>
			<method name="public String getTargetStringLiteralFromANTLRStringLiteral(org.antlr.codegen.CodeGenerator generator, String literal)">1</method>
			<method name="public String getTokenTextAndTypeAsTargetLabel(org.antlr.codegen.CodeGenerator generator, String text, int tokenType)">5</method>
			<method name="public void _init_()">1</method>
			<method name="public String getTargetCharLiteralFromANTLRCharLiteral(org.antlr.codegen.CodeGenerator generator, String literal)">4</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.RuleLabelScope$2</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>25</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>24.0</amc>
		<cc>
			<method name="void _init_(String x0, antlr.Token x1)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.codegen.PythonTarget</name>
		<wmc>5</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>30</rfc>
		<lcom>10</lcom>
		<ca>0</ca>
		<ce>13</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>356</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>70.2</amc>
		<cc>
			<method name="public String getTokenTypeAsTargetLabel(org.antlr.codegen.CodeGenerator generator, int ttype)">4</method>
			<method name="public java.util.List postProcessAction(java.util.List chunks, antlr.Token actionToken)">27</method>
			<method name="public void _init_()">1</method>
			<method name="public String getTargetCharLiteralFromANTLRCharLiteral(org.antlr.codegen.CodeGenerator generator, String literal)">1</method>
			<method name="private java.util.List splitLines(String text)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$rewrite_template_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.RuleLabelScope$3</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>45</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>44.0</amc>
		<cc>
			<method name="void _init_(String x0, antlr.Token x1)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Tree$DFA44</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>38</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.5</amc>
		<cc>
			<method name="public String getDescription()">1</method>
			<method name="public void _init_(org.antlr.grammar.v3.ANTLRv3Tree, org.antlr.runtime.BaseRecognizer recognizer)">1</method>
		</cc>
	</class>


	<class>
		<name>org.antlr.runtime.tree.RewriteEmptyStreamException</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>5</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public void _init_(String elementDescription)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$Visitor</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>5</cbo>
		<rfc>4</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>10</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5833333333333334</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>2.3333333333333335</amc>
		<cc>
			<method name="public abstract void visit(Object)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void visit(Object t, Object parent, int childIndex, java.util.Map labels)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.MismatchedRangeException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>10</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>40</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.666666666666666</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_(int a, int b, org.antlr.runtime.IntStream input)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenRewriteStream$InsertBeforeOp</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>7</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>33</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.6</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>15.0</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.TokenRewriteStream, int index, Object text)">1</method>
			<method name="public int execute(StringBuffer buf)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$WildcardTreePattern</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>5</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.Token payload)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.UnBufferedTreeNodeStream</name>
		<wmc>33</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>18</cbo>
		<rfc>67</rfc>
		<lcom>312</lcom>
		<ca>1</ca>
		<ce>18</ce>
		<npm>25</npm>
		<lcom3>0.7640625</lcom3>
		<loc>918</loc>
		<dam>0.9</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.22943722943722944</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>26.21212121212121</amc>
		<cc>
			<method name="public Object get(int i)">1</method>
			<method name="public int LA(int i)">2</method>
			<method name="public int mark()">4</method>
			<method name="public void reset()">1</method>
			<method name="protected void addLookahead(Object node)">2</method>
			<method name="public void setTokenStream(org.antlr.runtime.TokenStream tokens)">1</method>
			<method name="public int size()">1</method>
			<method name="protected Object handleRootNode()">3</method>
			<method name="public String toString()">1</method>
			<method name="protected Object visitChild(int child)">3</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, Object tree)">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public Object getTreeSource()">1</method>
			<method name="public void rewind(int marker)">3</method>
			<method name="public org.antlr.runtime.tree.TreeAdaptor getTreeAdaptor()">1</method>
			<method name="public void seek(int index)">3</method>
			<method name="public void rewind()">1</method>
			<method name="public org.antlr.runtime.TokenStream getTokenStream()">1</method>
			<method name="public void release(int marker)">1</method>
			<method name="public int index()">1</method>
			<method name="protected void addNavigationNode(int ttype)">4</method>
			<method name="public Object next()">5</method>
			<method name="protected void walkBackToMostRecentNodeWithUnvisitedChildren()">7</method>
			<method name="public String toString(Object start, Object stop)">5</method>
			<method name="public boolean hasUniqueNavigationNodes()">1</method>
			<method name="public Object LT(int k)">4</method>
			<method name="protected int getLookaheadSize()">2</method>
			<method name="public void consume()">1</method>
			<method name="protected void fill(int k)">2</method>
			<method name="public void _init_(Object tree)">1</method>
			<method name="protected void toStringWork(Object p, Object stop, StringBuffer buf)">9</method>
			<method name="public void replaceChildren(Object parent, int startChildIndex, int stopChildIndex, Object t)">1</method>
			<method name="public void setUniqueNavigationNodes(boolean uniqueNavigationNodes)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.CommonTreeAdaptor</name>
		<wmc>18</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>13</cbo>
		<rfc>38</rfc>
		<lcom>153</lcom>
		<ca>5</ca>
		<ce>8</ce>
		<npm>18</npm>
		<lcom3>2.0</lcom3>
		<loc>169</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4444444444444444</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.38888888888889</amc>
		<cc>
			<method name="public org.antlr.runtime.Token createToken(int tokenType, String text)">1</method>
			<method name="public Object getParent(Object t)">2</method>
			<method name="public void setParent(Object t, Object parent)">2</method>
			<method name="public void setTokenBoundaries(Object t, org.antlr.runtime.Token startToken, org.antlr.runtime.Token stopToken)">4</method>
			<method name="public org.antlr.runtime.Token createToken(org.antlr.runtime.Token fromToken)">1</method>
			<method name="public int getChildCount(Object t)">2</method>
			<method name="public void setChildIndex(Object t, int index)">2</method>
			<method name="public int getChildIndex(Object t)">2</method>
			<method name="public org.antlr.runtime.Token getToken(Object t)">2</method>
			<method name="public int getTokenStartIndex(Object t)">2</method>
			<method name="public Object create(org.antlr.runtime.Token payload)">1</method>
			<method name="public int getType(Object t)">2</method>
			<method name="public Object getChild(Object t, int i)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public Object dupNode(Object t)">2</method>
			<method name="public String getText(Object t)">2</method>
			<method name="public void replaceChildren(Object parent, int startChildIndex, int stopChildIndex, Object t)">2</method>
			<method name="public int getTokenStopIndex(Object t)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreePatternLexer</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>9</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>0.9285714285714286</lcom3>
		<loc>255</loc>
		<dam>0.2857142857142857</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>79.33333333333333</amc>
		<cc>
			<method name="protected void consume()">2</method>
			<method name="public void _init_(String pattern)">1</method>
			<method name="public int nextToken()">27</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.UnwantedTokenException</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>12</rfc>
		<lcom>4</lcom>
		<ca>2</ca>
		<ce>7</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>61</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.25</amc>
		<cc>
			<method name="public void _init_(int expecting, org.antlr.runtime.IntStream input)">1</method>
			<method name="public String toString()">3</method>
			<method name="public org.antlr.runtime.Token getUnexpectedToken()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.ANTLRInputStream</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>10</rfc>
		<lcom>15</lcom>
		<ca>0</ca>
		<ce>8</ce>
		<npm>6</npm>
		<lcom3>2.0</lcom3>
		<loc>55</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.7083333333333334</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.166666666666666</amc>
		<cc>
			<method name="public void _init_(java.io.InputStream input, int size)">1</method>
			<method name="public void _init_(java.io.InputStream input, String encoding)">1</method>
			<method name="public void _init_(java.io.InputStream input, int size, String encoding)">1</method>
			<method name="public void _init_(java.io.InputStream input)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(java.io.InputStream input, int size, int readBufferSize, String encoding)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeAdaptor</name>
		<wmc>31</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>23</cbo>
		<rfc>31</rfc>
		<lcom>465</lcom>
		<ca>18</ca>
		<ce>6</ce>
		<npm>31</npm>
		<lcom3>2.0</lcom3>
		<loc>31</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.35023041474654376</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void setTokenBoundaries(Object, org.antlr.runtime.Token, org.antlr.runtime.Token)">1</method>
			<method name="public abstract Object becomeRoot(org.antlr.runtime.Token, Object)">1</method>
			<method name="public abstract int getUniqueID(Object)">1</method>
			<method name="public abstract void setParent(Object, Object)">1</method>
			<method name="public abstract Object nil()">1</method>
			<method name="public abstract Object errorNode(org.antlr.runtime.TokenStream, org.antlr.runtime.Token, org.antlr.runtime.Token, org.antlr.runtime.RecognitionException)">1</method>
			<method name="public abstract Object getParent(Object)">1</method>
			<method name="public abstract int getChildCount(Object)">1</method>
			<method name="public abstract void replaceChildren(Object, int, int, Object)">1</method>
			<method name="public abstract void setText(Object, String)">1</method>
			<method name="public abstract Object create(org.antlr.runtime.Token)">1</method>
			<method name="public abstract Object dupTree(Object)">1</method>
			<method name="public abstract Object dupNode(Object)">1</method>
			<method name="public abstract Object create(int, String)">1</method>
			<method name="public abstract Object getChild(Object, int)">1</method>
			<method name="public abstract int getTokenStartIndex(Object)">1</method>
			<method name="public abstract String getText(Object)">1</method>
			<method name="public abstract int getChildIndex(Object)">1</method>
			<method name="public abstract int getTokenStopIndex(Object)">1</method>
			<method name="public abstract Object create(int, org.antlr.runtime.Token)">1</method>
			<method name="public abstract int getType(Object)">1</method>
			<method name="public abstract Object deleteChild(Object, int)">1</method>
			<method name="public abstract void setType(Object, int)">1</method>
			<method name="public abstract void addChild(Object, Object)">1</method>
			<method name="public abstract Object create(int, org.antlr.runtime.Token, String)">1</method>
			<method name="public abstract Object rulePostProcessing(Object)">1</method>
			<method name="public abstract void setChild(Object, int, Object)">1</method>
			<method name="public abstract Object becomeRoot(Object, Object)">1</method>
			<method name="public abstract org.antlr.runtime.Token getToken(Object)">1</method>
			<method name="public abstract void setChildIndex(Object, int)">1</method>
			<method name="public abstract boolean isNil(Object)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.RewriteEarlyExitException</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>0</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>10</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(String elementDescription)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugTreeAdaptor</name>
		<wmc>37</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>77</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>8</ce>
		<npm>36</npm>
		<lcom3>0.3194444444444444</lcom3>
		<loc>376</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.26426426426426425</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.108108108108109</amc>
		<cc>
			<method name="public void setDebugListener(org.antlr.runtime.debug.DebugEventListener dbg)">1</method>
			<method name="public void addChild(Object t, org.antlr.runtime.Token child)">1</method>
			<method name="public Object errorNode(org.antlr.runtime.TokenStream input, org.antlr.runtime.Token start, org.antlr.runtime.Token stop, org.antlr.runtime.RecognitionException e)">2</method>
			<method name="public Object create(int tokenType, String text)">1</method>
			<method name="public void setTokenBoundaries(Object t, org.antlr.runtime.Token startToken, org.antlr.runtime.Token stopToken)">4</method>
			<method name="public void setText(Object t, String text)">1</method>
			<method name="public void setType(Object t, int type)">1</method>
			<method name="public int getChildCount(Object t)">1</method>
			<method name="public int getChildIndex(Object t)">1</method>
			<method name="public org.antlr.runtime.Token getToken(Object t)">1</method>
			<method name="public int getType(Object t)">1</method>
			<method name="public void _init_(org.antlr.runtime.debug.DebugEventListener dbg, org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="public Object getChild(Object t, int i)">1</method>
			<method name="protected void simulateTreeConstruction(Object t)">2</method>
			<method name="public Object nil()">1</method>
			<method name="public void setChild(Object t, int i, Object child)">1</method>
			<method name="public org.antlr.runtime.tree.TreeAdaptor getTreeAdaptor()">1</method>
			<method name="public Object create(int tokenType, org.antlr.runtime.Token fromToken)">1</method>
			<method name="public Object create(int tokenType, org.antlr.runtime.Token fromToken, String text)">1</method>
			<method name="public Object rulePostProcessing(Object root)">1</method>
			<method name="public Object getParent(Object t)">1</method>
			<method name="public Object deleteChild(Object t, int i)">1</method>
			<method name="public void setParent(Object t, Object parent)">1</method>
			<method name="public Object becomeRoot(Object newRoot, Object oldRoot)">1</method>
			<method name="public void addChild(Object t, Object child)">3</method>
			<method name="public Object dupNode(Object treeNode)">1</method>
			<method name="public void setChildIndex(Object t, int index)">1</method>
			<method name="public boolean isNil(Object tree)">1</method>
			<method name="public int getTokenStartIndex(Object t)">1</method>
			<method name="public org.antlr.runtime.debug.DebugEventListener getDebugListener()">1</method>
			<method name="public Object create(org.antlr.runtime.Token payload)">2</method>
			<method name="public int getUniqueID(Object node)">1</method>
			<method name="public Object becomeRoot(org.antlr.runtime.Token newRoot, Object oldRoot)">1</method>
			<method name="public Object dupTree(Object tree)">1</method>
			<method name="public String getText(Object t)">1</method>
			<method name="public void replaceChildren(Object parent, int startChildIndex, int stopChildIndex, Object t)">1</method>
			<method name="public int getTokenStopIndex(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeParser</name>
		<wmc>18</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>20</cbo>
		<rfc>51</rfc>
		<lcom>95</lcom>
		<ca>1</ca>
		<ce>19</ce>
		<npm>13</npm>
		<lcom3>0.907563025210084</lcom3>
		<loc>391</loc>
		<dam>0.14285714285714285</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.23529411764705882</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>20.333333333333332</amc>
		<cc>
			<method name="protected void mismatch(org.antlr.runtime.IntStream input, int ttype, org.antlr.runtime.BitSet follow)">1</method>
			<method name="protected Object getMissingSymbol(org.antlr.runtime.IntStream input, org.antlr.runtime.RecognitionException e, int expectedTokenType, org.antlr.runtime.BitSet follow)">1</method>
			<method name="public void traceOut(String ruleName, int ruleIndex)">1</method>
			<method name="public org.antlr.runtime.tree.TreeNodeStream getTreeNodeStream()">1</method>
			<method name="public void reset()">2</method>
			<method name="public String getErrorHeader(org.antlr.runtime.RecognitionException e)">2</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeNodeStream input, org.antlr.runtime.RecognizerSharedState state)">1</method>
			<method name="public void matchAny(org.antlr.runtime.IntStream ignore)">7</method>
			<method name="public boolean inContext(String context)">1</method>
			<method name="protected static Object getAncestor(org.antlr.runtime.tree.TreeAdaptor adaptor, String[] tokenNames, Object t, String goal)">3</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeNodeStream input)">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="protected Object getCurrentInputSymbol(org.antlr.runtime.IntStream input)">1</method>
			<method name="public static boolean inContext(org.antlr.runtime.tree.TreeAdaptor adaptor, String[] tokenNames, Object t, String context)">11</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void traceIn(String ruleName, int ruleIndex)">1</method>
			<method name="public void setTreeNodeStream(org.antlr.runtime.tree.TreeNodeStream input)">1</method>
			<method name="public String getErrorMessage(org.antlr.runtime.RecognitionException e, String[] tokenNames)">3</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.CharStreamState</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>3</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>2</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>7</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenRewriteStream</name>
		<wmc>46</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>24</cbo>
		<rfc>85</rfc>
		<lcom>949</lcom>
		<ca>4</ca>
		<ce>23</ce>
		<npm>36</npm>
		<lcom3>0.9333333333333333</lcom3>
		<loc>1024</loc>
		<dam>0.2857142857142857</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3070652173913043</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>21.108695652173914</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.TokenSource tokenSource)">1</method>
			<method name="public void deleteProgram()">1</method>
			<method name="public int getLastRewriteTokenIndex()">1</method>
			<method name="public void delete(org.antlr.runtime.Token indexT)">1</method>
			<method name="public void insertAfter(String programName, org.antlr.runtime.Token t, Object text)">1</method>
			<method name="public void replace(String programName, int from, int to, Object text)">5</method>
			<method name="public void delete(String programName, int from, int to)">1</method>
			<method name="public void delete(int index)">1</method>
			<method name="static Class class$(String x0)">1</method>
			<method name="public String toString()">1</method>
			<method name="public void replace(int from, int to, Object text)">1</method>
			<method name="public void delete(org.antlr.runtime.Token from, org.antlr.runtime.Token to)">1</method>
			<method name="public void insertAfter(int index, Object text)">1</method>
			<method name="public void insertBefore(String programName, org.antlr.runtime.Token t, Object text)">1</method>
			<method name="public void delete(int from, int to)">1</method>
			<method name="protected java.util.List getKindOfOps(java.util.List rewrites, Class kind, int before)">5</method>
			<method name="public void replace(String programName, org.antlr.runtime.Token from, org.antlr.runtime.Token to, Object text)">1</method>
			<method name="public String toDebugString()">1</method>
			<method name="protected void init()">1</method>
			<method name="public void insertAfter(String programName, int index, Object text)">1</method>
			<method name="public void insertBefore(int index, Object text)">1</method>
			<method name="public void replace(org.antlr.runtime.Token from, org.antlr.runtime.Token to, Object text)">1</method>
			<method name="public void insertBefore(String programName, int index, Object text)">1</method>
			<method name="public void deleteProgram(String programName)">1</method>
			<method name="public void replace(int index, Object text)">1</method>
			<method name="public String toString(String programName, int start, int end)">10</method>
			<method name="protected String catOpText(Object a, Object b)">3</method>
			<method name="public void replace(org.antlr.runtime.Token indexT, Object text)">1</method>
			<method name="public void insertBefore(org.antlr.runtime.Token t, Object text)">1</method>
			<method name="protected java.util.List getKindOfOps(java.util.List rewrites, Class kind)">1</method>
			<method name="protected java.util.Map reduceToSingleOperationPerIndex(java.util.List rewrites)">32</method>
			<method name="public String toOriginalString()">1</method>
			<method name="public void rollback(String programName, int instructionIndex)">2</method>
			<method name="public void insertAfter(org.antlr.runtime.Token t, Object text)">1</method>
			<method name="public void delete(String programName, org.antlr.runtime.Token from, org.antlr.runtime.Token to)">1</method>
			<method name="protected void setLastRewriteTokenIndex(String programName, int i)">1</method>
			<method name="public String toString(int start, int end)">1</method>
			<method name="private java.util.List initializeProgram(String name)">1</method>
			<method name="public String toOriginalString(int start, int end)">4</method>
			<method name="public void rollback(int instructionIndex)">1</method>
			<method name="public String toDebugString(int start, int end)">4</method>
			<method name="protected int getLastRewriteTokenIndex(String programName)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenSource tokenSource, int channel)">1</method>
			<method name="protected java.util.List getProgram(String name)">2</method>
			<method name="public String toString(String programName)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$ContextVisitor</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>4</ca>
		<ce>3</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void visit(Object, Object, int, java.util.Map)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.RewriteRuleNodeStream</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>12</rfc>
		<lcom>15</lcom>
		<ca>0</ca>
		<ce>7</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>36</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.0</amc>
		<cc>
			<method name="protected Object dup(Object el)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription, Object oneElement)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription, java.util.List elements)">1</method>
			<method name="public Object nextNode()">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription)">1</method>
			<method name="protected Object toTree(Object el)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.ClassicToken</name>
		<wmc>19</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>30</rfc>
		<lcom>75</lcom>
		<ca>0</ca>
		<ce>6</ce>
		<npm>19</npm>
		<lcom3>0.7685185185185185</lcom3>
		<loc>205</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3368421052631579</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.473684210526315</amc>
		<cc>
			<method name="public int getTokenIndex()">1</method>
			<method name="public void _init_(org.antlr.runtime.Token oldToken)">1</method>
			<method name="public void setLine(int line)">1</method>
			<method name="public int getChannel()">1</method>
			<method name="public void setChannel(int channel)">1</method>
			<method name="public void setInputStream(org.antlr.runtime.CharStream input)">1</method>
			<method name="public void setType(int type)">1</method>
			<method name="public void _init_(int type)">1</method>
			<method name="public org.antlr.runtime.CharStream getInputStream()">1</method>
			<method name="public String toString()">3</method>
			<method name="public String getText()">1</method>
			<method name="public void setTokenIndex(int index)">1</method>
			<method name="public int getLine()">1</method>
			<method name="public int getCharPositionInLine()">1</method>
			<method name="public int getType()">1</method>
			<method name="public void setText(String text)">1</method>
			<method name="public void _init_(int type, String text, int channel)">1</method>
			<method name="public void setCharPositionInLine(int charPositionInLine)">1</method>
			<method name="public void _init_(int type, String text)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.CommonTree</name>
		<wmc>20</wmc>
		<dit>0</dit>
		<noc>2</noc>
		<cbo>13</cbo>
		<rfc>33</rfc>
		<lcom>12</lcom>
		<ca>8</ca>
		<ce>7</ce>
		<npm>20</npm>
		<lcom3>0.6842105263157895</lcom3>
		<loc>292</loc>
		<dam>0.4</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.26</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.35</amc>
		<cc>
			<method name="public org.antlr.runtime.Token getToken()">1</method>
			<method name="public void _init_(org.antlr.runtime.Token t)">1</method>
			<method name="public void setTokenStopIndex(int index)">1</method>
			<method name="public void setTokenStartIndex(int index)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.CommonTree node)">1</method>
			<method name="public int getTokenStartIndex()">3</method>
			<method name="public org.antlr.runtime.tree.Tree getParent()">1</method>
			<method name="public String toString()">4</method>
			<method name="public org.antlr.runtime.tree.Tree dupNode()">1</method>
			<method name="public String getText()">2</method>
			<method name="public boolean isNil()">2</method>
			<method name="public int getLine()">4</method>
			<method name="public int getCharPositionInLine()">4</method>
			<method name="public int getType()">2</method>
			<method name="public int getChildIndex()">1</method>
			<method name="public void setUnknownTokenBoundaries()">8</method>
			<method name="public void _init_()">1</method>
			<method name="public void setParent(org.antlr.runtime.tree.Tree t)">1</method>
			<method name="public void setChildIndex(int index)">1</method>
			<method name="public int getTokenStopIndex()">3</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.MismatchedNotSetException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>11</rfc>
		<lcom>3</lcom>
		<ca>2</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>28</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.333333333333334</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(org.antlr.runtime.BitSet expecting, org.antlr.runtime.IntStream input)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.BaseTree</name>
		<wmc>28</wmc>
		<dit>1</dit>
		<noc>3</noc>
		<cbo>13</cbo>
		<rfc>53</rfc>
		<lcom>306</lcom>
		<ca>3</ca>
		<ce>11</ce>
		<npm>27</npm>
		<lcom3>0.5925925925925926</lcom3>
		<loc>629</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.32142857142857145</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>21.428571428571427</amc>
		<cc>
			<method name="public Object deleteChild(int i)">2</method>
			<method name="public void addChildren(java.util.List kids)">2</method>
			<method name="public void sanityCheckParentAndChildIndexes()">1</method>
			<method name="public String toStringTree()">8</method>
			<method name="public int getLine()">1</method>
			<method name="public void sanityCheckParentAndChildIndexes(org.antlr.runtime.tree.Tree parent, int i)">4</method>
			<method name="public int getChildIndex()">1</method>
			<method name="public void setChild(int i, org.antlr.runtime.tree.Tree t)">4</method>
			<method name="public org.antlr.runtime.tree.Tree getChild(int i)">3</method>
			<method name="public int getChildCount()">2</method>
			<method name="public void setChildIndex(int index)">1</method>
			<method name="public void replaceChildren(int startChildIndex, int stopChildIndex, Object t)">9</method>
			<method name="public boolean hasAncestor(int ttype)">2</method>
			<method name="public java.util.List getChildren()">1</method>
			<method name="protected java.util.List createChildrenList()">1</method>
			<method name="public org.antlr.runtime.tree.Tree getFirstChildWithType(int type)">4</method>
			<method name="public org.antlr.runtime.tree.Tree getParent()">1</method>
			<method name="public void addChild(org.antlr.runtime.tree.Tree t)">8</method>
			<method name="public java.util.List getAncestors()">3</method>
			<method name="public void _init_(org.antlr.runtime.tree.Tree node)">1</method>
			<method name="public boolean isNil()">1</method>
			<method name="public int getCharPositionInLine()">1</method>
			<method name="public abstract String toString()">1</method>
			<method name="public void freshenParentAndChildIndexes()">1</method>
			<method name="public org.antlr.runtime.tree.Tree getAncestor(int ttype)">3</method>
			<method name="public void _init_()">1</method>
			<method name="public void setParent(org.antlr.runtime.tree.Tree t)">1</method>
			<method name="public void freshenParentAndChildIndexes(int offset)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenRewriteStream$ReplaceOp</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>7</cbo>
		<rfc>9</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>6</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>52</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>15.666666666666666</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public int execute(StringBuffer buf)">2</method>
			<method name="public void _init_(org.antlr.runtime.TokenRewriteStream, int from, int to, Object text)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$TreePattern</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>12</cbo>
		<rfc>7</rfc>
		<lcom>1</lcom>
		<ca>6</ca>
		<ce>6</ce>
		<npm>2</npm>
		<lcom3>1.5</lcom3>
		<loc>29</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.5</amc>
		<cc>
			<method name="public String toString()">2</method>
			<method name="public void _init_(org.antlr.runtime.Token payload)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.ParseTree</name>
		<wmc>12</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>22</rfc>
		<lcom>60</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>12</npm>
		<lcom3>0.7272727272727273</lcom3>
		<loc>137</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.25</amc>
		<cc>
			<method name="public String toString()">3</method>
			<method name="public org.antlr.runtime.tree.Tree dupNode()">1</method>
			<method name="public String getText()">1</method>
			<method name="public void _init_(Object label)">1</method>
			<method name="public int getType()">1</method>
			<method name="public void setTokenStopIndex(int index)">1</method>
			<method name="public String toStringWithHiddenTokens()">4</method>
			<method name="public void setTokenStartIndex(int index)">1</method>
			<method name="public void _toStringLeaves(StringBuffer buf)">4</method>
			<method name="public int getTokenStartIndex()">1</method>
			<method name="public String toInputString()">1</method>
			<method name="public int getTokenStopIndex()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.Profiler</name>
		<wmc>25</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>20</cbo>
		<rfc>64</rfc>
		<lcom>160</lcom>
		<ca>0</ca>
		<ce>20</ce>
		<npm>22</npm>
		<lcom3>0.8256172839506174</lcom3>
		<loc>1404</loc>
		<dam>0.2222222222222222</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.204</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>54.08</amc>
		<cc>
			<method name="public void LT(int i, org.antlr.runtime.Token t)">3</method>
			<method name="public void recognitionException(org.antlr.runtime.RecognitionException e)">1</method>
			<method name="public void exitRule(String grammarFileName, String ruleName)">1</method>
			<method name="public void semanticPredicate(boolean result, String predicate)">2</method>
			<method name="public void enterRule(String grammarFileName, String ruleName)">2</method>
			<method name="public void endBacktrack(int level, boolean successful)">1</method>
			<method name="public void consumeToken(org.antlr.runtime.Token token)">1</method>
			<method name="protected int[] trim(int[] X, int n)">2</method>
			<method name="public String toString()">1</method>
			<method name="public void exitDecision(int decisionNumber)">5</method>
			<method name="public void consumeHiddenToken(org.antlr.runtime.Token token)">1</method>
			<method name="public void memoize(org.antlr.runtime.IntStream input, int ruleIndex, int ruleStartIndex, String ruleName)">1</method>
			<method name="public void beginBacktrack(int level)">1</method>
			<method name="public String toNotifyString()">5</method>
			<method name="public void terminate()">1</method>
			<method name="public boolean inDecision()">2</method>
			<method name="public void setParser(org.antlr.runtime.debug.DebugParser parser)">1</method>
			<method name="public void enterDecision(int decisionNumber)">1</method>
			<method name="public static String toString(String notifyDataLine)">2</method>
			<method name="public void _init_(org.antlr.runtime.debug.DebugParser parser)">1</method>
			<method name="public int getNumberOfHiddenTokens(int i, int j)">4</method>
			<method name="protected static String[] decodeReportData(String data)">3</method>
			<method name="public void _init_()">1</method>
			<method name="protected int[] toArray(java.util.List a)">2</method>
			<method name="public void examineRuleMemoization(org.antlr.runtime.IntStream input, int ruleIndex, String ruleName)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.ANTLRFileStream</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>12</rfc>
		<lcom>4</lcom>
		<ca>0</ca>
		<ce>9</ce>
		<npm>4</npm>
		<lcom3>0.3333333333333333</lcom3>
		<loc>73</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.875</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.0</amc>
		<cc>
			<method name="public String getSourceName()">1</method>
			<method name="public void _init_(String fileName)">1</method>
			<method name="public void load(String fileName, String encoding)">1</method>
			<method name="public void _init_(String fileName, String encoding)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.BitSet</name>
		<wmc>28</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>20</cbo>
		<rfc>42</rfc>
		<lcom>106</lcom>
		<ca>9</ca>
		<ce>11</ce>
		<npm>24</npm>
		<lcom3>0.8055555555555556</lcom3>
		<loc>605</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.20918367346938777</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>20.464285714285715</amc>
		<cc>
			<method name="public boolean member(int el)">4</method>
			<method name="public void remove(int el)">2</method>
			<method name="public org.antlr.runtime.BitSet or(org.antlr.runtime.BitSet a)">2</method>
			<method name="public static org.antlr.runtime.BitSet of(int el)">1</method>
			<method name="public long[] toPackedArray()">1</method>
			<method name="private static final int wordNumber(int bit)">1</method>
			<method name="public Object clone()">1</method>
			<method name="public int size()">5</method>
			<method name="public String toString(String[] tokenNames)">6</method>
			<method name="public void _init_(long[] bits_)">1</method>
			<method name="public String toString()">1</method>
			<method name="public void _init_(java.util.List items)">2</method>
			<method name="public void _init_(int nbits)">1</method>
			<method name="public boolean equals(Object other)">10</method>
			<method name="public void growToInclude(int bit)">1</method>
			<method name="public int lengthInLongWords()">1</method>
			<method name="public void orInPlace(org.antlr.runtime.BitSet a)">4</method>
			<method name="private void setSize(int nwords)">1</method>
			<method name="public int numBits()">1</method>
			<method name="public int[] toArray()">3</method>
			<method name="public static org.antlr.runtime.BitSet of(int a, int b, int c, int d)">1</method>
			<method name="public void add(int el)">2</method>
			<method name="public boolean isNil()">3</method>
			<method name="private final int numWordsToHold(int el)">1</method>
			<method name="public static org.antlr.runtime.BitSet of(int a, int b)">1</method>
			<method name="private static final long bitMask(int bitNumber)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public static org.antlr.runtime.BitSet of(int a, int b, int c)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenRewriteStream$DeleteOp</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>7</rfc>
		<lcom>1</lcom>
		<ca>0</ca>
		<ce>6</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>30</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.5</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenRewriteStream, int from, int to)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.CharStream</name>
		<wmc>6</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>6</rfc>
		<lcom>15</lcom>
		<ca>8</ca>
		<ce>4</ce>
		<npm>6</npm>
		<lcom3>1.2</lcom3>
		<loc>7</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.8333333333333334</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract int getLine()">1</method>
			<method name="public abstract void setLine(int)">1</method>
			<method name="public abstract void setCharPositionInLine(int)">1</method>
			<method name="public abstract int getCharPositionInLine()">1</method>
			<method name="public abstract int LT(int)">1</method>
			<method name="public abstract String substring(int, int)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugParser</name>
		<wmc>11</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>21</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>11</ce>
		<npm>11</npm>
		<lcom3>0.45</lcom3>
		<loc>118</loc>
		<dam>0.5</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.2727272727272727</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.545454545454545</amc>
		<cc>
			<method name="public void reportError(org.antlr.runtime.RecognitionException e)">1</method>
			<method name="public void setDebugListener(org.antlr.runtime.debug.DebugEventListener dbg)">2</method>
			<method name="public org.antlr.runtime.debug.DebugEventListener getDebugListener()">1</method>
			<method name="public void endResync()">1</method>
			<method name="public void beginBacktrack(int level)">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream input, org.antlr.runtime.RecognizerSharedState state)">2</method>
			<method name="public void endBacktrack(int level, boolean successful)">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream input, org.antlr.runtime.debug.DebugEventListener dbg)">2</method>
			<method name="public void beginResync()">1</method>
			<method name="public void reportError(java.io.IOException e)">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream input, org.antlr.runtime.debug.DebugEventListener dbg, org.antlr.runtime.RecognizerSharedState state)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.CommonErrorNode</name>
		<wmc>5</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>16</cbo>
		<rfc>18</rfc>
		<lcom>6</lcom>
		<ca>1</ca>
		<ce>15</ce>
		<npm>5</npm>
		<lcom3>0.5625</lcom3>
		<loc>188</loc>
		<dam>0.0</dam>
		<moa>4</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>35.8</amc>
		<cc>
			<method name="public String toString()">5</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream input, org.antlr.runtime.Token start, org.antlr.runtime.Token stop, org.antlr.runtime.RecognitionException e)">4</method>
			<method name="public String getText()">4</method>
			<method name="public boolean isNil()">1</method>
			<method name="public int getType()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeNodeStream</name>
		<wmc>8</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>8</rfc>
		<lcom>28</lcom>
		<ca>8</ca>
		<ce>6</ce>
		<npm>8</npm>
		<lcom3>2.0</lcom3>
		<loc>8</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract String toString(Object, Object)">1</method>
			<method name="public abstract Object LT(int)">1</method>
			<method name="public abstract void replaceChildren(Object, int, int, Object)">1</method>
			<method name="public abstract Object get(int)">1</method>
			<method name="public abstract void setUniqueNavigationNodes(boolean)">1</method>
			<method name="public abstract Object getTreeSource()">1</method>
			<method name="public abstract org.antlr.runtime.tree.TreeAdaptor getTreeAdaptor()">1</method>
			<method name="public abstract org.antlr.runtime.TokenStream getTokenStream()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$TreePatternTreeAdaptor</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>4</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>10</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public Object create(org.antlr.runtime.Token payload)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeRuleReturnScope</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>3</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>0</ca>
		<ce>3</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public void _init_()">1</method>
			<method name="public Object getStart()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.BaseTreeAdaptor</name>
		<wmc>24</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>15</cbo>
		<rfc>50</rfc>
		<lcom>274</lcom>
		<ca>1</ca>
		<ce>14</ce>
		<npm>24</npm>
		<lcom3>0.9782608695652174</lcom3>
		<loc>305</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.35119047619047616</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.625</amc>
		<cc>
			<method name="public Object create(int tokenType, org.antlr.runtime.Token fromToken)">1</method>
			<method name="public abstract org.antlr.runtime.Token createToken(org.antlr.runtime.Token)">1</method>
			<method name="public Object create(int tokenType, org.antlr.runtime.Token fromToken, String text)">1</method>
			<method name="public Object rulePostProcessing(Object root)">5</method>
			<method name="public Object errorNode(org.antlr.runtime.TokenStream input, org.antlr.runtime.Token start, org.antlr.runtime.Token stop, org.antlr.runtime.RecognitionException e)">1</method>
			<method name="public Object deleteChild(Object t, int i)">1</method>
			<method name="public Object create(int tokenType, String text)">1</method>
			<method name="public Object becomeRoot(Object newRoot, Object oldRoot)">5</method>
			<method name="public void addChild(Object t, Object child)">3</method>
			<method name="public void setText(Object t, String text)">1</method>
			<method name="public void setType(Object t, int type)">1</method>
			<method name="public int getChildCount(Object t)">1</method>
			<method name="public boolean isNil(Object tree)">1</method>
			<method name="public Object dupTree(Object t, Object parent)">3</method>
			<method name="public abstract org.antlr.runtime.Token createToken(int, String)">1</method>
			<method name="public int getType(Object t)">1</method>
			<method name="public int getUniqueID(Object node)">3</method>
			<method name="public Object becomeRoot(org.antlr.runtime.Token newRoot, Object oldRoot)">1</method>
			<method name="public Object getChild(Object t, int i)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object nil()">1</method>
			<method name="public Object dupTree(Object tree)">1</method>
			<method name="public void setChild(Object t, int i, Object child)">1</method>
			<method name="public String getText(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugTreeNodeStream</name>
		<wmc>20</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>43</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>20</npm>
		<lcom3>0.7157894736842105</lcom3>
		<loc>199</loc>
		<dam>1.0</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.275</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.7</amc>
		<cc>
			<method name="public void seek(int index)">1</method>
			<method name="public Object get(int i)">1</method>
			<method name="public int LA(int i)">1</method>
			<method name="public void setDebugListener(org.antlr.runtime.debug.DebugEventListener dbg)">1</method>
			<method name="public int mark()">1</method>
			<method name="public void rewind()">1</method>
			<method name="public int index()">1</method>
			<method name="public void release(int marker)">1</method>
			<method name="public org.antlr.runtime.TokenStream getTokenStream()">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeNodeStream input, org.antlr.runtime.debug.DebugEventListener dbg)">1</method>
			<method name="public int size()">1</method>
			<method name="public String toString(Object start, Object stop)">1</method>
			<method name="public Object LT(int i)">1</method>
			<method name="public void consume()">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public void rewind(int marker)">1</method>
			<method name="public Object getTreeSource()">1</method>
			<method name="public void replaceChildren(Object parent, int startChildIndex, int stopChildIndex, Object t)">1</method>
			<method name="public void setUniqueNavigationNodes(boolean uniqueNavigationNodes)">1</method>
			<method name="public org.antlr.runtime.tree.TreeAdaptor getTreeAdaptor()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.RewriteRuleTokenStream</name>
		<wmc>7</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>13</rfc>
		<lcom>21</lcom>
		<ca>0</ca>
		<ce>8</ce>
		<npm>5</npm>
		<lcom3>2.0</lcom3>
		<loc>44</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4857142857142857</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.285714285714286</amc>
		<cc>
			<method name="protected Object dup(Object el)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription, Object oneElement)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription, java.util.List elements)">1</method>
			<method name="public Object nextNode()">1</method>
			<method name="public org.antlr.runtime.Token nextToken()">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription)">1</method>
			<method name="protected Object toTree(Object el)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.BlankDebugEventListener</name>
		<wmc>32</wmc>
		<dit>1</dit>
		<noc>5</noc>
		<cbo>11</cbo>
		<rfc>33</rfc>
		<lcom>496</lcom>
		<ca>5</ca>
		<ce>6</ce>
		<npm>32</npm>
		<lcom3>2.0</lcom3>
		<loc>66</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2857142857142857</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>1.0625</amc>
		<cc>
			<method name="public void LT(int i, org.antlr.runtime.Token t)">1</method>
			<method name="public void recognitionException(org.antlr.runtime.RecognitionException e)">1</method>
			<method name="public void exitRule(String grammarFileName, String ruleName)">1</method>
			<method name="public void createNode(Object node, org.antlr.runtime.Token token)">1</method>
			<method name="public void semanticPredicate(boolean result, String predicate)">1</method>
			<method name="public void enterRule(String grammarFileName, String ruleName)">1</method>
			<method name="public void enterSubRule(int decisionNumber)">1</method>
			<method name="public void endBacktrack(int level, boolean successful)">1</method>
			<method name="public void consumeToken(org.antlr.runtime.Token token)">1</method>
			<method name="public void location(int line, int pos)">1</method>
			<method name="public void exitDecision(int decisionNumber)">1</method>
			<method name="public void consumeHiddenToken(org.antlr.runtime.Token token)">1</method>
			<method name="public void nilNode(Object t)">1</method>
			<method name="public void beginBacktrack(int level)">1</method>
			<method name="public void terminate()">1</method>
			<method name="public void exitSubRule(int decisionNumber)">1</method>
			<method name="public void setTokenBoundaries(Object t, int tokenStartIndex, int tokenStopIndex)">1</method>
			<method name="public void rewind(int i)">1</method>
			<method name="public void rewind()">1</method>
			<method name="public void endResync()">1</method>
			<method name="public void consumeNode(Object t)">1</method>
			<method name="public void mark(int i)">1</method>
			<method name="public void enterDecision(int decisionNumber)">1</method>
			<method name="public void LT(int i, Object t)">1</method>
			<method name="public void errorNode(Object t)">1</method>
			<method name="public void enterAlt(int alt)">1</method>
			<method name="public void addChild(Object root, Object child)">1</method>
			<method name="public void becomeRoot(Object newRoot, Object oldRoot)">1</method>
			<method name="public void commence()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void beginResync()">1</method>
			<method name="public void createNode(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard</name>
		<wmc>23</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>25</cbo>
		<rfc>57</rfc>
		<lcom>187</lcom>
		<ca>4</ca>
		<ce>25</ce>
		<npm>18</npm>
		<lcom3>0.6969696969696969</lcom3>
		<loc>585</loc>
		<dam>0.6666666666666666</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.30434782608695654</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>24.304347826086957</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="public java.util.List find(Object t, int ttype)">1</method>
			<method name="protected void _visit(Object t, Object parent, int childIndex, int ttype, org.antlr.runtime.tree.TreeWizard$ContextVisitor visitor)">4</method>
			<method name="public java.util.List find(Object t, String pattern)">5</method>
			<method name="public int getTokenType(String tokenName)">3</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, java.util.Map tokenNameToTypeMap)">1</method>
			<method name="public void _init_(String[] tokenNames)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String[] tokenNames)">1</method>
			<method name="static Class class$(String x0)">1</method>
			<method name="public void visit(Object t, String pattern, org.antlr.runtime.tree.TreeWizard$ContextVisitor visitor)">5</method>
			<method name="public java.util.Map computeTokenTypes(String[] tokenNames)">3</method>
			<method name="public java.util.Map index(Object t)">1</method>
			<method name="public Object findFirst(Object t, String pattern)">1</method>
			<method name="protected static boolean _equals(Object t1, Object t2, org.antlr.runtime.tree.TreeAdaptor adaptor)">8</method>
			<method name="public void visit(Object t, int ttype, org.antlr.runtime.tree.TreeWizard$ContextVisitor visitor)">1</method>
			<method name="public boolean parse(Object t, String pattern, java.util.Map labels)">1</method>
			<method name="public boolean parse(Object t, String pattern)">1</method>
			<method name="protected boolean _parse(Object t1, org.antlr.runtime.tree.TreeWizard$TreePattern tpattern, java.util.Map labels)">13</method>
			<method name="public static boolean equals(Object t1, Object t2, org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="public Object create(String pattern)">1</method>
			<method name="public Object findFirst(Object t, int ttype)">1</method>
			<method name="public boolean equals(Object t1, Object t2)">1</method>
			<method name="protected void _index(Object t, java.util.Map m)">4</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.CommonToken</name>
		<wmc>23</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>36</rfc>
		<lcom>83</lcom>
		<ca>8</ca>
		<ce>7</ce>
		<npm>23</npm>
		<lcom3>0.7727272727272727</lcom3>
		<loc>310</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.33043478260869563</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.08695652173913</amc>
		<cc>
			<method name="public int getTokenIndex()">1</method>
			<method name="public void _init_(org.antlr.runtime.Token oldToken)">2</method>
			<method name="public void setLine(int line)">1</method>
			<method name="public int getChannel()">1</method>
			<method name="public void setChannel(int channel)">1</method>
			<method name="public void setInputStream(org.antlr.runtime.CharStream input)">1</method>
			<method name="public void setType(int type)">1</method>
			<method name="public void setStartIndex(int start)">1</method>
			<method name="public void _init_(int type)">1</method>
			<method name="public int getStartIndex()">1</method>
			<method name="public int getStopIndex()">1</method>
			<method name="public org.antlr.runtime.CharStream getInputStream()">1</method>
			<method name="public String toString()">3</method>
			<method name="public String getText()">3</method>
			<method name="public void setTokenIndex(int index)">1</method>
			<method name="public int getLine()">1</method>
			<method name="public int getCharPositionInLine()">1</method>
			<method name="public int getType()">1</method>
			<method name="public void _init_(org.antlr.runtime.CharStream input, int type, int channel, int start, int stop)">1</method>
			<method name="public void setText(String text)">1</method>
			<method name="public void setStopIndex(int stop)">1</method>
			<method name="public void setCharPositionInLine(int charPositionInLine)">1</method>
			<method name="public void _init_(int type, String text)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugEventSocketProxy</name>
		<wmc>42</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>24</cbo>
		<rfc>82</rfc>
		<lcom>719</lcom>
		<ca>0</ca>
		<ce>24</ce>
		<npm>36</npm>
		<lcom3>0.7886178861788619</lcom3>
		<loc>895</loc>
		<dam>0.8888888888888888</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.20714285714285716</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>20.095238095238095</amc>
		<cc>
			<method name="public void LT(int i, org.antlr.runtime.Token t)">2</method>
			<method name="public void recognitionException(org.antlr.runtime.RecognitionException e)">1</method>
			<method name="protected void serializeText(StringBuffer buf, String text)">2</method>
			<method name="public void exitRule(String grammarFileName, String ruleName)">1</method>
			<method name="public void consumeHiddenToken(org.antlr.runtime.Token t)">1</method>
			<method name="public void consumeToken(org.antlr.runtime.Token t)">1</method>
			<method name="public void createNode(Object node, org.antlr.runtime.Token token)">1</method>
			<method name="public void semanticPredicate(boolean result, String predicate)">1</method>
			<method name="public void enterRule(String grammarFileName, String ruleName)">1</method>
			<method name="protected void serializeNode(StringBuffer buf, Object t)">2</method>
			<method name="public void enterSubRule(int decisionNumber)">1</method>
			<method name="public void endBacktrack(int level, boolean successful)">2</method>
			<method name="public void location(int line, int pos)">1</method>
			<method name="public void exitDecision(int decisionNumber)">1</method>
			<method name="public void nilNode(Object t)">1</method>
			<method name="public void _init_(org.antlr.runtime.BaseRecognizer recognizer, org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="public void beginBacktrack(int level)">1</method>
			<method name="protected void ack()">1</method>
			<method name="public org.antlr.runtime.tree.TreeAdaptor getTreeAdaptor()">1</method>
			<method name="protected String escapeNewlines(String txt)">1</method>
			<method name="public void terminate()">1</method>
			<method name="public void exitSubRule(int decisionNumber)">1</method>
			<method name="public void setTokenBoundaries(Object t, int tokenStartIndex, int tokenStopIndex)">1</method>
			<method name="public void rewind(int i)">1</method>
			<method name="protected void transmit(String event)">1</method>
			<method name="public void rewind()">1</method>
			<method name="public void endResync()">1</method>
			<method name="protected String serializeToken(org.antlr.runtime.Token t)">1</method>
			<method name="public void consumeNode(Object t)">1</method>
			<method name="public void mark(int i)">1</method>
			<method name="public void handshake()">1</method>
			<method name="public void _init_(org.antlr.runtime.BaseRecognizer recognizer, int port, org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="public void enterDecision(int decisionNumber)">1</method>
			<method name="public void LT(int i, Object t)">1</method>
			<method name="public void setTreeAdaptor(org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="public void errorNode(Object t)">1</method>
			<method name="public void enterAlt(int alt)">1</method>
			<method name="public void addChild(Object root, Object child)">1</method>
			<method name="public void becomeRoot(Object newRoot, Object oldRoot)">1</method>
			<method name="public void commence()">1</method>
			<method name="public void beginResync()">1</method>
			<method name="public void createNode(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.Lexer</name>
		<wmc>27</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>19</cbo>
		<rfc>59</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>19</ce>
		<npm>27</npm>
		<lcom3>0.3076923076923077</lcom3>
		<loc>632</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.20833333333333334</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>22.37037037037037</amc>
		<cc>
			<method name="public org.antlr.runtime.CharStream getCharStream()">1</method>
			<method name="public void match(int c)">1</method>
			<method name="public void recover(org.antlr.runtime.RecognitionException re)">1</method>
			<method name="public void traceOut(String ruleName, int ruleIndex)">1</method>
			<method name="public void reset()">3</method>
			<method name="public void _init_(org.antlr.runtime.CharStream input, org.antlr.runtime.RecognizerSharedState state)">1</method>
			<method name="public void skip()">1</method>
			<method name="public void setCharStream(org.antlr.runtime.CharStream input)">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public int getLine()">1</method>
			<method name="public void _init_(org.antlr.runtime.CharStream input)">1</method>
			<method name="public void emit(org.antlr.runtime.Token token)">1</method>
			<method name="public int getCharIndex()">1</method>
			<method name="public void match(String s)">1</method>
			<method name="public void reportError(org.antlr.runtime.RecognitionException e)">1</method>
			<method name="public String getCharErrorDisplay(int c)">6</method>
			<method name="public abstract void mTokens()">1</method>
			<method name="public String getText()">2</method>
			<method name="public org.antlr.runtime.Token nextToken()">4</method>
			<method name="public void matchAny()">1</method>
			<method name="public int getCharPositionInLine()">1</method>
			<method name="public void setText(String text)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void matchRange(int a, int b)">1</method>
			<method name="public void traceIn(String ruleName, int ruleIndex)">1</method>
			<method name="public org.antlr.runtime.Token emit()">1</method>
			<method name="public String getErrorMessage(org.antlr.runtime.RecognitionException e, String[] tokenNames)">7</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.misc.Stats</name>
		<wmc>8</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>24</rfc>
		<lcom>28</lcom>
		<ca>1</ca>
		<ce>12</ce>
		<npm>8</npm>
		<lcom3>1.1428571428571428</lcom3>
		<loc>226</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>27.125</amc>
		<cc>
			<method name="public static int sum(int[] X)">3</method>
			<method name="public static double avg(int[] X)">4</method>
			<method name="public static void writeReport(String filename, String data)">1</method>
			<method name="public static int min(int[] X)">4</method>
			<method name="public static int max(int[] X)">4</method>
			<method name="public static String getAbsoluteFileName(String filename)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public static double stddev(int[] X)">3</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.RemoteDebugEventSocketListener$ProxyTree</name>
		<wmc>10</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>11</rfc>
		<lcom>35</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>10</npm>
		<lcom3>0.8703703703703705</lcom3>
		<loc>78</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.2</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public org.antlr.runtime.tree.Tree dupNode()">1</method>
			<method name="public String getText()">1</method>
			<method name="public int getType()">1</method>
			<method name="public void setTokenStopIndex(int index)">1</method>
			<method name="public void _init_(int ID, int type, int line, int charPos, int tokenIndex, String text)">1</method>
			<method name="public void setTokenStartIndex(int index)">1</method>
			<method name="public void _init_(int ID)">1</method>
			<method name="public int getTokenStartIndex()">1</method>
			<method name="public int getTokenStopIndex()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.MissingTokenException</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>11</rfc>
		<lcom>4</lcom>
		<ca>2</ca>
		<ce>7</ce>
		<npm>4</npm>
		<lcom3>0.6666666666666666</lcom3>
		<loc>61</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.0</amc>
		<cc>
			<method name="public String toString()">4</method>
			<method name="public int getMissingType()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(int expecting, org.antlr.runtime.IntStream input, Object inserted)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.EarlyExitException</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>4</rfc>
		<lcom>1</lcom>
		<ca>2</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>13</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.0</amc>
		<cc>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(int decisionNumber, org.antlr.runtime.IntStream input)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenRewriteStream$RewriteOperation</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>2</noc>
		<cbo>8</cbo>
		<rfc>14</rfc>
		<lcom>0</lcom>
		<ca>3</ca>
		<ce>6</ce>
		<npm>2</npm>
		<lcom3>0.75</lcom3>
		<loc>59</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.333333333333332</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public int execute(StringBuffer buf)">1</method>
			<method name="protected void _init_(org.antlr.runtime.TokenRewriteStream, int index, Object text)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.RecognitionException</name>
		<wmc>4</wmc>
		<dit>3</dit>
		<noc>7</noc>
		<cbo>38</cbo>
		<rfc>21</rfc>
		<lcom>0</lcom>
		<ca>26</ca>
		<ce>13</ce>
		<npm>3</npm>
		<lcom3>0.625</lcom3>
		<loc>216</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.9130434782608695</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>51.0</amc>
		<cc>
			<method name="public int getUnexpectedType()">3</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(org.antlr.runtime.IntStream input)">4</method>
			<method name="protected void extractInformationFromTreeNodeStream(org.antlr.runtime.IntStream input)">7</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.Token</name>
		<wmc>15</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>46</cbo>
		<rfc>16</rfc>
		<lcom>105</lcom>
		<ca>42</ca>
		<ce>5</ce>
		<npm>14</npm>
		<lcom3>1.051948051948052</lcom3>
		<loc>42</loc>
		<dam>0.0</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>1.0666666666666667</amc>
		<cc>
			<method name="public abstract int getLine()">1</method>
			<method name="public abstract void setCharPositionInLine(int)">1</method>
			<method name="public abstract int getChannel()">1</method>
			<method name="public abstract int getCharPositionInLine()">1</method>
			<method name="public abstract void setText(String)">1</method>
			<method name="public abstract int getType()">1</method>
			<method name="public abstract void setTokenIndex(int)">1</method>
			<method name="public abstract void setChannel(int)">1</method>
			<method name="public abstract org.antlr.runtime.CharStream getInputStream()">1</method>
			<method name="public abstract void setType(int)">1</method>
			<method name="public abstract void setLine(int)">1</method>
			<method name="public abstract String getText()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public abstract int getTokenIndex()">1</method>
			<method name="public abstract void setInputStream(org.antlr.runtime.CharStream)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugTokenStream</name>
		<wmc>19</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>40</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>18</npm>
		<lcom3>0.5972222222222222</lcom3>
		<loc>222</loc>
		<dam>0.75</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.3157894736842105</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.473684210526315</amc>
		<cc>
			<method name="public org.antlr.runtime.Token get(int i)">1</method>
			<method name="public void seek(int index)">1</method>
			<method name="public int LA(int i)">2</method>
			<method name="public void setDebugListener(org.antlr.runtime.debug.DebugEventListener dbg)">1</method>
			<method name="public int mark()">1</method>
			<method name="public void rewind()">1</method>
			<method name="public int index()">1</method>
			<method name="public void release(int marker)">1</method>
			<method name="public org.antlr.runtime.TokenSource getTokenSource()">1</method>
			<method name="public int size()">1</method>
			<method name="protected void consumeInitialHiddenTokens()">2</method>
			<method name="public org.antlr.runtime.Token LT(int i)">2</method>
			<method name="public String toString()">1</method>
			<method name="public void consume()">4</method>
			<method name="public String getSourceName()">1</method>
			<method name="public String toString(int start, int stop)">1</method>
			<method name="public void rewind(int marker)">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream input, org.antlr.runtime.debug.DebugEventListener dbg)">1</method>
			<method name="public String toString(org.antlr.runtime.Token start, org.antlr.runtime.Token stop)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.TraceDebugEventListener</name>
		<wmc>14</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>24</rfc>
		<lcom>19</lcom>
		<ca>0</ca>
		<ce>9</ce>
		<npm>14</npm>
		<lcom3>0.38461538461538464</lcom3>
		<loc>278</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.36904761904761907</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>18.785714285714285</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="public void exitSubRule(int decisionNumber)">1</method>
			<method name="public void setTokenBoundaries(Object t, int tokenStartIndex, int tokenStopIndex)">1</method>
			<method name="public void createNode(Object node, org.antlr.runtime.Token token)">1</method>
			<method name="public void enterSubRule(int decisionNumber)">1</method>
			<method name="public void consumeNode(Object t)">1</method>
			<method name="public void location(int line, int pos)">1</method>
			<method name="public void LT(int i, Object t)">1</method>
			<method name="public void nilNode(Object t)">1</method>
			<method name="public void enterRule(String ruleName)">1</method>
			<method name="public void exitRule(String ruleName)">1</method>
			<method name="public void addChild(Object root, Object child)">1</method>
			<method name="public void becomeRoot(Object newRoot, Object oldRoot)">1</method>
			<method name="public void createNode(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugTreeParser</name>
		<wmc>12</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>24</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>13</ce>
		<npm>11</npm>
		<lcom3>0.45454545454545453</lcom3>
		<loc>132</loc>
		<dam>0.5</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.24166666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.833333333333334</amc>
		<cc>
			<method name="public void reportError(org.antlr.runtime.RecognitionException e)">1</method>
			<method name="protected Object getMissingSymbol(org.antlr.runtime.IntStream input, org.antlr.runtime.RecognitionException e, int expectedTokenType, org.antlr.runtime.BitSet follow)">1</method>
			<method name="public void setDebugListener(org.antlr.runtime.debug.DebugEventListener dbg)">2</method>
			<method name="public org.antlr.runtime.debug.DebugEventListener getDebugListener()">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeNodeStream input, org.antlr.runtime.RecognizerSharedState state)">2</method>
			<method name="public void endResync()">1</method>
			<method name="public void beginBacktrack(int level)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeNodeStream input, org.antlr.runtime.debug.DebugEventListener dbg, org.antlr.runtime.RecognizerSharedState state)">2</method>
			<method name="public void endBacktrack(int level, boolean successful)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeNodeStream input, org.antlr.runtime.debug.DebugEventListener dbg)">2</method>
			<method name="public void beginResync()">1</method>
			<method name="public void reportError(java.io.IOException e)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreePatternParser</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>17</cbo>
		<rfc>20</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>17</ce>
		<npm>4</npm>
		<lcom3>0.30000000000000004</lcom3>
		<loc>299</loc>
		<dam>0.8</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.32</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>57.8</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.tree.TreePatternLexer tokenizer, org.antlr.runtime.tree.TreeWizard wizard, org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="static Class class$(String x0)">1</method>
			<method name="public Object pattern()">4</method>
			<method name="public Object parseTree()">10</method>
			<method name="public Object parseNode()">16</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.Parser</name>
		<wmc>10</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>13</cbo>
		<rfc>26</rfc>
		<lcom>15</lcom>
		<ca>1</ca>
		<ce>12</ce>
		<npm>8</npm>
		<lcom3>0.2222222222222222</lcom3>
		<loc>128</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.2875</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.7</amc>
		<cc>
			<method name="public void setTokenStream(org.antlr.runtime.TokenStream input)">1</method>
			<method name="protected Object getMissingSymbol(org.antlr.runtime.IntStream input, org.antlr.runtime.RecognitionException e, int expectedTokenType, org.antlr.runtime.BitSet follow)">3</method>
			<method name="public void traceOut(String ruleName, int ruleIndex)">1</method>
			<method name="protected Object getCurrentInputSymbol(org.antlr.runtime.IntStream input)">1</method>
			<method name="public org.antlr.runtime.TokenStream getTokenStream()">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public void reset()">2</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream input, org.antlr.runtime.RecognizerSharedState state)">1</method>
			<method name="public void traceIn(String ruleName, int ruleIndex)">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream input)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.Tracer</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>14</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>11</ce>
		<npm>4</npm>
		<lcom3>0.16666666666666666</lcom3>
		<loc>102</loc>
		<dam>0.5</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>24.0</amc>
		<cc>
			<method name="public Object getInputSymbol(int k)">2</method>
			<method name="public void enterRule(String ruleName)">2</method>
			<method name="public void exitRule(String ruleName)">2</method>
			<method name="public void _init_(org.antlr.runtime.IntStream input)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeVisitor</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>10</rfc>
		<lcom>1</lcom>
		<ca>0</ca>
		<ce>5</ce>
		<npm>3</npm>
		<lcom3>0.0</lcom3>
		<loc>62</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>19.333333333333332</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object visit(Object t, org.antlr.runtime.tree.TreeVisitorAction action)">6</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenSource</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>2</rfc>
		<lcom>1</lcom>
		<ca>5</ca>
		<ce>3</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>2</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract String getSourceName()">1</method>
			<method name="public abstract org.antlr.runtime.Token nextToken()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.CommonTreeNodeStream</name>
		<wmc>37</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>18</cbo>
		<rfc>71</rfc>
		<lcom>220</lcom>
		<ca>2</ca>
		<ce>17</ce>
		<npm>33</npm>
		<lcom3>0.767094017094017</lcom3>
		<loc>746</loc>
		<dam>0.7692307692307693</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.24324324324324326</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>18.81081081081081</amc>
		<cc>
			<method name="protected void fillBuffer()">1</method>
			<method name="public Object get(int i)">2</method>
			<method name="public int LA(int i)">1</method>
			<method name="public int mark()">2</method>
			<method name="public void reset()">2</method>
			<method name="public void setTokenStream(org.antlr.runtime.TokenStream tokens)">1</method>
			<method name="public int pop()">1</method>
			<method name="public int size()">2</method>
			<method name="public Object getCurrentSymbol()">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.CommonTreeNodeStream parent, int start, int stop)">1</method>
			<method name="public String toString()">3</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, Object tree)">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public Object getTreeSource()">1</method>
			<method name="public void rewind(int marker)">1</method>
			<method name="public org.antlr.runtime.tree.TreeAdaptor getTreeAdaptor()">1</method>
			<method name="public void seek(int index)">2</method>
			<method name="public void push(int index)">2</method>
			<method name="public void rewind()">1</method>
			<method name="public org.antlr.runtime.TokenStream getTokenStream()">1</method>
			<method name="public void release(int marker)">1</method>
			<method name="public int index()">1</method>
			<method name="protected int getNodeIndex(Object node)">4</method>
			<method name="protected void addNavigationNode(int ttype)">4</method>
			<method name="public String toString(Object start, Object stop)">14</method>
			<method name="protected Object LB(int k)">3</method>
			<method name="public void fillBuffer(Object t)">7</method>
			<method name="public java.util.Iterator iterator()">2</method>
			<method name="public boolean hasUniqueNavigationNodes()">1</method>
			<method name="public Object LT(int k)">5</method>
			<method name="public void consume()">2</method>
			<method name="public void setTreeAdaptor(org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="public void _init_(Object tree)">1</method>
			<method name="public String toTokenString(int start, int stop)">4</method>
			<method name="public void replaceChildren(Object parent, int startChildIndex, int stopChildIndex, Object t)">2</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, Object tree, int initialBufferSize)">1</method>
			<method name="public void setUniqueNavigationNodes(boolean uniqueNavigationNodes)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.ParseTreeBuilder</name>
		<wmc>11</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>25</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>12</ce>
		<npm>11</npm>
		<lcom3>0.675</lcom3>
		<loc>174</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.30303030303030304</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.454545454545455</amc>
		<cc>
			<method name="public org.antlr.runtime.tree.ParseTree getTree()">1</method>
			<method name="public void exitDecision(int i)">1</method>
			<method name="public void exitRule(String filename, String ruleName)">3</method>
			<method name="public void consumeHiddenToken(org.antlr.runtime.Token token)">2</method>
			<method name="public void recognitionException(org.antlr.runtime.RecognitionException e)">2</method>
			<method name="public void enterRule(String filename, String ruleName)">2</method>
			<method name="public org.antlr.runtime.tree.ParseTree epsilonNode()">1</method>
			<method name="public void enterDecision(int d)">1</method>
			<method name="public void _init_(String grammarName)">1</method>
			<method name="public org.antlr.runtime.tree.ParseTree create(Object payload)">1</method>
			<method name="public void consumeToken(org.antlr.runtime.Token token)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.RemoteDebugEventSocketListener$ProxyToken</name>
		<wmc>17</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>22</rfc>
		<lcom>74</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>17</npm>
		<lcom3>0.8020833333333333</lcom3>
		<loc>146</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.39705882352941174</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.235294117647059</amc>
		<cc>
			<method name="public void _init_(int index, int type, int channel, int line, int charPos, String text)">1</method>
			<method name="public int getTokenIndex()">1</method>
			<method name="public void setLine(int line)">1</method>
			<method name="public void setCharPositionInLine(int pos)">1</method>
			<method name="public int getChannel()">1</method>
			<method name="public void setChannel(int channel)">1</method>
			<method name="public void setType(int ttype)">1</method>
			<method name="public void setInputStream(org.antlr.runtime.CharStream input)">1</method>
			<method name="public org.antlr.runtime.CharStream getInputStream()">1</method>
			<method name="public String toString()">2</method>
			<method name="public String getText()">1</method>
			<method name="public void setTokenIndex(int index)">1</method>
			<method name="public int getLine()">1</method>
			<method name="public int getCharPositionInLine()">1</method>
			<method name="public int getType()">1</method>
			<method name="public void setText(String text)">1</method>
			<method name="public void _init_(int index)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.RewriteRuleElementStream</name>
		<wmc>12</wmc>
		<dit>1</dit>
		<noc>3</noc>
		<cbo>11</cbo>
		<rfc>19</rfc>
		<lcom>24</lcom>
		<ca>3</ca>
		<ce>8</ce>
		<npm>9</npm>
		<lcom3>0.5606060606060607</lcom3>
		<loc>224</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.38333333333333336</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.166666666666668</amc>
		<cc>
			<method name="public Object nextTree()">4</method>
			<method name="public boolean hasNext()">5</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription, Object oneElement)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription, java.util.List elements)">1</method>
			<method name="public void add(Object el)">4</method>
			<method name="public String getDescription()">1</method>
			<method name="protected Object _next()">5</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription)">1</method>
			<method name="public void reset()">1</method>
			<method name="protected Object toTree(Object el)">1</method>
			<method name="public int size()">3</method>
			<method name="protected abstract Object dup(Object)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.DOTTreeGenerator</name>
		<wmc>10</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>31</rfc>
		<lcom>31</lcom>
		<ca>0</ca>
		<ce>10</ce>
		<npm>4</npm>
		<lcom3>0.6222222222222222</lcom3>
		<loc>319</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.46296296296296297</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>30.4</amc>
		<cc>
			<method name="protected org.antlr.stringtemplate.StringTemplate getNodeST(org.antlr.runtime.tree.TreeAdaptor adaptor, Object t)">1</method>
			<method name="protected void toDOTDefineEdges(Object tree, org.antlr.runtime.tree.TreeAdaptor adaptor, org.antlr.stringtemplate.StringTemplate treeST)">4</method>
			<method name="public org.antlr.stringtemplate.StringTemplate toDOT(org.antlr.runtime.tree.Tree tree)">1</method>
			<method name="public org.antlr.stringtemplate.StringTemplate toDOT(Object tree, org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="protected int getNodeNumber(Object t)">2</method>
			<method name="protected String fixString(String in)">3</method>
			<method name="public void _init_()">1</method>
			<method name="protected void toDOTDefineNodes(Object tree, org.antlr.runtime.tree.TreeAdaptor adaptor, org.antlr.stringtemplate.StringTemplate treeST)">4</method>
			<method name="public org.antlr.stringtemplate.StringTemplate toDOT(Object tree, org.antlr.runtime.tree.TreeAdaptor adaptor, org.antlr.stringtemplate.StringTemplate _treeST, org.antlr.stringtemplate.StringTemplate _edgeST)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugEventRepeater</name>
		<wmc>32</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>64</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>6</ce>
		<npm>32</npm>
		<lcom3>0.0</lcom3>
		<loc>201</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.25390625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.25</amc>
		<cc>
			<method name="public void LT(int i, org.antlr.runtime.Token t)">1</method>
			<method name="public void recognitionException(org.antlr.runtime.RecognitionException e)">1</method>
			<method name="public void exitRule(String grammarFileName, String ruleName)">1</method>
			<method name="public void createNode(Object node, org.antlr.runtime.Token token)">1</method>
			<method name="public void semanticPredicate(boolean result, String predicate)">1</method>
			<method name="public void enterRule(String grammarFileName, String ruleName)">1</method>
			<method name="public void enterSubRule(int decisionNumber)">1</method>
			<method name="public void endBacktrack(int level, boolean successful)">1</method>
			<method name="public void consumeToken(org.antlr.runtime.Token token)">1</method>
			<method name="public void location(int line, int pos)">1</method>
			<method name="public void exitDecision(int decisionNumber)">1</method>
			<method name="public void consumeHiddenToken(org.antlr.runtime.Token token)">1</method>
			<method name="public void nilNode(Object t)">1</method>
			<method name="public void _init_(org.antlr.runtime.debug.DebugEventListener listener)">1</method>
			<method name="public void beginBacktrack(int level)">1</method>
			<method name="public void terminate()">1</method>
			<method name="public void exitSubRule(int decisionNumber)">1</method>
			<method name="public void setTokenBoundaries(Object t, int tokenStartIndex, int tokenStopIndex)">1</method>
			<method name="public void rewind(int i)">1</method>
			<method name="public void rewind()">1</method>
			<method name="public void endResync()">1</method>
			<method name="public void consumeNode(Object t)">1</method>
			<method name="public void mark(int i)">1</method>
			<method name="public void enterDecision(int decisionNumber)">1</method>
			<method name="public void LT(int i, Object t)">1</method>
			<method name="public void errorNode(Object t)">1</method>
			<method name="public void enterAlt(int alt)">1</method>
			<method name="public void addChild(Object root, Object child)">1</method>
			<method name="public void becomeRoot(Object newRoot, Object oldRoot)">1</method>
			<method name="public void commence()">1</method>
			<method name="public void beginResync()">1</method>
			<method name="public void createNode(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.CommonTreeNodeStream$StreamIterator</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>8</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>0.3333333333333333</lcom3>
		<loc>56</loc>
		<dam>0.5</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.5</amc>
		<cc>
			<method name="public boolean hasNext()">2</method>
			<method name="public void remove()">1</method>
			<method name="public Object next()">2</method>
			<method name="protected void _init_(org.antlr.runtime.tree.CommonTreeNodeStream)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.RecognizerSharedState</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>7</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>44</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>28.0</amc>
		<cc>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.NoViableAltException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>11</rfc>
		<lcom>1</lcom>
		<ca>4</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>0.8333333333333334</lcom3>
		<loc>61</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>18.333333333333332</amc>
		<cc>
			<method name="public String toString()">2</method>
			<method name="public void _init_(String grammarDecisionDescription, int decisionNumber, int stateNumber, org.antlr.runtime.IntStream input)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.misc.IntArray</name>
		<wmc>7</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>9</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>7</npm>
		<lcom3>0.611111111111111</lcom3>
		<loc>103</loc>
		<dam>0.3333333333333333</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.7142857142857143</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.285714285714286</amc>
		<cc>
			<method name="public void clear()">1</method>
			<method name="public void add(int v)">1</method>
			<method name="public void push(int v)">1</method>
			<method name="public void ensureCapacity(int index)">4</method>
			<method name="public int pop()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public int size()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.FailedPredicateException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>8</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>35</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.0</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.IntStream input, String ruleName, String predicateText)">1</method>
			<method name="public String toString()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.CommonTokenStream</name>
		<wmc>33</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>16</cbo>
		<rfc>62</rfc>
		<lcom>222</lcom>
		<ca>1</ca>
		<ce>15</ce>
		<npm>29</npm>
		<lcom3>0.5390625</lcom3>
		<loc>594</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.24675324675324675</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>16.757575757575758</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.TokenSource tokenSource)">1</method>
			<method name="public org.antlr.runtime.Token get(int i)">1</method>
			<method name="protected void fillBuffer()">10</method>
			<method name="public int LA(int i)">1</method>
			<method name="public void discardTokenType(int ttype)">2</method>
			<method name="public int mark()">2</method>
			<method name="public java.util.List getTokens(int start, int stop, int ttype)">1</method>
			<method name="public void reset()">1</method>
			<method name="public org.antlr.runtime.TokenSource getTokenSource()">1</method>
			<method name="public int size()">1</method>
			<method name="public java.util.List getTokens()">2</method>
			<method name="public String toString()">2</method>
			<method name="public void setTokenTypeChannel(int ttype, int channel)">2</method>
			<method name="public String getSourceName()">1</method>
			<method name="public String toString(int start, int stop)">6</method>
			<method name="public void rewind(int marker)">1</method>
			<method name="public java.util.List getTokens(int start, int stop, org.antlr.runtime.BitSet types)">9</method>
			<method name="public String toString(org.antlr.runtime.Token start, org.antlr.runtime.Token stop)">3</method>
			<method name="protected org.antlr.runtime.Token LB(int k)">6</method>
			<method name="public void seek(int index)">1</method>
			<method name="public java.util.List getTokens(int start, int stop, java.util.List types)">1</method>
			<method name="public void rewind()">1</method>
			<method name="public void setTokenSource(org.antlr.runtime.TokenSource tokenSource)">1</method>
			<method name="public void release(int marker)">1</method>
			<method name="public int index()">1</method>
			<method name="protected int skipOffTokenChannels(int i)">3</method>
			<method name="protected int skipOffTokenChannelsReverse(int i)">3</method>
			<method name="public void discardOffChannelTokens(boolean discardOffChannelTokens)">1</method>
			<method name="public java.util.List getTokens(int start, int stop)">1</method>
			<method name="public org.antlr.runtime.Token LT(int k)">7</method>
			<method name="public void consume()">2</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenSource tokenSource, int channel)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.MismatchedTreeNodeException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>10</rfc>
		<lcom>1</lcom>
		<ca>2</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>31</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.0</amc>
		<cc>
			<method name="public void _init_(int expecting, org.antlr.runtime.tree.TreeNodeStream input)">1</method>
			<method name="public String toString()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenStream</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>21</cbo>
		<rfc>5</rfc>
		<lcom>10</lcom>
		<ca>15</ca>
		<ce>6</ce>
		<npm>5</npm>
		<lcom3>2.0</lcom3>
		<loc>5</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract org.antlr.runtime.Token LT(int)">1</method>
			<method name="public abstract org.antlr.runtime.Token get(int)">1</method>
			<method name="public abstract org.antlr.runtime.TokenSource getTokenSource()">1</method>
			<method name="public abstract String toString(int, int)">1</method>
			<method name="public abstract String toString(org.antlr.runtime.Token, org.antlr.runtime.Token)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.ParserRuleReturnScope</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>4</rfc>
		<lcom>3</lcom>
		<ca>0</ca>
		<ce>4</ce>
		<npm>3</npm>
		<lcom3>1.0</lcom3>
		<loc>14</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getStop()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object getStart()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.RuleReturnScope</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>2</noc>
		<cbo>4</cbo>
		<rfc>6</rfc>
		<lcom>10</lcom>
		<ca>2</ca>
		<ce>2</ce>
		<npm>5</npm>
		<lcom3>2.0</lcom3>
		<loc>16</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>2.2</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public Object getTemplate()">1</method>
			<method name="public Object getStop()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object getStart()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.ANTLRStringStream</name>
		<wmc>20</wmc>
		<dit>1</dit>
		<noc>2</noc>
		<cbo>9</cbo>
		<rfc>29</rfc>
		<lcom>62</lcom>
		<ca>2</ca>
		<ce>7</ce>
		<npm>20</npm>
		<lcom3>0.6900584795321637</lcom3>
		<loc>303</loc>
		<dam>0.8888888888888888</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3875</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.7</amc>
		<cc>
			<method name="public void _init_(char[] data, int numberOfActualCharsInArray)">1</method>
			<method name="public void seek(int index)">3</method>
			<method name="public void setLine(int line)">1</method>
			<method name="public void setCharPositionInLine(int pos)">1</method>
			<method name="public int LA(int i)">5</method>
			<method name="public int mark()">3</method>
			<method name="public void _init_(String input)">1</method>
			<method name="public String substring(int start, int stop)">1</method>
			<method name="public void rewind()">1</method>
			<method name="public int index()">1</method>
			<method name="public void release(int marker)">1</method>
			<method name="public void reset()">1</method>
			<method name="public int size()">1</method>
			<method name="public void rewind(int m)">1</method>
			<method name="public void consume()">3</method>
			<method name="public int getLine()">1</method>
			<method name="public int getCharPositionInLine()">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public int LT(int i)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.ANTLRReaderStream</name>
		<wmc>5</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>7</cbo>
		<rfc>9</rfc>
		<lcom>10</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>5</npm>
		<lcom3>1.25</lcom3>
		<loc>103</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.8</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>19.2</amc>
		<cc>
			<method name="public void _init_(java.io.Reader r, int size, int readChunkSize)">1</method>
			<method name="public void load(java.io.Reader r, int size, int readChunkSize)">1</method>
			<method name="public void _init_(java.io.Reader r, int size)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(java.io.Reader r)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.IntStream</name>
		<wmc>10</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>26</cbo>
		<rfc>10</rfc>
		<lcom>45</lcom>
		<ca>23</ca>
		<ce>3</ce>
		<npm>10</npm>
		<lcom3>2.0</lcom3>
		<loc>10</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.7</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract int size()">1</method>
			<method name="public abstract void rewind()">1</method>
			<method name="public abstract int index()">1</method>
			<method name="public abstract void rewind(int)">1</method>
			<method name="public abstract void release(int)">1</method>
			<method name="public abstract void consume()">1</method>
			<method name="public abstract String getSourceName()">1</method>
			<method name="public abstract void seek(int)">1</method>
			<method name="public abstract int LA(int)">1</method>
			<method name="public abstract int mark()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugEventListener</name>
		<wmc>31</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>31</rfc>
		<lcom>465</lcom>
		<ca>9</ca>
		<ce>5</ce>
		<npm>31</npm>
		<lcom3>1.0333333333333334</lcom3>
		<loc>34</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2903225806451613</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void mark(int)">1</method>
			<method name="public abstract void terminate()">1</method>
			<method name="public abstract void enterRule(String, String)">1</method>
			<method name="public abstract void consumeToken(org.antlr.runtime.Token)">1</method>
			<method name="public abstract void rewind(int)">1</method>
			<method name="public abstract void exitDecision(int)">1</method>
			<method name="public abstract void endResync()">1</method>
			<method name="public abstract void createNode(Object)">1</method>
			<method name="public abstract void rewind()">1</method>
			<method name="public abstract void errorNode(Object)">1</method>
			<method name="public abstract void LT(int, org.antlr.runtime.Token)">1</method>
			<method name="public abstract void beginBacktrack(int)">1</method>
			<method name="public abstract void semanticPredicate(boolean, String)">1</method>
			<method name="public abstract void commence()">1</method>
			<method name="public abstract void LT(int, Object)">1</method>
			<method name="public abstract void endBacktrack(int, boolean)">1</method>
			<method name="public abstract void nilNode(Object)">1</method>
			<method name="public abstract void enterAlt(int)">1</method>
			<method name="public abstract void enterSubRule(int)">1</method>
			<method name="public abstract void exitSubRule(int)">1</method>
			<method name="public abstract void exitRule(String, String)">1</method>
			<method name="public abstract void enterDecision(int)">1</method>
			<method name="public abstract void becomeRoot(Object, Object)">1</method>
			<method name="public abstract void location(int, int)">1</method>
			<method name="public abstract void addChild(Object, Object)">1</method>
			<method name="public abstract void beginResync()">1</method>
			<method name="public abstract void setTokenBoundaries(Object, int, int)">1</method>
			<method name="public abstract void consumeNode(Object)">1</method>
			<method name="public abstract void recognitionException(org.antlr.runtime.RecognitionException)">1</method>
			<method name="public abstract void createNode(Object, org.antlr.runtime.Token)">1</method>
			<method name="public abstract void consumeHiddenToken(org.antlr.runtime.Token)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.RewriteCardinalityException</name>
		<wmc>2</wmc>
		<dit>4</dit>
		<noc>2</noc>
		<cbo>7</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>3</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>17</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.9545454545454546</mfa>
		<cam>0.75</cam>
		<ic>1</ic>
		<cbm>1</cbm>
		<amc>7.0</amc>
		<cc>
			<method name="public String getMessage()">2</method>
			<method name="public void _init_(String elementDescription)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.UnBufferedTreeNodeStream$TreeWalkState</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>3</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>15</loc>
		<dam>0.125</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.0</amc>
		<cc>
			<method name="protected void _init_(org.antlr.runtime.tree.UnBufferedTreeNodeStream)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$1</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>4</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>1</npm>
		<lcom3>0.5</lcom3>
		<loc>19</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.5</amc>
		<cc>
			<method name="void _init_(org.antlr.runtime.tree.TreeWizard, java.util.List)">1</method>
			<method name="public void visit(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$3</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>6</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>42</loc>
		<dam>1.0</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.6428571428571429</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>18.0</amc>
		<cc>
			<method name="public void visit(Object t, Object parent, int childIndex, java.util.Map unusedlabels)">2</method>
			<method name="void _init_(org.antlr.runtime.tree.TreeWizard, java.util.Map, org.antlr.runtime.tree.TreeWizard$TreePattern, org.antlr.runtime.tree.TreeWizard$ContextVisitor)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugEventHub</name>
		<wmc>34</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>70</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>8</ce>
		<npm>34</npm>
		<lcom3>0.0</lcom3>
		<loc>668</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2536764705882353</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>18.61764705882353</amc>
		<cc>
			<method name="public void recognitionException(org.antlr.runtime.RecognitionException e)">2</method>
			<method name="public void exitRule(String grammarFileName, String ruleName)">2</method>
			<method name="public void createNode(Object node, org.antlr.runtime.Token token)">2</method>
			<method name="public void semanticPredicate(boolean result, String predicate)">2</method>
			<method name="public void enterRule(String grammarFileName, String ruleName)">2</method>
			<method name="public void rewind(int index)">2</method>
			<method name="public void enterSubRule(int decisionNumber)">2</method>
			<method name="public void endBacktrack(int level, boolean successful)">2</method>
			<method name="public void consumeToken(org.antlr.runtime.Token token)">2</method>
			<method name="public void LT(int index, Object t)">2</method>
			<method name="public void location(int line, int pos)">2</method>
			<method name="public void exitDecision(int decisionNumber)">2</method>
			<method name="public void consumeHiddenToken(org.antlr.runtime.Token token)">2</method>
			<method name="public void nilNode(Object t)">2</method>
			<method name="public void _init_(org.antlr.runtime.debug.DebugEventListener a, org.antlr.runtime.debug.DebugEventListener b)">1</method>
			<method name="public void _init_(org.antlr.runtime.debug.DebugEventListener listener)">1</method>
			<method name="public void beginBacktrack(int level)">2</method>
			<method name="public void mark(int index)">2</method>
			<method name="public void terminate()">2</method>
			<method name="public void exitSubRule(int decisionNumber)">2</method>
			<method name="public void setTokenBoundaries(Object t, int tokenStartIndex, int tokenStopIndex)">2</method>
			<method name="public void addListener(org.antlr.runtime.debug.DebugEventListener listener)">1</method>
			<method name="public void rewind()">2</method>
			<method name="public void LT(int index, org.antlr.runtime.Token t)">2</method>
			<method name="public void endResync()">2</method>
			<method name="public void consumeNode(Object t)">2</method>
			<method name="public void enterDecision(int decisionNumber)">2</method>
			<method name="public void errorNode(Object t)">2</method>
			<method name="public void enterAlt(int alt)">2</method>
			<method name="public void addChild(Object root, Object child)">2</method>
			<method name="public void becomeRoot(Object newRoot, Object oldRoot)">2</method>
			<method name="public void commence()">2</method>
			<method name="public void beginResync()">2</method>
			<method name="public void createNode(Object t)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$2</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>5</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>31</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.5714285714285714</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.0</amc>
		<cc>
			<method name="void _init_(org.antlr.runtime.tree.TreeWizard, org.antlr.runtime.tree.TreeWizard$TreePattern, java.util.List)">1</method>
			<method name="public void visit(Object t, Object parent, int childIndex, java.util.Map labels)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.RewriteRuleSubtreeStream</name>
		<wmc>5</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>12</rfc>
		<lcom>8</lcom>
		<ca>0</ca>
		<ce>6</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>53</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.56</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.6</amc>
		<cc>
			<method name="protected Object dup(Object el)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription, Object oneElement)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription, java.util.List elements)">1</method>
			<method name="public Object nextNode()">4</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeVisitorAction</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>2</cbo>
		<rfc>2</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>1</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>2</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract Object post(Object)">1</method>
			<method name="public abstract Object pre(Object)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.MismatchedSetException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>10</cbo>
		<rfc>11</rfc>
		<lcom>1</lcom>
		<ca>3</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>31</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.0</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(org.antlr.runtime.BitSet expecting, org.antlr.runtime.IntStream input)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.MismatchedTokenException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>2</noc>
		<cbo>11</cbo>
		<rfc>10</rfc>
		<lcom>0</lcom>
		<ca>5</ca>
		<ce>6</ce>
		<npm>3</npm>
		<lcom3>0.0</lcom3>
		<loc>37</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.0</amc>
		<cc>
			<method name="public void _init_(int expecting, org.antlr.runtime.IntStream input)">1</method>
			<method name="public String toString()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.Tree</name>
		<wmc>27</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>17</cbo>
		<rfc>28</rfc>
		<lcom>351</lcom>
		<ca>12</ca>
		<ce>6</ce>
		<npm>26</npm>
		<lcom3>1.0</lcom3>
		<loc>34</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.2222222222222222</amc>
		<cc>
			<method name="public abstract java.util.List getAncestors()">1</method>
			<method name="public abstract void freshenParentAndChildIndexes()">1</method>
			<method name="public abstract int getLine()">1</method>
			<method name="public abstract int getCharPositionInLine()">1</method>
			<method name="public abstract void addChild(org.antlr.runtime.tree.Tree)">1</method>
			<method name="public abstract int getType()">1</method>
			<method name="public abstract org.antlr.runtime.tree.Tree getAncestor(int)">1</method>
			<method name="public abstract void setChild(int, org.antlr.runtime.tree.Tree)">1</method>
			<method name="public abstract boolean hasAncestor(int)">1</method>
			<method name="public abstract void setTokenStopIndex(int)">1</method>
			<method name="public abstract org.antlr.runtime.tree.Tree dupNode()">1</method>
			<method name="public abstract void setParent(org.antlr.runtime.tree.Tree)">1</method>
			<method name="public abstract boolean isNil()">1</method>
			<method name="public abstract int getTokenStartIndex()">1</method>
			<method name="public abstract void setChildIndex(int)">1</method>
			<method name="public abstract int getChildCount()">1</method>
			<method name="public abstract int getChildIndex()">1</method>
			<method name="public abstract String getText()">1</method>
			<method name="public abstract org.antlr.runtime.tree.Tree getChild(int)">1</method>
			<method name="public abstract int getTokenStopIndex()">1</method>
			<method name="public abstract void setTokenStartIndex(int)">1</method>
			<method name="public abstract org.antlr.runtime.tree.Tree getParent()">1</method>
			<method name="public abstract String toString()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public abstract Object deleteChild(int)">1</method>
			<method name="public abstract void replaceChildren(int, int, Object)">1</method>
			<method name="public abstract String toStringTree()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.BaseRecognizer</name>
		<wmc>42</wmc>
		<dit>1</dit>
		<noc>3</noc>
		<cbo>33</cbo>
		<rfc>89</rfc>
		<lcom>481</lcom>
		<ca>5</ca>
		<ce>28</ce>
		<npm>35</npm>
		<lcom3>0.940766550522648</lcom3>
		<loc>1162</loc>
		<dam>0.14285714285714285</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.1684981684981685</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>26.5</amc>
		<cc>
			<method name="public void recover(org.antlr.runtime.IntStream input, org.antlr.runtime.RecognitionException re)">2</method>
			<method name="public int getRuleMemoizationCacheSize()">4</method>
			<method name="public Object match(org.antlr.runtime.IntStream input, int ttype, org.antlr.runtime.BitSet follow)">1</method>
			<method name="protected Object getMissingSymbol(org.antlr.runtime.IntStream input, org.antlr.runtime.RecognitionException e, int expectedTokenType, org.antlr.runtime.BitSet follow)">1</method>
			<method name="public void consumeUntil(org.antlr.runtime.IntStream input, int tokenType)">3</method>
			<method name="public java.util.List toStrings(java.util.List tokens)">3</method>
			<method name="public java.util.List getRuleInvocationStack()">1</method>
			<method name="public void reset()">4</method>
			<method name="public String getErrorHeader(org.antlr.runtime.RecognitionException e)">1</method>
			<method name="public boolean mismatchIsUnwantedToken(org.antlr.runtime.IntStream input, int ttype)">2</method>
			<method name="public void _init_(org.antlr.runtime.RecognizerSharedState state)">2</method>
			<method name="public int getRuleMemoization(int ruleIndex, int ruleStartIndex)">3</method>
			<method name="protected Object recoverFromMismatchedToken(org.antlr.runtime.IntStream input, int ttype, org.antlr.runtime.BitSet follow)">1</method>
			<method name="public void matchAny(org.antlr.runtime.IntStream input)">1</method>
			<method name="protected void pushFollow(org.antlr.runtime.BitSet fset)">2</method>
			<method name="protected Object getCurrentInputSymbol(org.antlr.runtime.IntStream input)">1</method>
			<method name="public abstract String getSourceName()">1</method>
			<method name="public void displayRecognitionError(String[] tokenNames, org.antlr.runtime.RecognitionException e)">1</method>
			<method name="public String getGrammarFileName()">1</method>
			<method name="public void traceOut(String ruleName, int ruleIndex, Object inputSymbol)">3</method>
			<method name="public void emitErrorMessage(String msg)">1</method>
			<method name="protected org.antlr.runtime.BitSet combineFollows(boolean exact)">5</method>
			<method name="public int getBacktrackingLevel()">1</method>
			<method name="public int getNumberOfSyntaxErrors()">1</method>
			<method name="public Object recoverFromMismatchedSet(org.antlr.runtime.IntStream input, org.antlr.runtime.RecognitionException e, org.antlr.runtime.BitSet follow)">1</method>
			<method name="public void traceIn(String ruleName, int ruleIndex, Object inputSymbol)">2</method>
			<method name="public void reportError(org.antlr.runtime.RecognitionException e)">2</method>
			<method name="protected org.antlr.runtime.BitSet computeContextSensitiveRuleFOLLOW()">1</method>
			<method name="public boolean mismatchIsMissingToken(org.antlr.runtime.IntStream input, org.antlr.runtime.BitSet follow)">6</method>
			<method name="protected org.antlr.runtime.BitSet computeErrorRecoverySet()">1</method>
			<method name="public void endResync()">1</method>
			<method name="public static java.util.List getRuleInvocationStack(Throwable e, String recognizerClassName)">5</method>
			<method name="public void setBacktrackingLevel(int n)">1</method>
			<method name="public boolean alreadyParsedRule(org.antlr.runtime.IntStream input, int ruleIndex)">3</method>
			<method name="public String getTokenErrorDisplay(org.antlr.runtime.Token t)">3</method>
			<method name="public void memoize(org.antlr.runtime.IntStream input, int ruleIndex, int ruleStartIndex)">5</method>
			<method name="public boolean failed()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void beginResync()">1</method>
			<method name="public String[] getTokenNames()">1</method>
			<method name="public String getErrorMessage(org.antlr.runtime.RecognitionException e, String[] tokenNames)">14</method>
			<method name="public void consumeUntil(org.antlr.runtime.IntStream input, org.antlr.runtime.BitSet set)">3</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.RemoteDebugEventSocketListener</name>
		<wmc>14</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>33</cbo>
		<rfc>92</rfc>
		<lcom>65</lcom>
		<ca>0</ca>
		<ce>33</ce>
		<npm>5</npm>
		<lcom3>0.8012820512820512</lcom3>
		<loc>1236</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.34285714285714286</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>86.42857142857143</amc>
		<cc>
			<method name="protected void closeConnection()">10</method>
			<method name="protected org.antlr.runtime.debug.RemoteDebugEventSocketListener$ProxyTree deserializeNode(String[] elements, int offset)">1</method>
			<method name="public void _init_(org.antlr.runtime.debug.DebugEventListener listener, String machine, int port)">1</method>
			<method name="public void run()">1</method>
			<method name="public void start()">1</method>
			<method name="protected void handshake()">1</method>
			<method name="protected String unEscapeNewlines(String txt)">1</method>
			<method name="protected org.antlr.runtime.debug.RemoteDebugEventSocketListener$ProxyToken deserializeToken(String[] elements, int offset)">1</method>
			<method name="protected void dispatch(String line)">36</method>
			<method name="public boolean tokenIndexesAreInvalid()">1</method>
			<method name="protected void eventHandler()">2</method>
			<method name="protected boolean openConnection()">1</method>
			<method name="protected void ack()">1</method>
			<method name="public String[] getEventElements(String event)">5</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.DFA</name>
		<wmc>8</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>16</rfc>
		<lcom>28</lcom>
		<ca>0</ca>
		<ce>8</ce>
		<npm>6</npm>
		<lcom3>0.9857142857142858</lcom3>
		<loc>320</loc>
		<dam>0.9</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.35</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>37.75</amc>
		<cc>
			<method name="public int specialStateTransition(int s, org.antlr.runtime.IntStream input)">1</method>
			<method name="public int predict(org.antlr.runtime.IntStream input)">1</method>
			<method name="public String getDescription()">1</method>
			<method name="public static char[] unpackEncodedStringToUnsignedChars(String encodedString)">4</method>
			<method name="public static short[] unpackEncodedString(String encodedString)">4</method>
			<method name="protected void error(org.antlr.runtime.NoViableAltException nvae)">1</method>
			<method name="public void _init_()">1</method>
			<method name="protected void noViableAlt(int s, org.antlr.runtime.IntStream input)">1</method>
		</cc>
	</class>

	<class>
		<name>org.antlr.runtime.tree.RewriteEmptyStreamException</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>5</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public void _init_(String elementDescription)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$Visitor</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>5</cbo>
		<rfc>4</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>10</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5833333333333334</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>2.3333333333333335</amc>
		<cc>
			<method name="public abstract void visit(Object)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void visit(Object t, Object parent, int childIndex, java.util.Map labels)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.MismatchedRangeException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>10</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>40</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.666666666666666</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_(int a, int b, org.antlr.runtime.IntStream input)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenRewriteStream$InsertBeforeOp</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>7</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>33</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.6</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>15.0</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.TokenRewriteStream, int index, Object text)">1</method>
			<method name="public int execute(StringBuffer buf)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$WildcardTreePattern</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>5</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.Token payload)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.UnBufferedTreeNodeStream</name>
		<wmc>33</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>18</cbo>
		<rfc>67</rfc>
		<lcom>312</lcom>
		<ca>1</ca>
		<ce>18</ce>
		<npm>25</npm>
		<lcom3>0.7640625</lcom3>
		<loc>918</loc>
		<dam>0.9</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.22943722943722944</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>26.21212121212121</amc>
		<cc>
			<method name="public Object get(int i)">1</method>
			<method name="public int LA(int i)">2</method>
			<method name="public int mark()">4</method>
			<method name="public void reset()">1</method>
			<method name="protected void addLookahead(Object node)">2</method>
			<method name="public void setTokenStream(org.antlr.runtime.TokenStream tokens)">1</method>
			<method name="public int size()">1</method>
			<method name="protected Object handleRootNode()">3</method>
			<method name="public String toString()">1</method>
			<method name="protected Object visitChild(int child)">3</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, Object tree)">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public Object getTreeSource()">1</method>
			<method name="public void rewind(int marker)">3</method>
			<method name="public org.antlr.runtime.tree.TreeAdaptor getTreeAdaptor()">1</method>
			<method name="public void seek(int index)">3</method>
			<method name="public void rewind()">1</method>
			<method name="public org.antlr.runtime.TokenStream getTokenStream()">1</method>
			<method name="public void release(int marker)">1</method>
			<method name="public int index()">1</method>
			<method name="protected void addNavigationNode(int ttype)">4</method>
			<method name="public Object next()">5</method>
			<method name="protected void walkBackToMostRecentNodeWithUnvisitedChildren()">7</method>
			<method name="public String toString(Object start, Object stop)">5</method>
			<method name="public boolean hasUniqueNavigationNodes()">1</method>
			<method name="public Object LT(int k)">4</method>
			<method name="protected int getLookaheadSize()">2</method>
			<method name="public void consume()">1</method>
			<method name="protected void fill(int k)">2</method>
			<method name="public void _init_(Object tree)">1</method>
			<method name="protected void toStringWork(Object p, Object stop, StringBuffer buf)">9</method>
			<method name="public void replaceChildren(Object parent, int startChildIndex, int stopChildIndex, Object t)">1</method>
			<method name="public void setUniqueNavigationNodes(boolean uniqueNavigationNodes)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.CommonTreeAdaptor</name>
		<wmc>18</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>13</cbo>
		<rfc>38</rfc>
		<lcom>153</lcom>
		<ca>5</ca>
		<ce>8</ce>
		<npm>18</npm>
		<lcom3>2.0</lcom3>
		<loc>169</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4444444444444444</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.38888888888889</amc>
		<cc>
			<method name="public org.antlr.runtime.Token createToken(int tokenType, String text)">1</method>
			<method name="public Object getParent(Object t)">2</method>
			<method name="public void setParent(Object t, Object parent)">2</method>
			<method name="public void setTokenBoundaries(Object t, org.antlr.runtime.Token startToken, org.antlr.runtime.Token stopToken)">4</method>
			<method name="public org.antlr.runtime.Token createToken(org.antlr.runtime.Token fromToken)">1</method>
			<method name="public int getChildCount(Object t)">2</method>
			<method name="public void setChildIndex(Object t, int index)">2</method>
			<method name="public int getChildIndex(Object t)">2</method>
			<method name="public org.antlr.runtime.Token getToken(Object t)">2</method>
			<method name="public int getTokenStartIndex(Object t)">2</method>
			<method name="public Object create(org.antlr.runtime.Token payload)">1</method>
			<method name="public int getType(Object t)">2</method>
			<method name="public Object getChild(Object t, int i)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public Object dupNode(Object t)">2</method>
			<method name="public String getText(Object t)">2</method>
			<method name="public void replaceChildren(Object parent, int startChildIndex, int stopChildIndex, Object t)">2</method>
			<method name="public int getTokenStopIndex(Object t)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreePatternLexer</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>9</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>0.9285714285714286</lcom3>
		<loc>255</loc>
		<dam>0.2857142857142857</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>79.33333333333333</amc>
		<cc>
			<method name="protected void consume()">2</method>
			<method name="public void _init_(String pattern)">1</method>
			<method name="public int nextToken()">27</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.UnwantedTokenException</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>12</rfc>
		<lcom>4</lcom>
		<ca>2</ca>
		<ce>7</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>61</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.25</amc>
		<cc>
			<method name="public void _init_(int expecting, org.antlr.runtime.IntStream input)">1</method>
			<method name="public String toString()">3</method>
			<method name="public org.antlr.runtime.Token getUnexpectedToken()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.ANTLRInputStream</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>10</rfc>
		<lcom>15</lcom>
		<ca>0</ca>
		<ce>8</ce>
		<npm>6</npm>
		<lcom3>2.0</lcom3>
		<loc>55</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.7083333333333334</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.166666666666666</amc>
		<cc>
			<method name="public void _init_(java.io.InputStream input, int size)">1</method>
			<method name="public void _init_(java.io.InputStream input, String encoding)">1</method>
			<method name="public void _init_(java.io.InputStream input, int size, String encoding)">1</method>
			<method name="public void _init_(java.io.InputStream input)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(java.io.InputStream input, int size, int readBufferSize, String encoding)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeAdaptor</name>
		<wmc>31</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>23</cbo>
		<rfc>31</rfc>
		<lcom>465</lcom>
		<ca>18</ca>
		<ce>6</ce>
		<npm>31</npm>
		<lcom3>2.0</lcom3>
		<loc>31</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.35023041474654376</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void setTokenBoundaries(Object, org.antlr.runtime.Token, org.antlr.runtime.Token)">1</method>
			<method name="public abstract Object becomeRoot(org.antlr.runtime.Token, Object)">1</method>
			<method name="public abstract int getUniqueID(Object)">1</method>
			<method name="public abstract void setParent(Object, Object)">1</method>
			<method name="public abstract Object nil()">1</method>
			<method name="public abstract Object errorNode(org.antlr.runtime.TokenStream, org.antlr.runtime.Token, org.antlr.runtime.Token, org.antlr.runtime.RecognitionException)">1</method>
			<method name="public abstract Object getParent(Object)">1</method>
			<method name="public abstract int getChildCount(Object)">1</method>
			<method name="public abstract void replaceChildren(Object, int, int, Object)">1</method>
			<method name="public abstract void setText(Object, String)">1</method>
			<method name="public abstract Object create(org.antlr.runtime.Token)">1</method>
			<method name="public abstract Object dupTree(Object)">1</method>
			<method name="public abstract Object dupNode(Object)">1</method>
			<method name="public abstract Object create(int, String)">1</method>
			<method name="public abstract Object getChild(Object, int)">1</method>
			<method name="public abstract int getTokenStartIndex(Object)">1</method>
			<method name="public abstract String getText(Object)">1</method>
			<method name="public abstract int getChildIndex(Object)">1</method>
			<method name="public abstract int getTokenStopIndex(Object)">1</method>
			<method name="public abstract Object create(int, org.antlr.runtime.Token)">1</method>
			<method name="public abstract int getType(Object)">1</method>
			<method name="public abstract Object deleteChild(Object, int)">1</method>
			<method name="public abstract void setType(Object, int)">1</method>
			<method name="public abstract void addChild(Object, Object)">1</method>
			<method name="public abstract Object create(int, org.antlr.runtime.Token, String)">1</method>
			<method name="public abstract Object rulePostProcessing(Object)">1</method>
			<method name="public abstract void setChild(Object, int, Object)">1</method>
			<method name="public abstract Object becomeRoot(Object, Object)">1</method>
			<method name="public abstract org.antlr.runtime.Token getToken(Object)">1</method>
			<method name="public abstract void setChildIndex(Object, int)">1</method>
			<method name="public abstract boolean isNil(Object)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.RewriteEarlyExitException</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>0</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>10</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(String elementDescription)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugTreeAdaptor</name>
		<wmc>37</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>77</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>8</ce>
		<npm>36</npm>
		<lcom3>0.3194444444444444</lcom3>
		<loc>376</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.26426426426426425</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.108108108108109</amc>
		<cc>
			<method name="public void setDebugListener(org.antlr.runtime.debug.DebugEventListener dbg)">1</method>
			<method name="public void addChild(Object t, org.antlr.runtime.Token child)">1</method>
			<method name="public Object errorNode(org.antlr.runtime.TokenStream input, org.antlr.runtime.Token start, org.antlr.runtime.Token stop, org.antlr.runtime.RecognitionException e)">2</method>
			<method name="public Object create(int tokenType, String text)">1</method>
			<method name="public void setTokenBoundaries(Object t, org.antlr.runtime.Token startToken, org.antlr.runtime.Token stopToken)">4</method>
			<method name="public void setText(Object t, String text)">1</method>
			<method name="public void setType(Object t, int type)">1</method>
			<method name="public int getChildCount(Object t)">1</method>
			<method name="public int getChildIndex(Object t)">1</method>
			<method name="public org.antlr.runtime.Token getToken(Object t)">1</method>
			<method name="public int getType(Object t)">1</method>
			<method name="public void _init_(org.antlr.runtime.debug.DebugEventListener dbg, org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="public Object getChild(Object t, int i)">1</method>
			<method name="protected void simulateTreeConstruction(Object t)">2</method>
			<method name="public Object nil()">1</method>
			<method name="public void setChild(Object t, int i, Object child)">1</method>
			<method name="public org.antlr.runtime.tree.TreeAdaptor getTreeAdaptor()">1</method>
			<method name="public Object create(int tokenType, org.antlr.runtime.Token fromToken)">1</method>
			<method name="public Object create(int tokenType, org.antlr.runtime.Token fromToken, String text)">1</method>
			<method name="public Object rulePostProcessing(Object root)">1</method>
			<method name="public Object getParent(Object t)">1</method>
			<method name="public Object deleteChild(Object t, int i)">1</method>
			<method name="public void setParent(Object t, Object parent)">1</method>
			<method name="public Object becomeRoot(Object newRoot, Object oldRoot)">1</method>
			<method name="public void addChild(Object t, Object child)">3</method>
			<method name="public Object dupNode(Object treeNode)">1</method>
			<method name="public void setChildIndex(Object t, int index)">1</method>
			<method name="public boolean isNil(Object tree)">1</method>
			<method name="public int getTokenStartIndex(Object t)">1</method>
			<method name="public org.antlr.runtime.debug.DebugEventListener getDebugListener()">1</method>
			<method name="public Object create(org.antlr.runtime.Token payload)">2</method>
			<method name="public int getUniqueID(Object node)">1</method>
			<method name="public Object becomeRoot(org.antlr.runtime.Token newRoot, Object oldRoot)">1</method>
			<method name="public Object dupTree(Object tree)">1</method>
			<method name="public String getText(Object t)">1</method>
			<method name="public void replaceChildren(Object parent, int startChildIndex, int stopChildIndex, Object t)">1</method>
			<method name="public int getTokenStopIndex(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeParser</name>
		<wmc>18</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>20</cbo>
		<rfc>51</rfc>
		<lcom>95</lcom>
		<ca>1</ca>
		<ce>19</ce>
		<npm>13</npm>
		<lcom3>0.907563025210084</lcom3>
		<loc>391</loc>
		<dam>0.14285714285714285</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.23529411764705882</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>20.333333333333332</amc>
		<cc>
			<method name="protected void mismatch(org.antlr.runtime.IntStream input, int ttype, org.antlr.runtime.BitSet follow)">1</method>
			<method name="protected Object getMissingSymbol(org.antlr.runtime.IntStream input, org.antlr.runtime.RecognitionException e, int expectedTokenType, org.antlr.runtime.BitSet follow)">1</method>
			<method name="public void traceOut(String ruleName, int ruleIndex)">1</method>
			<method name="public org.antlr.runtime.tree.TreeNodeStream getTreeNodeStream()">1</method>
			<method name="public void reset()">2</method>
			<method name="public String getErrorHeader(org.antlr.runtime.RecognitionException e)">2</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeNodeStream input, org.antlr.runtime.RecognizerSharedState state)">1</method>
			<method name="public void matchAny(org.antlr.runtime.IntStream ignore)">7</method>
			<method name="public boolean inContext(String context)">1</method>
			<method name="protected static Object getAncestor(org.antlr.runtime.tree.TreeAdaptor adaptor, String[] tokenNames, Object t, String goal)">3</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeNodeStream input)">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="protected Object getCurrentInputSymbol(org.antlr.runtime.IntStream input)">1</method>
			<method name="public static boolean inContext(org.antlr.runtime.tree.TreeAdaptor adaptor, String[] tokenNames, Object t, String context)">11</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void traceIn(String ruleName, int ruleIndex)">1</method>
			<method name="public void setTreeNodeStream(org.antlr.runtime.tree.TreeNodeStream input)">1</method>
			<method name="public String getErrorMessage(org.antlr.runtime.RecognitionException e, String[] tokenNames)">3</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.CharStreamState</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>3</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>2</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>7</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenRewriteStream</name>
		<wmc>46</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>24</cbo>
		<rfc>85</rfc>
		<lcom>949</lcom>
		<ca>4</ca>
		<ce>23</ce>
		<npm>36</npm>
		<lcom3>0.9333333333333333</lcom3>
		<loc>1024</loc>
		<dam>0.2857142857142857</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3070652173913043</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>21.108695652173914</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.TokenSource tokenSource)">1</method>
			<method name="public void deleteProgram()">1</method>
			<method name="public int getLastRewriteTokenIndex()">1</method>
			<method name="public void delete(org.antlr.runtime.Token indexT)">1</method>
			<method name="public void insertAfter(String programName, org.antlr.runtime.Token t, Object text)">1</method>
			<method name="public void replace(String programName, int from, int to, Object text)">5</method>
			<method name="public void delete(String programName, int from, int to)">1</method>
			<method name="public void delete(int index)">1</method>
			<method name="static Class class$(String x0)">1</method>
			<method name="public String toString()">1</method>
			<method name="public void replace(int from, int to, Object text)">1</method>
			<method name="public void delete(org.antlr.runtime.Token from, org.antlr.runtime.Token to)">1</method>
			<method name="public void insertAfter(int index, Object text)">1</method>
			<method name="public void insertBefore(String programName, org.antlr.runtime.Token t, Object text)">1</method>
			<method name="public void delete(int from, int to)">1</method>
			<method name="protected java.util.List getKindOfOps(java.util.List rewrites, Class kind, int before)">5</method>
			<method name="public void replace(String programName, org.antlr.runtime.Token from, org.antlr.runtime.Token to, Object text)">1</method>
			<method name="public String toDebugString()">1</method>
			<method name="protected void init()">1</method>
			<method name="public void insertAfter(String programName, int index, Object text)">1</method>
			<method name="public void insertBefore(int index, Object text)">1</method>
			<method name="public void replace(org.antlr.runtime.Token from, org.antlr.runtime.Token to, Object text)">1</method>
			<method name="public void insertBefore(String programName, int index, Object text)">1</method>
			<method name="public void deleteProgram(String programName)">1</method>
			<method name="public void replace(int index, Object text)">1</method>
			<method name="public String toString(String programName, int start, int end)">10</method>
			<method name="protected String catOpText(Object a, Object b)">3</method>
			<method name="public void replace(org.antlr.runtime.Token indexT, Object text)">1</method>
			<method name="public void insertBefore(org.antlr.runtime.Token t, Object text)">1</method>
			<method name="protected java.util.List getKindOfOps(java.util.List rewrites, Class kind)">1</method>
			<method name="protected java.util.Map reduceToSingleOperationPerIndex(java.util.List rewrites)">32</method>
			<method name="public String toOriginalString()">1</method>
			<method name="public void rollback(String programName, int instructionIndex)">2</method>
			<method name="public void insertAfter(org.antlr.runtime.Token t, Object text)">1</method>
			<method name="public void delete(String programName, org.antlr.runtime.Token from, org.antlr.runtime.Token to)">1</method>
			<method name="protected void setLastRewriteTokenIndex(String programName, int i)">1</method>
			<method name="public String toString(int start, int end)">1</method>
			<method name="private java.util.List initializeProgram(String name)">1</method>
			<method name="public String toOriginalString(int start, int end)">4</method>
			<method name="public void rollback(int instructionIndex)">1</method>
			<method name="public String toDebugString(int start, int end)">4</method>
			<method name="protected int getLastRewriteTokenIndex(String programName)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenSource tokenSource, int channel)">1</method>
			<method name="protected java.util.List getProgram(String name)">2</method>
			<method name="public String toString(String programName)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$ContextVisitor</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>4</ca>
		<ce>3</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void visit(Object, Object, int, java.util.Map)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.RewriteRuleNodeStream</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>12</rfc>
		<lcom>15</lcom>
		<ca>0</ca>
		<ce>7</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>36</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.0</amc>
		<cc>
			<method name="protected Object dup(Object el)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription, Object oneElement)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription, java.util.List elements)">1</method>
			<method name="public Object nextNode()">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription)">1</method>
			<method name="protected Object toTree(Object el)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.ClassicToken</name>
		<wmc>19</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>30</rfc>
		<lcom>75</lcom>
		<ca>0</ca>
		<ce>6</ce>
		<npm>19</npm>
		<lcom3>0.7685185185185185</lcom3>
		<loc>205</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3368421052631579</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.473684210526315</amc>
		<cc>
			<method name="public int getTokenIndex()">1</method>
			<method name="public void _init_(org.antlr.runtime.Token oldToken)">1</method>
			<method name="public void setLine(int line)">1</method>
			<method name="public int getChannel()">1</method>
			<method name="public void setChannel(int channel)">1</method>
			<method name="public void setInputStream(org.antlr.runtime.CharStream input)">1</method>
			<method name="public void setType(int type)">1</method>
			<method name="public void _init_(int type)">1</method>
			<method name="public org.antlr.runtime.CharStream getInputStream()">1</method>
			<method name="public String toString()">3</method>
			<method name="public String getText()">1</method>
			<method name="public void setTokenIndex(int index)">1</method>
			<method name="public int getLine()">1</method>
			<method name="public int getCharPositionInLine()">1</method>
			<method name="public int getType()">1</method>
			<method name="public void setText(String text)">1</method>
			<method name="public void _init_(int type, String text, int channel)">1</method>
			<method name="public void setCharPositionInLine(int charPositionInLine)">1</method>
			<method name="public void _init_(int type, String text)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.CommonTree</name>
		<wmc>20</wmc>
		<dit>0</dit>
		<noc>2</noc>
		<cbo>13</cbo>
		<rfc>33</rfc>
		<lcom>12</lcom>
		<ca>8</ca>
		<ce>7</ce>
		<npm>20</npm>
		<lcom3>0.6842105263157895</lcom3>
		<loc>292</loc>
		<dam>0.4</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.26</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.35</amc>
		<cc>
			<method name="public org.antlr.runtime.Token getToken()">1</method>
			<method name="public void _init_(org.antlr.runtime.Token t)">1</method>
			<method name="public void setTokenStopIndex(int index)">1</method>
			<method name="public void setTokenStartIndex(int index)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.CommonTree node)">1</method>
			<method name="public int getTokenStartIndex()">3</method>
			<method name="public org.antlr.runtime.tree.Tree getParent()">1</method>
			<method name="public String toString()">4</method>
			<method name="public org.antlr.runtime.tree.Tree dupNode()">1</method>
			<method name="public String getText()">2</method>
			<method name="public boolean isNil()">2</method>
			<method name="public int getLine()">4</method>
			<method name="public int getCharPositionInLine()">4</method>
			<method name="public int getType()">2</method>
			<method name="public int getChildIndex()">1</method>
			<method name="public void setUnknownTokenBoundaries()">8</method>
			<method name="public void _init_()">1</method>
			<method name="public void setParent(org.antlr.runtime.tree.Tree t)">1</method>
			<method name="public void setChildIndex(int index)">1</method>
			<method name="public int getTokenStopIndex()">3</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.MismatchedNotSetException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>11</rfc>
		<lcom>3</lcom>
		<ca>2</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>28</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.333333333333334</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(org.antlr.runtime.BitSet expecting, org.antlr.runtime.IntStream input)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.BaseTree</name>
		<wmc>28</wmc>
		<dit>1</dit>
		<noc>3</noc>
		<cbo>13</cbo>
		<rfc>53</rfc>
		<lcom>306</lcom>
		<ca>3</ca>
		<ce>11</ce>
		<npm>27</npm>
		<lcom3>0.5925925925925926</lcom3>
		<loc>629</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.32142857142857145</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>21.428571428571427</amc>
		<cc>
			<method name="public Object deleteChild(int i)">2</method>
			<method name="public void addChildren(java.util.List kids)">2</method>
			<method name="public void sanityCheckParentAndChildIndexes()">1</method>
			<method name="public String toStringTree()">8</method>
			<method name="public int getLine()">1</method>
			<method name="public void sanityCheckParentAndChildIndexes(org.antlr.runtime.tree.Tree parent, int i)">4</method>
			<method name="public int getChildIndex()">1</method>
			<method name="public void setChild(int i, org.antlr.runtime.tree.Tree t)">4</method>
			<method name="public org.antlr.runtime.tree.Tree getChild(int i)">3</method>
			<method name="public int getChildCount()">2</method>
			<method name="public void setChildIndex(int index)">1</method>
			<method name="public void replaceChildren(int startChildIndex, int stopChildIndex, Object t)">9</method>
			<method name="public boolean hasAncestor(int ttype)">2</method>
			<method name="public java.util.List getChildren()">1</method>
			<method name="protected java.util.List createChildrenList()">1</method>
			<method name="public org.antlr.runtime.tree.Tree getFirstChildWithType(int type)">4</method>
			<method name="public org.antlr.runtime.tree.Tree getParent()">1</method>
			<method name="public void addChild(org.antlr.runtime.tree.Tree t)">8</method>
			<method name="public java.util.List getAncestors()">3</method>
			<method name="public void _init_(org.antlr.runtime.tree.Tree node)">1</method>
			<method name="public boolean isNil()">1</method>
			<method name="public int getCharPositionInLine()">1</method>
			<method name="public abstract String toString()">1</method>
			<method name="public void freshenParentAndChildIndexes()">1</method>
			<method name="public org.antlr.runtime.tree.Tree getAncestor(int ttype)">3</method>
			<method name="public void _init_()">1</method>
			<method name="public void setParent(org.antlr.runtime.tree.Tree t)">1</method>
			<method name="public void freshenParentAndChildIndexes(int offset)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenRewriteStream$ReplaceOp</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>7</cbo>
		<rfc>9</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>6</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>52</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>15.666666666666666</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public int execute(StringBuffer buf)">2</method>
			<method name="public void _init_(org.antlr.runtime.TokenRewriteStream, int from, int to, Object text)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$TreePattern</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>12</cbo>
		<rfc>7</rfc>
		<lcom>1</lcom>
		<ca>6</ca>
		<ce>6</ce>
		<npm>2</npm>
		<lcom3>1.5</lcom3>
		<loc>29</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.5</amc>
		<cc>
			<method name="public String toString()">2</method>
			<method name="public void _init_(org.antlr.runtime.Token payload)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.ParseTree</name>
		<wmc>12</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>22</rfc>
		<lcom>60</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>12</npm>
		<lcom3>0.7272727272727273</lcom3>
		<loc>137</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.25</amc>
		<cc>
			<method name="public String toString()">3</method>
			<method name="public org.antlr.runtime.tree.Tree dupNode()">1</method>
			<method name="public String getText()">1</method>
			<method name="public void _init_(Object label)">1</method>
			<method name="public int getType()">1</method>
			<method name="public void setTokenStopIndex(int index)">1</method>
			<method name="public String toStringWithHiddenTokens()">4</method>
			<method name="public void setTokenStartIndex(int index)">1</method>
			<method name="public void _toStringLeaves(StringBuffer buf)">4</method>
			<method name="public int getTokenStartIndex()">1</method>
			<method name="public String toInputString()">1</method>
			<method name="public int getTokenStopIndex()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.Profiler</name>
		<wmc>25</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>20</cbo>
		<rfc>64</rfc>
		<lcom>160</lcom>
		<ca>0</ca>
		<ce>20</ce>
		<npm>22</npm>
		<lcom3>0.8256172839506174</lcom3>
		<loc>1404</loc>
		<dam>0.2222222222222222</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.204</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>54.08</amc>
		<cc>
			<method name="public void LT(int i, org.antlr.runtime.Token t)">3</method>
			<method name="public void recognitionException(org.antlr.runtime.RecognitionException e)">1</method>
			<method name="public void exitRule(String grammarFileName, String ruleName)">1</method>
			<method name="public void semanticPredicate(boolean result, String predicate)">2</method>
			<method name="public void enterRule(String grammarFileName, String ruleName)">2</method>
			<method name="public void endBacktrack(int level, boolean successful)">1</method>
			<method name="public void consumeToken(org.antlr.runtime.Token token)">1</method>
			<method name="protected int[] trim(int[] X, int n)">2</method>
			<method name="public String toString()">1</method>
			<method name="public void exitDecision(int decisionNumber)">5</method>
			<method name="public void consumeHiddenToken(org.antlr.runtime.Token token)">1</method>
			<method name="public void memoize(org.antlr.runtime.IntStream input, int ruleIndex, int ruleStartIndex, String ruleName)">1</method>
			<method name="public void beginBacktrack(int level)">1</method>
			<method name="public String toNotifyString()">5</method>
			<method name="public void terminate()">1</method>
			<method name="public boolean inDecision()">2</method>
			<method name="public void setParser(org.antlr.runtime.debug.DebugParser parser)">1</method>
			<method name="public void enterDecision(int decisionNumber)">1</method>
			<method name="public static String toString(String notifyDataLine)">2</method>
			<method name="public void _init_(org.antlr.runtime.debug.DebugParser parser)">1</method>
			<method name="public int getNumberOfHiddenTokens(int i, int j)">4</method>
			<method name="protected static String[] decodeReportData(String data)">3</method>
			<method name="public void _init_()">1</method>
			<method name="protected int[] toArray(java.util.List a)">2</method>
			<method name="public void examineRuleMemoization(org.antlr.runtime.IntStream input, int ruleIndex, String ruleName)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.ANTLRFileStream</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>12</rfc>
		<lcom>4</lcom>
		<ca>0</ca>
		<ce>9</ce>
		<npm>4</npm>
		<lcom3>0.3333333333333333</lcom3>
		<loc>73</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.875</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.0</amc>
		<cc>
			<method name="public String getSourceName()">1</method>
			<method name="public void _init_(String fileName)">1</method>
			<method name="public void load(String fileName, String encoding)">1</method>
			<method name="public void _init_(String fileName, String encoding)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.BitSet</name>
		<wmc>28</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>20</cbo>
		<rfc>42</rfc>
		<lcom>106</lcom>
		<ca>9</ca>
		<ce>11</ce>
		<npm>24</npm>
		<lcom3>0.8055555555555556</lcom3>
		<loc>605</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.20918367346938777</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>20.464285714285715</amc>
		<cc>
			<method name="public boolean member(int el)">4</method>
			<method name="public void remove(int el)">2</method>
			<method name="public org.antlr.runtime.BitSet or(org.antlr.runtime.BitSet a)">2</method>
			<method name="public static org.antlr.runtime.BitSet of(int el)">1</method>
			<method name="public long[] toPackedArray()">1</method>
			<method name="private static final int wordNumber(int bit)">1</method>
			<method name="public Object clone()">1</method>
			<method name="public int size()">5</method>
			<method name="public String toString(String[] tokenNames)">6</method>
			<method name="public void _init_(long[] bits_)">1</method>
			<method name="public String toString()">1</method>
			<method name="public void _init_(java.util.List items)">2</method>
			<method name="public void _init_(int nbits)">1</method>
			<method name="public boolean equals(Object other)">10</method>
			<method name="public void growToInclude(int bit)">1</method>
			<method name="public int lengthInLongWords()">1</method>
			<method name="public void orInPlace(org.antlr.runtime.BitSet a)">4</method>
			<method name="private void setSize(int nwords)">1</method>
			<method name="public int numBits()">1</method>
			<method name="public int[] toArray()">3</method>
			<method name="public static org.antlr.runtime.BitSet of(int a, int b, int c, int d)">1</method>
			<method name="public void add(int el)">2</method>
			<method name="public boolean isNil()">3</method>
			<method name="private final int numWordsToHold(int el)">1</method>
			<method name="public static org.antlr.runtime.BitSet of(int a, int b)">1</method>
			<method name="private static final long bitMask(int bitNumber)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public static org.antlr.runtime.BitSet of(int a, int b, int c)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenRewriteStream$DeleteOp</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>7</rfc>
		<lcom>1</lcom>
		<ca>0</ca>
		<ce>6</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>30</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.5</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenRewriteStream, int from, int to)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.CharStream</name>
		<wmc>6</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>6</rfc>
		<lcom>15</lcom>
		<ca>8</ca>
		<ce>4</ce>
		<npm>6</npm>
		<lcom3>1.2</lcom3>
		<loc>7</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.8333333333333334</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract int getLine()">1</method>
			<method name="public abstract void setLine(int)">1</method>
			<method name="public abstract void setCharPositionInLine(int)">1</method>
			<method name="public abstract int getCharPositionInLine()">1</method>
			<method name="public abstract int LT(int)">1</method>
			<method name="public abstract String substring(int, int)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugParser</name>
		<wmc>11</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>21</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>11</ce>
		<npm>11</npm>
		<lcom3>0.45</lcom3>
		<loc>118</loc>
		<dam>0.5</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.2727272727272727</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.545454545454545</amc>
		<cc>
			<method name="public void reportError(org.antlr.runtime.RecognitionException e)">1</method>
			<method name="public void setDebugListener(org.antlr.runtime.debug.DebugEventListener dbg)">2</method>
			<method name="public org.antlr.runtime.debug.DebugEventListener getDebugListener()">1</method>
			<method name="public void endResync()">1</method>
			<method name="public void beginBacktrack(int level)">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream input, org.antlr.runtime.RecognizerSharedState state)">2</method>
			<method name="public void endBacktrack(int level, boolean successful)">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream input, org.antlr.runtime.debug.DebugEventListener dbg)">2</method>
			<method name="public void beginResync()">1</method>
			<method name="public void reportError(java.io.IOException e)">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream input, org.antlr.runtime.debug.DebugEventListener dbg, org.antlr.runtime.RecognizerSharedState state)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.CommonErrorNode</name>
		<wmc>5</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>16</cbo>
		<rfc>18</rfc>
		<lcom>6</lcom>
		<ca>1</ca>
		<ce>15</ce>
		<npm>5</npm>
		<lcom3>0.5625</lcom3>
		<loc>188</loc>
		<dam>0.0</dam>
		<moa>4</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>35.8</amc>
		<cc>
			<method name="public String toString()">5</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream input, org.antlr.runtime.Token start, org.antlr.runtime.Token stop, org.antlr.runtime.RecognitionException e)">4</method>
			<method name="public String getText()">4</method>
			<method name="public boolean isNil()">1</method>
			<method name="public int getType()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeNodeStream</name>
		<wmc>8</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>8</rfc>
		<lcom>28</lcom>
		<ca>8</ca>
		<ce>6</ce>
		<npm>8</npm>
		<lcom3>2.0</lcom3>
		<loc>8</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract String toString(Object, Object)">1</method>
			<method name="public abstract Object LT(int)">1</method>
			<method name="public abstract void replaceChildren(Object, int, int, Object)">1</method>
			<method name="public abstract Object get(int)">1</method>
			<method name="public abstract void setUniqueNavigationNodes(boolean)">1</method>
			<method name="public abstract Object getTreeSource()">1</method>
			<method name="public abstract org.antlr.runtime.tree.TreeAdaptor getTreeAdaptor()">1</method>
			<method name="public abstract org.antlr.runtime.TokenStream getTokenStream()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$TreePatternTreeAdaptor</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>4</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>10</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public Object create(org.antlr.runtime.Token payload)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeRuleReturnScope</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>3</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>0</ca>
		<ce>3</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public void _init_()">1</method>
			<method name="public Object getStart()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.BaseTreeAdaptor</name>
		<wmc>24</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>15</cbo>
		<rfc>50</rfc>
		<lcom>274</lcom>
		<ca>1</ca>
		<ce>14</ce>
		<npm>24</npm>
		<lcom3>0.9782608695652174</lcom3>
		<loc>305</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.35119047619047616</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.625</amc>
		<cc>
			<method name="public Object create(int tokenType, org.antlr.runtime.Token fromToken)">1</method>
			<method name="public abstract org.antlr.runtime.Token createToken(org.antlr.runtime.Token)">1</method>
			<method name="public Object create(int tokenType, org.antlr.runtime.Token fromToken, String text)">1</method>
			<method name="public Object rulePostProcessing(Object root)">5</method>
			<method name="public Object errorNode(org.antlr.runtime.TokenStream input, org.antlr.runtime.Token start, org.antlr.runtime.Token stop, org.antlr.runtime.RecognitionException e)">1</method>
			<method name="public Object deleteChild(Object t, int i)">1</method>
			<method name="public Object create(int tokenType, String text)">1</method>
			<method name="public Object becomeRoot(Object newRoot, Object oldRoot)">5</method>
			<method name="public void addChild(Object t, Object child)">3</method>
			<method name="public void setText(Object t, String text)">1</method>
			<method name="public void setType(Object t, int type)">1</method>
			<method name="public int getChildCount(Object t)">1</method>
			<method name="public boolean isNil(Object tree)">1</method>
			<method name="public Object dupTree(Object t, Object parent)">3</method>
			<method name="public abstract org.antlr.runtime.Token createToken(int, String)">1</method>
			<method name="public int getType(Object t)">1</method>
			<method name="public int getUniqueID(Object node)">3</method>
			<method name="public Object becomeRoot(org.antlr.runtime.Token newRoot, Object oldRoot)">1</method>
			<method name="public Object getChild(Object t, int i)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object nil()">1</method>
			<method name="public Object dupTree(Object tree)">1</method>
			<method name="public void setChild(Object t, int i, Object child)">1</method>
			<method name="public String getText(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugTreeNodeStream</name>
		<wmc>20</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>43</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>20</npm>
		<lcom3>0.7157894736842105</lcom3>
		<loc>199</loc>
		<dam>1.0</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.275</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.7</amc>
		<cc>
			<method name="public void seek(int index)">1</method>
			<method name="public Object get(int i)">1</method>
			<method name="public int LA(int i)">1</method>
			<method name="public void setDebugListener(org.antlr.runtime.debug.DebugEventListener dbg)">1</method>
			<method name="public int mark()">1</method>
			<method name="public void rewind()">1</method>
			<method name="public int index()">1</method>
			<method name="public void release(int marker)">1</method>
			<method name="public org.antlr.runtime.TokenStream getTokenStream()">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeNodeStream input, org.antlr.runtime.debug.DebugEventListener dbg)">1</method>
			<method name="public int size()">1</method>
			<method name="public String toString(Object start, Object stop)">1</method>
			<method name="public Object LT(int i)">1</method>
			<method name="public void consume()">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public void rewind(int marker)">1</method>
			<method name="public Object getTreeSource()">1</method>
			<method name="public void replaceChildren(Object parent, int startChildIndex, int stopChildIndex, Object t)">1</method>
			<method name="public void setUniqueNavigationNodes(boolean uniqueNavigationNodes)">1</method>
			<method name="public org.antlr.runtime.tree.TreeAdaptor getTreeAdaptor()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.RewriteRuleTokenStream</name>
		<wmc>7</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>13</rfc>
		<lcom>21</lcom>
		<ca>0</ca>
		<ce>8</ce>
		<npm>5</npm>
		<lcom3>2.0</lcom3>
		<loc>44</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4857142857142857</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.285714285714286</amc>
		<cc>
			<method name="protected Object dup(Object el)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription, Object oneElement)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription, java.util.List elements)">1</method>
			<method name="public Object nextNode()">1</method>
			<method name="public org.antlr.runtime.Token nextToken()">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription)">1</method>
			<method name="protected Object toTree(Object el)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.BlankDebugEventListener</name>
		<wmc>32</wmc>
		<dit>1</dit>
		<noc>5</noc>
		<cbo>11</cbo>
		<rfc>33</rfc>
		<lcom>496</lcom>
		<ca>5</ca>
		<ce>6</ce>
		<npm>32</npm>
		<lcom3>2.0</lcom3>
		<loc>66</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2857142857142857</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>1.0625</amc>
		<cc>
			<method name="public void LT(int i, org.antlr.runtime.Token t)">1</method>
			<method name="public void recognitionException(org.antlr.runtime.RecognitionException e)">1</method>
			<method name="public void exitRule(String grammarFileName, String ruleName)">1</method>
			<method name="public void createNode(Object node, org.antlr.runtime.Token token)">1</method>
			<method name="public void semanticPredicate(boolean result, String predicate)">1</method>
			<method name="public void enterRule(String grammarFileName, String ruleName)">1</method>
			<method name="public void enterSubRule(int decisionNumber)">1</method>
			<method name="public void endBacktrack(int level, boolean successful)">1</method>
			<method name="public void consumeToken(org.antlr.runtime.Token token)">1</method>
			<method name="public void location(int line, int pos)">1</method>
			<method name="public void exitDecision(int decisionNumber)">1</method>
			<method name="public void consumeHiddenToken(org.antlr.runtime.Token token)">1</method>
			<method name="public void nilNode(Object t)">1</method>
			<method name="public void beginBacktrack(int level)">1</method>
			<method name="public void terminate()">1</method>
			<method name="public void exitSubRule(int decisionNumber)">1</method>
			<method name="public void setTokenBoundaries(Object t, int tokenStartIndex, int tokenStopIndex)">1</method>
			<method name="public void rewind(int i)">1</method>
			<method name="public void rewind()">1</method>
			<method name="public void endResync()">1</method>
			<method name="public void consumeNode(Object t)">1</method>
			<method name="public void mark(int i)">1</method>
			<method name="public void enterDecision(int decisionNumber)">1</method>
			<method name="public void LT(int i, Object t)">1</method>
			<method name="public void errorNode(Object t)">1</method>
			<method name="public void enterAlt(int alt)">1</method>
			<method name="public void addChild(Object root, Object child)">1</method>
			<method name="public void becomeRoot(Object newRoot, Object oldRoot)">1</method>
			<method name="public void commence()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void beginResync()">1</method>
			<method name="public void createNode(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard</name>
		<wmc>23</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>25</cbo>
		<rfc>57</rfc>
		<lcom>187</lcom>
		<ca>4</ca>
		<ce>25</ce>
		<npm>18</npm>
		<lcom3>0.6969696969696969</lcom3>
		<loc>585</loc>
		<dam>0.6666666666666666</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.30434782608695654</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>24.304347826086957</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="public java.util.List find(Object t, int ttype)">1</method>
			<method name="protected void _visit(Object t, Object parent, int childIndex, int ttype, org.antlr.runtime.tree.TreeWizard$ContextVisitor visitor)">4</method>
			<method name="public java.util.List find(Object t, String pattern)">5</method>
			<method name="public int getTokenType(String tokenName)">3</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, java.util.Map tokenNameToTypeMap)">1</method>
			<method name="public void _init_(String[] tokenNames)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String[] tokenNames)">1</method>
			<method name="static Class class$(String x0)">1</method>
			<method name="public void visit(Object t, String pattern, org.antlr.runtime.tree.TreeWizard$ContextVisitor visitor)">5</method>
			<method name="public java.util.Map computeTokenTypes(String[] tokenNames)">3</method>
			<method name="public java.util.Map index(Object t)">1</method>
			<method name="public Object findFirst(Object t, String pattern)">1</method>
			<method name="protected static boolean _equals(Object t1, Object t2, org.antlr.runtime.tree.TreeAdaptor adaptor)">8</method>
			<method name="public void visit(Object t, int ttype, org.antlr.runtime.tree.TreeWizard$ContextVisitor visitor)">1</method>
			<method name="public boolean parse(Object t, String pattern, java.util.Map labels)">1</method>
			<method name="public boolean parse(Object t, String pattern)">1</method>
			<method name="protected boolean _parse(Object t1, org.antlr.runtime.tree.TreeWizard$TreePattern tpattern, java.util.Map labels)">13</method>
			<method name="public static boolean equals(Object t1, Object t2, org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="public Object create(String pattern)">1</method>
			<method name="public Object findFirst(Object t, int ttype)">1</method>
			<method name="public boolean equals(Object t1, Object t2)">1</method>
			<method name="protected void _index(Object t, java.util.Map m)">4</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.CommonToken</name>
		<wmc>23</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>36</rfc>
		<lcom>83</lcom>
		<ca>8</ca>
		<ce>7</ce>
		<npm>23</npm>
		<lcom3>0.7727272727272727</lcom3>
		<loc>310</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.33043478260869563</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.08695652173913</amc>
		<cc>
			<method name="public int getTokenIndex()">1</method>
			<method name="public void _init_(org.antlr.runtime.Token oldToken)">2</method>
			<method name="public void setLine(int line)">1</method>
			<method name="public int getChannel()">1</method>
			<method name="public void setChannel(int channel)">1</method>
			<method name="public void setInputStream(org.antlr.runtime.CharStream input)">1</method>
			<method name="public void setType(int type)">1</method>
			<method name="public void setStartIndex(int start)">1</method>
			<method name="public void _init_(int type)">1</method>
			<method name="public int getStartIndex()">1</method>
			<method name="public int getStopIndex()">1</method>
			<method name="public org.antlr.runtime.CharStream getInputStream()">1</method>
			<method name="public String toString()">3</method>
			<method name="public String getText()">3</method>
			<method name="public void setTokenIndex(int index)">1</method>
			<method name="public int getLine()">1</method>
			<method name="public int getCharPositionInLine()">1</method>
			<method name="public int getType()">1</method>
			<method name="public void _init_(org.antlr.runtime.CharStream input, int type, int channel, int start, int stop)">1</method>
			<method name="public void setText(String text)">1</method>
			<method name="public void setStopIndex(int stop)">1</method>
			<method name="public void setCharPositionInLine(int charPositionInLine)">1</method>
			<method name="public void _init_(int type, String text)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugEventSocketProxy</name>
		<wmc>42</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>24</cbo>
		<rfc>82</rfc>
		<lcom>719</lcom>
		<ca>0</ca>
		<ce>24</ce>
		<npm>36</npm>
		<lcom3>0.7886178861788619</lcom3>
		<loc>895</loc>
		<dam>0.8888888888888888</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.20714285714285716</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>20.095238095238095</amc>
		<cc>
			<method name="public void LT(int i, org.antlr.runtime.Token t)">2</method>
			<method name="public void recognitionException(org.antlr.runtime.RecognitionException e)">1</method>
			<method name="protected void serializeText(StringBuffer buf, String text)">2</method>
			<method name="public void exitRule(String grammarFileName, String ruleName)">1</method>
			<method name="public void consumeHiddenToken(org.antlr.runtime.Token t)">1</method>
			<method name="public void consumeToken(org.antlr.runtime.Token t)">1</method>
			<method name="public void createNode(Object node, org.antlr.runtime.Token token)">1</method>
			<method name="public void semanticPredicate(boolean result, String predicate)">1</method>
			<method name="public void enterRule(String grammarFileName, String ruleName)">1</method>
			<method name="protected void serializeNode(StringBuffer buf, Object t)">2</method>
			<method name="public void enterSubRule(int decisionNumber)">1</method>
			<method name="public void endBacktrack(int level, boolean successful)">2</method>
			<method name="public void location(int line, int pos)">1</method>
			<method name="public void exitDecision(int decisionNumber)">1</method>
			<method name="public void nilNode(Object t)">1</method>
			<method name="public void _init_(org.antlr.runtime.BaseRecognizer recognizer, org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="public void beginBacktrack(int level)">1</method>
			<method name="protected void ack()">1</method>
			<method name="public org.antlr.runtime.tree.TreeAdaptor getTreeAdaptor()">1</method>
			<method name="protected String escapeNewlines(String txt)">1</method>
			<method name="public void terminate()">1</method>
			<method name="public void exitSubRule(int decisionNumber)">1</method>
			<method name="public void setTokenBoundaries(Object t, int tokenStartIndex, int tokenStopIndex)">1</method>
			<method name="public void rewind(int i)">1</method>
			<method name="protected void transmit(String event)">1</method>
			<method name="public void rewind()">1</method>
			<method name="public void endResync()">1</method>
			<method name="protected String serializeToken(org.antlr.runtime.Token t)">1</method>
			<method name="public void consumeNode(Object t)">1</method>
			<method name="public void mark(int i)">1</method>
			<method name="public void handshake()">1</method>
			<method name="public void _init_(org.antlr.runtime.BaseRecognizer recognizer, int port, org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="public void enterDecision(int decisionNumber)">1</method>
			<method name="public void LT(int i, Object t)">1</method>
			<method name="public void setTreeAdaptor(org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="public void errorNode(Object t)">1</method>
			<method name="public void enterAlt(int alt)">1</method>
			<method name="public void addChild(Object root, Object child)">1</method>
			<method name="public void becomeRoot(Object newRoot, Object oldRoot)">1</method>
			<method name="public void commence()">1</method>
			<method name="public void beginResync()">1</method>
			<method name="public void createNode(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.Lexer</name>
		<wmc>27</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>19</cbo>
		<rfc>59</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>19</ce>
		<npm>27</npm>
		<lcom3>0.3076923076923077</lcom3>
		<loc>632</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.20833333333333334</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>22.37037037037037</amc>
		<cc>
			<method name="public org.antlr.runtime.CharStream getCharStream()">1</method>
			<method name="public void match(int c)">1</method>
			<method name="public void recover(org.antlr.runtime.RecognitionException re)">1</method>
			<method name="public void traceOut(String ruleName, int ruleIndex)">1</method>
			<method name="public void reset()">3</method>
			<method name="public void _init_(org.antlr.runtime.CharStream input, org.antlr.runtime.RecognizerSharedState state)">1</method>
			<method name="public void skip()">1</method>
			<method name="public void setCharStream(org.antlr.runtime.CharStream input)">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public int getLine()">1</method>
			<method name="public void _init_(org.antlr.runtime.CharStream input)">1</method>
			<method name="public void emit(org.antlr.runtime.Token token)">1</method>
			<method name="public int getCharIndex()">1</method>
			<method name="public void match(String s)">1</method>
			<method name="public void reportError(org.antlr.runtime.RecognitionException e)">1</method>
			<method name="public String getCharErrorDisplay(int c)">6</method>
			<method name="public abstract void mTokens()">1</method>
			<method name="public String getText()">2</method>
			<method name="public org.antlr.runtime.Token nextToken()">4</method>
			<method name="public void matchAny()">1</method>
			<method name="public int getCharPositionInLine()">1</method>
			<method name="public void setText(String text)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void matchRange(int a, int b)">1</method>
			<method name="public void traceIn(String ruleName, int ruleIndex)">1</method>
			<method name="public org.antlr.runtime.Token emit()">1</method>
			<method name="public String getErrorMessage(org.antlr.runtime.RecognitionException e, String[] tokenNames)">7</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.misc.Stats</name>
		<wmc>8</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>24</rfc>
		<lcom>28</lcom>
		<ca>1</ca>
		<ce>12</ce>
		<npm>8</npm>
		<lcom3>1.1428571428571428</lcom3>
		<loc>226</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>27.125</amc>
		<cc>
			<method name="public static int sum(int[] X)">3</method>
			<method name="public static double avg(int[] X)">4</method>
			<method name="public static void writeReport(String filename, String data)">1</method>
			<method name="public static int min(int[] X)">4</method>
			<method name="public static int max(int[] X)">4</method>
			<method name="public static String getAbsoluteFileName(String filename)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public static double stddev(int[] X)">3</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.RemoteDebugEventSocketListener$ProxyTree</name>
		<wmc>10</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>11</rfc>
		<lcom>35</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>10</npm>
		<lcom3>0.8703703703703705</lcom3>
		<loc>78</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.2</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public org.antlr.runtime.tree.Tree dupNode()">1</method>
			<method name="public String getText()">1</method>
			<method name="public int getType()">1</method>
			<method name="public void setTokenStopIndex(int index)">1</method>
			<method name="public void _init_(int ID, int type, int line, int charPos, int tokenIndex, String text)">1</method>
			<method name="public void setTokenStartIndex(int index)">1</method>
			<method name="public void _init_(int ID)">1</method>
			<method name="public int getTokenStartIndex()">1</method>
			<method name="public int getTokenStopIndex()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.MissingTokenException</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>11</rfc>
		<lcom>4</lcom>
		<ca>2</ca>
		<ce>7</ce>
		<npm>4</npm>
		<lcom3>0.6666666666666666</lcom3>
		<loc>61</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.0</amc>
		<cc>
			<method name="public String toString()">4</method>
			<method name="public int getMissingType()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(int expecting, org.antlr.runtime.IntStream input, Object inserted)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.EarlyExitException</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>4</rfc>
		<lcom>1</lcom>
		<ca>2</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>13</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.0</amc>
		<cc>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(int decisionNumber, org.antlr.runtime.IntStream input)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenRewriteStream$RewriteOperation</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>2</noc>
		<cbo>8</cbo>
		<rfc>14</rfc>
		<lcom>0</lcom>
		<ca>3</ca>
		<ce>6</ce>
		<npm>2</npm>
		<lcom3>0.75</lcom3>
		<loc>59</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.333333333333332</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public int execute(StringBuffer buf)">1</method>
			<method name="protected void _init_(org.antlr.runtime.TokenRewriteStream, int index, Object text)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.RecognitionException</name>
		<wmc>4</wmc>
		<dit>3</dit>
		<noc>7</noc>
		<cbo>38</cbo>
		<rfc>21</rfc>
		<lcom>0</lcom>
		<ca>26</ca>
		<ce>13</ce>
		<npm>3</npm>
		<lcom3>0.625</lcom3>
		<loc>216</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.9130434782608695</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>51.0</amc>
		<cc>
			<method name="public int getUnexpectedType()">3</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(org.antlr.runtime.IntStream input)">4</method>
			<method name="protected void extractInformationFromTreeNodeStream(org.antlr.runtime.IntStream input)">7</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.Token</name>
		<wmc>15</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>46</cbo>
		<rfc>16</rfc>
		<lcom>105</lcom>
		<ca>42</ca>
		<ce>5</ce>
		<npm>14</npm>
		<lcom3>1.051948051948052</lcom3>
		<loc>42</loc>
		<dam>0.0</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>1.0666666666666667</amc>
		<cc>
			<method name="public abstract int getLine()">1</method>
			<method name="public abstract void setCharPositionInLine(int)">1</method>
			<method name="public abstract int getChannel()">1</method>
			<method name="public abstract int getCharPositionInLine()">1</method>
			<method name="public abstract void setText(String)">1</method>
			<method name="public abstract int getType()">1</method>
			<method name="public abstract void setTokenIndex(int)">1</method>
			<method name="public abstract void setChannel(int)">1</method>
			<method name="public abstract org.antlr.runtime.CharStream getInputStream()">1</method>
			<method name="public abstract void setType(int)">1</method>
			<method name="public abstract void setLine(int)">1</method>
			<method name="public abstract String getText()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public abstract int getTokenIndex()">1</method>
			<method name="public abstract void setInputStream(org.antlr.runtime.CharStream)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugTokenStream</name>
		<wmc>19</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>40</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>18</npm>
		<lcom3>0.5972222222222222</lcom3>
		<loc>222</loc>
		<dam>0.75</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.3157894736842105</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.473684210526315</amc>
		<cc>
			<method name="public org.antlr.runtime.Token get(int i)">1</method>
			<method name="public void seek(int index)">1</method>
			<method name="public int LA(int i)">2</method>
			<method name="public void setDebugListener(org.antlr.runtime.debug.DebugEventListener dbg)">1</method>
			<method name="public int mark()">1</method>
			<method name="public void rewind()">1</method>
			<method name="public int index()">1</method>
			<method name="public void release(int marker)">1</method>
			<method name="public org.antlr.runtime.TokenSource getTokenSource()">1</method>
			<method name="public int size()">1</method>
			<method name="protected void consumeInitialHiddenTokens()">2</method>
			<method name="public org.antlr.runtime.Token LT(int i)">2</method>
			<method name="public String toString()">1</method>
			<method name="public void consume()">4</method>
			<method name="public String getSourceName()">1</method>
			<method name="public String toString(int start, int stop)">1</method>
			<method name="public void rewind(int marker)">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream input, org.antlr.runtime.debug.DebugEventListener dbg)">1</method>
			<method name="public String toString(org.antlr.runtime.Token start, org.antlr.runtime.Token stop)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.TraceDebugEventListener</name>
		<wmc>14</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>24</rfc>
		<lcom>19</lcom>
		<ca>0</ca>
		<ce>9</ce>
		<npm>14</npm>
		<lcom3>0.38461538461538464</lcom3>
		<loc>278</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.36904761904761907</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>18.785714285714285</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="public void exitSubRule(int decisionNumber)">1</method>
			<method name="public void setTokenBoundaries(Object t, int tokenStartIndex, int tokenStopIndex)">1</method>
			<method name="public void createNode(Object node, org.antlr.runtime.Token token)">1</method>
			<method name="public void enterSubRule(int decisionNumber)">1</method>
			<method name="public void consumeNode(Object t)">1</method>
			<method name="public void location(int line, int pos)">1</method>
			<method name="public void LT(int i, Object t)">1</method>
			<method name="public void nilNode(Object t)">1</method>
			<method name="public void enterRule(String ruleName)">1</method>
			<method name="public void exitRule(String ruleName)">1</method>
			<method name="public void addChild(Object root, Object child)">1</method>
			<method name="public void becomeRoot(Object newRoot, Object oldRoot)">1</method>
			<method name="public void createNode(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugTreeParser</name>
		<wmc>12</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>24</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>13</ce>
		<npm>11</npm>
		<lcom3>0.45454545454545453</lcom3>
		<loc>132</loc>
		<dam>0.5</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.24166666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.833333333333334</amc>
		<cc>
			<method name="public void reportError(org.antlr.runtime.RecognitionException e)">1</method>
			<method name="protected Object getMissingSymbol(org.antlr.runtime.IntStream input, org.antlr.runtime.RecognitionException e, int expectedTokenType, org.antlr.runtime.BitSet follow)">1</method>
			<method name="public void setDebugListener(org.antlr.runtime.debug.DebugEventListener dbg)">2</method>
			<method name="public org.antlr.runtime.debug.DebugEventListener getDebugListener()">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeNodeStream input, org.antlr.runtime.RecognizerSharedState state)">2</method>
			<method name="public void endResync()">1</method>
			<method name="public void beginBacktrack(int level)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeNodeStream input, org.antlr.runtime.debug.DebugEventListener dbg, org.antlr.runtime.RecognizerSharedState state)">2</method>
			<method name="public void endBacktrack(int level, boolean successful)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeNodeStream input, org.antlr.runtime.debug.DebugEventListener dbg)">2</method>
			<method name="public void beginResync()">1</method>
			<method name="public void reportError(java.io.IOException e)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreePatternParser</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>17</cbo>
		<rfc>20</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>17</ce>
		<npm>4</npm>
		<lcom3>0.30000000000000004</lcom3>
		<loc>299</loc>
		<dam>0.8</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.32</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>57.8</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.tree.TreePatternLexer tokenizer, org.antlr.runtime.tree.TreeWizard wizard, org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="static Class class$(String x0)">1</method>
			<method name="public Object pattern()">4</method>
			<method name="public Object parseTree()">10</method>
			<method name="public Object parseNode()">16</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.Parser</name>
		<wmc>10</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>13</cbo>
		<rfc>26</rfc>
		<lcom>15</lcom>
		<ca>1</ca>
		<ce>12</ce>
		<npm>8</npm>
		<lcom3>0.2222222222222222</lcom3>
		<loc>128</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.2875</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.7</amc>
		<cc>
			<method name="public void setTokenStream(org.antlr.runtime.TokenStream input)">1</method>
			<method name="protected Object getMissingSymbol(org.antlr.runtime.IntStream input, org.antlr.runtime.RecognitionException e, int expectedTokenType, org.antlr.runtime.BitSet follow)">3</method>
			<method name="public void traceOut(String ruleName, int ruleIndex)">1</method>
			<method name="protected Object getCurrentInputSymbol(org.antlr.runtime.IntStream input)">1</method>
			<method name="public org.antlr.runtime.TokenStream getTokenStream()">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public void reset()">2</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream input, org.antlr.runtime.RecognizerSharedState state)">1</method>
			<method name="public void traceIn(String ruleName, int ruleIndex)">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream input)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.Tracer</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>14</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>11</ce>
		<npm>4</npm>
		<lcom3>0.16666666666666666</lcom3>
		<loc>102</loc>
		<dam>0.5</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>24.0</amc>
		<cc>
			<method name="public Object getInputSymbol(int k)">2</method>
			<method name="public void enterRule(String ruleName)">2</method>
			<method name="public void exitRule(String ruleName)">2</method>
			<method name="public void _init_(org.antlr.runtime.IntStream input)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeVisitor</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>10</rfc>
		<lcom>1</lcom>
		<ca>0</ca>
		<ce>5</ce>
		<npm>3</npm>
		<lcom3>0.0</lcom3>
		<loc>62</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>19.333333333333332</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object visit(Object t, org.antlr.runtime.tree.TreeVisitorAction action)">6</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenSource</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>2</rfc>
		<lcom>1</lcom>
		<ca>5</ca>
		<ce>3</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>2</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract String getSourceName()">1</method>
			<method name="public abstract org.antlr.runtime.Token nextToken()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.CommonTreeNodeStream</name>
		<wmc>37</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>18</cbo>
		<rfc>71</rfc>
		<lcom>220</lcom>
		<ca>2</ca>
		<ce>17</ce>
		<npm>33</npm>
		<lcom3>0.767094017094017</lcom3>
		<loc>746</loc>
		<dam>0.7692307692307693</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.24324324324324326</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>18.81081081081081</amc>
		<cc>
			<method name="protected void fillBuffer()">1</method>
			<method name="public Object get(int i)">2</method>
			<method name="public int LA(int i)">1</method>
			<method name="public int mark()">2</method>
			<method name="public void reset()">2</method>
			<method name="public void setTokenStream(org.antlr.runtime.TokenStream tokens)">1</method>
			<method name="public int pop()">1</method>
			<method name="public int size()">2</method>
			<method name="public Object getCurrentSymbol()">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.CommonTreeNodeStream parent, int start, int stop)">1</method>
			<method name="public String toString()">3</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, Object tree)">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public Object getTreeSource()">1</method>
			<method name="public void rewind(int marker)">1</method>
			<method name="public org.antlr.runtime.tree.TreeAdaptor getTreeAdaptor()">1</method>
			<method name="public void seek(int index)">2</method>
			<method name="public void push(int index)">2</method>
			<method name="public void rewind()">1</method>
			<method name="public org.antlr.runtime.TokenStream getTokenStream()">1</method>
			<method name="public void release(int marker)">1</method>
			<method name="public int index()">1</method>
			<method name="protected int getNodeIndex(Object node)">4</method>
			<method name="protected void addNavigationNode(int ttype)">4</method>
			<method name="public String toString(Object start, Object stop)">14</method>
			<method name="protected Object LB(int k)">3</method>
			<method name="public void fillBuffer(Object t)">7</method>
			<method name="public java.util.Iterator iterator()">2</method>
			<method name="public boolean hasUniqueNavigationNodes()">1</method>
			<method name="public Object LT(int k)">5</method>
			<method name="public void consume()">2</method>
			<method name="public void setTreeAdaptor(org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="public void _init_(Object tree)">1</method>
			<method name="public String toTokenString(int start, int stop)">4</method>
			<method name="public void replaceChildren(Object parent, int startChildIndex, int stopChildIndex, Object t)">2</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, Object tree, int initialBufferSize)">1</method>
			<method name="public void setUniqueNavigationNodes(boolean uniqueNavigationNodes)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.ParseTreeBuilder</name>
		<wmc>11</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>25</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>12</ce>
		<npm>11</npm>
		<lcom3>0.675</lcom3>
		<loc>174</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.30303030303030304</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.454545454545455</amc>
		<cc>
			<method name="public org.antlr.runtime.tree.ParseTree getTree()">1</method>
			<method name="public void exitDecision(int i)">1</method>
			<method name="public void exitRule(String filename, String ruleName)">3</method>
			<method name="public void consumeHiddenToken(org.antlr.runtime.Token token)">2</method>
			<method name="public void recognitionException(org.antlr.runtime.RecognitionException e)">2</method>
			<method name="public void enterRule(String filename, String ruleName)">2</method>
			<method name="public org.antlr.runtime.tree.ParseTree epsilonNode()">1</method>
			<method name="public void enterDecision(int d)">1</method>
			<method name="public void _init_(String grammarName)">1</method>
			<method name="public org.antlr.runtime.tree.ParseTree create(Object payload)">1</method>
			<method name="public void consumeToken(org.antlr.runtime.Token token)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.RemoteDebugEventSocketListener$ProxyToken</name>
		<wmc>17</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>22</rfc>
		<lcom>74</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>17</npm>
		<lcom3>0.8020833333333333</lcom3>
		<loc>146</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.39705882352941174</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.235294117647059</amc>
		<cc>
			<method name="public void _init_(int index, int type, int channel, int line, int charPos, String text)">1</method>
			<method name="public int getTokenIndex()">1</method>
			<method name="public void setLine(int line)">1</method>
			<method name="public void setCharPositionInLine(int pos)">1</method>
			<method name="public int getChannel()">1</method>
			<method name="public void setChannel(int channel)">1</method>
			<method name="public void setType(int ttype)">1</method>
			<method name="public void setInputStream(org.antlr.runtime.CharStream input)">1</method>
			<method name="public org.antlr.runtime.CharStream getInputStream()">1</method>
			<method name="public String toString()">2</method>
			<method name="public String getText()">1</method>
			<method name="public void setTokenIndex(int index)">1</method>
			<method name="public int getLine()">1</method>
			<method name="public int getCharPositionInLine()">1</method>
			<method name="public int getType()">1</method>
			<method name="public void setText(String text)">1</method>
			<method name="public void _init_(int index)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.RewriteRuleElementStream</name>
		<wmc>12</wmc>
		<dit>1</dit>
		<noc>3</noc>
		<cbo>11</cbo>
		<rfc>19</rfc>
		<lcom>24</lcom>
		<ca>3</ca>
		<ce>8</ce>
		<npm>9</npm>
		<lcom3>0.5606060606060607</lcom3>
		<loc>224</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.38333333333333336</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.166666666666668</amc>
		<cc>
			<method name="public Object nextTree()">4</method>
			<method name="public boolean hasNext()">5</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription, Object oneElement)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription, java.util.List elements)">1</method>
			<method name="public void add(Object el)">4</method>
			<method name="public String getDescription()">1</method>
			<method name="protected Object _next()">5</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription)">1</method>
			<method name="public void reset()">1</method>
			<method name="protected Object toTree(Object el)">1</method>
			<method name="public int size()">3</method>
			<method name="protected abstract Object dup(Object)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.DOTTreeGenerator</name>
		<wmc>10</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>31</rfc>
		<lcom>31</lcom>
		<ca>0</ca>
		<ce>10</ce>
		<npm>4</npm>
		<lcom3>0.6222222222222222</lcom3>
		<loc>319</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.46296296296296297</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>30.4</amc>
		<cc>
			<method name="protected org.antlr.stringtemplate.StringTemplate getNodeST(org.antlr.runtime.tree.TreeAdaptor adaptor, Object t)">1</method>
			<method name="protected void toDOTDefineEdges(Object tree, org.antlr.runtime.tree.TreeAdaptor adaptor, org.antlr.stringtemplate.StringTemplate treeST)">4</method>
			<method name="public org.antlr.stringtemplate.StringTemplate toDOT(org.antlr.runtime.tree.Tree tree)">1</method>
			<method name="public org.antlr.stringtemplate.StringTemplate toDOT(Object tree, org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="protected int getNodeNumber(Object t)">2</method>
			<method name="protected String fixString(String in)">3</method>
			<method name="public void _init_()">1</method>
			<method name="protected void toDOTDefineNodes(Object tree, org.antlr.runtime.tree.TreeAdaptor adaptor, org.antlr.stringtemplate.StringTemplate treeST)">4</method>
			<method name="public org.antlr.stringtemplate.StringTemplate toDOT(Object tree, org.antlr.runtime.tree.TreeAdaptor adaptor, org.antlr.stringtemplate.StringTemplate _treeST, org.antlr.stringtemplate.StringTemplate _edgeST)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugEventRepeater</name>
		<wmc>32</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>64</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>6</ce>
		<npm>32</npm>
		<lcom3>0.0</lcom3>
		<loc>201</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.25390625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.25</amc>
		<cc>
			<method name="public void LT(int i, org.antlr.runtime.Token t)">1</method>
			<method name="public void recognitionException(org.antlr.runtime.RecognitionException e)">1</method>
			<method name="public void exitRule(String grammarFileName, String ruleName)">1</method>
			<method name="public void createNode(Object node, org.antlr.runtime.Token token)">1</method>
			<method name="public void semanticPredicate(boolean result, String predicate)">1</method>
			<method name="public void enterRule(String grammarFileName, String ruleName)">1</method>
			<method name="public void enterSubRule(int decisionNumber)">1</method>
			<method name="public void endBacktrack(int level, boolean successful)">1</method>
			<method name="public void consumeToken(org.antlr.runtime.Token token)">1</method>
			<method name="public void location(int line, int pos)">1</method>
			<method name="public void exitDecision(int decisionNumber)">1</method>
			<method name="public void consumeHiddenToken(org.antlr.runtime.Token token)">1</method>
			<method name="public void nilNode(Object t)">1</method>
			<method name="public void _init_(org.antlr.runtime.debug.DebugEventListener listener)">1</method>
			<method name="public void beginBacktrack(int level)">1</method>
			<method name="public void terminate()">1</method>
			<method name="public void exitSubRule(int decisionNumber)">1</method>
			<method name="public void setTokenBoundaries(Object t, int tokenStartIndex, int tokenStopIndex)">1</method>
			<method name="public void rewind(int i)">1</method>
			<method name="public void rewind()">1</method>
			<method name="public void endResync()">1</method>
			<method name="public void consumeNode(Object t)">1</method>
			<method name="public void mark(int i)">1</method>
			<method name="public void enterDecision(int decisionNumber)">1</method>
			<method name="public void LT(int i, Object t)">1</method>
			<method name="public void errorNode(Object t)">1</method>
			<method name="public void enterAlt(int alt)">1</method>
			<method name="public void addChild(Object root, Object child)">1</method>
			<method name="public void becomeRoot(Object newRoot, Object oldRoot)">1</method>
			<method name="public void commence()">1</method>
			<method name="public void beginResync()">1</method>
			<method name="public void createNode(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.CommonTreeNodeStream$StreamIterator</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>8</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>0.3333333333333333</lcom3>
		<loc>56</loc>
		<dam>0.5</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.5</amc>
		<cc>
			<method name="public boolean hasNext()">2</method>
			<method name="public void remove()">1</method>
			<method name="public Object next()">2</method>
			<method name="protected void _init_(org.antlr.runtime.tree.CommonTreeNodeStream)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.RecognizerSharedState</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>7</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>44</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>28.0</amc>
		<cc>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.NoViableAltException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>11</rfc>
		<lcom>1</lcom>
		<ca>4</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>0.8333333333333334</lcom3>
		<loc>61</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>18.333333333333332</amc>
		<cc>
			<method name="public String toString()">2</method>
			<method name="public void _init_(String grammarDecisionDescription, int decisionNumber, int stateNumber, org.antlr.runtime.IntStream input)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.misc.IntArray</name>
		<wmc>7</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>9</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>7</npm>
		<lcom3>0.611111111111111</lcom3>
		<loc>103</loc>
		<dam>0.3333333333333333</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.7142857142857143</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.285714285714286</amc>
		<cc>
			<method name="public void clear()">1</method>
			<method name="public void add(int v)">1</method>
			<method name="public void push(int v)">1</method>
			<method name="public void ensureCapacity(int index)">4</method>
			<method name="public int pop()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public int size()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.FailedPredicateException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>8</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>35</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.0</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.IntStream input, String ruleName, String predicateText)">1</method>
			<method name="public String toString()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.CommonTokenStream</name>
		<wmc>33</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>16</cbo>
		<rfc>62</rfc>
		<lcom>222</lcom>
		<ca>1</ca>
		<ce>15</ce>
		<npm>29</npm>
		<lcom3>0.5390625</lcom3>
		<loc>594</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.24675324675324675</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>16.757575757575758</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.TokenSource tokenSource)">1</method>
			<method name="public org.antlr.runtime.Token get(int i)">1</method>
			<method name="protected void fillBuffer()">10</method>
			<method name="public int LA(int i)">1</method>
			<method name="public void discardTokenType(int ttype)">2</method>
			<method name="public int mark()">2</method>
			<method name="public java.util.List getTokens(int start, int stop, int ttype)">1</method>
			<method name="public void reset()">1</method>
			<method name="public org.antlr.runtime.TokenSource getTokenSource()">1</method>
			<method name="public int size()">1</method>
			<method name="public java.util.List getTokens()">2</method>
			<method name="public String toString()">2</method>
			<method name="public void setTokenTypeChannel(int ttype, int channel)">2</method>
			<method name="public String getSourceName()">1</method>
			<method name="public String toString(int start, int stop)">6</method>
			<method name="public void rewind(int marker)">1</method>
			<method name="public java.util.List getTokens(int start, int stop, org.antlr.runtime.BitSet types)">9</method>
			<method name="public String toString(org.antlr.runtime.Token start, org.antlr.runtime.Token stop)">3</method>
			<method name="protected org.antlr.runtime.Token LB(int k)">6</method>
			<method name="public void seek(int index)">1</method>
			<method name="public java.util.List getTokens(int start, int stop, java.util.List types)">1</method>
			<method name="public void rewind()">1</method>
			<method name="public void setTokenSource(org.antlr.runtime.TokenSource tokenSource)">1</method>
			<method name="public void release(int marker)">1</method>
			<method name="public int index()">1</method>
			<method name="protected int skipOffTokenChannels(int i)">3</method>
			<method name="protected int skipOffTokenChannelsReverse(int i)">3</method>
			<method name="public void discardOffChannelTokens(boolean discardOffChannelTokens)">1</method>
			<method name="public java.util.List getTokens(int start, int stop)">1</method>
			<method name="public org.antlr.runtime.Token LT(int k)">7</method>
			<method name="public void consume()">2</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenSource tokenSource, int channel)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.MismatchedTreeNodeException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>10</rfc>
		<lcom>1</lcom>
		<ca>2</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>31</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.0</amc>
		<cc>
			<method name="public void _init_(int expecting, org.antlr.runtime.tree.TreeNodeStream input)">1</method>
			<method name="public String toString()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenStream</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>21</cbo>
		<rfc>5</rfc>
		<lcom>10</lcom>
		<ca>15</ca>
		<ce>6</ce>
		<npm>5</npm>
		<lcom3>2.0</lcom3>
		<loc>5</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract org.antlr.runtime.Token LT(int)">1</method>
			<method name="public abstract org.antlr.runtime.Token get(int)">1</method>
			<method name="public abstract org.antlr.runtime.TokenSource getTokenSource()">1</method>
			<method name="public abstract String toString(int, int)">1</method>
			<method name="public abstract String toString(org.antlr.runtime.Token, org.antlr.runtime.Token)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.ParserRuleReturnScope</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>4</rfc>
		<lcom>3</lcom>
		<ca>0</ca>
		<ce>4</ce>
		<npm>3</npm>
		<lcom3>1.0</lcom3>
		<loc>14</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getStop()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object getStart()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.RuleReturnScope</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>2</noc>
		<cbo>4</cbo>
		<rfc>6</rfc>
		<lcom>10</lcom>
		<ca>2</ca>
		<ce>2</ce>
		<npm>5</npm>
		<lcom3>2.0</lcom3>
		<loc>16</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>2.2</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public Object getTemplate()">1</method>
			<method name="public Object getStop()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object getStart()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.ANTLRStringStream</name>
		<wmc>20</wmc>
		<dit>1</dit>
		<noc>2</noc>
		<cbo>9</cbo>
		<rfc>29</rfc>
		<lcom>62</lcom>
		<ca>2</ca>
		<ce>7</ce>
		<npm>20</npm>
		<lcom3>0.6900584795321637</lcom3>
		<loc>303</loc>
		<dam>0.8888888888888888</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3875</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.7</amc>
		<cc>
			<method name="public void _init_(char[] data, int numberOfActualCharsInArray)">1</method>
			<method name="public void seek(int index)">3</method>
			<method name="public void setLine(int line)">1</method>
			<method name="public void setCharPositionInLine(int pos)">1</method>
			<method name="public int LA(int i)">5</method>
			<method name="public int mark()">3</method>
			<method name="public void _init_(String input)">1</method>
			<method name="public String substring(int start, int stop)">1</method>
			<method name="public void rewind()">1</method>
			<method name="public int index()">1</method>
			<method name="public void release(int marker)">1</method>
			<method name="public void reset()">1</method>
			<method name="public int size()">1</method>
			<method name="public void rewind(int m)">1</method>
			<method name="public void consume()">3</method>
			<method name="public int getLine()">1</method>
			<method name="public int getCharPositionInLine()">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public int LT(int i)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.ANTLRReaderStream</name>
		<wmc>5</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>7</cbo>
		<rfc>9</rfc>
		<lcom>10</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>5</npm>
		<lcom3>1.25</lcom3>
		<loc>103</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.8</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>19.2</amc>
		<cc>
			<method name="public void _init_(java.io.Reader r, int size, int readChunkSize)">1</method>
			<method name="public void load(java.io.Reader r, int size, int readChunkSize)">1</method>
			<method name="public void _init_(java.io.Reader r, int size)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(java.io.Reader r)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.IntStream</name>
		<wmc>10</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>26</cbo>
		<rfc>10</rfc>
		<lcom>45</lcom>
		<ca>23</ca>
		<ce>3</ce>
		<npm>10</npm>
		<lcom3>2.0</lcom3>
		<loc>10</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.7</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract int size()">1</method>
			<method name="public abstract void rewind()">1</method>
			<method name="public abstract int index()">1</method>
			<method name="public abstract void rewind(int)">1</method>
			<method name="public abstract void release(int)">1</method>
			<method name="public abstract void consume()">1</method>
			<method name="public abstract String getSourceName()">1</method>
			<method name="public abstract void seek(int)">1</method>
			<method name="public abstract int LA(int)">1</method>
			<method name="public abstract int mark()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugEventListener</name>
		<wmc>31</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>31</rfc>
		<lcom>465</lcom>
		<ca>9</ca>
		<ce>5</ce>
		<npm>31</npm>
		<lcom3>1.0333333333333334</lcom3>
		<loc>34</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2903225806451613</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void mark(int)">1</method>
			<method name="public abstract void terminate()">1</method>
			<method name="public abstract void enterRule(String, String)">1</method>
			<method name="public abstract void consumeToken(org.antlr.runtime.Token)">1</method>
			<method name="public abstract void rewind(int)">1</method>
			<method name="public abstract void exitDecision(int)">1</method>
			<method name="public abstract void endResync()">1</method>
			<method name="public abstract void createNode(Object)">1</method>
			<method name="public abstract void rewind()">1</method>
			<method name="public abstract void errorNode(Object)">1</method>
			<method name="public abstract void LT(int, org.antlr.runtime.Token)">1</method>
			<method name="public abstract void beginBacktrack(int)">1</method>
			<method name="public abstract void semanticPredicate(boolean, String)">1</method>
			<method name="public abstract void commence()">1</method>
			<method name="public abstract void LT(int, Object)">1</method>
			<method name="public abstract void endBacktrack(int, boolean)">1</method>
			<method name="public abstract void nilNode(Object)">1</method>
			<method name="public abstract void enterAlt(int)">1</method>
			<method name="public abstract void enterSubRule(int)">1</method>
			<method name="public abstract void exitSubRule(int)">1</method>
			<method name="public abstract void exitRule(String, String)">1</method>
			<method name="public abstract void enterDecision(int)">1</method>
			<method name="public abstract void becomeRoot(Object, Object)">1</method>
			<method name="public abstract void location(int, int)">1</method>
			<method name="public abstract void addChild(Object, Object)">1</method>
			<method name="public abstract void beginResync()">1</method>
			<method name="public abstract void setTokenBoundaries(Object, int, int)">1</method>
			<method name="public abstract void consumeNode(Object)">1</method>
			<method name="public abstract void recognitionException(org.antlr.runtime.RecognitionException)">1</method>
			<method name="public abstract void createNode(Object, org.antlr.runtime.Token)">1</method>
			<method name="public abstract void consumeHiddenToken(org.antlr.runtime.Token)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.RewriteCardinalityException</name>
		<wmc>2</wmc>
		<dit>4</dit>
		<noc>2</noc>
		<cbo>7</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>3</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>17</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.9545454545454546</mfa>
		<cam>0.75</cam>
		<ic>1</ic>
		<cbm>1</cbm>
		<amc>7.0</amc>
		<cc>
			<method name="public String getMessage()">2</method>
			<method name="public void _init_(String elementDescription)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.UnBufferedTreeNodeStream$TreeWalkState</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>3</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>15</loc>
		<dam>0.125</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.0</amc>
		<cc>
			<method name="protected void _init_(org.antlr.runtime.tree.UnBufferedTreeNodeStream)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$1</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>4</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>1</npm>
		<lcom3>0.5</lcom3>
		<loc>19</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.5</amc>
		<cc>
			<method name="void _init_(org.antlr.runtime.tree.TreeWizard, java.util.List)">1</method>
			<method name="public void visit(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$3</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>6</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>42</loc>
		<dam>1.0</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.6428571428571429</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>18.0</amc>
		<cc>
			<method name="public void visit(Object t, Object parent, int childIndex, java.util.Map unusedlabels)">2</method>
			<method name="void _init_(org.antlr.runtime.tree.TreeWizard, java.util.Map, org.antlr.runtime.tree.TreeWizard$TreePattern, org.antlr.runtime.tree.TreeWizard$ContextVisitor)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugEventHub</name>
		<wmc>34</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>70</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>8</ce>
		<npm>34</npm>
		<lcom3>0.0</lcom3>
		<loc>668</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2536764705882353</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>18.61764705882353</amc>
		<cc>
			<method name="public void recognitionException(org.antlr.runtime.RecognitionException e)">2</method>
			<method name="public void exitRule(String grammarFileName, String ruleName)">2</method>
			<method name="public void createNode(Object node, org.antlr.runtime.Token token)">2</method>
			<method name="public void semanticPredicate(boolean result, String predicate)">2</method>
			<method name="public void enterRule(String grammarFileName, String ruleName)">2</method>
			<method name="public void rewind(int index)">2</method>
			<method name="public void enterSubRule(int decisionNumber)">2</method>
			<method name="public void endBacktrack(int level, boolean successful)">2</method>
			<method name="public void consumeToken(org.antlr.runtime.Token token)">2</method>
			<method name="public void LT(int index, Object t)">2</method>
			<method name="public void location(int line, int pos)">2</method>
			<method name="public void exitDecision(int decisionNumber)">2</method>
			<method name="public void consumeHiddenToken(org.antlr.runtime.Token token)">2</method>
			<method name="public void nilNode(Object t)">2</method>
			<method name="public void _init_(org.antlr.runtime.debug.DebugEventListener a, org.antlr.runtime.debug.DebugEventListener b)">1</method>
			<method name="public void _init_(org.antlr.runtime.debug.DebugEventListener listener)">1</method>
			<method name="public void beginBacktrack(int level)">2</method>
			<method name="public void mark(int index)">2</method>
			<method name="public void terminate()">2</method>
			<method name="public void exitSubRule(int decisionNumber)">2</method>
			<method name="public void setTokenBoundaries(Object t, int tokenStartIndex, int tokenStopIndex)">2</method>
			<method name="public void addListener(org.antlr.runtime.debug.DebugEventListener listener)">1</method>
			<method name="public void rewind()">2</method>
			<method name="public void LT(int index, org.antlr.runtime.Token t)">2</method>
			<method name="public void endResync()">2</method>
			<method name="public void consumeNode(Object t)">2</method>
			<method name="public void enterDecision(int decisionNumber)">2</method>
			<method name="public void errorNode(Object t)">2</method>
			<method name="public void enterAlt(int alt)">2</method>
			<method name="public void addChild(Object root, Object child)">2</method>
			<method name="public void becomeRoot(Object newRoot, Object oldRoot)">2</method>
			<method name="public void commence()">2</method>
			<method name="public void beginResync()">2</method>
			<method name="public void createNode(Object t)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$2</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>5</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>31</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.5714285714285714</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.0</amc>
		<cc>
			<method name="void _init_(org.antlr.runtime.tree.TreeWizard, org.antlr.runtime.tree.TreeWizard$TreePattern, java.util.List)">1</method>
			<method name="public void visit(Object t, Object parent, int childIndex, java.util.Map labels)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.RewriteRuleSubtreeStream</name>
		<wmc>5</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>12</rfc>
		<lcom>8</lcom>
		<ca>0</ca>
		<ce>6</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>53</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.56</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.6</amc>
		<cc>
			<method name="protected Object dup(Object el)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription, Object oneElement)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription, java.util.List elements)">1</method>
			<method name="public Object nextNode()">4</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeVisitorAction</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>2</cbo>
		<rfc>2</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>1</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>2</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract Object post(Object)">1</method>
			<method name="public abstract Object pre(Object)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.MismatchedSetException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>10</cbo>
		<rfc>11</rfc>
		<lcom>1</lcom>
		<ca>3</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>31</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.0</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(org.antlr.runtime.BitSet expecting, org.antlr.runtime.IntStream input)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.MismatchedTokenException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>2</noc>
		<cbo>11</cbo>
		<rfc>10</rfc>
		<lcom>0</lcom>
		<ca>5</ca>
		<ce>6</ce>
		<npm>3</npm>
		<lcom3>0.0</lcom3>
		<loc>37</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.0</amc>
		<cc>
			<method name="public void _init_(int expecting, org.antlr.runtime.IntStream input)">1</method>
			<method name="public String toString()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.Tree</name>
		<wmc>27</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>17</cbo>
		<rfc>28</rfc>
		<lcom>351</lcom>
		<ca>12</ca>
		<ce>6</ce>
		<npm>26</npm>
		<lcom3>1.0</lcom3>
		<loc>34</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.2222222222222222</amc>
		<cc>
			<method name="public abstract java.util.List getAncestors()">1</method>
			<method name="public abstract void freshenParentAndChildIndexes()">1</method>
			<method name="public abstract int getLine()">1</method>
			<method name="public abstract int getCharPositionInLine()">1</method>
			<method name="public abstract void addChild(org.antlr.runtime.tree.Tree)">1</method>
			<method name="public abstract int getType()">1</method>
			<method name="public abstract org.antlr.runtime.tree.Tree getAncestor(int)">1</method>
			<method name="public abstract void setChild(int, org.antlr.runtime.tree.Tree)">1</method>
			<method name="public abstract boolean hasAncestor(int)">1</method>
			<method name="public abstract void setTokenStopIndex(int)">1</method>
			<method name="public abstract org.antlr.runtime.tree.Tree dupNode()">1</method>
			<method name="public abstract void setParent(org.antlr.runtime.tree.Tree)">1</method>
			<method name="public abstract boolean isNil()">1</method>
			<method name="public abstract int getTokenStartIndex()">1</method>
			<method name="public abstract void setChildIndex(int)">1</method>
			<method name="public abstract int getChildCount()">1</method>
			<method name="public abstract int getChildIndex()">1</method>
			<method name="public abstract String getText()">1</method>
			<method name="public abstract org.antlr.runtime.tree.Tree getChild(int)">1</method>
			<method name="public abstract int getTokenStopIndex()">1</method>
			<method name="public abstract void setTokenStartIndex(int)">1</method>
			<method name="public abstract org.antlr.runtime.tree.Tree getParent()">1</method>
			<method name="public abstract String toString()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public abstract Object deleteChild(int)">1</method>
			<method name="public abstract void replaceChildren(int, int, Object)">1</method>
			<method name="public abstract String toStringTree()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.BaseRecognizer</name>
		<wmc>42</wmc>
		<dit>1</dit>
		<noc>3</noc>
		<cbo>33</cbo>
		<rfc>89</rfc>
		<lcom>481</lcom>
		<ca>5</ca>
		<ce>28</ce>
		<npm>35</npm>
		<lcom3>0.940766550522648</lcom3>
		<loc>1162</loc>
		<dam>0.14285714285714285</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.1684981684981685</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>26.5</amc>
		<cc>
			<method name="public void recover(org.antlr.runtime.IntStream input, org.antlr.runtime.RecognitionException re)">2</method>
			<method name="public int getRuleMemoizationCacheSize()">4</method>
			<method name="public Object match(org.antlr.runtime.IntStream input, int ttype, org.antlr.runtime.BitSet follow)">1</method>
			<method name="protected Object getMissingSymbol(org.antlr.runtime.IntStream input, org.antlr.runtime.RecognitionException e, int expectedTokenType, org.antlr.runtime.BitSet follow)">1</method>
			<method name="public void consumeUntil(org.antlr.runtime.IntStream input, int tokenType)">3</method>
			<method name="public java.util.List toStrings(java.util.List tokens)">3</method>
			<method name="public java.util.List getRuleInvocationStack()">1</method>
			<method name="public void reset()">4</method>
			<method name="public String getErrorHeader(org.antlr.runtime.RecognitionException e)">1</method>
			<method name="public boolean mismatchIsUnwantedToken(org.antlr.runtime.IntStream input, int ttype)">2</method>
			<method name="public void _init_(org.antlr.runtime.RecognizerSharedState state)">2</method>
			<method name="public int getRuleMemoization(int ruleIndex, int ruleStartIndex)">3</method>
			<method name="protected Object recoverFromMismatchedToken(org.antlr.runtime.IntStream input, int ttype, org.antlr.runtime.BitSet follow)">1</method>
			<method name="public void matchAny(org.antlr.runtime.IntStream input)">1</method>
			<method name="protected void pushFollow(org.antlr.runtime.BitSet fset)">2</method>
			<method name="protected Object getCurrentInputSymbol(org.antlr.runtime.IntStream input)">1</method>
			<method name="public abstract String getSourceName()">1</method>
			<method name="public void displayRecognitionError(String[] tokenNames, org.antlr.runtime.RecognitionException e)">1</method>
			<method name="public String getGrammarFileName()">1</method>
			<method name="public void traceOut(String ruleName, int ruleIndex, Object inputSymbol)">3</method>
			<method name="public void emitErrorMessage(String msg)">1</method>
			<method name="protected org.antlr.runtime.BitSet combineFollows(boolean exact)">5</method>
			<method name="public int getBacktrackingLevel()">1</method>
			<method name="public int getNumberOfSyntaxErrors()">1</method>
			<method name="public Object recoverFromMismatchedSet(org.antlr.runtime.IntStream input, org.antlr.runtime.RecognitionException e, org.antlr.runtime.BitSet follow)">1</method>
			<method name="public void traceIn(String ruleName, int ruleIndex, Object inputSymbol)">2</method>
			<method name="public void reportError(org.antlr.runtime.RecognitionException e)">2</method>
			<method name="protected org.antlr.runtime.BitSet computeContextSensitiveRuleFOLLOW()">1</method>
			<method name="public boolean mismatchIsMissingToken(org.antlr.runtime.IntStream input, org.antlr.runtime.BitSet follow)">6</method>
			<method name="protected org.antlr.runtime.BitSet computeErrorRecoverySet()">1</method>
			<method name="public void endResync()">1</method>
			<method name="public static java.util.List getRuleInvocationStack(Throwable e, String recognizerClassName)">5</method>
			<method name="public void setBacktrackingLevel(int n)">1</method>
			<method name="public boolean alreadyParsedRule(org.antlr.runtime.IntStream input, int ruleIndex)">3</method>
			<method name="public String getTokenErrorDisplay(org.antlr.runtime.Token t)">3</method>
			<method name="public void memoize(org.antlr.runtime.IntStream input, int ruleIndex, int ruleStartIndex)">5</method>
			<method name="public boolean failed()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void beginResync()">1</method>
			<method name="public String[] getTokenNames()">1</method>
			<method name="public String getErrorMessage(org.antlr.runtime.RecognitionException e, String[] tokenNames)">14</method>
			<method name="public void consumeUntil(org.antlr.runtime.IntStream input, org.antlr.runtime.BitSet set)">3</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.RemoteDebugEventSocketListener</name>
		<wmc>14</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>33</cbo>
		<rfc>92</rfc>
		<lcom>65</lcom>
		<ca>0</ca>
		<ce>33</ce>
		<npm>5</npm>
		<lcom3>0.8012820512820512</lcom3>
		<loc>1236</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.34285714285714286</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>86.42857142857143</amc>
		<cc>
			<method name="protected void closeConnection()">10</method>
			<method name="protected org.antlr.runtime.debug.RemoteDebugEventSocketListener$ProxyTree deserializeNode(String[] elements, int offset)">1</method>
			<method name="public void _init_(org.antlr.runtime.debug.DebugEventListener listener, String machine, int port)">1</method>
			<method name="public void run()">1</method>
			<method name="public void start()">1</method>
			<method name="protected void handshake()">1</method>
			<method name="protected String unEscapeNewlines(String txt)">1</method>
			<method name="protected org.antlr.runtime.debug.RemoteDebugEventSocketListener$ProxyToken deserializeToken(String[] elements, int offset)">1</method>
			<method name="protected void dispatch(String line)">36</method>
			<method name="public boolean tokenIndexesAreInvalid()">1</method>
			<method name="protected void eventHandler()">2</method>
			<method name="protected boolean openConnection()">1</method>
			<method name="protected void ack()">1</method>
			<method name="public String[] getEventElements(String event)">5</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.DFA</name>
		<wmc>8</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>16</rfc>
		<lcom>28</lcom>
		<ca>0</ca>
		<ce>8</ce>
		<npm>6</npm>
		<lcom3>0.9857142857142858</lcom3>
		<loc>320</loc>
		<dam>0.9</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.35</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>37.75</amc>
		<cc>
			<method name="public int specialStateTransition(int s, org.antlr.runtime.IntStream input)">1</method>
			<method name="public int predict(org.antlr.runtime.IntStream input)">1</method>
			<method name="public String getDescription()">1</method>
			<method name="public static char[] unpackEncodedStringToUnsignedChars(String encodedString)">4</method>
			<method name="public static short[] unpackEncodedString(String encodedString)">4</method>
			<method name="protected void error(org.antlr.runtime.NoViableAltException nvae)">1</method>
			<method name="public void _init_()">1</method>
			<method name="protected void noViableAlt(int s, org.antlr.runtime.IntStream input)">1</method>
		</cc>
	</class>

	<class>
		<name>org.dom4j.io.SAXEventRecorder$SAXEvent</name>
		<wmc>6</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>15</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>3</npm>
		<lcom3>1.1363636363636362</lcom3>
		<loc>100</loc>
		<dam>0.09090909090909091</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3055555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.0</amc>
		<cc>
			<method name="void _init_(byte event)">1</method>
			<method name="Object getParm(int index)">3</method>
			<method name="void addParm(Object parm)">2</method>
			<method name="public void readExternal(java.io.ObjectInput in)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void writeExternal(java.io.ObjectOutput out)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.pattern.TextNodeTest</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>9</rfc>
		<lcom>15</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>5</npm>
		<lcom3>1.0</lcom3>
		<loc>26</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.1666666666666665</amc>
		<cc>
			<method name="public boolean matches(Object node, org.jaxen.Context context)">1</method>
			<method name="public String getText()">1</method>
			<method name="public short getMatchType()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public double getPriority()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.SimpleVariableContext</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>14</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>10</ce>
		<npm>4</npm>
		<lcom3>0.0</lcom3>
		<loc>71</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>16.5</amc>
		<cc>
			<method name="public void setVariableValue(String localName, Object value)">1</method>
			<method name="public Object getVariableValue(String namespaceURI, String prefix, String localName)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void setVariableValue(String namespaceURI, String localName, Object value)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultTruthExpr</name>
		<wmc>12</wmc>
		<dit>0</dit>
		<noc>3</noc>
		<cbo>12</cbo>
		<rfc>20</rfc>
		<lcom>66</lcom>
		<ca>3</ca>
		<ce>9</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>105</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4791666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.75</amc>
		<cc>
			<method name="protected boolean eitherIsBoolean(Object lhs, Object rhs)">3</method>
			<method name="protected boolean bothAreBoolean(Object lhs, Object rhs)">3</method>
			<method name="public String toString()">1</method>
			<method name="protected boolean isSet(Object obj)">1</method>
			<method name="protected boolean setIsEmpty(java.util.List set)">3</method>
			<method name="protected boolean eitherIsSet(Object lhs, Object rhs)">3</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="protected boolean isBoolean(Object obj)">1</method>
			<method name="protected boolean isString(Object obj)">1</method>
			<method name="protected boolean eitherIsNumber(Object lhs, Object rhs)">3</method>
			<method name="protected boolean isNumber(Object obj)">1</method>
			<method name="protected boolean bothAreSets(Object lhs, Object rhs)">3</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.datatype.DatatypeAttribute</name>
		<wmc>20</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>16</cbo>
		<rfc>43</rfc>
		<lcom>138</lcom>
		<ca>1</ca>
		<ce>15</ce>
		<npm>18</npm>
		<lcom3>0.7999999999999999</lcom3>
		<loc>209</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.2833333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.2</amc>
		<cc>
			<method name="public boolean supportsParent()">1</method>
			<method name="public boolean isNotation(String notationName)">1</method>
			<method name="public String getBaseUri()">1</method>
			<method name="public String getNamespacePrefix(String uri)">3</method>
			<method name="public void setValue(String value)">1</method>
			<method name="public com.sun.msv.datatype.xsd.XSDatatype getXSDatatype()">1</method>
			<method name="public boolean isUnparsedEntity(String entityName)">1</method>
			<method name="public void setData(Object data)">1</method>
			<method name="protected void validate(String txt)">1</method>
			<method name="protected Object convertToValue(String txt)">2</method>
			<method name="public void setParent(org.dom4j.Element parent)">1</method>
			<method name="public String toString()">1</method>
			<method name="public void _init_(org.dom4j.QName qname, com.sun.msv.datatype.xsd.XSDatatype datatype, String text)">1</method>
			<method name="public Object getData()">1</method>
			<method name="public boolean isReadOnly()">1</method>
			<method name="public String getValue()">1</method>
			<method name="public String resolveNamespacePrefix(String prefix)">4</method>
			<method name="public void _init_(org.dom4j.QName qname, com.sun.msv.datatype.xsd.XSDatatype datatype)">1</method>
			<method name="public org.dom4j.QName getQName()">1</method>
			<method name="public org.dom4j.Element getParent()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.NamespaceStack</name>
		<wmc>25</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>19</cbo>
		<rfc>54</rfc>
		<lcom>106</lcom>
		<ca>7</ca>
		<ce>12</ce>
		<npm>19</npm>
		<lcom3>0.5833333333333334</lcom3>
		<loc>553</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.344</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>20.88</amc>
		<cc>
			<method name="public org.dom4j.DocumentFactory getDocumentFactory()">1</method>
			<method name="public boolean contains(org.dom4j.Namespace namespace)">5</method>
			<method name="public void push(String prefix, String uri)">2</method>
			<method name="public org.dom4j.Namespace addNamespace(String prefix, String uri)">1</method>
			<method name="public org.dom4j.QName getQName(String namespaceURI, String localName, String qualifiedName)">7</method>
			<method name="protected org.dom4j.QName pushQName(String localName, String qualifiedName, org.dom4j.Namespace namespace, String prefix)">3</method>
			<method name="public int size()">1</method>
			<method name="public org.dom4j.Namespace pop(String prefix)">5</method>
			<method name="public void clear()">1</method>
			<method name="public String toString()">1</method>
			<method name="public void push(org.dom4j.Namespace namespace)">3</method>
			<method name="public org.dom4j.QName getAttributeQName(String namespaceURI, String localName, String qualifiedName)">8</method>
			<method name="public void setDocumentFactory(org.dom4j.DocumentFactory documentFactory)">1</method>
			<method name="protected org.dom4j.Namespace findDefaultNamespace()">5</method>
			<method name="protected org.dom4j.Namespace remove(int index)">1</method>
			<method name="protected org.dom4j.QName createQName(String localName, String qualifiedName, org.dom4j.Namespace namespace)">1</method>
			<method name="public void _init_(org.dom4j.DocumentFactory documentFactory)">1</method>
			<method name="public org.dom4j.Namespace getNamespaceForPrefix(String prefix)">4</method>
			<method name="protected java.util.Map getNamespaceCache()">4</method>
			<method name="public org.dom4j.Namespace pop()">1</method>
			<method name="public org.dom4j.Namespace getNamespace(int index)">1</method>
			<method name="public String getURI(String prefix)">2</method>
			<method name="protected org.dom4j.Namespace createNamespace(String prefix, String namespaceURI)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public org.dom4j.Namespace getDefaultNamespace()">2</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.DocumentResult</name>
		<wmc>5</wmc>
		<dit>2</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>10</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>7</ce>
		<npm>5</npm>
		<lcom3>0.0</lcom3>
		<loc>54</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.6666666666666666</mfa>
		<cam>0.4</cam>
		<ic>1</ic>
		<cbm>1</cbm>
		<amc>9.6</amc>
		<cc>
			<method name="public void setLexicalHandler(org.xml.sax.ext.LexicalHandler handler)">2</method>
			<method name="public void _init_(org.dom4j.io.SAXContentHandler contentHandler)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void setHandler(org.xml.sax.ContentHandler handler)">2</method>
			<method name="public org.dom4j.Document getDocument()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultFunctionCallExpr</name>
		<wmc>11</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>15</cbo>
		<rfc>32</rfc>
		<lcom>39</lcom>
		<ca>1</ca>
		<ce>14</ce>
		<npm>11</npm>
		<lcom3>0.5333333333333333</lcom3>
		<loc>239</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2909090909090909</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>20.454545454545453</amc>
		<cc>
			<method name="public void _init_(String prefix, String functionName)">1</method>
			<method name="public String toString()">2</method>
			<method name="public java.util.List getParameters()">1</method>
			<method name="public String getText()">4</method>
			<method name="public Object evaluate(org.jaxen.Context context)">1</method>
			<method name="public void addParameter(org.jaxen.expr.Expr parameter)">1</method>
			<method name="public org.jaxen.expr.Expr simplify()">2</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public String getFunctionName()">1</method>
			<method name="public String getPrefix()">1</method>
			<method name="public java.util.List evaluateParams(org.jaxen.Context context)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.swing.XMLTableDefinition</name>
		<wmc>27</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>21</cbo>
		<rfc>60</rfc>
		<lcom>301</lcom>
		<ca>1</ca>
		<ce>20</ce>
		<npm>23</npm>
		<lcom3>0.7884615384615384</lcom3>
		<loc>333</loc>
		<dam>1.0</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.205761316872428</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.11111111111111</amc>
		<cc>
			<method name="public String getColumnName(int columnIndex)">1</method>
			<method name="protected org.dom4j.XPath createXPath(String expression)">1</method>
			<method name="public org.dom4j.swing.XMLTableColumnDefinition getColumn(int index)">2</method>
			<method name="public void clear()">1</method>
			<method name="public int getColumnCount()">1</method>
			<method name="public synchronized Object getValueAt(Object row, int columnIndex)">1</method>
			<method name="public org.dom4j.XPath getColumnNameXPath(int columnIndex)">1</method>
			<method name="public void setRowXPath(org.dom4j.XPath rowXPath)">1</method>
			<method name="public void addNumberColumn(String name, String expression)">1</method>
			<method name="public void addColumn(String name, String expression, int type)">1</method>
			<method name="public void addColumn(org.dom4j.swing.XMLTableColumnDefinition column)">1</method>
			<method name="public void addColumn(String name, String expression)">1</method>
			<method name="public org.dom4j.XPath getRowXPath()">1</method>
			<method name="public Object getVariableValue(String namespaceURI, String prefix, String localName)">2</method>
			<method name="public org.dom4j.XPath getColumnXPath(int columnIndex)">1</method>
			<method name="public void addStringColumn(String name, String expression)">1</method>
			<method name="public Class getColumnClass(int columnIndex)">1</method>
			<method name="public org.dom4j.swing.XMLTableColumnDefinition getColumn(String columnName)">3</method>
			<method name="public void addColumnWithXPathName(String columnNameXPathExpression, String expression, int type)">1</method>
			<method name="public static org.dom4j.swing.XMLTableDefinition load(org.dom4j.Document definition)">1</method>
			<method name="protected org.dom4j.XPath createColumnXPath(String expression)">1</method>
			<method name="public static org.dom4j.swing.XMLTableDefinition load(org.dom4j.Element definition)">3</method>
			<method name="protected void clearCaches()">1</method>
			<method name="public void setRowExpression(String xpath)">1</method>
			<method name="public void removeColumn(org.dom4j.swing.XMLTableColumnDefinition column)">1</method>
			<method name="public void _init_()">1</method>
			<method name="protected void handleException(Exception e)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.AbstractBranch</name>
		<wmc>41</wmc>
		<dit>0</dit>
		<noc>2</noc>
		<cbo>24</cbo>
		<rfc>79</rfc>
		<lcom>820</lcom>
		<ca>5</ca>
		<ce>21</ce>
		<npm>25</npm>
		<lcom3>1.025</lcom3>
		<loc>498</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.15521064301552107</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.121951219512194</amc>
		<cc>
			<method name="protected abstract void childRemoved(org.dom4j.Node)">1</method>
			<method name="public org.dom4j.Element addElement(String name, String prefix, String uri)">1</method>
			<method name="protected abstract java.util.List contentList()">1</method>
			<method name="public java.util.List content()">1</method>
			<method name="protected abstract void childAdded(org.dom4j.Node)">1</method>
			<method name="protected void invalidNodeTypeAddException(org.dom4j.Node node)">1</method>
			<method name="public void add(org.dom4j.Element element)">1</method>
			<method name="protected String getContentAsStringValue(Object content)">3</method>
			<method name="public boolean remove(org.dom4j.Node node)">5</method>
			<method name="public void add(org.dom4j.Comment comment)">1</method>
			<method name="public boolean isReadOnly()">1</method>
			<method name="public boolean remove(org.dom4j.Comment comment)">1</method>
			<method name="public int nodeCount()">1</method>
			<method name="protected java.util.List createSingleResultList(Object result)">1</method>
			<method name="protected java.util.List createEmptyList()">1</method>
			<method name="public String getTextTrim()">2</method>
			<method name="protected abstract boolean removeNode(org.dom4j.Node)">1</method>
			<method name="public org.dom4j.Element elementByID(String elementID)">6</method>
			<method name="public int indexOf(org.dom4j.Node node)">1</method>
			<method name="public boolean remove(org.dom4j.Element element)">1</method>
			<method name="public boolean remove(org.dom4j.ProcessingInstruction pi)">1</method>
			<method name="public void add(org.dom4j.ProcessingInstruction pi)">1</method>
			<method name="public void appendContent(org.dom4j.Branch branch)">2</method>
			<method name="protected String elementID(org.dom4j.Element element)">1</method>
			<method name="protected org.dom4j.tree.BackedList createResultList()">1</method>
			<method name="public org.dom4j.Element addElement(org.dom4j.QName qname)">1</method>
			<method name="public String getText()">5</method>
			<method name="public org.dom4j.Element addElement(String name)">1</method>
			<method name="protected abstract void addNode(org.dom4j.Node)">1</method>
			<method name="public void add(org.dom4j.Node node)">5</method>
			<method name="protected java.util.List createContentList(int size)">1</method>
			<method name="public boolean hasContent()">2</method>
			<method name="public org.dom4j.Element addElement(String qualifiedName, String namespaceURI)">1</method>
			<method name="protected abstract void addNode(int, org.dom4j.Node)">1</method>
			<method name="protected String getContentAsText(Object content)">3</method>
			<method name="protected java.util.List createContentList()">1</method>
			<method name="protected void contentRemoved()">3</method>
			<method name="public void _init_()">1</method>
			<method name="public void setProcessingInstructions(java.util.List listOfPIs)">2</method>
			<method name="public org.dom4j.Node node(int index)">3</method>
			<method name="public java.util.Iterator nodeIterator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.Function</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>41</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>38</ca>
		<ce>4</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract Object call(org.jaxen.Context, java.util.List)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.Namespace</name>
		<wmc>19</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>45</cbo>
		<rfc>37</rfc>
		<lcom>121</lcom>
		<ca>39</ca>
		<ce>10</ce>
		<npm>16</npm>
		<lcom3>0.7962962962962963</lcom3>
		<loc>295</loc>
		<dam>0.6666666666666666</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.26666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.210526315789474</amc>
		<cc>
			<method name="protected int createHashCode()">2</method>
			<method name="public String getURI()">1</method>
			<method name="public String asXML()">3</method>
			<method name="public void _init_(String prefix, String uri)">3</method>
			<method name="public short getNodeType()">1</method>
			<method name="public boolean equals(Object object)">6</method>
			<method name="public String getPrefix()">1</method>
			<method name="public String getUniquePath(org.dom4j.Element context)">3</method>
			<method name="public void accept(org.dom4j.Visitor visitor)">1</method>
			<method name="public String toString()">1</method>
			<method name="public int hashCode()">2</method>
			<method name="public String getText()">1</method>
			<method name="public String getStringValue()">1</method>
			<method name="protected org.dom4j.Node createXPathResult(org.dom4j.Element parent)">1</method>
			<method name="public static org.dom4j.Namespace get(String uri)">1</method>
			<method name="public static org.dom4j.Namespace get(String prefix, String uri)">1</method>
			<method name="public String getXPathNameStep()">3</method>
			<method name="public String getPath(org.dom4j.Element context)">3</method>
			<method name="static void _clinit_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.rule.pattern.NodeTypePattern</name>
		<wmc>7</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>9</rfc>
		<lcom>15</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>6</npm>
		<lcom3>0.9285714285714285</lcom3>
		<loc>69</loc>
		<dam>0.14285714285714285</dam>
		<moa>6</moa>
		<mfa>0.0</mfa>
		<cam>0.4444444444444444</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.857142857142857</amc>
		<cc>
			<method name="public boolean matches(org.dom4j.Node node)">2</method>
			<method name="public org.dom4j.rule.Pattern[] getUnionPatterns()">1</method>
			<method name="public short getMatchType()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public String getMatchesNodeName()">1</method>
			<method name="public void _init_(short nodeType)">1</method>
			<method name="public double getPriority()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultLessThanExpr</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>7</rfc>
		<lcom>6</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>23</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.75</amc>
		<cc>
			<method name="protected boolean evaluateDoubleDouble(Double lhs, Double rhs)">2</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public String getOperator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.DefaultDocumentType</name>
		<wmc>13</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>7</cbo>
		<rfc>14</rfc>
		<lcom>46</lcom>
		<ca>2</ca>
		<ce>5</ce>
		<npm>13</npm>
		<lcom3>0.8333333333333334</lcom3>
		<loc>77</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5128205128205128</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.538461538461538</amc>
		<cc>
			<method name="public String getSystemID()">1</method>
			<method name="public void setExternalDeclarations(java.util.List externalDeclarations)">1</method>
			<method name="public void setSystemID(String systemID)">1</method>
			<method name="public java.util.List getInternalDeclarations()">1</method>
			<method name="public void setInternalDeclarations(java.util.List internalDeclarations)">1</method>
			<method name="public void _init_(String elementName, String systemID)">1</method>
			<method name="public void setPublicID(String publicID)">1</method>
			<method name="public String getElementName()">1</method>
			<method name="public String getPublicID()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public java.util.List getExternalDeclarations()">1</method>
			<method name="public void _init_(String elementName, String publicID, String systemID)">1</method>
			<method name="public void setElementName(String elementName)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.datatype.DatatypeElement</name>
		<wmc>16</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>18</cbo>
		<rfc>44</rfc>
		<lcom>80</lcom>
		<ca>1</ca>
		<ce>17</ce>
		<npm>13</npm>
		<lcom3>0.6</lcom3>
		<loc>186</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2767857142857143</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.5</amc>
		<cc>
			<method name="public boolean isNotation(String notationName)">1</method>
			<method name="public String getBaseUri()">1</method>
			<method name="public String getNamespacePrefix(String uri)">2</method>
			<method name="public com.sun.msv.datatype.xsd.XSDatatype getXSDatatype()">1</method>
			<method name="public boolean isUnparsedEntity(String entityName)">1</method>
			<method name="public void setData(Object data)">1</method>
			<method name="protected void validate(String text)">1</method>
			<method name="public String toString()">1</method>
			<method name="protected void childAdded(org.dom4j.Node node)">1</method>
			<method name="public Object getData()">5</method>
			<method name="protected void childRemoved(org.dom4j.Node node)">1</method>
			<method name="public void setText(String text)">1</method>
			<method name="public org.dom4j.Element addText(String text)">1</method>
			<method name="public String resolveNamespacePrefix(String prefix)">2</method>
			<method name="public void _init_(org.dom4j.QName qname, com.sun.msv.datatype.xsd.XSDatatype datatype)">1</method>
			<method name="public void _init_(org.dom4j.QName qname, int attributeCount, com.sun.msv.datatype.xsd.XSDatatype type)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.PredicateSet</name>
		<wmc>8</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>28</cbo>
		<rfc>33</rfc>
		<lcom>0</lcom>
		<ca>11</ca>
		<ce>17</ce>
		<npm>6</npm>
		<lcom3>0.14285714285714285</lcom3>
		<loc>198</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>23.625</amc>
		<cc>
			<method name="public void addPredicate(org.jaxen.expr.Predicate predicate)">2</method>
			<method name="public String getText()">2</method>
			<method name="protected boolean evaluateAsBoolean(java.util.List contextNodeSet, org.jaxen.ContextSupport support)">1</method>
			<method name="protected java.util.List evaluatePredicates(java.util.List contextNodeSet, org.jaxen.ContextSupport support)">1</method>
			<method name="public void simplify()">2</method>
			<method name="public void _init_()">1</method>
			<method name="public java.util.List applyPredicate(org.jaxen.expr.Predicate predicate, java.util.List nodes2Filter, org.jaxen.ContextSupport support)">1</method>
			<method name="public java.util.List getPredicates()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultCommentNodeStep</name>
		<wmc>5</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>15</rfc>
		<lcom>10</lcom>
		<ca>2</ca>
		<ce>11</ce>
		<npm>5</npm>
		<lcom3>2.0</lcom3>
		<loc>43</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.6</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public String getText()">1</method>
			<method name="public void _init_(org.jaxen.expr.iter.IterableAxis axis, org.jaxen.expr.PredicateSet predicateSet)">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public boolean matches(Object node, org.jaxen.ContextSupport contextSupport)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.AncestorAxisIterator</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.0</amc>
		<cc>
			<method name="public void _init_(Object contextNode, org.jaxen.Navigator navigator)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.saxpath.base.DefaultXPathHandler$Singleton</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>4</rfc>
		<lcom>1</lcom>
		<ca>0</ca>
		<ce>4</ce>
		<npm>0</npm>
		<lcom3>1.0</lcom3>
		<loc>12</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.5</amc>
		<cc>
			<method name="void _init_()">1</method>
			<method name="static void _clinit_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.rule.RuleManager$1</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>5</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>1</npm>
		<lcom3>0.5</lcom3>
		<loc>31</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.5</amc>
		<cc>
			<method name="void _init_(org.dom4j.rule.RuleManager this$0, org.dom4j.rule.Mode val$mode)">1</method>
			<method name="public void run(org.dom4j.Node node)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.IdentityHashMap$HashIterator</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>12</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>3</npm>
		<lcom3>0.38095238095238093</lcom3>
		<loc>220</loc>
		<dam>0.2857142857142857</dam>
		<moa>4</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>52.25</amc>
		<cc>
			<method name="public boolean hasNext()">4</method>
			<method name="public void remove()">6</method>
			<method name="public Object next()">7</method>
			<method name="void _init_(org.jaxen.util.IdentityHashMap this$0, int type)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.iter.IterableFollowingSiblingAxis</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>5</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>11</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.5</amc>
		<cc>
			<method name="public java.util.Iterator iterator(Object contextNode, org.jaxen.ContextSupport support)">1</method>
			<method name="public void _init_(int value)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.dom.DocumentNavigator$6</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>7</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>0</npm>
		<lcom3>1.0</lcom3>
		<loc>49</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.7777777777777778</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>15.0</amc>
		<cc>
			<method name="protected org.w3c.dom.Node getNextNode(org.w3c.dom.Node node)">4</method>
			<method name="protected org.w3c.dom.Node getFirstNode(org.w3c.dom.Node node)">3</method>
			<method name="void _init_(org.jaxen.dom.DocumentNavigator this$0, org.w3c.dom.Node x0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.iter.IterableSelfAxis</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>5</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>11</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.5</amc>
		<cc>
			<method name="public java.util.Iterator iterator(Object contextNode, org.jaxen.ContextSupport support)">1</method>
			<method name="public void _init_(int value)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.dom.DocumentNavigator$7</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>7</rfc>
		<lcom>3</lcom>
		<ca>0</ca>
		<ce>5</ce>
		<npm>0</npm>
		<lcom3>1.0</lcom3>
		<loc>57</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.7777777777777778</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.666666666666668</amc>
		<cc>
			<method name="protected org.w3c.dom.Node getNextNode(org.w3c.dom.Node node)">4</method>
			<method name="protected org.w3c.dom.Node getFirstNode(org.w3c.dom.Node node)">4</method>
			<method name="void _init_(org.jaxen.dom.DocumentNavigator this$0, org.w3c.dom.Node x0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.dom.DocumentNavigator$2</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>5</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>0</npm>
		<lcom3>1.0</lcom3>
		<loc>18</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.7777777777777778</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.666666666666667</amc>
		<cc>
			<method name="protected org.w3c.dom.Node getNextNode(org.w3c.dom.Node n)">1</method>
			<method name="void _init_(org.jaxen.dom.DocumentNavigator this$0, org.w3c.dom.Node x0)">1</method>
			<method name="protected org.w3c.dom.Node getFirstNode(org.w3c.dom.Node n)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.FlyweightComment</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>8</cbo>
		<rfc>5</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>20</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.333333333333333</amc>
		<cc>
			<method name="public String getText()">1</method>
			<method name="protected org.dom4j.Node createXPathResult(org.dom4j.Element parent)">1</method>
			<method name="public void _init_(String text)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.dom.DocumentNavigator$3</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>5</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>0</npm>
		<lcom3>1.0</lcom3>
		<loc>17</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.7777777777777778</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.333333333333333</amc>
		<cc>
			<method name="protected org.w3c.dom.Node getNextNode(org.w3c.dom.Node n)">1</method>
			<method name="void _init_(org.jaxen.dom.DocumentNavigator this$0, org.w3c.dom.Node x0)">1</method>
			<method name="protected org.w3c.dom.Node getFirstNode(org.w3c.dom.Node n)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultArithExpr</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>2</noc>
		<cbo>8</cbo>
		<rfc>9</rfc>
		<lcom>1</lcom>
		<ca>2</ca>
		<ce>6</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>24</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.0</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.dom.DocumentNavigator$4</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>5</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>0</npm>
		<lcom3>1.0</lcom3>
		<loc>19</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.7777777777777778</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.0</amc>
		<cc>
			<method name="protected org.w3c.dom.Node getNextNode(org.w3c.dom.Node node)">1</method>
			<method name="protected org.w3c.dom.Node getFirstNode(org.w3c.dom.Node node)">1</method>
			<method name="void _init_(org.jaxen.dom.DocumentNavigator this$0, org.w3c.dom.Node x0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.ElementModifier</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>4</ca>
		<ce>3</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract org.dom4j.Element modifyElement(org.dom4j.Element)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.dom.DocumentNavigator$5</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>5</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>0</npm>
		<lcom3>1.0</lcom3>
		<loc>19</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.7777777777777778</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.0</amc>
		<cc>
			<method name="protected org.w3c.dom.Node getNextNode(org.w3c.dom.Node node)">1</method>
			<method name="protected org.w3c.dom.Node getFirstNode(org.w3c.dom.Node node)">1</method>
			<method name="void _init_(org.jaxen.dom.DocumentNavigator this$0, org.w3c.dom.Node x0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultMinusExpr</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>13</rfc>
		<lcom>6</lcom>
		<ca>1</ca>
		<ce>13</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>42</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.5</amc>
		<cc>
			<method name="public Object evaluate(org.jaxen.Context context)">1</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public String getOperator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.dom.DocumentNavigator</name>
		<wmc>37</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>34</cbo>
		<rfc>88</rfc>
		<lcom>664</lcom>
		<ca>10</ca>
		<ce>31</ce>
		<npm>35</npm>
		<lcom3>0.9722222222222222</lcom3>
		<loc>527</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.216216216216216</amc>
		<cc>
			<method name="public java.util.Iterator getChildAxisIterator(Object contextNode)">1</method>
			<method name="public String getElementQName(Object object)">2</method>
			<method name="public String getAttributeQName(Object object)">2</method>
			<method name="public String getAttributeName(Object object)">2</method>
			<method name="public boolean isDocument(Object object)">3</method>
			<method name="public String getAttributeStringValue(Object object)">2</method>
			<method name="public Object getElementById(Object object, String elementId)">2</method>
			<method name="public String getNamespaceStringValue(Object object)">2</method>
			<method name="public java.util.Iterator getPrecedingSiblingAxisIterator(Object contextNode)">1</method>
			<method name="public java.util.Iterator getAttributeAxisIterator(Object contextNode)">2</method>
			<method name="public boolean isProcessingInstruction(Object object)">3</method>
			<method name="public String getAttributeNamespaceUri(Object object)">1</method>
			<method name="public java.util.Iterator getParentAxisIterator(Object contextNode)">2</method>
			<method name="public String translateNamespacePrefixToUri(String prefix, Object element)">2</method>
			<method name="public String getProcessingInstructionData(Object obj)">1</method>
			<method name="public boolean isText(Object object)">5</method>
			<method name="public String getNamespacePrefix(Object object)">2</method>
			<method name="public static org.jaxen.Navigator getInstance()">1</method>
			<method name="public boolean isAttribute(Object object)">4</method>
			<method name="public String getElementName(Object object)">2</method>
			<method name="public Object getDocument(String uri)">1</method>
			<method name="public boolean isElement(Object object)">3</method>
			<method name="public Object getDocumentNode(Object contextNode)">2</method>
			<method name="public String getElementStringValue(Object object)">2</method>
			<method name="public String getProcessingInstructionTarget(Object obj)">1</method>
			<method name="public String getElementNamespaceUri(Object object)">1</method>
			<method name="public boolean isNamespace(Object object)">1</method>
			<method name="public org.jaxen.XPath parseXPath(String xpath)">1</method>
			<method name="public java.util.Iterator getFollowingSiblingAxisIterator(Object contextNode)">1</method>
			<method name="public String getTextStringValue(Object object)">2</method>
			<method name="static void _clinit_()">1</method>
			<method name="public java.util.Iterator getNamespaceAxisIterator(Object contextNode)">9</method>
			<method name="public void _init_()">1</method>
			<method name="public boolean isComment(Object object)">3</method>
			<method name="public String getCommentStringValue(Object object)">2</method>
			<method name="public java.util.Iterator getFollowingAxisIterator(Object contextNode)">1</method>
			<method name="private StringBuffer getStringValue(org.w3c.dom.Node node, StringBuffer buffer)">3</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.XPath</name>
		<wmc>15</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>20</cbo>
		<rfc>15</rfc>
		<lcom>105</lcom>
		<ca>11</ca>
		<ce>10</ce>
		<npm>15</npm>
		<lcom3>2.0</lcom3>
		<loc>15</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.28888888888888886</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract Object selectSingleNode(Object)">1</method>
			<method name="public abstract void addNamespace(String, String)">1</method>
			<method name="public abstract org.jaxen.FunctionContext getFunctionContext()">1</method>
			<method name="public abstract boolean booleanValueOf(Object)">1</method>
			<method name="public abstract Object evaluate(Object)">1</method>
			<method name="public abstract Number numberValueOf(Object)">1</method>
			<method name="public abstract org.jaxen.Navigator getNavigator()">1</method>
			<method name="public abstract String valueOf(Object)">1</method>
			<method name="public abstract String stringValueOf(Object)">1</method>
			<method name="public abstract void setNamespaceContext(org.jaxen.NamespaceContext)">1</method>
			<method name="public abstract void setVariableContext(org.jaxen.VariableContext)">1</method>
			<method name="public abstract void setFunctionContext(org.jaxen.FunctionContext)">1</method>
			<method name="public abstract org.jaxen.NamespaceContext getNamespaceContext()">1</method>
			<method name="public abstract java.util.List selectNodes(Object)">1</method>
			<method name="public abstract org.jaxen.VariableContext getVariableContext()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.pattern.AnyChildNodeTest</name>
		<wmc>7</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>10</rfc>
		<lcom>19</lcom>
		<ca>0</ca>
		<ce>6</ce>
		<npm>6</npm>
		<lcom3>0.8333333333333334</lcom3>
		<loc>45</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.3888888888888889</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.285714285714286</amc>
		<cc>
			<method name="public boolean matches(Object node, org.jaxen.Context context)">5</method>
			<method name="public String getText()">1</method>
			<method name="public short getMatchType()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public static org.jaxen.pattern.AnyChildNodeTest getInstance()">1</method>
			<method name="public double getPriority()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.ConcurrentReaderHashMap$ValueIterator</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>2</ca>
		<ce>4</ce>
		<npm>0</npm>
		<lcom3>1.0</lcom3>
		<loc>13</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.0</amc>
		<cc>
			<method name="protected void _init_(org.dom4j.tree.ConcurrentReaderHashMap this$0)">1</method>
			<method name="protected Object returnValueOfNext()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.XPPReader</name>
		<wmc>22</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>24</cbo>
		<rfc>60</rfc>
		<lcom>217</lcom>
		<ca>0</ca>
		<ce>24</ce>
		<npm>18</npm>
		<lcom3>0.7976190476190477</lcom3>
		<loc>275</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.16942148760330578</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.318181818181818</amc>
		<cc>
			<method name="public org.dom4j.DocumentFactory getDocumentFactory()">2</method>
			<method name="public void setDefaultHandler(org.dom4j.ElementHandler handler)">1</method>
			<method name="public org.gjt.xpp.XmlPullParserFactory getXPPFactory()">1</method>
			<method name="public void setXPPFactory(org.gjt.xpp.XmlPullParserFactory xPPFactory)">1</method>
			<method name="public org.dom4j.Document read(char[] text)">1</method>
			<method name="public org.dom4j.Document read(java.io.File file)">1</method>
			<method name="public org.dom4j.Document read(java.io.InputStream in)">1</method>
			<method name="public org.dom4j.Document read(java.io.Reader reader, String systemID)">1</method>
			<method name="protected org.dom4j.io.DispatchHandler getDispatchHandler()">2</method>
			<method name="protected java.io.Reader createReader(java.io.InputStream in)">1</method>
			<method name="public org.dom4j.Document read(java.io.InputStream in, String systemID)">1</method>
			<method name="public org.dom4j.Document read(java.io.Reader reader)">1</method>
			<method name="public org.dom4j.Document read(java.net.URL url)">1</method>
			<method name="public void setDocumentFactory(org.dom4j.DocumentFactory documentFactory)">1</method>
			<method name="public void removeHandler(String path)">1</method>
			<method name="protected org.dom4j.Document parseDocument()">1</method>
			<method name="protected void setDispatchHandler(org.dom4j.io.DispatchHandler dispatchHandler)">1</method>
			<method name="public org.dom4j.Document read(String systemID)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public org.gjt.xpp.XmlPullParser getXPPParser()">1</method>
			<method name="public void _init_(org.dom4j.DocumentFactory factory)">1</method>
			<method name="public void addHandler(String path, org.dom4j.ElementHandler handler)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.dom.DOMProcessingInstruction</name>
		<wmc>31</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>15</cbo>
		<rfc>62</rfc>
		<lcom>465</lcom>
		<ca>1</ca>
		<ce>14</ce>
		<npm>30</npm>
		<lcom3>2.0</lcom3>
		<loc>165</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.25268817204301075</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.32258064516129</amc>
		<cc>
			<method name="public boolean isSupported(String feature, String version)">1</method>
			<method name="public org.w3c.dom.Node getFirstChild()">1</method>
			<method name="public String getNodeName()">1</method>
			<method name="public org.w3c.dom.NamedNodeMap getAttributes()">1</method>
			<method name="public org.w3c.dom.NodeList getChildNodes()">1</method>
			<method name="public org.w3c.dom.Node getNextSibling()">1</method>
			<method name="public void setPrefix(String prefix)">1</method>
			<method name="public String getNodeValue()">1</method>
			<method name="public void setData(String data)">1</method>
			<method name="public boolean supports(String feature, String version)">1</method>
			<method name="public org.w3c.dom.Document getOwnerDocument()">1</method>
			<method name="public String getNamespaceURI()">1</method>
			<method name="public org.w3c.dom.Node insertBefore(org.w3c.dom.Node newChild, org.w3c.dom.Node refChild)">1</method>
			<method name="public org.w3c.dom.Node replaceChild(org.w3c.dom.Node newChild, org.w3c.dom.Node oldChild)">1</method>
			<method name="public void _init_(String target, String values)">1</method>
			<method name="public org.w3c.dom.Node appendChild(org.w3c.dom.Node newChild)">1</method>
			<method name="public boolean hasAttributes()">1</method>
			<method name="public String getPrefix()">1</method>
			<method name="public org.w3c.dom.Node removeChild(org.w3c.dom.Node oldChild)">1</method>
			<method name="public org.w3c.dom.Node getParentNode()">1</method>
			<method name="public String getLocalName()">1</method>
			<method name="private void checkNewChildNode(org.w3c.dom.Node newChild)">1</method>
			<method name="public boolean hasChildNodes()">1</method>
			<method name="public org.w3c.dom.Node cloneNode(boolean deep)">1</method>
			<method name="public void setNodeValue(String nodeValue)">1</method>
			<method name="public org.w3c.dom.Node getPreviousSibling()">1</method>
			<method name="public org.w3c.dom.Node getLastChild()">1</method>
			<method name="public void _init_(String target, java.util.Map values)">1</method>
			<method name="public void _init_(org.dom4j.Element parent, String target, String val)">1</method>
			<method name="public void normalize()">1</method>
			<method name="public String getData()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.dom.DocumentNavigator$1</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>6</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>0</npm>
		<lcom3>1.0</lcom3>
		<loc>18</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.7777777777777778</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.666666666666667</amc>
		<cc>
			<method name="protected org.w3c.dom.Node getNextNode(org.w3c.dom.Node node)">1</method>
			<method name="protected org.w3c.dom.Node getFirstNode(org.w3c.dom.Node node)">1</method>
			<method name="void _init_(org.jaxen.dom.DocumentNavigator this$0, org.w3c.dom.Node x0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.ContextSupport</name>
		<wmc>12</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>41</cbo>
		<rfc>18</rfc>
		<lcom>58</lcom>
		<ca>31</ca>
		<ce>10</ce>
		<npm>12</npm>
		<lcom3>0.7727272727272727</lcom3>
		<loc>107</loc>
		<dam>1.0</dam>
		<moa>4</moa>
		<mfa>0.0</mfa>
		<cam>0.3055555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.583333333333333</amc>
		<cc>
			<method name="public org.jaxen.NamespaceContext getNamespaceContext()">1</method>
			<method name="public void setFunctionContext(org.jaxen.FunctionContext functionContext)">1</method>
			<method name="public void setVariableContext(org.jaxen.VariableContext variableContext)">1</method>
			<method name="public org.jaxen.FunctionContext getFunctionContext()">1</method>
			<method name="public org.jaxen.Navigator getNavigator()">1</method>
			<method name="public Object getVariableValue(String namespaceURI, String prefix, String localName)">1</method>
			<method name="public String translateNamespacePrefixToUri(String prefix)">3</method>
			<method name="public void setNamespaceContext(org.jaxen.NamespaceContext namespaceContext)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public org.jaxen.Function getFunction(String namespaceURI, String prefix, String localName)">1</method>
			<method name="public void _init_(org.jaxen.NamespaceContext namespaceContext, org.jaxen.FunctionContext functionContext, org.jaxen.VariableContext variableContext, org.jaxen.Navigator navigator)">1</method>
			<method name="public org.jaxen.VariableContext getVariableContext()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.FollowingSiblingAxisIterator</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>13</rfc>
		<lcom>2</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>4</npm>
		<lcom3>0.5833333333333334</lcom3>
		<loc>65</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.4</amc>
		<cc>
			<method name="public boolean hasNext()">1</method>
			<method name="public void remove()">1</method>
			<method name="public Object next()">1</method>
			<method name="public void _init_(Object contextNode, org.jaxen.Navigator navigator)">1</method>
			<method name="private void init()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.dom.DOMDocumentFactory</name>
		<wmc>21</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>36</cbo>
		<rfc>53</rfc>
		<lcom>208</lcom>
		<ca>2</ca>
		<ce>36</ce>
		<npm>18</npm>
		<lcom3>0.975</lcom3>
		<loc>236</loc>
		<dam>0.5</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.2857142857142857</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.142857142857142</amc>
		<cc>
			<method name="public org.dom4j.Text createText(String text)">1</method>
			<method name="public org.dom4j.CDATA createCDATA(String text)">1</method>
			<method name="public org.dom4j.Element createElement(org.dom4j.QName qname)">1</method>
			<method name="public org.dom4j.Namespace createNamespace(String prefix, String uri)">1</method>
			<method name="public org.dom4j.ProcessingInstruction createProcessingInstruction(String target, String data)">1</method>
			<method name="public org.dom4j.Entity createEntity(String name, String text)">1</method>
			<method name="public org.w3c.dom.DocumentType createDocumentType(String qualifiedName, String publicId, String systemId)">1</method>
			<method name="public org.dom4j.Comment createComment(String text)">1</method>
			<method name="public org.dom4j.Attribute createAttribute(org.dom4j.Element owner, org.dom4j.QName qname, String value)">1</method>
			<method name="public org.dom4j.Entity createEntity(String name)">1</method>
			<method name="static Class class$(String x0)">1</method>
			<method name="public org.dom4j.Document createDocument()">1</method>
			<method name="public org.dom4j.Element createElement(org.dom4j.QName qname, int attributeCount)">1</method>
			<method name="public static org.dom4j.DocumentFactory getInstance()">1</method>
			<method name="public boolean hasFeature(String feat, String version)">7</method>
			<method name="public org.w3c.dom.Document createDocument(String namespaceURI, String qualifiedName, org.w3c.dom.DocumentType docType)">1</method>
			<method name="static void _clinit_()">2</method>
			<method name="protected org.dom4j.dom.DOMDocumentType asDocumentType(org.w3c.dom.DocumentType docType)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public org.dom4j.DocumentType createDocType(String name, String publicId, String systemId)">1</method>
			<method name="public org.dom4j.ProcessingInstruction createProcessingInstruction(String target, java.util.Map data)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultDivExpr</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>13</rfc>
		<lcom>6</lcom>
		<ca>1</ca>
		<ce>13</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>42</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.5</amc>
		<cc>
			<method name="public Object evaluate(org.jaxen.Context context)">1</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public String getOperator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.swing.BranchTreeNode$1</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>6</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>37</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.666666666666666</amc>
		<cc>
			<method name="public boolean hasMoreElements()">2</method>
			<method name="void _init_(org.dom4j.swing.BranchTreeNode this$0)">1</method>
			<method name="public Object nextElement()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.bean.BeanElement</name>
		<wmc>18</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>22</cbo>
		<rfc>42</rfc>
		<lcom>135</lcom>
		<ca>4</ca>
		<ce>20</ce>
		<npm>12</npm>
		<lcom3>0.8235294117647058</lcom3>
		<loc>183</loc>
		<dam>0.6666666666666666</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.21176470588235294</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.0</amc>
		<cc>
			<method name="protected org.dom4j.DocumentFactory getDocumentFactory()">1</method>
			<method name="public org.dom4j.Element addAttribute(String name, String value)">2</method>
			<method name="protected java.util.List createAttributeList(int size)">1</method>
			<method name="public void _init_(String name, Object bean)">1</method>
			<method name="public void _init_(String name, org.dom4j.Namespace namespace, Object bean)">1</method>
			<method name="public void _init_(org.dom4j.QName qname)">1</method>
			<method name="public void _init_(org.dom4j.QName qname, Object bean)">1</method>
			<method name="public void setAttributes(java.util.List attributes)">1</method>
			<method name="public org.dom4j.Attribute attribute(org.dom4j.QName qname)">1</method>
			<method name="public void setData(Object data)">1</method>
			<method name="protected java.util.List createAttributeList()">1</method>
			<method name="static Class class$(String x0)">1</method>
			<method name="public org.dom4j.Element addAttribute(org.dom4j.QName qName, String value)">2</method>
			<method name="public Object getData()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public org.dom4j.Attribute attribute(String name)">1</method>
			<method name="protected org.dom4j.bean.BeanAttributeList getBeanAttributeList()">1</method>
			<method name="public void setAttributes(org.xml.sax.Attributes attributes, org.dom4j.tree.NamespaceStack namespaceStack, boolean noNamespaceAttributes)">4</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultLogicalExpr</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>2</noc>
		<cbo>7</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>5</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>6</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.0</amc>
		<cc>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.SAXModifyReader</name>
		<wmc>13</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>25</rfc>
		<lcom>70</lcom>
		<ca>1</ca>
		<ce>12</ce>
		<npm>11</npm>
		<lcom3>0.875</lcom3>
		<loc>77</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.3333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.769230769230769</amc>
		<cc>
			<method name="protected org.dom4j.io.XMLWriter getXMLWriter()">1</method>
			<method name="public void _init_(org.xml.sax.XMLReader xmlReader, boolean validating)">1</method>
			<method name="public boolean isPruneElements()">1</method>
			<method name="public void setXMLWriter(org.dom4j.io.XMLWriter writer)">1</method>
			<method name="public void _init_(org.xml.sax.XMLReader xmlReader)">1</method>
			<method name="public void _init_(String xmlReaderClassName)">1</method>
			<method name="public void setPruneElements(boolean pruneElements)">1</method>
			<method name="public void _init_(String xmlReaderClassName, boolean validating)">1</method>
			<method name="public void _init_(boolean validating)">1</method>
			<method name="protected org.dom4j.io.SAXContentHandler createContentHandler(org.xml.sax.XMLReader reader)">1</method>
			<method name="public void _init_(org.dom4j.DocumentFactory factory, boolean validating)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(org.dom4j.DocumentFactory factory)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.dom.html.DocumentNavigator</name>
		<wmc>10</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>17</rfc>
		<lcom>37</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>7</npm>
		<lcom3>0.7037037037037037</lcom3>
		<loc>93</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.35555555555555557</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.0</amc>
		<cc>
			<method name="public String getElementQName(Object object)">1</method>
			<method name="private boolean isXMLNode(org.w3c.dom.Node node)">3</method>
			<method name="public String getElementName(Object object)">1</method>
			<method name="public org.jaxen.XPath parseXPath(String xpath)">1</method>
			<method name="public void _init_(boolean toLowerCase)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public static org.jaxen.Navigator getInstance(boolean toLowerCase)">2</method>
			<method name="protected String getHTMLNodeName(org.w3c.dom.Node node, String name)">4</method>
			<method name="public void _init_()">1</method>
			<method name="public boolean isToLowerCase()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultRelationalExpr</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>4</noc>
		<cbo>19</cbo>
		<rfc>25</rfc>
		<lcom>15</lcom>
		<ca>4</ca>
		<ce>15</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>156</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.30952380952380953</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>25.0</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public Object evaluate(org.jaxen.Context context)">1</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="private boolean evaluateObjectObject(Object lhs, Object rhs, org.jaxen.Navigator nav)">5</method>
			<method name="protected abstract boolean evaluateDoubleDouble(Double, Double)">1</method>
			<method name="private Object evaluateSetSet(java.util.List lhsSet, java.util.List rhsSet, org.jaxen.Navigator nav)">4</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.dom.DOMNodeHelper$EmptyNodeList</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>4</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>10</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>2.3333333333333335</amc>
		<cc>
			<method name="public int getLength()">1</method>
			<method name="public org.w3c.dom.Node item(int index)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.AbstractProcessingInstruction</name>
		<wmc>17</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>18</cbo>
		<rfc>47</rfc>
		<lcom>136</lcom>
		<ca>1</ca>
		<ce>17</ce>
		<npm>13</npm>
		<lcom3>2.0</lcom3>
		<loc>288</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.24369747899159663</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>15.941176470588236</amc>
		<cc>
			<method name="public void write(java.io.Writer writer)">1</method>
			<method name="private String getValue(java.util.StringTokenizer tokenizer)">6</method>
			<method name="public String asXML()">1</method>
			<method name="public void setName(String name)">1</method>
			<method name="protected java.util.Map parseValues(String text)">2</method>
			<method name="public String getName()">1</method>
			<method name="public short getNodeType()">1</method>
			<method name="public String getUniquePath(org.dom4j.Element context)">3</method>
			<method name="public void accept(org.dom4j.Visitor visitor)">1</method>
			<method name="public String toString()">1</method>
			<method name="private String getName(java.util.StringTokenizer tokenizer)">3</method>
			<method name="public void setValues(java.util.Map data)">1</method>
			<method name="public boolean removeValue(String name)">1</method>
			<method name="public String getPath(org.dom4j.Element context)">3</method>
			<method name="protected String toString(java.util.Map values)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public void setValue(String name, String value)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.STAXEventReader</name>
		<wmc>24</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>36</cbo>
		<rfc>91</rfc>
		<lcom>134</lcom>
		<ca>0</ca>
		<ce>36</ce>
		<npm>24</npm>
		<lcom3>0.43478260869565216</lcom3>
		<loc>592</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.1388888888888889</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>23.583333333333332</amc>
		<cc>
			<method name="public org.dom4j.Entity createEntity(javax.xml.stream.events.EntityReference entityRef)">1</method>
			<method name="public org.dom4j.Attribute createAttribute(org.dom4j.Element elem, javax.xml.stream.events.Attribute attr)">1</method>
			<method name="public org.dom4j.Namespace createNamespace(javax.xml.stream.events.Namespace ns)">1</method>
			<method name="public org.dom4j.Document readDocument(java.io.Reader reader, String systemId)">1</method>
			<method name="public org.dom4j.Attribute readAttribute(javax.xml.stream.XMLEventReader reader)">1</method>
			<method name="public org.dom4j.ProcessingInstruction createProcessingInstruction(javax.xml.stream.events.ProcessingInstruction pi)">1</method>
			<method name="public org.dom4j.QName createQName(javax.xml.namespace.QName qname)">1</method>
			<method name="public org.dom4j.Document readDocument(java.io.InputStream is)">1</method>
			<method name="public org.dom4j.Comment createComment(javax.xml.stream.events.Comment comment)">1</method>
			<method name="public org.dom4j.Document readDocument(java.io.InputStream is, String systemId)">1</method>
			<method name="public org.dom4j.Document readDocument(javax.xml.stream.XMLEventReader reader)">1</method>
			<method name="public org.dom4j.Node readNode(javax.xml.stream.XMLEventReader reader)">1</method>
			<method name="public org.dom4j.CharacterData createCharacterData(javax.xml.stream.events.Characters characters)">2</method>
			<method name="public org.dom4j.ProcessingInstruction readProcessingInstruction(javax.xml.stream.XMLEventReader reader)">1</method>
			<method name="public void setDocumentFactory(org.dom4j.DocumentFactory documentFactory)">2</method>
			<method name="public org.dom4j.Element readElement(javax.xml.stream.XMLEventReader eventReader)">1</method>
			<method name="public org.dom4j.Element createElement(javax.xml.stream.events.StartElement startEvent)">3</method>
			<method name="public org.dom4j.Entity readEntityReference(javax.xml.stream.XMLEventReader reader)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public org.dom4j.CharacterData readCharacters(javax.xml.stream.XMLEventReader reader)">1</method>
			<method name="public org.dom4j.Comment readComment(javax.xml.stream.XMLEventReader reader)">1</method>
			<method name="public org.dom4j.Document readDocument(java.io.Reader reader)">1</method>
			<method name="public void _init_(org.dom4j.DocumentFactory factory)">2</method>
			<method name="public org.dom4j.Namespace readNamespace(javax.xml.stream.XMLEventReader reader)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultAdditiveExpr</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>2</noc>
		<cbo>10</cbo>
		<rfc>11</rfc>
		<lcom>1</lcom>
		<ca>2</ca>
		<ce>8</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>30</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.0</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.ConcatFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>14</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>11</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>41</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.666666666666666</amc>
		<cc>
			<method name="public static String evaluate(java.util.List list, org.jaxen.Navigator nav)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.ext.MatrixConcatFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>19</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>13</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>121</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>39.333333333333336</amc>
		<cc>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">2</method>
			<method name="public static Object evaluate(java.util.List list, org.jaxen.Navigator nav)">6</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.ConcurrentReaderHashMap$HashIterator</name>
		<wmc>7</wmc>
		<dit>1</dit>
		<noc>2</noc>
		<cbo>11</cbo>
		<rfc>12</rfc>
		<lcom>5</lcom>
		<ca>3</ca>
		<ce>8</ce>
		<npm>5</npm>
		<lcom3>0.5</lcom3>
		<loc>148</loc>
		<dam>1.0</dam>
		<moa>4</moa>
		<mfa>0.0</mfa>
		<cam>0.5714285714285714</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>19.142857142857142</amc>
		<cc>
			<method name="public boolean hasNext()">6</method>
			<method name="public void remove()">2</method>
			<method name="public boolean hasMoreElements()">1</method>
			<method name="public Object nextElement()">1</method>
			<method name="public Object next()">3</method>
			<method name="protected void _init_(org.dom4j.tree.ConcurrentReaderHashMap this$0)">1</method>
			<method name="protected Object returnValueOfNext()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.util.NonLazyDocumentFactory</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>6</rfc>
		<lcom>4</lcom>
		<ca>0</ca>
		<ce>6</ce>
		<npm>3</npm>
		<lcom3>0.6666666666666666</lcom3>
		<loc>20</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.75</amc>
		<cc>
			<method name="public org.dom4j.Element createElement(org.dom4j.QName qname)">1</method>
			<method name="public static org.dom4j.DocumentFactory getInstance()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.LocalNameFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>21</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>101</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>32.666666666666664</amc>
		<cc>
			<method name="public static String evaluate(java.util.List list, org.jaxen.Navigator nav)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.util.SingletonStrategy</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>3</rfc>
		<lcom>3</lcom>
		<ca>5</ca>
		<ce>3</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>3</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void setSingletonClassName(String)">1</method>
			<method name="public abstract void reset()">1</method>
			<method name="public abstract Object instance()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.BooleanFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>18</cbo>
		<rfc>11</rfc>
		<lcom>3</lcom>
		<ca>7</ca>
		<ce>11</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>78</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>25.0</amc>
		<cc>
			<method name="public static Boolean evaluate(Object obj, org.jaxen.Navigator nav)">10</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.SingleObjectIterator</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>12</cbo>
		<rfc>7</rfc>
		<lcom>0</lcom>
		<ca>7</ca>
		<ce>5</ce>
		<npm>4</npm>
		<lcom3>0.5</lcom3>
		<loc>39</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.25</amc>
		<cc>
			<method name="public boolean hasNext()">2</method>
			<method name="public void remove()">1</method>
			<method name="public void _init_(Object object)">1</method>
			<method name="public Object next()">2</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.BackedList</name>
		<wmc>13</wmc>
		<dit>4</dit>
		<noc>0</noc>
		<cbo>16</cbo>
		<rfc>44</rfc>
		<lcom>22</lcom>
		<ca>5</ca>
		<ce>12</ce>
		<npm>12</npm>
		<lcom3>0.3333333333333333</lcom3>
		<loc>328</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.8876404494382022</mfa>
		<cam>0.41025641025641024</cam>
		<ic>3</ic>
		<cbm>5</cbm>
		<amc>24.076923076923077</amc>
		<cc>
			<method name="protected org.dom4j.Node asNode(Object object)">2</method>
			<method name="public boolean addAll(java.util.Collection collection)">3</method>
			<method name="public boolean add(Object object)">1</method>
			<method name="public boolean addAll(int index, java.util.Collection collection)">3</method>
			<method name="public Object set(int index, Object object)">4</method>
			<method name="public void clear()">2</method>
			<method name="public void _init_(org.dom4j.tree.AbstractBranch branch, java.util.List branchContent)">1</method>
			<method name="public void _init_(org.dom4j.tree.AbstractBranch branch, java.util.List branchContent, java.util.List initialContent)">1</method>
			<method name="public boolean remove(Object object)">1</method>
			<method name="public Object remove(int index)">2</method>
			<method name="public void _init_(org.dom4j.tree.AbstractBranch branch, java.util.List branchContent, int capacity)">1</method>
			<method name="public void add(int index, Object object)">5</method>
			<method name="public void addLocal(Object object)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.DescendantOrSelfAxisIterator</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.0</amc>
		<cc>
			<method name="public void _init_(Object contextNode, org.jaxen.Navigator navigator)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.ElementQNameIterator</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>5</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>24</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.5</amc>
		<cc>
			<method name="public void _init_(java.util.Iterator proxy, org.dom4j.QName qName)">1</method>
			<method name="protected boolean matches(Object object)">2</method>
		</cc>
	</class>
	<class>
		<name>com.adobe.ac.ant.tasks.MacSWFLauncher</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>9</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>23</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.0</amc>
		<cc>
			<method name="public void launch(String arg0)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.datatype.NamedTypeResolver</name>
		<wmc>8</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>21</rfc>
		<lcom>12</lcom>
		<ca>1</ca>
		<ce>12</ce>
		<npm>0</npm>
		<lcom3>0.6</lcom3>
		<loc>146</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>16.625</amc>
		<cc>
			<method name="void resolveElementTypes()">3</method>
			<method name="void registerComplexType(org.dom4j.QName type, org.dom4j.DocumentFactory factory)">1</method>
			<method name="void registerTypedElement(org.dom4j.Element element, org.dom4j.QName type, org.dom4j.DocumentFactory parentFactory)">1</method>
			<method name="void resolveNamedTypes()">1</method>
			<method name="private org.dom4j.QName getQNameOfSchemaElement(org.dom4j.Element element)">1</method>
			<method name="void _init_(org.dom4j.DocumentFactory documentFactory)">1</method>
			<method name="void registerSimpleType(org.dom4j.QName type, com.sun.msv.datatype.xsd.XSDatatype datatype)">1</method>
			<method name="private org.dom4j.QName getQName(String name)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.dom.DOMNodeHelper$1</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>7</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>27</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.666666666666667</amc>
		<cc>
			<method name="public int getLength()">1</method>
			<method name="void _init_(java.util.List val$list)">1</method>
			<method name="public org.w3c.dom.Node item(int index)">2</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.SimpleNamespaceContext</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>15</rfc>
		<lcom>0</lcom>
		<ca>3</ca>
		<ce>10</ce>
		<npm>5</npm>
		<lcom3>0.0</lcom3>
		<loc>68</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.4</amc>
		<cc>
			<method name="public void _init_(java.util.Map namespaces)">1</method>
			<method name="public void addElementNamespaces(org.jaxen.Navigator nav, Object element)">1</method>
			<method name="public void addNamespace(String prefix, String namespaceUri)">1</method>
			<method name="public String translateNamespacePrefixToUri(String prefix)">2</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.dom.DOMAttributeNodeMap</name>
		<wmc>10</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>25</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>12</ce>
		<npm>10</npm>
		<lcom3>0.1111111111111111</lcom3>
		<loc>124</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.36</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.3</amc>
		<cc>
			<method name="public int getLength()">1</method>
			<method name="public org.w3c.dom.Node setNamedItemNS(org.w3c.dom.Node arg)">1</method>
			<method name="public org.w3c.dom.Node getNamedItem(String name)">1</method>
			<method name="public org.w3c.dom.Node removeNamedItem(String name)">1</method>
			<method name="public void _init_(org.dom4j.dom.DOMElement element)">1</method>
			<method name="public org.w3c.dom.Node setNamedItem(org.w3c.dom.Node arg)">1</method>
			<method name="public org.w3c.dom.Node removeNamedItemNS(String namespaceURI, String localName)">1</method>
			<method name="public org.w3c.dom.Node item(int index)">1</method>
			<method name="public void foo()">1</method>
			<method name="public org.w3c.dom.Node getNamedItemNS(String namespaceURI, String localName)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultExpr</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>9</noc>
		<cbo>17</cbo>
		<rfc>8</rfc>
		<lcom>6</lcom>
		<ca>10</ca>
		<ce>7</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>38</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.5</amc>
		<cc>
			<method name="public org.jaxen.expr.Expr simplify()">1</method>
			<method name="public static java.util.List convertToList(Object obj)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public static java.util.Iterator convertToIterator(Object obj)">3</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultUnionExpr</name>
		<wmc>5</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>23</cbo>
		<rfc>30</rfc>
		<lcom>10</lcom>
		<ca>1</ca>
		<ce>22</ce>
		<npm>5</npm>
		<lcom3>2.0</lcom3>
		<loc>102</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>19.4</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public Object evaluate(org.jaxen.Context context)">1</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public String getOperator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.DescendantAxisIterator</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>12</cbo>
		<rfc>16</rfc>
		<lcom>4</lcom>
		<ca>2</ca>
		<ce>10</ce>
		<npm>5</npm>
		<lcom3>0.33333333333333337</lcom3>
		<loc>83</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.45</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>15.0</amc>
		<cc>
			<method name="public boolean hasNext()">3</method>
			<method name="public void remove()">1</method>
			<method name="public void _init_(org.jaxen.Navigator navigator, java.util.Iterator iterator)">1</method>
			<method name="public Object next()">2</method>
			<method name="public void _init_(Object contextNode, org.jaxen.Navigator navigator)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.NamespaceContext</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>9</ca>
		<ce>2</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract String translateNamespacePrefixToUri(String)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.util.ProxyDocumentFactory</name>
		<wmc>27</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>20</cbo>
		<rfc>52</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>20</ce>
		<npm>25</npm>
		<lcom3>0.0</lcom3>
		<loc>181</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.26851851851851855</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.666666666666667</amc>
		<cc>
			<method name="public org.dom4j.Text createText(String text)">1</method>
			<method name="public org.dom4j.CDATA createCDATA(String text)">1</method>
			<method name="public org.dom4j.Element createElement(org.dom4j.QName qname)">1</method>
			<method name="public org.dom4j.Namespace createNamespace(String prefix, String uri)">1</method>
			<method name="public org.dom4j.ProcessingInstruction createProcessingInstruction(String target, String data)">1</method>
			<method name="public org.dom4j.QName createQName(String qualifiedName, String uri)">1</method>
			<method name="protected void setProxy(org.dom4j.DocumentFactory proxy)">2</method>
			<method name="public org.dom4j.Element createElement(String name)">1</method>
			<method name="public org.dom4j.QName createQName(String name, String prefix, String uri)">1</method>
			<method name="public org.dom4j.Document createDocument()">1</method>
			<method name="public org.dom4j.rule.Pattern createPattern(String xpathPattern)">1</method>
			<method name="public org.dom4j.Document createDocument(org.dom4j.Element rootElement)">1</method>
			<method name="protected org.dom4j.DocumentFactory getProxy()">1</method>
			<method name="public org.dom4j.DocumentType createDocType(String name, String publicId, String systemId)">1</method>
			<method name="public org.dom4j.QName createQName(String localName)">1</method>
			<method name="public void _init_(org.dom4j.DocumentFactory proxy)">1</method>
			<method name="public org.dom4j.Entity createEntity(String name, String text)">1</method>
			<method name="public org.dom4j.Attribute createAttribute(org.dom4j.Element owner, String name, String value)">1</method>
			<method name="public org.dom4j.NodeFilter createXPathFilter(String xpathFilterExpression)">1</method>
			<method name="public org.dom4j.Comment createComment(String text)">1</method>
			<method name="public org.dom4j.Attribute createAttribute(org.dom4j.Element owner, org.dom4j.QName qname, String value)">1</method>
			<method name="public org.dom4j.NodeFilter createXPathFilter(String xpathFilterExpression, org.jaxen.VariableContext variableContext)">1</method>
			<method name="public org.dom4j.QName createQName(String localName, org.dom4j.Namespace namespace)">1</method>
			<method name="public org.dom4j.XPath createXPath(String xpathExpression)">1</method>
			<method name="public org.dom4j.XPath createXPath(String xpathExpression, org.jaxen.VariableContext variableContext)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public org.dom4j.ProcessingInstruction createProcessingInstruction(String target, java.util.Map data)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.dom.NamespaceNode</name>
		<wmc>32</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>42</rfc>
		<lcom>422</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>28</npm>
		<lcom3>0.8709677419354839</lcom3>
		<loc>239</loc>
		<dam>0.75</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2875</cam>
		<ic>1</ic>
		<cbm>1</cbm>
		<amc>6.34375</amc>
		<cc>
			<method name="public boolean isSupported(String feature, String version)">1</method>
			<method name="public org.w3c.dom.Node getFirstChild()">1</method>
			<method name="public String getNodeName()">1</method>
			<method name="public short getNodeType()">1</method>
			<method name="public org.w3c.dom.NamedNodeMap getAttributes()">1</method>
			<method name="public org.w3c.dom.NodeList getChildNodes()">1</method>
			<method name="public int hashCode()">1</method>
			<method name="public org.w3c.dom.Node getNextSibling()">1</method>
			<method name="public void setPrefix(String prefix)">1</method>
			<method name="public String getNodeValue()">1</method>
			<method name="public void setNodeValue(String value)">1</method>
			<method name="public org.w3c.dom.Document getOwnerDocument()">2</method>
			<method name="private void disallowModification()">1</method>
			<method name="public String getNamespaceURI()">1</method>
			<method name="private int hashCode(Object o)">2</method>
			<method name="public void _init_(org.w3c.dom.Node parent, String name, String value)">1</method>
			<method name="public boolean equals(Object o)">7</method>
			<method name="public org.w3c.dom.Node insertBefore(org.w3c.dom.Node newChild, org.w3c.dom.Node refChild)">1</method>
			<method name="public org.w3c.dom.Node replaceChild(org.w3c.dom.Node newChild, org.w3c.dom.Node oldChild)">1</method>
			<method name="public org.w3c.dom.Node appendChild(org.w3c.dom.Node newChild)">1</method>
			<method name="public boolean hasAttributes()">1</method>
			<method name="public String getPrefix()">1</method>
			<method name="void _init_(org.w3c.dom.Node parent, org.w3c.dom.Node attribute)">2</method>
			<method name="public org.w3c.dom.Node removeChild(org.w3c.dom.Node oldChild)">1</method>
			<method name="public org.w3c.dom.Node getParentNode()">1</method>
			<method name="public String getLocalName()">1</method>
			<method name="public boolean hasChildNodes()">1</method>
			<method name="public org.w3c.dom.Node cloneNode(boolean deep)">1</method>
			<method name="public org.w3c.dom.Node getPreviousSibling()">1</method>
			<method name="public org.w3c.dom.Node getLastChild()">1</method>
			<method name="private boolean equals(Object a, Object b)">5</method>
			<method name="public void normalize()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.Visitable</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>3</ca>
		<ce>3</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void accept(org.jaxen.expr.Visitor)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.pattern.AnyNodeTest</name>
		<wmc>7</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>8</rfc>
		<lcom>19</lcom>
		<ca>2</ca>
		<ce>5</ce>
		<npm>5</npm>
		<lcom3>0.8333333333333334</lcom3>
		<loc>26</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.3888888888888889</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>2.5714285714285716</amc>
		<cc>
			<method name="public static org.jaxen.pattern.AnyNodeTest getInstance()">1</method>
			<method name="public boolean matches(Object node, org.jaxen.Context context)">1</method>
			<method name="public String getText()">1</method>
			<method name="public short getMatchType()">1</method>
			<method name="private void _init_()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public double getPriority()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.rule.RuleSet</name>
		<wmc>7</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>21</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>6</npm>
		<lcom3>0.16666666666666666</lcom3>
		<loc>107</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.39285714285714285</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.0</amc>
		<cc>
			<method name="public void removeRule(org.dom4j.rule.Rule rule)">1</method>
			<method name="public String toString()">1</method>
			<method name="public void addAll(org.dom4j.rule.RuleSet that)">1</method>
			<method name="public void addRule(org.dom4j.rule.Rule rule)">1</method>
			<method name="protected org.dom4j.rule.Rule[] getRuleArray()">2</method>
			<method name="public void _init_()">1</method>
			<method name="public org.dom4j.rule.Rule getMatchingRule(org.dom4j.Node node)">3</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.Predicated</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>3</rfc>
		<lcom>3</lcom>
		<ca>4</ca>
		<ce>6</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>3</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract org.jaxen.expr.PredicateSet getPredicateSet()">1</method>
			<method name="public abstract void addPredicate(org.jaxen.expr.Predicate)">1</method>
			<method name="public abstract java.util.List getPredicates()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.saxpath.base.Token</name>
		<wmc>10</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>16</rfc>
		<lcom>33</lcom>
		<ca>2</ca>
		<ce>4</ce>
		<npm>4</npm>
		<lcom3>0.6111111111111112</lcom3>
		<loc>79</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.5</amc>
		<cc>
			<method name="private void setTokenBegin(int tokenBegin)">1</method>
			<method name="public String toString()">1</method>
			<method name="public void _init_(int tokenType, String parseText, int tokenBegin, int tokenEnd)">1</method>
			<method name="int getTokenEnd()">1</method>
			<method name="private void setTokenType(int tokenType)">1</method>
			<method name="int getTokenBegin()">1</method>
			<method name="private void setTokenEnd(int tokenEnd)">1</method>
			<method name="private void setParseText(String parseText)">1</method>
			<method name="public String getTokenText()">1</method>
			<method name="public int getTokenType()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.saxpath.XPathSyntaxException</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>14</rfc>
		<lcom>11</lcom>
		<ca>3</ca>
		<ce>6</ce>
		<npm>6</npm>
		<lcom3>0.4</lcom3>
		<loc>97</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4444444444444444</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.833333333333334</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_(String xpath, int position, String message)">1</method>
			<method name="public String getXPath()">1</method>
			<method name="public String getMultilineMessage()">1</method>
			<method name="public int getPosition()">1</method>
			<method name="public String getPositionMarker()">2</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.saxpath.base.DefaultXPathHandler</name>
		<wmc>47</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>48</rfc>
		<lcom>1079</lcom>
		<ca>2</ca>
		<ce>4</ce>
		<npm>45</npm>
		<lcom3>0.9782608695652174</lcom3>
		<loc>102</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.2826086956521739</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>1.148936170212766</amc>
		<cc>
			<method name="public void startTextNodeStep(int axis)">1</method>
			<method name="public void endOrExpr(boolean create)">1</method>
			<method name="public void startAbsoluteLocationPath()">1</method>
			<method name="public void endRelativeLocationPath()">1</method>
			<method name="public void startAllNodeStep(int axis)">1</method>
			<method name="public void endTextNodeStep()">1</method>
			<method name="public void endProcessingInstructionNodeStep()">1</method>
			<method name="public void startPredicate()">1</method>
			<method name="public void endAdditiveExpr(int operator)">1</method>
			<method name="public void startXPath()">1</method>
			<method name="public void startCommentNodeStep(int axis)">1</method>
			<method name="public void endFilterExpr()">1</method>
			<method name="public void endUnaryExpr(int operator)">1</method>
			<method name="public void startUnaryExpr()">1</method>
			<method name="public void startAndExpr()">1</method>
			<method name="public void endUnionExpr(boolean create)">1</method>
			<method name="public void startOrExpr()">1</method>
			<method name="public void startNameStep(int axis, String prefix, String localName)">1</method>
			<method name="public void number(double number)">1</method>
			<method name="private void _init_()">1</method>
			<method name="public void startRelationalExpr()">1</method>
			<method name="public void startUnionExpr()">1</method>
			<method name="public void endAndExpr(boolean create)">1</method>
			<method name="public void endEqualityExpr(int operator)">1</method>
			<method name="public void endPathExpr()">1</method>
			<method name="public void startMultiplicativeExpr()">1</method>
			<method name="public void endNameStep()">1</method>
			<method name="public void literal(String literal)">1</method>
			<method name="public void endAbsoluteLocationPath()">1</method>
			<method name="public void startFunction(String prefix, String functionName)">1</method>
			<method name="public void endCommentNodeStep()">1</method>
			<method name="public void endFunction()">1</method>
			<method name="public void number(int number)">1</method>
			<method name="public void endXPath()">1</method>
			<method name="public void startEqualityExpr()">1</method>
			<method name="public void startAdditiveExpr()">1</method>
			<method name="public void startRelativeLocationPath()">1</method>
			<method name="public void startProcessingInstructionNodeStep(int axis, String name)">1</method>
			<method name="public void startFilterExpr()">1</method>
			<method name="public void variableReference(String prefix, String variableName)">1</method>
			<method name="public void endPredicate()">1</method>
			<method name="public void endRelationalExpr(int operator)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void endMultiplicativeExpr(int operator)">1</method>
			<method name="public static org.jaxen.saxpath.XPathHandler getInstance()">1</method>
			<method name="public void startPathExpr()">1</method>
			<method name="public void endAllNodeStep()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.LinkedIterator</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>14</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>7</ce>
		<npm>5</npm>
		<lcom3>0.375</lcom3>
		<loc>81</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.8</amc>
		<cc>
			<method name="public boolean hasNext()">4</method>
			<method name="public void remove()">1</method>
			<method name="public Object next()">2</method>
			<method name="public void _init_()">1</method>
			<method name="public void addIterator(java.util.Iterator i)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.dom.DOMAttribute</name>
		<wmc>31</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>17</cbo>
		<rfc>62</rfc>
		<lcom>465</lcom>
		<ca>2</ca>
		<ce>15</ce>
		<npm>30</npm>
		<lcom3>2.0</lcom3>
		<loc>166</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.25268817204301075</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.354838709677419</amc>
		<cc>
			<method name="public boolean isSupported(String feature, String version)">1</method>
			<method name="public void _init_(org.dom4j.QName qname)">1</method>
			<method name="public org.w3c.dom.Node getFirstChild()">1</method>
			<method name="public String getNodeName()">1</method>
			<method name="public void _init_(org.dom4j.QName qname, String value)">1</method>
			<method name="public org.w3c.dom.NamedNodeMap getAttributes()">1</method>
			<method name="public void _init_(org.dom4j.Element parent, org.dom4j.QName qname, String value)">1</method>
			<method name="public org.w3c.dom.NodeList getChildNodes()">1</method>
			<method name="public org.w3c.dom.Node getNextSibling()">1</method>
			<method name="public void setPrefix(String prefix)">1</method>
			<method name="public String getNodeValue()">1</method>
			<method name="public boolean supports(String feature, String version)">1</method>
			<method name="public org.w3c.dom.Document getOwnerDocument()">1</method>
			<method name="public String getNamespaceURI()">1</method>
			<method name="public org.w3c.dom.Element getOwnerElement()">1</method>
			<method name="public org.w3c.dom.Node insertBefore(org.w3c.dom.Node newChild, org.w3c.dom.Node refChild)">1</method>
			<method name="public org.w3c.dom.Node replaceChild(org.w3c.dom.Node newChild, org.w3c.dom.Node oldChild)">1</method>
			<method name="public boolean getSpecified()">1</method>
			<method name="public org.w3c.dom.Node appendChild(org.w3c.dom.Node newChild)">1</method>
			<method name="public boolean hasAttributes()">1</method>
			<method name="public String getPrefix()">1</method>
			<method name="public org.w3c.dom.Node removeChild(org.w3c.dom.Node oldChild)">1</method>
			<method name="public org.w3c.dom.Node getParentNode()">1</method>
			<method name="public String getLocalName()">1</method>
			<method name="private void checkNewChildNode(org.w3c.dom.Node newChild)">1</method>
			<method name="public boolean hasChildNodes()">1</method>
			<method name="public org.w3c.dom.Node cloneNode(boolean deep)">1</method>
			<method name="public void setNodeValue(String nodeValue)">1</method>
			<method name="public org.w3c.dom.Node getPreviousSibling()">1</method>
			<method name="public org.w3c.dom.Node getLastChild()">1</method>
			<method name="public void normalize()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.util.IndexedElement</name>
		<wmc>28</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>15</cbo>
		<rfc>55</rfc>
		<lcom>340</lcom>
		<ca>1</ca>
		<ce>14</ce>
		<npm>9</npm>
		<lcom3>0.6666666666666666</lcom3>
		<loc>417</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.24553571428571427</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.821428571428571</amc>
		<cc>
			<method name="public void _init_(String name)">1</method>
			<method name="public void _init_(org.dom4j.QName qname)">1</method>
			<method name="protected org.dom4j.Element asElement(Object object)">4</method>
			<method name="protected java.util.Map createElementIndex()">1</method>
			<method name="protected java.util.Map createIndex()">1</method>
			<method name="public java.util.List elements(org.dom4j.QName qName)">1</method>
			<method name="protected java.util.Iterator asElementIterator(Object object)">1</method>
			<method name="public org.dom4j.Attribute attribute(org.dom4j.QName qName)">1</method>
			<method name="protected void removeFromAttributeIndex(org.dom4j.Attribute attribute)">1</method>
			<method name="public void _init_(org.dom4j.QName qname, int attributeCount)">1</method>
			<method name="protected java.util.Map elementIndex()">3</method>
			<method name="protected void removeFromAttributeIndex(Object key, org.dom4j.Attribute value)">3</method>
			<method name="public org.dom4j.Element element(org.dom4j.QName qName)">1</method>
			<method name="public org.dom4j.Attribute attribute(String name)">1</method>
			<method name="protected void removeFromElementIndex(Object key, org.dom4j.Element value)">2</method>
			<method name="protected java.util.Map createAttributeIndex()">1</method>
			<method name="protected void addToElementIndex(Object key, org.dom4j.Element value)">3</method>
			<method name="protected void addNode(org.dom4j.Node node)">5</method>
			<method name="public org.dom4j.Element element(String name)">1</method>
			<method name="protected void addToElementIndex(org.dom4j.Element element)">1</method>
			<method name="protected java.util.List createList()">1</method>
			<method name="protected void removeFromElementIndex(org.dom4j.Element element)">1</method>
			<method name="protected void addToAttributeIndex(org.dom4j.Attribute attribute)">1</method>
			<method name="protected java.util.Map attributeIndex()">3</method>
			<method name="protected boolean removeNode(org.dom4j.Node node)">6</method>
			<method name="protected java.util.List asElementList(Object object)">4</method>
			<method name="public java.util.List elements(String name)">1</method>
			<method name="protected void addToAttributeIndex(Object key, org.dom4j.Attribute value)">2</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.util.NonLazyElement</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>10</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>54</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.5</amc>
		<cc>
			<method name="public void _init_(String name)">1</method>
			<method name="public void _init_(org.dom4j.QName qname)">1</method>
			<method name="public void _init_(String name, org.dom4j.Namespace namespace)">1</method>
			<method name="public void _init_(org.dom4j.QName qname, int attributeCount)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.FlyweightEntity</name>
		<wmc>7</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>8</cbo>
		<rfc>10</rfc>
		<lcom>9</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>5</npm>
		<lcom3>0.5</lcom3>
		<loc>55</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5238095238095238</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.571428571428571</amc>
		<cc>
			<method name="protected void _init_()">1</method>
			<method name="public String getText()">1</method>
			<method name="protected org.dom4j.Node createXPathResult(org.dom4j.Element parent)">1</method>
			<method name="public void _init_(String name)">1</method>
			<method name="public void setText(String text)">2</method>
			<method name="public void _init_(String name, String text)">1</method>
			<method name="public String getName()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultRelativeLocationPath</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>9</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>22</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.333333333333333</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.jdom.DocumentNavigator$Singleton</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>3</cbo>
		<rfc>5</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>0.5</lcom3>
		<loc>14</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.3333333333333335</amc>
		<cc>
			<method name="private void _init_()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="static org.jaxen.jdom.DocumentNavigator access$000()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.pattern.NameTest</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>18</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>7</ce>
		<npm>6</npm>
		<lcom3>0.3</lcom3>
		<loc>124</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>19.333333333333332</amc>
		<cc>
			<method name="public boolean matches(Object node, org.jaxen.Context context)">9</method>
			<method name="public String toString()">1</method>
			<method name="public String getText()">2</method>
			<method name="public short getMatchType()">1</method>
			<method name="public void _init_(String name, short nodeType)">1</method>
			<method name="public double getPriority()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.swing.BranchTreeNode</name>
		<wmc>14</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>29</rfc>
		<lcom>89</lcom>
		<ca>2</ca>
		<ce>12</ce>
		<npm>10</npm>
		<lcom3>0.7692307692307693</lcom3>
		<loc>137</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2857142857142857</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.714285714285714</amc>
		<cc>
			<method name="protected java.util.List getChildList()">2</method>
			<method name="protected org.dom4j.Branch getXmlBranch()">1</method>
			<method name="public void _init_(org.dom4j.Branch xmlNode)">1</method>
			<method name="public void _init_(javax.swing.tree.TreeNode parent, org.dom4j.Branch xmlNode)">1</method>
			<method name="public boolean isLeaf()">2</method>
			<method name="public String toString()">1</method>
			<method name="public int getIndex(javax.swing.tree.TreeNode node)">1</method>
			<method name="protected java.util.List createChildList()">5</method>
			<method name="public java.util.Enumeration children()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public javax.swing.tree.TreeNode getChildAt(int childIndex)">1</method>
			<method name="public int getChildCount()">1</method>
			<method name="public boolean getAllowsChildren()">1</method>
			<method name="protected javax.swing.tree.TreeNode createChildTreeNode(org.dom4j.Node xmlNode)">2</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.dtd.InternalEntityDecl</name>
		<wmc>8</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>19</rfc>
		<lcom>6</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>7</npm>
		<lcom3>0.5714285714285714</lcom3>
		<loc>148</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.25</amc>
		<cc>
			<method name="public String toString()">2</method>
			<method name="public void _init_(String name, String value)">1</method>
			<method name="public void setName(String name)">1</method>
			<method name="private String escapeEntityValue(String text)">9</method>
			<method name="public String getValue()">1</method>
			<method name="public void setValue(String value)">1</method>
			<method name="public String getName()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.JaxenHandler</name>
		<wmc>62</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>26</cbo>
		<rfc>101</rfc>
		<lcom>1869</lcom>
		<ca>3</ca>
		<ce>23</ce>
		<npm>49</npm>
		<lcom3>0.7663934426229508</lcom3>
		<loc>606</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.13343108504398826</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.709677419354838</amc>
		<cc>
			<method name="public void endOrExpr(boolean create)">1</method>
			<method name="public void endTextNodeStep()">1</method>
			<method name="public void endProcessingInstructionNodeStep()">1</method>
			<method name="public void startPredicate()">1</method>
			<method name="public org.jaxen.expr.XPathFactory getXPathFactory()">1</method>
			<method name="protected void endStep()">1</method>
			<method name="protected void addPredicates(org.jaxen.expr.Predicated obj, java.util.Iterator predIter)">2</method>
			<method name="public void endUnionExpr(boolean create)">1</method>
			<method name="public void startNameStep(int axis, String prefix, String localName)">1</method>
			<method name="public void number(double number)">1</method>
			<method name="public org.jaxen.expr.XPathExpr getXPathExpr()">1</method>
			<method name="protected boolean canPop()">2</method>
			<method name="public void literal(String literal)">1</method>
			<method name="public void endAbsoluteLocationPath()">1</method>
			<method name="public void endCommentNodeStep()">1</method>
			<method name="public void startEqualityExpr()">1</method>
			<method name="protected java.util.LinkedList peekFrame()">1</method>
			<method name="public void startRelativeLocationPath()">1</method>
			<method name="protected int stackSize()">1</method>
			<method name="public void startProcessingInstructionNodeStep(int axis, String name)">1</method>
			<method name="public void startFilterExpr()">1</method>
			<method name="public void endRelationalExpr(int operator)">1</method>
			<method name="protected void push(Object obj)">1</method>
			<method name="public void setXPathFactory(org.jaxen.expr.XPathFactory xpathFactory)">1</method>
			<method name="public void startTextNodeStep(int axis)">1</method>
			<method name="public void startAbsoluteLocationPath()">1</method>
			<method name="public void endRelativeLocationPath()">1</method>
			<method name="public void startAllNodeStep(int axis)">1</method>
			<method name="public org.jaxen.expr.XPathExpr getXPathExpr(boolean shouldSimplify)">3</method>
			<method name="public void endAdditiveExpr(int operator)">1</method>
			<method name="public void startXPath()">1</method>
			<method name="public void startCommentNodeStep(int axis)">1</method>
			<method name="public void endFilterExpr()">1</method>
			<method name="public void endUnaryExpr(int operator)">1</method>
			<method name="public void startUnaryExpr()">1</method>
			<method name="protected Object pop()">1</method>
			<method name="public void startAndExpr()">1</method>
			<method name="public void startOrExpr()">1</method>
			<method name="protected void endLocationPath()">1</method>
			<method name="public void startRelationalExpr()">1</method>
			<method name="public void startUnionExpr()">1</method>
			<method name="public void endAndExpr(boolean create)">1</method>
			<method name="protected void pushFrame()">1</method>
			<method name="protected java.util.LinkedList popFrame()">1</method>
			<method name="protected void addParameters(org.jaxen.expr.FunctionCallExpr function, java.util.Iterator paramIter)">2</method>
			<method name="public void endEqualityExpr(int operator)">1</method>
			<method name="public void endPathExpr()">1</method>
			<method name="public void startMultiplicativeExpr()">1</method>
			<method name="public void endNameStep()">1</method>
			<method name="public void startFunction(String prefix, String functionName)">1</method>
			<method name="public void endFunction()">1</method>
			<method name="public void number(int number)">1</method>
			<method name="public void endXPath()">1</method>
			<method name="protected void addSteps(org.jaxen.expr.LocationPath locationPath, java.util.Iterator stepIter)">2</method>
			<method name="public void startAdditiveExpr()">1</method>
			<method name="protected void returnExpr()">1</method>
			<method name="public void variableReference(String prefix, String variableName)">1</method>
			<method name="public void endPredicate()">1</method>
			<method name="public void endMultiplicativeExpr(int operator)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void startPathExpr()">1</method>
			<method name="public void endAllNodeStep()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.VariableContext</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>15</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>12</ca>
		<ce>3</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract Object getVariableValue(String, String, String)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.dom4j.Dom4jXPath</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>7</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>6</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.0</amc>
		<cc>
			<method name="public void _init_(String xpathExpr)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultOrExpr</name>
		<wmc>5</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>17</rfc>
		<lcom>10</lcom>
		<ca>1</ca>
		<ce>13</ce>
		<npm>5</npm>
		<lcom3>2.0</lcom3>
		<loc>62</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.4</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public Object evaluate(org.jaxen.Context context)">1</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public String getOperator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.saxpath.SAXPathEventSource</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>2</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>2</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract org.jaxen.saxpath.XPathHandler getXPathHandler()">1</method>
			<method name="public abstract void setXPathHandler(org.jaxen.saxpath.XPathHandler)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.rule.RuleManager</name>
		<wmc>12</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>15</cbo>
		<rfc>32</rfc>
		<lcom>50</lcom>
		<ca>2</ca>
		<ce>14</ce>
		<npm>8</npm>
		<lcom3>0.7575757575757577</lcom3>
		<loc>210</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.2857142857142857</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>16.25</amc>
		<cc>
			<method name="public void removeRule(org.dom4j.rule.Rule rule)">2</method>
			<method name="public void clear()">1</method>
			<method name="public org.dom4j.rule.Action getValueOfAction()">1</method>
			<method name="protected void addDefaultRule(org.dom4j.rule.Mode mode, org.dom4j.rule.Pattern pattern, org.dom4j.rule.Action action)">1</method>
			<method name="public org.dom4j.rule.Mode getMode(String modeName)">2</method>
			<method name="protected org.dom4j.rule.Rule createDefaultRule(org.dom4j.rule.Pattern pattern, org.dom4j.rule.Action action)">1</method>
			<method name="public void setValueOfAction(org.dom4j.rule.Action valueOfAction)">1</method>
			<method name="public void addRule(org.dom4j.rule.Rule rule)">2</method>
			<method name="protected void addDefaultRules(org.dom4j.rule.Mode mode)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public org.dom4j.rule.Rule getMatchingRule(String modeName, org.dom4j.Node node)">2</method>
			<method name="protected org.dom4j.rule.Mode createMode()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.DefaultAttribute</name>
		<wmc>11</wmc>
		<dit>0</dit>
		<noc>2</noc>
		<cbo>12</cbo>
		<rfc>15</rfc>
		<lcom>43</lcom>
		<ca>5</ca>
		<ce>7</ce>
		<npm>11</npm>
		<lcom3>0.7</lcom3>
		<loc>64</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.45454545454545453</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.7272727272727275</amc>
		<cc>
			<method name="public void _init_(org.dom4j.Element parent, org.dom4j.QName qname, String value)">1</method>
			<method name="public void setParent(org.dom4j.Element parent)">1</method>
			<method name="public boolean supportsParent()">1</method>
			<method name="public void _init_(String name, String value)">1</method>
			<method name="public void _init_(String name, String value, org.dom4j.Namespace namespace)">1</method>
			<method name="public void _init_(org.dom4j.QName qname)">1</method>
			<method name="public boolean isReadOnly()">1</method>
			<method name="public void setValue(String value)">1</method>
			<method name="public void _init_(org.dom4j.QName qname, String value)">1</method>
			<method name="public void _init_(org.dom4j.Element parent, String name, String value, org.dom4j.Namespace namespace)">1</method>
			<method name="public org.dom4j.Element getParent()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.ElementHandler</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>17</cbo>
		<rfc>2</rfc>
		<lcom>1</lcom>
		<ca>15</ca>
		<ce>3</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>2</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void onStart(org.dom4j.ElementPath)">1</method>
			<method name="public abstract void onEnd(org.dom4j.ElementPath)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.rule.NullAction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>4</rfc>
		<lcom>3</lcom>
		<ca>0</ca>
		<ce>5</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>13</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public void run(org.dom4j.Node node)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.JaxenRuntimeException</name>
		<wmc>3</wmc>
		<dit>4</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>5</rfc>
		<lcom>1</lcom>
		<ca>7</ca>
		<ce>6</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>18</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.9545454545454546</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.666666666666667</amc>
		<cc>
			<method name="public void _init_(org.jaxen.JaxenException jaxenException)">1</method>
			<method name="public void _init_(String message)">1</method>
			<method name="public org.jaxen.JaxenException getJaxenException()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.IdentityHashMap$2</name>
		<wmc>5</wmc>
		<dit>2</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>10</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>4</npm>
		<lcom3>0.0</lcom3>
		<loc>30</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.8</mfa>
		<cam>0.4666666666666667</cam>
		<ic>1</ic>
		<cbm>5</cbm>
		<amc>4.8</amc>
		<cc>
			<method name="public boolean contains(Object o)">1</method>
			<method name="public void clear()">1</method>
			<method name="void _init_(org.jaxen.util.IdentityHashMap this$0)">1</method>
			<method name="public int size()">1</method>
			<method name="public java.util.Iterator iterator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.IdentityHashMap$3</name>
		<wmc>6</wmc>
		<dit>3</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>16</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>5</npm>
		<lcom3>0.0</lcom3>
		<loc>155</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.7916666666666666</mfa>
		<cam>0.5</cam>
		<ic>3</ic>
		<cbm>11</cbm>
		<amc>24.666666666666668</amc>
		<cc>
			<method name="public boolean contains(Object o)">6</method>
			<method name="public void clear()">1</method>
			<method name="void _init_(org.jaxen.util.IdentityHashMap this$0)">1</method>
			<method name="public boolean remove(Object o)">7</method>
			<method name="public int size()">1</method>
			<method name="public java.util.Iterator iterator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.AdditiveExpr</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>6</ca>
		<ce>3</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract String getOperator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.rule.Pattern</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>5</rfc>
		<lcom>10</lcom>
		<ca>9</ca>
		<ce>5</ce>
		<npm>5</npm>
		<lcom3>1.25</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract boolean matches(org.dom4j.Node)">1</method>
			<method name="public abstract String getMatchesNodeName()">1</method>
			<method name="public abstract double getPriority()">1</method>
			<method name="public abstract org.dom4j.rule.Pattern[] getUnionPatterns()">1</method>
			<method name="public abstract short getMatchType()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.StartsWithFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>10</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>41</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.666666666666666</amc>
		<cc>
			<method name="public static Boolean evaluate(Object strArg, Object matchArg, org.jaxen.Navigator nav)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultFilterExpr</name>
		<wmc>12</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>20</cbo>
		<rfc>33</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>18</ce>
		<npm>12</npm>
		<lcom3>0.3181818181818182</lcom3>
		<loc>176</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.2638888888888889</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.5</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void addPredicate(org.jaxen.expr.Predicate predicate)">1</method>
			<method name="public String getText()">2</method>
			<method name="public Object evaluate(org.jaxen.Context context)">1</method>
			<method name="public org.jaxen.expr.PredicateSet getPredicateSet()">1</method>
			<method name="public org.jaxen.expr.Expr simplify()">3</method>
			<method name="public org.jaxen.expr.Expr getExpr()">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public void _init_(org.jaxen.expr.PredicateSet predicateSet)">1</method>
			<method name="public boolean asBoolean(org.jaxen.Context context)">1</method>
			<method name="public void _init_(org.jaxen.expr.Expr expr, org.jaxen.expr.PredicateSet predicateSet)">1</method>
			<method name="public java.util.List getPredicates()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.iter.IterableParentAxis</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>5</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>11</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.5</amc>
		<cc>
			<method name="public java.util.Iterator iterator(Object contextNode, org.jaxen.ContextSupport support)">1</method>
			<method name="public void _init_(int value)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.AbstractComment</name>
		<wmc>8</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>11</cbo>
		<rfc>19</rfc>
		<lcom>28</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>8</npm>
		<lcom3>2.0</lcom3>
		<loc>97</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.125</amc>
		<cc>
			<method name="public void write(java.io.Writer writer)">1</method>
			<method name="public String toString()">1</method>
			<method name="public String asXML()">1</method>
			<method name="public String getPath(org.dom4j.Element context)">3</method>
			<method name="public short getNodeType()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public String getUniquePath(org.dom4j.Element context)">3</method>
			<method name="public void accept(org.dom4j.Visitor visitor)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.Branch</name>
		<wmc>26</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>31</cbo>
		<rfc>26</rfc>
		<lcom>325</lcom>
		<ca>21</ca>
		<ce>11</ce>
		<npm>26</npm>
		<lcom3>2.0</lcom3>
		<loc>26</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.17692307692307693</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void setContent(java.util.List)">1</method>
			<method name="public abstract java.util.List processingInstructions(String)">1</method>
			<method name="public abstract java.util.Iterator nodeIterator()">1</method>
			<method name="public abstract void add(org.dom4j.Comment)">1</method>
			<method name="public abstract boolean remove(org.dom4j.ProcessingInstruction)">1</method>
			<method name="public abstract boolean remove(org.dom4j.Comment)">1</method>
			<method name="public abstract org.dom4j.Element addElement(String)">1</method>
			<method name="public abstract java.util.List processingInstructions()">1</method>
			<method name="public abstract org.dom4j.Element addElement(org.dom4j.QName)">1</method>
			<method name="public abstract boolean remove(org.dom4j.Node)">1</method>
			<method name="public abstract org.dom4j.Node node(int)">1</method>
			<method name="public abstract void appendContent(org.dom4j.Branch)">1</method>
			<method name="public abstract void setProcessingInstructions(java.util.List)">1</method>
			<method name="public abstract int indexOf(org.dom4j.Node)">1</method>
			<method name="public abstract void clearContent()">1</method>
			<method name="public abstract boolean removeProcessingInstruction(String)">1</method>
			<method name="public abstract void add(org.dom4j.Element)">1</method>
			<method name="public abstract org.dom4j.Element addElement(String, String)">1</method>
			<method name="public abstract org.dom4j.ProcessingInstruction processingInstruction(String)">1</method>
			<method name="public abstract int nodeCount()">1</method>
			<method name="public abstract boolean remove(org.dom4j.Element)">1</method>
			<method name="public abstract java.util.List content()">1</method>
			<method name="public abstract org.dom4j.Element elementByID(String)">1</method>
			<method name="public abstract void add(org.dom4j.Node)">1</method>
			<method name="public abstract void add(org.dom4j.ProcessingInstruction)">1</method>
			<method name="public abstract void normalize()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.jdom.XPathNamespace</name>
		<wmc>6</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>13</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>6</npm>
		<lcom3>0.4</lcom3>
		<loc>58</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.333333333333334</amc>
		<cc>
			<method name="public void setJDOMElement(org.jdom.Element jdomElement)">1</method>
			<method name="public String toString()">1</method>
			<method name="public org.jdom.Namespace getJDOMNamespace()">1</method>
			<method name="public void _init_(org.jdom.Element jdomElement, org.jdom.Namespace jdomNamespace)">1</method>
			<method name="public org.jdom.Element getJDOMElement()">1</method>
			<method name="public void _init_(org.jdom.Namespace jdomNamespace)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.LangFunction</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>27</rfc>
		<lcom>10</lcom>
		<ca>1</ca>
		<ce>13</ce>
		<npm>2</npm>
		<lcom3>1.25</lcom3>
		<loc>128</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.36666666666666664</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>24.2</amc>
		<cc>
			<method name="private static Boolean evaluate(java.util.List contextNodes, Object lang, org.jaxen.Navigator nav)">1</method>
			<method name="private static boolean evaluate(Object node, String lang, org.jaxen.Navigator nav)">1</method>
			<method name="private static boolean isSublang(String sublang, String lang)">5</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.LogicalExpr</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>6</ca>
		<ce>3</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract String getOperator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.XPath</name>
		<wmc>20</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>20</cbo>
		<rfc>20</rfc>
		<lcom>190</lcom>
		<ca>10</ca>
		<ce>11</ce>
		<npm>20</npm>
		<lcom3>2.0</lcom3>
		<loc>20</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract java.util.List selectNodes(Object, org.dom4j.XPath)">1</method>
			<method name="public abstract Object selectObject(Object)">1</method>
			<method name="public abstract org.jaxen.FunctionContext getFunctionContext()">1</method>
			<method name="public abstract boolean booleanValueOf(Object)">1</method>
			<method name="public abstract Object evaluate(Object)">1</method>
			<method name="public abstract Number numberValueOf(Object)">1</method>
			<method name="public abstract String getText()">1</method>
			<method name="public abstract boolean matches(org.dom4j.Node)">1</method>
			<method name="public abstract String valueOf(Object)">1</method>
			<method name="public abstract void setNamespaceContext(org.jaxen.NamespaceContext)">1</method>
			<method name="public abstract void setVariableContext(org.jaxen.VariableContext)">1</method>
			<method name="public abstract void setFunctionContext(org.jaxen.FunctionContext)">1</method>
			<method name="public abstract org.jaxen.NamespaceContext getNamespaceContext()">1</method>
			<method name="public abstract java.util.List selectNodes(Object)">1</method>
			<method name="public abstract void setNamespaceURIs(java.util.Map)">1</method>
			<method name="public abstract org.jaxen.VariableContext getVariableContext()">1</method>
			<method name="public abstract org.dom4j.Node selectSingleNode(Object)">1</method>
			<method name="public abstract java.util.List selectNodes(Object, org.dom4j.XPath, boolean)">1</method>
			<method name="public abstract void sort(java.util.List, boolean)">1</method>
			<method name="public abstract void sort(java.util.List)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.xpath.DefaultXPath</name>
		<wmc>28</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>32</cbo>
		<rfc>72</rfc>
		<lcom>158</lcom>
		<ca>2</ca>
		<ce>31</ce>
		<npm>22</npm>
		<lcom3>0.4320987654320988</lcom3>
		<loc>408</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.16666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.464285714285714</amc>
		<cc>
			<method name="protected Object getCompareValue(org.dom4j.Node node)">1</method>
			<method name="public org.dom4j.Node selectSingleNode(Object context)">3</method>
			<method name="protected void handleJaxenException(org.jaxen.JaxenException exception)">1</method>
			<method name="public void _init_(String text)">1</method>
			<method name="public org.jaxen.FunctionContext getFunctionContext()">1</method>
			<method name="protected void removeDuplicates(java.util.List list, java.util.Map sortValues)">3</method>
			<method name="public void setNamespaceURIs(java.util.Map map)">1</method>
			<method name="public org.jaxen.VariableContext getVariableContext()">1</method>
			<method name="public Object evaluate(Object context)">3</method>
			<method name="public boolean matches(org.dom4j.Node node)">4</method>
			<method name="public String toString()">1</method>
			<method name="public java.util.List selectNodes(Object context, org.dom4j.XPath sortXPath)">1</method>
			<method name="public void setFunctionContext(org.jaxen.FunctionContext functionContext)">1</method>
			<method name="public Object selectObject(Object context)">1</method>
			<method name="public void sort(java.util.List list, boolean distinct)">6</method>
			<method name="protected static org.jaxen.XPath parse(String text)">1</method>
			<method name="public java.util.List selectNodes(Object context, org.dom4j.XPath sortXPath, boolean distinct)">1</method>
			<method name="public boolean booleanValueOf(Object context)">1</method>
			<method name="public void setVariableContext(org.jaxen.VariableContext variableContext)">1</method>
			<method name="public void sort(java.util.List list)">1</method>
			<method name="protected void setNSContext(Object context)">2</method>
			<method name="public java.util.List selectNodes(Object context)">1</method>
			<method name="public Number numberValueOf(Object context)">1</method>
			<method name="public String getText()">1</method>
			<method name="public org.jaxen.NamespaceContext getNamespaceContext()">1</method>
			<method name="protected void sort(java.util.List list, java.util.Map sortValues)">1</method>
			<method name="public void setNamespaceContext(org.jaxen.NamespaceContext namespaceContext)">1</method>
			<method name="public String valueOf(Object context)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.StackedIterator</name>
		<wmc>11</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>24</rfc>
		<lcom>37</lcom>
		<ca>0</ca>
		<ce>9</ce>
		<npm>4</npm>
		<lcom3>0.6666666666666667</lcom3>
		<loc>129</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4090909090909091</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.454545454545455</amc>
		<cc>
			<method name="public boolean hasNext()">2</method>
			<method name="protected void _init_()">1</method>
			<method name="public void remove()">1</method>
			<method name="protected void init(Object contextNode, org.jaxen.Navigator navigator)">1</method>
			<method name="private java.util.Iterator currentIterator()">3</method>
			<method name="protected abstract java.util.Iterator createIterator(Object)">1</method>
			<method name="public Object next()">1</method>
			<method name="protected org.jaxen.Navigator getNavigator()">1</method>
			<method name="protected java.util.Iterator internalCreateIterator(Object contextNode)">2</method>
			<method name="public void _init_(Object contextNode, org.jaxen.Navigator navigator)">1</method>
			<method name="protected void pushIterator(java.util.Iterator iter)">2</method>
		</cc>
	</class>
	<class>
		<name>com.adobe.ac.ant.tasks.FlexUnitLauncher</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>10</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>2</npm>
		<lcom3>1.5</lcom3>
		<loc>44</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.0</amc>
		<cc>
			<method name="public void runTests(String arg0)">1</method>
			<method name="private com.adobe.ac.ant.tasks.SWFLauncher createSWFLauncher()">3</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.DOMWriter</name>
		<wmc>23</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>36</cbo>
		<rfc>78</rfc>
		<lcom>187</lcom>
		<ca>0</ca>
		<ce>36</ce>
		<npm>7</npm>
		<lcom3>0.8363636363636363</lcom3>
		<loc>623</loc>
		<dam>0.8</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.1696969696969697</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>25.869565217391305</amc>
		<cc>
			<method name="protected void appendDOMTree(org.w3c.dom.Document domDocument, org.w3c.dom.Node domCurrent, org.dom4j.Comment comment)">1</method>
			<method name="protected org.w3c.dom.Document createDomDocument(org.dom4j.Document document)">1</method>
			<method name="protected void appendDOMTree(org.w3c.dom.Document domDocument, org.w3c.dom.Node domCurrent, org.dom4j.Element element)">6</method>
			<method name="protected org.w3c.dom.Document createDomDocumentViaJAXP()">1</method>
			<method name="protected void appendDOMTree(org.w3c.dom.Document domDoc, org.w3c.dom.Node domCurrent, org.dom4j.ProcessingInstruction pi)">1</method>
			<method name="protected void appendDOMTree(org.w3c.dom.Document domDocument, org.w3c.dom.Node domCurrent, org.dom4j.Entity entity)">1</method>
			<method name="public Class getDomDocumentClass()">1</method>
			<method name="public void setDomDocumentClassName(String name)">1</method>
			<method name="protected org.w3c.dom.Document createDomDocument(org.dom4j.Document document, org.w3c.dom.DOMImplementation domImpl)">1</method>
			<method name="protected boolean isNamespaceDeclaration(org.dom4j.Namespace ns)">7</method>
			<method name="static Class class$(String x0)">1</method>
			<method name="protected void appendDOMTree(org.w3c.dom.Document domDocument, org.w3c.dom.Node domCurrent, org.dom4j.CDATA cdata)">1</method>
			<method name="public void setDomDocumentClass(Class domDocumentClass)">1</method>
			<method name="public org.w3c.dom.Document write(org.dom4j.Document document)">1</method>
			<method name="protected void appendDOMTree(org.w3c.dom.Document domDocument, org.w3c.dom.Node domCurrent, java.util.List content)">9</method>
			<method name="protected String attributeNameForNamespace(org.dom4j.Namespace namespace)">2</method>
			<method name="static void _clinit_()">1</method>
			<method name="protected void writeNamespace(org.w3c.dom.Element domElement, org.dom4j.Namespace namespace)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public org.w3c.dom.Document write(org.dom4j.Document document, org.w3c.dom.DOMImplementation domImpl)">1</method>
			<method name="protected void resetNamespaceStack()">1</method>
			<method name="public void _init_(Class domDocumentClass)">1</method>
			<method name="protected void appendDOMTree(org.w3c.dom.Document domDocument, org.w3c.dom.Node domCurrent, String text)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.FlyweightCDATA</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>8</cbo>
		<rfc>5</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>20</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.333333333333333</amc>
		<cc>
			<method name="public String getText()">1</method>
			<method name="protected org.dom4j.Node createXPathResult(org.dom4j.Element parent)">1</method>
			<method name="public void _init_(String text)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultBinaryExpr</name>
		<wmc>9</wmc>
		<dit>0</dit>
		<noc>3</noc>
		<cbo>11</cbo>
		<rfc>18</rfc>
		<lcom>24</lcom>
		<ca>3</ca>
		<ce>8</ce>
		<npm>9</npm>
		<lcom3>0.375</lcom3>
		<loc>93</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.11111111111111</amc>
		<cc>
			<method name="public void setLHS(org.jaxen.expr.Expr lhs)">1</method>
			<method name="public String toString()">1</method>
			<method name="public String getText()">1</method>
			<method name="public org.jaxen.expr.Expr getRHS()">1</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="public org.jaxen.expr.Expr simplify()">1</method>
			<method name="public abstract String getOperator()">1</method>
			<method name="public org.jaxen.expr.Expr getLHS()">1</method>
			<method name="public void setRHS(org.jaxen.expr.Expr rhs)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.JaxenException</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>4</noc>
		<cbo>59</cbo>
		<rfc>4</rfc>
		<lcom>1</lcom>
		<ca>54</ca>
		<ce>5</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>10</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public void _init_(Throwable rootCause)">1</method>
			<method name="public void _init_(String message)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultModExpr</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>13</rfc>
		<lcom>6</lcom>
		<ca>1</ca>
		<ce>13</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>42</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.5</amc>
		<cc>
			<method name="public Object evaluate(org.jaxen.Context context)">1</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public String getOperator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.xom.DocumentNavigator$IndexIterator</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>2</noc>
		<cbo>6</cbo>
		<rfc>7</rfc>
		<lcom>4</lcom>
		<ca>2</ca>
		<ce>4</ce>
		<npm>5</npm>
		<lcom3>0.6666666666666666</lcom3>
		<loc>54</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.2</amc>
		<cc>
			<method name="public boolean hasNext()">2</method>
			<method name="public void remove()">1</method>
			<method name="public abstract Object get(Object, int)">1</method>
			<method name="public void _init_(Object o, int pos, int end)">1</method>
			<method name="public Object next()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultGreaterThanEqualExpr</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>7</rfc>
		<lcom>6</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>23</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.75</amc>
		<cc>
			<method name="protected boolean evaluateDoubleDouble(Double lhs, Double rhs)">2</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public String getOperator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.javabean.DocumentNavigator</name>
		<wmc>37</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>23</cbo>
		<rfc>58</rfc>
		<lcom>662</lcom>
		<ca>2</ca>
		<ce>22</ce>
		<npm>35</npm>
		<lcom3>0.9722222222222222</lcom3>
		<loc>291</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.783783783783784</amc>
		<cc>
			<method name="public java.util.Iterator getChildAxisIterator(Object contextNode)">1</method>
			<method name="public String getCommentStringValue(Object obj)">1</method>
			<method name="public String getAttributeNamespaceUri(Object obj)">1</method>
			<method name="public String getNamespaceStringValue(Object obj)">1</method>
			<method name="public String getElementNamespaceUri(Object obj)">1</method>
			<method name="public java.util.Iterator getAttributeAxisIterator(Object contextNode)">1</method>
			<method name="public String getTextStringValue(Object obj)">2</method>
			<method name="protected String javacase(String name)">3</method>
			<method name="public java.util.Iterator getParentAxisIterator(Object contextNode)">2</method>
			<method name="public boolean isElement(Object obj)">1</method>
			<method name="public String getProcessingInstructionData(Object obj)">1</method>
			<method name="public String getAttributeQName(Object obj)">1</method>
			<method name="public String getAttributeStringValue(Object obj)">1</method>
			<method name="public boolean isProcessingInstruction(Object obj)">1</method>
			<method name="public java.util.Iterator getAttributeAxisIterator(Object contextNode, String localName, String namespacePrefix, String namespaceURI)">1</method>
			<method name="public String getElementStringValue(Object obj)">2</method>
			<method name="public Object getParentNode(Object contextNode)">2</method>
			<method name="public short getNodeType(Object node)">1</method>
			<method name="public static org.jaxen.Navigator getInstance()">1</method>
			<method name="public boolean isNamespace(Object obj)">1</method>
			<method name="public Object getDocument(String uri)">1</method>
			<method name="public Object getDocumentNode(Object contextNode)">1</method>
			<method name="public String getElementQName(Object obj)">1</method>
			<method name="public String getNamespacePrefix(Object obj)">1</method>
			<method name="public String getProcessingInstructionTarget(Object obj)">1</method>
			<method name="public boolean isDocument(Object obj)">1</method>
			<method name="public boolean isAttribute(Object obj)">1</method>
			<method name="public boolean isText(Object obj)">1</method>
			<method name="public org.jaxen.XPath parseXPath(String xpath)">1</method>
			<method name="public boolean isComment(Object obj)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public String getAttributeName(Object obj)">1</method>
			<method name="public java.util.Iterator getNamespaceAxisIterator(Object contextNode)">1</method>
			<method name="public String translateNamespacePrefixToUri(String prefix, Object context)">1</method>
			<method name="public String getElementName(Object obj)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public java.util.Iterator getChildAxisIterator(Object contextNode, String localName, String namespacePrefix, String namespaceURI)">5</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.XPathFunctionContext</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>42</cbo>
		<rfc>38</rfc>
		<lcom>1</lcom>
		<ca>3</ca>
		<ce>40</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>238</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>118.0</amc>
		<cc>
			<method name="public static org.jaxen.FunctionContext getInstance()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.iter.IterableDescendantOrSelfAxis</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>5</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>11</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.5</amc>
		<cc>
			<method name="public java.util.Iterator iterator(Object contextNode, org.jaxen.ContextSupport support)">1</method>
			<method name="public void _init_(int value)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.InvalidXPathException</name>
		<wmc>3</wmc>
		<dit>5</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>8</rfc>
		<lcom>3</lcom>
		<ca>5</ca>
		<ce>6</ce>
		<npm>3</npm>
		<lcom3>1.5</lcom3>
		<loc>46</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>1.0</mfa>
		<cam>0.7777777777777778</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.0</amc>
		<cc>
			<method name="public void _init_(String xpath, String reason)">1</method>
			<method name="public void _init_(String xpath, Throwable t)">1</method>
			<method name="public void _init_(String xpath)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.AllNodeStep</name>
		<wmc>0</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>0</rfc>
		<lcom>0</lcom>
		<ca>4</ca>
		<ce>2</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>0</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.DefaultText</name>
		<wmc>7</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>8</cbo>
		<rfc>8</rfc>
		<lcom>15</lcom>
		<ca>4</ca>
		<ce>5</ce>
		<npm>7</npm>
		<lcom3>0.6666666666666666</lcom3>
		<loc>34</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5714285714285714</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.7142857142857144</amc>
		<cc>
			<method name="public void setParent(org.dom4j.Element parent)">1</method>
			<method name="public boolean supportsParent()">1</method>
			<method name="public void _init_(String text)">1</method>
			<method name="public void _init_(org.dom4j.Element parent, String text)">1</method>
			<method name="public boolean isReadOnly()">1</method>
			<method name="public void setText(String text)">1</method>
			<method name="public org.dom4j.Element getParent()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.jaxb.JAXBWriter</name>
		<wmc>17</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>16</cbo>
		<rfc>31</rfc>
		<lcom>116</lcom>
		<ca>0</ca>
		<ce>16</ce>
		<npm>16</npm>
		<lcom3>0.1875</lcom3>
		<loc>135</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.2222222222222222</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.823529411764706</amc>
		<cc>
			<method name="public org.dom4j.io.OutputFormat getOutputFormat()">1</method>
			<method name="public void _init_(String contextPath, ClassLoader classloader)">1</method>
			<method name="public void setOutput(java.io.Writer writer)">1</method>
			<method name="public void endDocument()">1</method>
			<method name="public void _init_(String contextPath, ClassLoader classloader, org.dom4j.io.OutputFormat outputFormat)">1</method>
			<method name="public void writeClose(javax.xml.bind.Element jaxbObject)">1</method>
			<method name="public void writeCloseElement(org.dom4j.Element element)">1</method>
			<method name="public void _init_(String contextPath)">1</method>
			<method name="public void writeOpen(javax.xml.bind.Element jaxbObject)">1</method>
			<method name="public void writeElement(org.dom4j.Element element)">1</method>
			<method name="public void writeOpenElement(org.dom4j.Element element)">1</method>
			<method name="public void _init_(String contextPath, org.dom4j.io.OutputFormat outputFormat)">1</method>
			<method name="private org.dom4j.io.XMLWriter getWriter()">1</method>
			<method name="public void write(javax.xml.bind.Element jaxbObject)">1</method>
			<method name="public void setOutput(java.io.OutputStream outputStream)">1</method>
			<method name="public void setOutput(java.io.File file)">1</method>
			<method name="public void startDocument()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.Step</name>
		<wmc>6</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>24</cbo>
		<rfc>6</rfc>
		<lcom>15</lcom>
		<ca>13</ca>
		<ce>11</ce>
		<npm>6</npm>
		<lcom3>2.0</lcom3>
		<loc>6</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4583333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract boolean matches(Object, org.jaxen.ContextSupport)">1</method>
			<method name="public abstract String getText()">1</method>
			<method name="public abstract java.util.List evaluate(org.jaxen.Context)">1</method>
			<method name="public abstract java.util.Iterator axisIterator(Object, org.jaxen.ContextSupport)">1</method>
			<method name="public abstract void simplify()">1</method>
			<method name="public abstract int getAxis()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.EqualityExpr</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>6</ca>
		<ce>3</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract String getOperator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.ConcurrentReaderHashMap$KeyIterator</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>2</ca>
		<ce>4</ce>
		<npm>0</npm>
		<lcom3>1.0</lcom3>
		<loc>13</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.0</amc>
		<cc>
			<method name="protected void _init_(org.dom4j.tree.ConcurrentReaderHashMap this$0)">1</method>
			<method name="protected Object returnValueOfNext()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.StringFunction</name>
		<wmc>6</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>39</cbo>
		<rfc>38</rfc>
		<lcom>13</lcom>
		<ca>22</ca>
		<ce>17</ce>
		<npm>5</npm>
		<lcom3>0.6</lcom3>
		<loc>203</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.22857142857142856</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>32.666666666666664</amc>
		<cc>
			<method name="public static String stringValue(double value)">1</method>
			<method name="public static String stringValue(boolean bool)">2</method>
			<method name="static void _clinit_()">1</method>
			<method name="public static String evaluate(Object obj, org.jaxen.Navigator nav)">23</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.IdFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>15</cbo>
		<rfc>20</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>14</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>91</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>29.333333333333332</amc>
		<cc>
			<method name="public static java.util.List evaluate(java.util.List contextNodes, Object arg, org.jaxen.Navigator nav)">4</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.jaxb.JAXBReader$UnmarshalElementHandler</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>10</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>12</ce>
		<npm>3</npm>
		<lcom3>0.6666666666666666</lcom3>
		<loc>46</loc>
		<dam>1.0</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.5833333333333334</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.333333333333334</amc>
		<cc>
			<method name="public void _init_(org.dom4j.jaxb.JAXBReader this$0, org.dom4j.jaxb.JAXBReader documentReader, org.dom4j.jaxb.JAXBObjectHandler handler)">1</method>
			<method name="public void onStart(org.dom4j.ElementPath elementPath)">1</method>
			<method name="public void onEnd(org.dom4j.ElementPath elementPath)">2</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultProcessingInstructionNodeStep</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>11</rfc>
		<lcom>4</lcom>
		<ca>2</ca>
		<ce>10</ce>
		<npm>4</npm>
		<lcom3>0.3333333333333333</lcom3>
		<loc>47</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.35714285714285715</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.5</amc>
		<cc>
			<method name="public void _init_(org.jaxen.expr.iter.IterableAxis axis, String name, org.jaxen.expr.PredicateSet predicateSet)">1</method>
			<method name="public String getName()">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public boolean matches(Object node, org.jaxen.ContextSupport support)">4</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.XMLResult</name>
		<wmc>10</wmc>
		<dit>2</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>18</rfc>
		<lcom>25</lcom>
		<ca>0</ca>
		<ce>10</ce>
		<npm>10</npm>
		<lcom3>0.0</lcom3>
		<loc>78</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.6</mfa>
		<cam>0.36</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.7</amc>
		<cc>
			<method name="public void _init_(org.dom4j.io.XMLWriter xmlWriter)">1</method>
			<method name="public void _init_(java.io.OutputStream out, org.dom4j.io.OutputFormat format)">1</method>
			<method name="public org.dom4j.io.XMLWriter getXMLWriter()">1</method>
			<method name="public void _init_(java.io.OutputStream out)">1</method>
			<method name="public void _init_(java.io.Writer writer)">1</method>
			<method name="public void setXMLWriter(org.dom4j.io.XMLWriter writer)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public org.xml.sax.ext.LexicalHandler getLexicalHandler()">1</method>
			<method name="public void _init_(java.io.Writer writer, org.dom4j.io.OutputFormat format)">1</method>
			<method name="public org.xml.sax.ContentHandler getHandler()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.IdentityHashMap$1</name>
		<wmc>6</wmc>
		<dit>3</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>12</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>5</npm>
		<lcom3>0.0</lcom3>
		<loc>49</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.7916666666666666</mfa>
		<cam>0.5</cam>
		<ic>2</ic>
		<cbm>9</cbm>
		<amc>7.0</amc>
		<cc>
			<method name="public boolean contains(Object o)">1</method>
			<method name="public void clear()">1</method>
			<method name="void _init_(org.jaxen.util.IdentityHashMap this$0)">1</method>
			<method name="public boolean remove(Object o)">2</method>
			<method name="public int size()">1</method>
			<method name="public java.util.Iterator iterator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.AbstractDocument</name>
		<wmc>27</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>27</cbo>
		<rfc>71</rfc>
		<lcom>345</lcom>
		<ca>2</ca>
		<ce>26</ce>
		<npm>23</npm>
		<lcom3>0.9230769230769231</lcom3>
		<loc>320</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2175925925925926</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.814814814814815</amc>
		<cc>
			<method name="protected void checkAddElementAllowed(org.dom4j.Element element)">2</method>
			<method name="public org.dom4j.Node asXPathResult(org.dom4j.Element parent)">1</method>
			<method name="public short getNodeType()">1</method>
			<method name="public org.dom4j.Element addElement(org.dom4j.QName qName)">1</method>
			<method name="public String getUniquePath(org.dom4j.Element context)">1</method>
			<method name="public org.dom4j.Document getDocument()">1</method>
			<method name="public void setRootElement(org.dom4j.Element rootElement)">2</method>
			<method name="public String toString()">1</method>
			<method name="public String getStringValue()">2</method>
			<method name="public void add(org.dom4j.Element element)">1</method>
			<method name="protected void childRemoved(org.dom4j.Node node)">2</method>
			<method name="public String getPath(org.dom4j.Element context)">1</method>
			<method name="public void write(java.io.Writer out)">1</method>
			<method name="public String getXMLEncoding()">1</method>
			<method name="public void setXMLEncoding(String enc)">1</method>
			<method name="public org.dom4j.Document addComment(String comment)">1</method>
			<method name="public String asXML()">1</method>
			<method name="public boolean remove(org.dom4j.Element element)">3</method>
			<method name="public org.dom4j.Document addProcessingInstruction(String target, java.util.Map data)">1</method>
			<method name="public void accept(org.dom4j.Visitor visitor)">5</method>
			<method name="public org.dom4j.Element addElement(String name)">1</method>
			<method name="protected void childAdded(org.dom4j.Node node)">2</method>
			<method name="public org.dom4j.Element addElement(String qualifiedName, String namespaceURI)">1</method>
			<method name="public org.dom4j.Document addProcessingInstruction(String target, String data)">1</method>
			<method name="protected abstract void rootElementAdded(org.dom4j.Element)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void normalize()">2</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultLessThanEqualExpr</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>7</rfc>
		<lcom>6</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>23</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.75</amc>
		<cc>
			<method name="protected boolean evaluateDoubleDouble(Double lhs, Double rhs)">2</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public String getOperator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.Attribute</name>
		<wmc>10</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>38</cbo>
		<rfc>10</rfc>
		<lcom>45</lcom>
		<ca>32</ca>
		<ce>6</ce>
		<npm>10</npm>
		<lcom3>2.0</lcom3>
		<loc>10</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.325</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void setNamespace(org.dom4j.Namespace)">1</method>
			<method name="public abstract String getNamespaceURI()">1</method>
			<method name="public abstract Object getData()">1</method>
			<method name="public abstract org.dom4j.Namespace getNamespace()">1</method>
			<method name="public abstract String getValue()">1</method>
			<method name="public abstract String getQualifiedName()">1</method>
			<method name="public abstract org.dom4j.QName getQName()">1</method>
			<method name="public abstract void setValue(String)">1</method>
			<method name="public abstract void setData(Object)">1</method>
			<method name="public abstract String getNamespacePrefix()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.Document</name>
		<wmc>12</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>53</cbo>
		<rfc>12</rfc>
		<lcom>66</lcom>
		<ca>45</ca>
		<ce>8</ce>
		<npm>12</npm>
		<lcom3>2.0</lcom3>
		<loc>12</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2916666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract org.dom4j.Document addProcessingInstruction(String, java.util.Map)">1</method>
			<method name="public abstract org.xml.sax.EntityResolver getEntityResolver()">1</method>
			<method name="public abstract String getXMLEncoding()">1</method>
			<method name="public abstract void setRootElement(org.dom4j.Element)">1</method>
			<method name="public abstract org.dom4j.Document addDocType(String, String, String)">1</method>
			<method name="public abstract org.dom4j.Document addComment(String)">1</method>
			<method name="public abstract void setEntityResolver(org.xml.sax.EntityResolver)">1</method>
			<method name="public abstract void setDocType(org.dom4j.DocumentType)">1</method>
			<method name="public abstract org.dom4j.DocumentType getDocType()">1</method>
			<method name="public abstract org.dom4j.Element getRootElement()">1</method>
			<method name="public abstract org.dom4j.Document addProcessingInstruction(String, String)">1</method>
			<method name="public abstract void setXMLEncoding(String)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.Visitor</name>
		<wmc>20</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>54</cbo>
		<rfc>20</rfc>
		<lcom>190</lcom>
		<ca>32</ca>
		<ce>22</ce>
		<npm>20</npm>
		<lcom3>2.0</lcom3>
		<loc>20</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.09523809523809523</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void visit(org.jaxen.expr.MultiplicativeExpr)">1</method>
			<method name="public abstract void visit(org.jaxen.expr.LocationPath)">1</method>
			<method name="public abstract void visit(org.jaxen.expr.AllNodeStep)">1</method>
			<method name="public abstract void visit(org.jaxen.expr.Predicate)">1</method>
			<method name="public abstract void visit(org.jaxen.expr.UnionExpr)">1</method>
			<method name="public abstract void visit(org.jaxen.expr.NumberExpr)">1</method>
			<method name="public abstract void visit(org.jaxen.expr.ProcessingInstructionNodeStep)">1</method>
			<method name="public abstract void visit(org.jaxen.expr.EqualityExpr)">1</method>
			<method name="public abstract void visit(org.jaxen.expr.LiteralExpr)">1</method>
			<method name="public abstract void visit(org.jaxen.expr.RelationalExpr)">1</method>
			<method name="public abstract void visit(org.jaxen.expr.AdditiveExpr)">1</method>
			<method name="public abstract void visit(org.jaxen.expr.VariableReferenceExpr)">1</method>
			<method name="public abstract void visit(org.jaxen.expr.NameStep)">1</method>
			<method name="public abstract void visit(org.jaxen.expr.PathExpr)">1</method>
			<method name="public abstract void visit(org.jaxen.expr.FunctionCallExpr)">1</method>
			<method name="public abstract void visit(org.jaxen.expr.TextNodeStep)">1</method>
			<method name="public abstract void visit(org.jaxen.expr.FilterExpr)">1</method>
			<method name="public abstract void visit(org.jaxen.expr.LogicalExpr)">1</method>
			<method name="public abstract void visit(org.jaxen.expr.CommentNodeStep)">1</method>
			<method name="public abstract void visit(org.jaxen.expr.UnaryExpr)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.ConcurrentReaderHashMap</name>
		<wmc>34</wmc>
		<dit>2</dit>
		<noc>0</noc>
		<cbo>32</cbo>
		<rfc>66</rfc>
		<lcom>349</lcom>
		<ca>7</ca>
		<ce>30</ce>
		<npm>22</npm>
		<lcom3>0.7972027972027972</lcom3>
		<loc>1178</loc>
		<dam>0.8461538461538461</dam>
		<moa>2</moa>
		<mfa>0.3829787234042553</mfa>
		<cam>0.20454545454545456</cam>
		<ic>2</ic>
		<cbm>10</cbm>
		<amc>33.26470588235294</amc>
		<cc>
			<method name="public boolean containsKey(Object key)">2</method>
			<method name="public void _init_(int initialCapacity)">1</method>
			<method name="public Object remove(Object key)">10</method>
			<method name="protected boolean eq(Object x, Object y)">3</method>
			<method name="protected void rehash()">8</method>
			<method name="public java.util.Set entrySet()">2</method>
			<method name="public synchronized Object clone()">3</method>
			<method name="protected final org.dom4j.tree.ConcurrentReaderHashMap$Entry[] getTableForReading()">1</method>
			<method name="public synchronized void putAll(java.util.Map t)">4</method>
			<method name="public java.util.Enumeration keys()">1</method>
			<method name="private synchronized void readObject(java.io.ObjectInputStream s)">1</method>
			<method name="protected Object sput(Object key, Object value, int hash)">5</method>
			<method name="public void _init_(java.util.Map t)">1</method>
			<method name="private synchronized void writeObject(java.io.ObjectOutputStream s)">1</method>
			<method name="public float loadFactor()">1</method>
			<method name="public java.util.Collection values()">2</method>
			<method name="protected synchronized boolean findAndRemoveEntry(java.util.Map$Entry entry)">3</method>
			<method name="public synchronized int size()">1</method>
			<method name="public synchronized int capacity()">1</method>
			<method name="public java.util.Set keySet()">2</method>
			<method name="private int p2capacity(int initialCapacity)">4</method>
			<method name="public boolean contains(Object value)">1</method>
			<method name="public Object put(Object key, Object value)">11</method>
			<method name="public boolean containsValue(Object value)">5</method>
			<method name="private static int hash(Object x)">1</method>
			<method name="protected Object sremove(Object key, int hash)">5</method>
			<method name="public synchronized boolean isEmpty()">2</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object get(Object key)">7</method>
			<method name="public java.util.Enumeration elements()">1</method>
			<method name="protected final void recordModification(Object x)">1</method>
			<method name="public synchronized void clear()">3</method>
			<method name="public void _init_(int initialCapacity, float loadFactor)">2</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.jaxb.JAXBObjectHandler</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>4</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void handleObject(javax.xml.bind.Element)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.pattern.NodeTypeTest</name>
		<wmc>7</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>15</rfc>
		<lcom>1</lcom>
		<ca>2</ca>
		<ce>7</ce>
		<npm>6</npm>
		<lcom3>0.8958333333333334</lcom3>
		<loc>107</loc>
		<dam>0.125</dam>
		<moa>7</moa>
		<mfa>0.0</mfa>
		<cam>0.375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.142857142857142</amc>
		<cc>
			<method name="public boolean matches(Object node, org.jaxen.Context context)">2</method>
			<method name="public String toString()">1</method>
			<method name="public String getText()">2</method>
			<method name="public short getMatchType()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void _init_(short nodeType)">1</method>
			<method name="public double getPriority()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.dom.DOMText</name>
		<wmc>38</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>17</cbo>
		<rfc>86</rfc>
		<lcom>703</lcom>
		<ca>1</ca>
		<ce>16</ce>
		<npm>36</npm>
		<lcom3>2.0</lcom3>
		<loc>259</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2675438596491228</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.815789473684211</amc>
		<cc>
			<method name="public boolean isSupported(String feature, String version)">1</method>
			<method name="public void deleteData(int offset, int count)">1</method>
			<method name="public void _init_(String text)">1</method>
			<method name="public org.w3c.dom.Node getFirstChild()">1</method>
			<method name="public String getNodeName()">1</method>
			<method name="public org.w3c.dom.NamedNodeMap getAttributes()">1</method>
			<method name="public int getLength()">1</method>
			<method name="public org.w3c.dom.NodeList getChildNodes()">1</method>
			<method name="public org.w3c.dom.Node getNextSibling()">1</method>
			<method name="public void setPrefix(String prefix)">1</method>
			<method name="public String getNodeValue()">1</method>
			<method name="public void setData(String data)">1</method>
			<method name="public org.w3c.dom.Text splitText(int offset)">1</method>
			<method name="public boolean supports(String feature, String version)">1</method>
			<method name="public org.w3c.dom.Document getOwnerDocument()">1</method>
			<method name="protected org.dom4j.Text createText(String text)">1</method>
			<method name="public String getNamespaceURI()">1</method>
			<method name="public org.w3c.dom.Node insertBefore(org.w3c.dom.Node newChild, org.w3c.dom.Node refChild)">1</method>
			<method name="public org.w3c.dom.Node replaceChild(org.w3c.dom.Node newChild, org.w3c.dom.Node oldChild)">1</method>
			<method name="public org.w3c.dom.Node appendChild(org.w3c.dom.Node newChild)">1</method>
			<method name="public boolean hasAttributes()">1</method>
			<method name="public String getPrefix()">1</method>
			<method name="public org.w3c.dom.Node removeChild(org.w3c.dom.Node oldChild)">1</method>
			<method name="public void insertData(int offset, String arg)">1</method>
			<method name="public void replaceData(int offset, int count, String arg)">1</method>
			<method name="public org.w3c.dom.Node getParentNode()">1</method>
			<method name="public void _init_(org.dom4j.Element parent, String text)">1</method>
			<method name="public String substringData(int offset, int count)">1</method>
			<method name="public String getLocalName()">1</method>
			<method name="private void checkNewChildNode(org.w3c.dom.Node newChild)">1</method>
			<method name="public boolean hasChildNodes()">1</method>
			<method name="public org.w3c.dom.Node cloneNode(boolean deep)">1</method>
			<method name="public void setNodeValue(String nodeValue)">1</method>
			<method name="public org.w3c.dom.Node getPreviousSibling()">1</method>
			<method name="public org.w3c.dom.Node getLastChild()">1</method>
			<method name="public void appendData(String arg)">1</method>
			<method name="public void normalize()">1</method>
			<method name="public String getData()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.NumberFunction</name>
		<wmc>6</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>31</cbo>
		<rfc>19</rfc>
		<lcom>13</lcom>
		<ca>17</ca>
		<ce>14</ce>
		<npm>5</npm>
		<lcom3>0.8</lcom3>
		<loc>121</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.22857142857142856</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>19.0</amc>
		<cc>
			<method name="public static Double evaluate(Object obj, org.jaxen.Navigator nav)">10</method>
			<method name="public static boolean isNaN(double val)">1</method>
			<method name="public static boolean isNaN(Double val)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.DocumentInputSource$1</name>
		<wmc>3</wmc>
		<dit>2</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>4</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>2</npm>
		<lcom3>0.75</lcom3>
		<loc>18</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.8333333333333334</mfa>
		<cam>0.4666666666666667</cam>
		<ic>1</ic>
		<cbm>2</cbm>
		<amc>4.333333333333333</amc>
		<cc>
			<method name="public int read(char[] ch, int offset, int length)">1</method>
			<method name="void _init_(org.dom4j.io.DocumentInputSource this$0, java.io.IOException val$e)">1</method>
			<method name="public void close()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.AbstractDocumentType</name>
		<wmc>11</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>13</cbo>
		<rfc>29</rfc>
		<lcom>55</lcom>
		<ca>1</ca>
		<ce>12</ce>
		<npm>11</npm>
		<lcom3>2.0</lcom3>
		<loc>245</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2909090909090909</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>21.272727272727273</amc>
		<cc>
			<method name="public void write(java.io.Writer writer)">1</method>
			<method name="public String toString()">1</method>
			<method name="public void setName(String name)">1</method>
			<method name="public String getText()">5</method>
			<method name="public String asXML()">6</method>
			<method name="public String getName()">1</method>
			<method name="public String getPath(org.dom4j.Element context)">1</method>
			<method name="public short getNodeType()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public String getUniquePath(org.dom4j.Element context)">1</method>
			<method name="public void accept(org.dom4j.Visitor visitor)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.LiteralExpr</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>7</ca>
		<ce>3</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract String getLiteral()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultLocationPath</name>
		<wmc>8</wmc>
		<dit>0</dit>
		<noc>2</noc>
		<cbo>22</cbo>
		<rfc>33</rfc>
		<lcom>26</lcom>
		<ca>2</ca>
		<ce>20</ce>
		<npm>8</npm>
		<lcom3>0.14285714285714285</lcom3>
		<loc>174</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4166666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>20.625</amc>
		<cc>
			<method name="public void addStep(org.jaxen.expr.Step step)">1</method>
			<method name="public String toString()">3</method>
			<method name="public String getText()">3</method>
			<method name="public Object evaluate(org.jaxen.Context context)">1</method>
			<method name="public org.jaxen.expr.Expr simplify()">2</method>
			<method name="public java.util.List getSteps()">1</method>
			<method name="public boolean isAbsolute()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.UnaryExpr</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>4</ca>
		<ce>2</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract org.jaxen.expr.Expr getExpr()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.NotFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>10</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>31</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.333333333333334</amc>
		<cc>
			<method name="public static Boolean evaluate(Object obj, org.jaxen.Navigator nav)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.dtd.AttributeDecl</name>
		<wmc>13</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>18</rfc>
		<lcom>26</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>13</npm>
		<lcom3>0.75</lcom3>
		<loc>153</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.7307692307692307</cam>
		<ic>1</ic>
		<cbm>1</cbm>
		<amc>10.384615384615385</amc>
		<cc>
			<method name="public void _init_(String elementName, String attributeName, String type, String valueDefault, String value)">1</method>
			<method name="public String getAttributeName()">1</method>
			<method name="public void setValue(String value)">1</method>
			<method name="public String getValueDefault()">1</method>
			<method name="public String getType()">1</method>
			<method name="public String toString()">3</method>
			<method name="public void setType(String type)">1</method>
			<method name="public void setAttributeName(String attributeName)">1</method>
			<method name="public String getValue()">1</method>
			<method name="public String getElementName()">1</method>
			<method name="public void setValueDefault(String valueDefault)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void setElementName(String elementName)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.CDATA</name>
		<wmc>0</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>21</cbo>
		<rfc>0</rfc>
		<lcom>0</lcom>
		<ca>19</ca>
		<ce>2</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>0</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
		</cc>
	</class>
	<class>
		<name>org.jaxen.UnresolvableException</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>8</ca>
		<ce>4</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>5</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public void _init_(String message)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.FlyweightText</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>8</cbo>
		<rfc>5</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>20</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.333333333333333</amc>
		<cc>
			<method name="public String getText()">1</method>
			<method name="protected org.dom4j.Node createXPathResult(org.dom4j.Element parent)">1</method>
			<method name="public void _init_(String text)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.rule.Rule</name>
		<wmc>25</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>40</rfc>
		<lcom>166</lcom>
		<ca>4</ca>
		<ce>10</ce>
		<npm>25</npm>
		<lcom3>0.7222222222222222</lcom3>
		<loc>250</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.17777777777777778</cam>
		<ic>1</ic>
		<cbm>1</cbm>
		<amc>8.76</amc>
		<cc>
			<method name="public void setMode(String mode)">1</method>
			<method name="public int getAppearenceCount()">1</method>
			<method name="public org.dom4j.rule.Pattern getPattern()">1</method>
			<method name="public int compareTo(Object that)">2</method>
			<method name="public String toString()">1</method>
			<method name="public int hashCode()">1</method>
			<method name="public String getMode()">1</method>
			<method name="public void setAction(org.dom4j.rule.Action action)">1</method>
			<method name="public void _init_(org.dom4j.rule.Pattern pattern, org.dom4j.rule.Action action)">1</method>
			<method name="public final String getMatchesNodeName()">1</method>
			<method name="public boolean equals(Object that)">3</method>
			<method name="public void _init_(org.dom4j.rule.Pattern pattern)">1</method>
			<method name="public void setPattern(org.dom4j.rule.Pattern pattern)">1</method>
			<method name="public org.dom4j.rule.Action getAction()">1</method>
			<method name="public int getImportPrecedence()">1</method>
			<method name="public int compareTo(org.dom4j.rule.Rule that)">3</method>
			<method name="public void _init_(org.dom4j.rule.Rule that, org.dom4j.rule.Pattern pattern)">1</method>
			<method name="public void setPriority(double priority)">1</method>
			<method name="public double getPriority()">1</method>
			<method name="public org.dom4j.rule.Rule[] getUnionRules()">3</method>
			<method name="public final boolean matches(org.dom4j.Node node)">1</method>
			<method name="public final short getMatchType()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void setImportPrecedence(int importPrecedence)">1</method>
			<method name="public void setAppearenceCount(int appearenceCount)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.SAXValidator</name>
		<wmc>9</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>15</cbo>
		<rfc>23</rfc>
		<lcom>18</lcom>
		<ca>0</ca>
		<ce>15</ce>
		<npm>7</npm>
		<lcom3>0.625</lcom3>
		<loc>109</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3611111111111111</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.88888888888889</amc>
		<cc>
			<method name="protected org.xml.sax.XMLReader createXMLReader()">1</method>
			<method name="public void setXMLReader(org.xml.sax.XMLReader reader)">1</method>
			<method name="public org.xml.sax.ErrorHandler getErrorHandler()">1</method>
			<method name="protected void configureReader()">1</method>
			<method name="public void validate(org.dom4j.Document document)">1</method>
			<method name="public void setErrorHandler(org.xml.sax.ErrorHandler errorHandler)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(org.xml.sax.XMLReader xmlReader)">1</method>
			<method name="public org.xml.sax.XMLReader getXMLReader()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.SingleIterator</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>6</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>4</npm>
		<lcom3>0.5</lcom3>
		<loc>34</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.0</amc>
		<cc>
			<method name="public boolean hasNext()">1</method>
			<method name="public void remove()">1</method>
			<method name="public void _init_(Object object)">1</method>
			<method name="public Object next()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.ConcurrentReaderHashMap$BarrierLock</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>4</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="protected void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.xpath.XPathPattern</name>
		<wmc>12</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>27</cbo>
		<rfc>39</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>26</ce>
		<npm>10</npm>
		<lcom3>0.4848484848484848</lcom3>
		<loc>180</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.2361111111111111</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.75</amc>
		<cc>
			<method name="public boolean matches(org.dom4j.Node node)">1</method>
			<method name="public String toString()">1</method>
			<method name="protected void handleJaxenException(org.jaxen.JaxenException exception)">1</method>
			<method name="public String getText()">1</method>
			<method name="public void setVariableContext(org.jaxen.VariableContext variableContext)">1</method>
			<method name="public void _init_(String text)">1</method>
			<method name="public org.dom4j.rule.Pattern[] getUnionPatterns()">3</method>
			<method name="public short getMatchType()">1</method>
			<method name="public String getMatchesNodeName()">1</method>
			<method name="protected org.jaxen.ContextSupport getContextSupport()">1</method>
			<method name="public void _init_(org.jaxen.pattern.Pattern pattern)">1</method>
			<method name="public double getPriority()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultXPathFactory</name>
		<wmc>27</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>68</cbo>
		<rfc>78</rfc>
		<lcom>351</lcom>
		<ca>2</ca>
		<ce>66</ce>
		<npm>26</npm>
		<lcom3>2.0</lcom3>
		<loc>389</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.30687830687830686</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.407407407407407</amc>
		<cc>
			<method name="public org.jaxen.expr.BinaryExpr createEqualityExpr(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs, int equalityOperator)">3</method>
			<method name="public org.jaxen.expr.FunctionCallExpr createFunctionCallExpr(String prefix, String functionName)">1</method>
			<method name="public org.jaxen.expr.VariableReferenceExpr createVariableReferenceExpr(String prefix, String variable)">1</method>
			<method name="protected org.jaxen.expr.iter.IterableAxis getIterableAxis(int axis)">2</method>
			<method name="public org.jaxen.expr.UnionExpr createUnionExpr(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="public org.jaxen.expr.Step createCommentNodeStep(int axis)">1</method>
			<method name="public org.jaxen.expr.Step createTextNodeStep(int axis)">1</method>
			<method name="public org.jaxen.expr.Expr createUnaryExpr(org.jaxen.expr.Expr expr, int unaryOperator)">2</method>
			<method name="public org.jaxen.expr.FilterExpr createFilterExpr(org.jaxen.expr.Expr expr)">1</method>
			<method name="public org.jaxen.expr.Step createNameStep(int axis, String prefix, String localName)">1</method>
			<method name="public org.jaxen.expr.Predicate createPredicate(org.jaxen.expr.Expr predicateExpr)">1</method>
			<method name="public org.jaxen.expr.BinaryExpr createAndExpr(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="public org.jaxen.expr.Step createAllNodeStep(int axis)">1</method>
			<method name="public org.jaxen.expr.BinaryExpr createRelationalExpr(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs, int relationalOperator)">1</method>
			<method name="public org.jaxen.expr.BinaryExpr createOrExpr(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="public org.jaxen.expr.XPathExpr createXPath(org.jaxen.expr.Expr rootExpr)">1</method>
			<method name="public org.jaxen.expr.LocationPath createRelativeLocationPath()">1</method>
			<method name="public org.jaxen.expr.LiteralExpr createLiteralExpr(String literal)">1</method>
			<method name="public org.jaxen.expr.Step createProcessingInstructionNodeStep(int axis, String piName)">1</method>
			<method name="public org.jaxen.expr.BinaryExpr createAdditiveExpr(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs, int additiveOperator)">3</method>
			<method name="public org.jaxen.expr.NumberExpr createNumberExpr(double number)">1</method>
			<method name="public org.jaxen.expr.LocationPath createAbsoluteLocationPath()">1</method>
			<method name="public org.jaxen.expr.BinaryExpr createMultiplicativeExpr(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs, int multiplicativeOperator)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public org.jaxen.expr.PredicateSet createPredicateSet()">1</method>
			<method name="public org.jaxen.expr.NumberExpr createNumberExpr(int number)">1</method>
			<method name="public org.jaxen.expr.PathExpr createPathExpr(org.jaxen.expr.FilterExpr filterExpr, org.jaxen.expr.LocationPath locationPath)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultEqualityExpr</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>2</noc>
		<cbo>19</cbo>
		<rfc>28</rfc>
		<lcom>15</lcom>
		<ca>2</ca>
		<ce>17</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>172</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3611111111111111</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>27.666666666666668</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public Object evaluate(org.jaxen.Context context)">1</method>
			<method name="private Boolean evaluateSetSet(java.util.List lhsSet, java.util.List rhsSet, org.jaxen.Navigator nav)">4</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="protected abstract boolean evaluateObjectObject(Object, Object)">1</method>
			<method name="private boolean evaluateObjectObject(Object lhs, Object rhs, org.jaxen.Navigator nav)">3</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.saxpath.base.XPathReader</name>
		<wmc>42</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>17</cbo>
		<rfc>108</rfc>
		<lcom>833</lcom>
		<ca>0</ca>
		<ce>17</ce>
		<npm>4</npm>
		<lcom3>0.43089430894308944</lcom3>
		<loc>1368</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.21825396825396826</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>31.5</amc>
		<cc>
			<method name="void nodeTypeTest(int axis)">1</method>
			<method name="void throwUnexpected()">1</method>
			<method name="void functionCall()">1</method>
			<method name="void absoluteLocationPath()">1</method>
			<method name="void multiplicativeExpr()">4</method>
			<method name="void predicateExpr()">1</method>
			<method name="void variableReference()">1</method>
			<method name="void abbrStep()">3</method>
			<method name="org.jaxen.saxpath.XPathSyntaxException createSyntaxException(String message)">1</method>
			<method name="int axisSpecifier()">1</method>
			<method name="org.jaxen.saxpath.base.Token LT(int position)">3</method>
			<method name="void numberDouble()">1</method>
			<method name="void filterExpr()">7</method>
			<method name="void nameTest(int axis)">1</method>
			<method name="void relationalExpr()">1</method>
			<method name="void throwInvalidAxis(String invalidAxis)">1</method>
			<method name="void unaryExpr()">2</method>
			<method name="org.jaxen.saxpath.base.Token match(int tokenType)">1</method>
			<method name="public void setXPathHandler(org.jaxen.saxpath.XPathHandler handler)">1</method>
			<method name="void equalityExpr()">3</method>
			<method name="boolean isNodeTypeName(org.jaxen.saxpath.base.Token name)">5</method>
			<method name="public org.jaxen.saxpath.XPathHandler getXPathHandler()">1</method>
			<method name="void additiveExpr()">3</method>
			<method name="void literal()">1</method>
			<method name="public void parse(String xpath)">1</method>
			<method name="void nodeTest(int axis)">2</method>
			<method name="void arguments()">1</method>
			<method name="void predicates()">1</method>
			<method name="void unionExpr()">2</method>
			<method name="void orExpr()">2</method>
			<method name="void locationPath(boolean isAbsolute)">1</method>
			<method name="void setUpParse(String xpath)">1</method>
			<method name="void relativeLocationPath()">3</method>
			<method name="void predicate()">1</method>
			<method name="void steps()">1</method>
			<method name="void pathExpr()">1</method>
			<method name="int LA(int position)">1</method>
			<method name="void step()">1</method>
			<method name="void andExpr()">2</method>
			<method name="void numberInteger()">1</method>
			<method name="void expr()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.ext.MatrixConcatFunction$MatrixEnum</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>12</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>4</npm>
		<lcom3>0.22222222222222218</lcom3>
		<loc>121</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5833333333333334</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>28.5</amc>
		<cc>
			<method name="public void _init_(java.util.ArrayList _source)">2</method>
			<method name="public boolean hasMoreElements()">3</method>
			<method name="public Object nextElement()">4</method>
			<method name="public void _init_(java.util.ArrayList _source, int _maxSize)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultNotEqualsExpr</name>
		<wmc>5</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>16</rfc>
		<lcom>10</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>56</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.2</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="protected boolean evaluateObjectObject(Object lhs, Object rhs)">5</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public String getOperator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.iter.IterableAncestorOrSelfAxis</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>5</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>11</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.5</amc>
		<cc>
			<method name="public java.util.Iterator iterator(Object contextNode, org.jaxen.ContextSupport support)">1</method>
			<method name="public void _init_(int value)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.ext.EvaluateFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>17</cbo>
		<rfc>21</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>16</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>74</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>23.666666666666668</amc>
		<cc>
			<method name="public void _init_()">1</method>
			<method name="public static java.util.List evaluate(org.jaxen.Context context, Object arg)">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.UnionExpr</name>
		<wmc>0</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>0</rfc>
		<lcom>0</lcom>
		<ca>9</ca>
		<ce>2</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>0</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
		</cc>
	</class>
	<class>
		<name>com.adobe.ac.ant.tasks.FlexUnitTask$1</name>
		<wmc>9</wmc>
		<dit>2</dit>
		<noc>0</noc>
		<cbo>16</cbo>
		<rfc>39</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>16</ce>
		<npm>1</npm>
		<lcom3>0.475</lcom3>
		<loc>290</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.8888888888888888</mfa>
		<cam>0.4074074074074074</cam>
		<ic>1</ic>
		<cbm>1</cbm>
		<amc>30.666666666666668</amc>
		<cc>
			<method name="private void saveTestReport(String arg0)">2</method>
			<method name="private void sendAcknowledgement()">1</method>
			<method name="void _init_(com.adobe.ac.ant.tasks.FlexUnitTask arg0)">1</method>
			<method name="private void openServerSocket()">1</method>
			<method name="private void openClientSocket()">1</method>
			<method name="private void closeServerSocket()">2</method>
			<method name="private void closeClientSocket()">4</method>
			<method name="public void run()">5</method>
			<method name="private void sendPolicyFile()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.STAXEventWriter$AttributeIterator</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>13</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>11</ce>
		<npm>4</npm>
		<lcom3>0.5</lcom3>
		<loc>44</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.5</amc>
		<cc>
			<method name="public boolean hasNext()">1</method>
			<method name="public void remove()">1</method>
			<method name="public void _init_(org.dom4j.io.STAXEventWriter this$0, java.util.Iterator iter)">1</method>
			<method name="public Object next()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.XPathException</name>
		<wmc>4</wmc>
		<dit>4</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>9</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>6</ce>
		<npm>4</npm>
		<lcom3>0.0</lcom3>
		<loc>59</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.9545454545454546</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.5</amc>
		<cc>
			<method name="public void _init_(String xpath, String reason)">1</method>
			<method name="public String getXPath()">1</method>
			<method name="public void _init_(String xpath, Exception e)">1</method>
			<method name="public void _init_(String xpath)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.xpath.DefaultXPath$1</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>6</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>0.5</lcom3>
		<loc>54</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>25.0</amc>
		<cc>
			<method name="void _init_(org.dom4j.xpath.DefaultXPath this$0, java.util.Map val$sortValues)">1</method>
			<method name="public int compare(Object o1, Object o2)">6</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.JaxenConstants</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>15</cbo>
		<rfc>5</rfc>
		<lcom>1</lcom>
		<ca>9</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>1.0</lcom3>
		<loc>14</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.0</amc>
		<cc>
			<method name="static void _clinit_()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.jaxb.JAXBReader</name>
		<wmc>19</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>23</cbo>
		<rfc>40</rfc>
		<lcom>169</lcom>
		<ca>2</ca>
		<ce>23</ce>
		<npm>18</npm>
		<lcom3>0.5555555555555556</lcom3>
		<loc>240</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.17982456140350878</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.526315789473685</amc>
		<cc>
			<method name="public void _init_(String contextPath, ClassLoader classloader)">1</method>
			<method name="public org.dom4j.Document read(java.io.File source)">1</method>
			<method name="public org.dom4j.Document read(java.io.InputStream source)">1</method>
			<method name="public void resetHandlers()">1</method>
			<method name="public boolean isPruneElements()">1</method>
			<method name="public org.dom4j.Document read(java.io.Reader source)">1</method>
			<method name="public void _init_(String contextPath)">1</method>
			<method name="public void addObjectHandler(String path, org.dom4j.jaxb.JAXBObjectHandler handler)">1</method>
			<method name="public org.dom4j.Document read(java.io.File file, java.nio.charset.Charset charset)">1</method>
			<method name="public org.dom4j.Document read(java.net.URL source)">1</method>
			<method name="public void setPruneElements(boolean pruneElements)">2</method>
			<method name="public void removeHandler(String path)">1</method>
			<method name="public org.dom4j.Document read(String source)">1</method>
			<method name="public org.dom4j.Document read(java.io.Reader source, String systemId)">1</method>
			<method name="private org.dom4j.io.SAXReader getReader()">2</method>
			<method name="public org.dom4j.Document read(org.xml.sax.InputSource source)">1</method>
			<method name="public org.dom4j.Document read(java.io.InputStream source, String systemId)">1</method>
			<method name="public void removeObjectHandler(String path)">1</method>
			<method name="public void addHandler(String path, org.dom4j.ElementHandler handler)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.FunctionCallExpr</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>4</rfc>
		<lcom>6</lcom>
		<ca>7</ca>
		<ce>5</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>4</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract java.util.List getParameters()">1</method>
			<method name="public abstract void addParameter(org.jaxen.expr.Expr)">1</method>
			<method name="public abstract String getFunctionName()">1</method>
			<method name="public abstract String getPrefix()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.SAXReader</name>
		<wmc>56</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>37</cbo>
		<rfc>111</rfc>
		<lcom>974</lcom>
		<ca>7</ca>
		<ce>30</ce>
		<npm>49</npm>
		<lcom3>0.8972727272727273</lcom3>
		<loc>878</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.1092436974789916</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.321428571428571</amc>
		<cc>
			<method name="public org.dom4j.DocumentFactory getDocumentFactory()">2</method>
			<method name="public void setDefaultHandler(org.dom4j.ElementHandler handler)">1</method>
			<method name="public boolean isIncludeExternalDTDDeclarations()">1</method>
			<method name="public void setEntityResolver(org.xml.sax.EntityResolver entityResolver)">1</method>
			<method name="public void resetHandlers()">1</method>
			<method name="public org.dom4j.Document read(java.io.InputStream in)">1</method>
			<method name="protected org.dom4j.io.DispatchHandler getDispatchHandler()">2</method>
			<method name="public void _init_(String xmlReaderClassName)">1</method>
			<method name="public boolean isIgnoreComments()">1</method>
			<method name="public org.xml.sax.ErrorHandler getErrorHandler()">1</method>
			<method name="public void setDocumentFactory(org.dom4j.DocumentFactory documentFactory)">1</method>
			<method name="protected org.xml.sax.EntityResolver createDefaultEntityResolver(String systemId)">4</method>
			<method name="public void setStripWhitespaceText(boolean stripWhitespaceText)">1</method>
			<method name="public void setIncludeExternalDTDDeclarations(boolean include)">1</method>
			<method name="public boolean isStripWhitespaceText()">1</method>
			<method name="public org.xml.sax.EntityResolver getEntityResolver()">1</method>
			<method name="public org.dom4j.Document read(java.io.InputStream in, String systemId)">1</method>
			<method name="public void _init_(org.xml.sax.XMLReader xmlReader)">1</method>
			<method name="public org.dom4j.Document read(java.io.Reader reader)">1</method>
			<method name="public void setIncludeInternalDTDDeclarations(boolean include)">1</method>
			<method name="public org.xml.sax.XMLReader getXMLReader()">1</method>
			<method name="public void setValidation(boolean validation)">1</method>
			<method name="public void setProperty(String name, Object value)">1</method>
			<method name="public org.dom4j.Document read(java.net.URL url)">1</method>
			<method name="protected org.dom4j.io.SAXContentHandler createContentHandler(org.xml.sax.XMLReader reader)">1</method>
			<method name="public void _init_(org.dom4j.DocumentFactory factory, boolean validating)">1</method>
			<method name="public void addHandler(String path, org.dom4j.ElementHandler handler)">1</method>
			<method name="public void setMergeAdjacentText(boolean mergeAdjacentText)">1</method>
			<method name="public void _init_(org.xml.sax.XMLReader xmlReader, boolean validating)">1</method>
			<method name="public boolean isStringInternEnabled()">1</method>
			<method name="public void setStringInternEnabled(boolean stringInternEnabled)">1</method>
			<method name="public org.xml.sax.XMLFilter getXMLFilter()">1</method>
			<method name="public boolean isValidating()">1</method>
			<method name="public void _init_(String xmlReaderClassName, boolean validating)">1</method>
			<method name="public boolean isMergeAdjacentText()">1</method>
			<method name="public void setIgnoreComments(boolean ignoreComments)">1</method>
			<method name="public void setXMLReaderClassName(String xmlReaderClassName)">1</method>
			<method name="public void _init_(org.dom4j.DocumentFactory factory)">1</method>
			<method name="public boolean isIncludeInternalDTDDeclarations()">1</method>
			<method name="protected org.xml.sax.XMLReader createXMLReader()">1</method>
			<method name="public void setErrorHandler(org.xml.sax.ErrorHandler errorHandler)">1</method>
			<method name="protected void configureReader(org.xml.sax.XMLReader reader, org.xml.sax.helpers.DefaultHandler handler)">1</method>
			<method name="public org.dom4j.Document read(java.io.File file)">1</method>
			<method name="public org.dom4j.Document read(java.io.Reader reader, String systemId)">1</method>
			<method name="public void setEncoding(String encoding)">1</method>
			<method name="protected org.xml.sax.XMLReader installXMLFilter(org.xml.sax.XMLReader reader)">3</method>
			<method name="public void setXMLFilter(org.xml.sax.XMLFilter filter)">1</method>
			<method name="public void setFeature(String name, boolean value)">1</method>
			<method name="public void setXMLReader(org.xml.sax.XMLReader reader)">1</method>
			<method name="public void removeHandler(String path)">1</method>
			<method name="public void _init_(boolean validating)">1</method>
			<method name="public String getEncoding()">1</method>
			<method name="protected void setDispatchHandler(org.dom4j.io.DispatchHandler dispatchHandler)">1</method>
			<method name="public org.dom4j.Document read(String systemId)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public org.dom4j.Document read(org.xml.sax.InputSource in)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.pattern.Pattern</name>
		<wmc>8</wmc>
		<dit>1</dit>
		<noc>3</noc>
		<cbo>11</cbo>
		<rfc>9</rfc>
		<lcom>28</lcom>
		<ca>6</ca>
		<ce>5</ce>
		<npm>8</npm>
		<lcom3>1.1428571428571428</lcom3>
		<loc>35</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4166666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>1.625</amc>
		<cc>
			<method name="public abstract String getText()">1</method>
			<method name="public org.jaxen.pattern.Pattern[] getUnionPatterns()">1</method>
			<method name="public org.jaxen.pattern.Pattern simplify()">1</method>
			<method name="public short getMatchType()">1</method>
			<method name="public abstract boolean matches(Object, org.jaxen.Context)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public String getMatchesNodeName()">1</method>
			<method name="public double getPriority()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.FunctionCallException</name>
		<wmc>8</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>49</cbo>
		<rfc>20</rfc>
		<lcom>0</lcom>
		<ca>40</ca>
		<ce>9</ce>
		<npm>8</npm>
		<lcom3>0.14285714285714285</lcom3>
		<loc>81</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2916666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.0</amc>
		<cc>
			<method name="public void _init_(String message)">1</method>
			<method name="public void printStackTrace(java.io.PrintStream s)">2</method>
			<method name="public void _init_(Throwable nestedException)">1</method>
			<method name="public void printStackTrace(java.io.PrintWriter w)">2</method>
			<method name="public Throwable getNestedException()">1</method>
			<method name="public void _init_(String message, Exception nestedException)">1</method>
			<method name="public void printStackTrace()">2</method>
			<method name="public Throwable fillInStackTrace()">2</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.RoundFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>14</rfc>
		<lcom>3</lcom>
		<ca>2</ca>
		<ce>12</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>50</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>15.666666666666666</amc>
		<cc>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
			<method name="public static Number evaluate(Object obj, org.jaxen.Navigator nav)">4</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.ext.LowerFunction</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>11</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>52</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3888888888888889</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>16.333333333333332</amc>
		<cc>
			<method name="public static String evaluate(Object strArg, java.util.Locale locale, org.jaxen.Navigator nav)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.dom.DOMDocumentType</name>
		<wmc>34</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>63</rfc>
		<lcom>561</lcom>
		<ca>2</ca>
		<ce>12</ce>
		<npm>33</npm>
		<lcom3>2.0</lcom3>
		<loc>159</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3382352941176471</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.676470588235294</amc>
		<cc>
			<method name="public boolean isSupported(String feature, String version)">1</method>
			<method name="public org.w3c.dom.NamedNodeMap getEntities()">1</method>
			<method name="public org.w3c.dom.Node getFirstChild()">1</method>
			<method name="public String getNodeName()">1</method>
			<method name="public org.w3c.dom.NamedNodeMap getAttributes()">1</method>
			<method name="public org.w3c.dom.NodeList getChildNodes()">1</method>
			<method name="public org.w3c.dom.Node getNextSibling()">1</method>
			<method name="public void setPrefix(String prefix)">1</method>
			<method name="public String getNodeValue()">1</method>
			<method name="public boolean supports(String feature, String version)">1</method>
			<method name="public String getPublicId()">1</method>
			<method name="public void _init_(String name, String publicID, String systemID)">1</method>
			<method name="public org.w3c.dom.Document getOwnerDocument()">1</method>
			<method name="public String getSystemId()">1</method>
			<method name="public String getNamespaceURI()">1</method>
			<method name="public org.w3c.dom.Node insertBefore(org.w3c.dom.Node newChild, org.w3c.dom.Node refChild)">1</method>
			<method name="public org.w3c.dom.Node replaceChild(org.w3c.dom.Node newChild, org.w3c.dom.Node oldChild)">1</method>
			<method name="public void _init_(String elementName, String systemID)">1</method>
			<method name="public org.w3c.dom.Node appendChild(org.w3c.dom.Node newChild)">1</method>
			<method name="public boolean hasAttributes()">1</method>
			<method name="public String getPrefix()">1</method>
			<method name="public org.w3c.dom.Node removeChild(org.w3c.dom.Node oldChild)">1</method>
			<method name="public org.w3c.dom.NamedNodeMap getNotations()">1</method>
			<method name="public String getInternalSubset()">1</method>
			<method name="public org.w3c.dom.Node getParentNode()">1</method>
			<method name="public String getLocalName()">1</method>
			<method name="private void checkNewChildNode(org.w3c.dom.Node newChild)">1</method>
			<method name="public boolean hasChildNodes()">1</method>
			<method name="public org.w3c.dom.Node cloneNode(boolean deep)">1</method>
			<method name="public void setNodeValue(String nodeValue)">1</method>
			<method name="public org.w3c.dom.Node getPreviousSibling()">1</method>
			<method name="public org.w3c.dom.Node getLastChild()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void normalize()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.DocumentType</name>
		<wmc>10</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>21</cbo>
		<rfc>10</rfc>
		<lcom>45</lcom>
		<ca>16</ca>
		<ce>5</ce>
		<npm>10</npm>
		<lcom3>2.0</lcom3>
		<loc>10</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void setExternalDeclarations(java.util.List)">1</method>
			<method name="public abstract String getElementName()">1</method>
			<method name="public abstract void setElementName(String)">1</method>
			<method name="public abstract String getPublicID()">1</method>
			<method name="public abstract String getSystemID()">1</method>
			<method name="public abstract java.util.List getInternalDeclarations()">1</method>
			<method name="public abstract void setSystemID(String)">1</method>
			<method name="public abstract void setPublicID(String)">1</method>
			<method name="public abstract java.util.List getExternalDeclarations()">1</method>
			<method name="public abstract void setInternalDeclarations(java.util.List)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.UnsupportedAxisException</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>34</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>30</ca>
		<ce>4</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>5</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public void _init_(String msg)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.SAXModifyException</name>
		<wmc>1</wmc>
		<dit>4</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>3</ca>
		<ce>4</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>5</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>1.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="protected void _init_(Throwable cause)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.swing.XMLTableModel</name>
		<wmc>15</wmc>
		<dit>2</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>33</rfc>
		<lcom>35</lcom>
		<ca>0</ca>
		<ce>14</ce>
		<npm>14</npm>
		<lcom3>0.42857142857142855</lcom3>
		<loc>149</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.5714285714285714</mfa>
		<cam>0.26666666666666666</cam>
		<ic>1</ic>
		<cbm>1</cbm>
		<amc>8.733333333333333</amc>
		<cc>
			<method name="public Object getSource()">1</method>
			<method name="public void _init_(org.dom4j.Element tableDefinition, Object source)">1</method>
			<method name="public String getColumnName(int columnIndex)">2</method>
			<method name="public Class getColumnClass(int columnIndex)">1</method>
			<method name="public int getRowCount()">1</method>
			<method name="public void _init_(org.dom4j.swing.XMLTableDefinition definition, Object source)">1</method>
			<method name="public void _init_(org.dom4j.Document tableDefinition, Object source)">1</method>
			<method name="public Object getRowValue(int rowIndex)">1</method>
			<method name="public int getColumnCount()">1</method>
			<method name="public Object getValueAt(int rowIndex, int columnIndex)">1</method>
			<method name="public org.dom4j.swing.XMLTableDefinition getDefinition()">1</method>
			<method name="public void setSource(Object source)">1</method>
			<method name="public void setDefinition(org.dom4j.swing.XMLTableDefinition definition)">1</method>
			<method name="public java.util.List getRows()">2</method>
			<method name="protected void handleException(Exception e)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultUnaryExpr</name>
		<wmc>7</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>15</cbo>
		<rfc>20</rfc>
		<lcom>15</lcom>
		<ca>1</ca>
		<ce>14</ce>
		<npm>7</npm>
		<lcom3>0.16666666666666666</lcom3>
		<loc>69</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.35714285714285715</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.714285714285714</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public String getText()">1</method>
			<method name="public Object evaluate(org.jaxen.Context context)">1</method>
			<method name="public org.jaxen.expr.Expr simplify()">1</method>
			<method name="public org.jaxen.expr.Expr getExpr()">1</method>
			<method name="public void _init_(org.jaxen.expr.Expr expr)">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.DefaultDocument</name>
		<wmc>30</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>20</cbo>
		<rfc>62</rfc>
		<lcom>269</lcom>
		<ca>2</ca>
		<ce>19</ce>
		<npm>23</npm>
		<lcom3>0.8189655172413793</lcom3>
		<loc>503</loc>
		<dam>1.0</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.19540229885057472</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>15.5</amc>
		<cc>
			<method name="public void setName(String name)">1</method>
			<method name="protected org.dom4j.DocumentFactory getDocumentFactory()">1</method>
			<method name="protected java.util.List contentList()">3</method>
			<method name="public void _init_(String name)">1</method>
			<method name="public void setEntityResolver(org.xml.sax.EntityResolver entityResolver)">1</method>
			<method name="protected void addNode(int index, org.dom4j.Node node)">4</method>
			<method name="public Object clone()">1</method>
			<method name="public void _init_(org.dom4j.Element rootElement)">1</method>
			<method name="public org.dom4j.ProcessingInstruction processingInstruction(String target)">4</method>
			<method name="public void _init_(String name, org.dom4j.Element rootElement, org.dom4j.DocumentType docType)">1</method>
			<method name="public void _init_(org.dom4j.DocumentType docType)">1</method>
			<method name="public void setDocumentFactory(org.dom4j.DocumentFactory documentFactory)">1</method>
			<method name="public void setDocType(org.dom4j.DocumentType docType)">1</method>
			<method name="public String getXMLEncoding()">1</method>
			<method name="public org.dom4j.Document addDocType(String docTypeName, String publicId, String systemId)">1</method>
			<method name="protected void rootElementAdded(org.dom4j.Element element)">1</method>
			<method name="protected void addNode(org.dom4j.Node node)">4</method>
			<method name="public org.dom4j.Element getRootElement()">1</method>
			<method name="public java.util.List processingInstructions(String target)">4</method>
			<method name="public org.dom4j.DocumentType getDocType()">1</method>
			<method name="public java.util.List processingInstructions()">3</method>
			<method name="public String getName()">1</method>
			<method name="public org.xml.sax.EntityResolver getEntityResolver()">1</method>
			<method name="public void setContent(java.util.List content)">9</method>
			<method name="public void clearContent()">1</method>
			<method name="protected boolean removeNode(org.dom4j.Node node)">3</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void _init_(org.dom4j.Element rootElement, org.dom4j.DocumentType docType)">1</method>
			<method name="public boolean removeProcessingInstruction(String target)">2</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.XPathExpr</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>5</rfc>
		<lcom>10</lcom>
		<ca>6</ca>
		<ce>8</ce>
		<npm>5</npm>
		<lcom3>2.0</lcom3>
		<loc>5</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract String getText()">1</method>
			<method name="public abstract org.jaxen.expr.Expr getRootExpr()">1</method>
			<method name="public abstract void setRootExpr(org.jaxen.expr.Expr)">1</method>
			<method name="public abstract void simplify()">1</method>
			<method name="public abstract java.util.List asList(org.jaxen.Context)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.pattern.UnionPattern</name>
		<wmc>14</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>26</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>13</npm>
		<lcom3>0.4230769230769231</lcom3>
		<loc>185</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.3392857142857143</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.928571428571429</amc>
		<cc>
			<method name="public boolean matches(Object node, org.jaxen.Context context)">1</method>
			<method name="public org.jaxen.pattern.Pattern[] getUnionPatterns()">1</method>
			<method name="public void _init_(org.jaxen.pattern.Pattern lhs, org.jaxen.pattern.Pattern rhs)">1</method>
			<method name="public org.jaxen.pattern.Pattern getRHS()">1</method>
			<method name="public org.jaxen.pattern.Pattern getLHS()">1</method>
			<method name="public String getMatchesNodeName()">1</method>
			<method name="private void init()">5</method>
			<method name="public String toString()">1</method>
			<method name="public String getText()">1</method>
			<method name="public void setLHS(org.jaxen.pattern.Pattern lhs)">1</method>
			<method name="public org.jaxen.pattern.Pattern simplify()">1</method>
			<method name="public short getMatchType()">1</method>
			<method name="public void setRHS(org.jaxen.pattern.Pattern rhs)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.swing.LeafTreeNode$1</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>4</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>10</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>2.3333333333333335</amc>
		<cc>
			<method name="void _init_()">1</method>
			<method name="public boolean hasMoreElements()">1</method>
			<method name="public Object nextElement()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.ConcurrentReaderHashMap$KeySet</name>
		<wmc>7</wmc>
		<dit>3</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>13</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>5</npm>
		<lcom3>0.0</lcom3>
		<loc>46</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.7916666666666666</mfa>
		<cam>0.42857142857142855</cam>
		<ic>2</ic>
		<cbm>9</cbm>
		<amc>5.428571428571429</amc>
		<cc>
			<method name="private void _init_(org.dom4j.tree.ConcurrentReaderHashMap this$0)">1</method>
			<method name="public boolean contains(Object o)">1</method>
			<method name="public void clear()">1</method>
			<method name="void _init_(org.dom4j.tree.ConcurrentReaderHashMap x0, org.dom4j.tree.ConcurrentReaderHashMap$1 x1)">1</method>
			<method name="public boolean remove(Object o)">2</method>
			<method name="public int size()">1</method>
			<method name="public java.util.Iterator iterator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.dtd.ElementDecl</name>
		<wmc>7</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>11</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>7</npm>
		<lcom3>0.5</lcom3>
		<loc>52</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.7142857142857143</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.142857142857143</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void setName(String name)">1</method>
			<method name="public void setModel(String model)">1</method>
			<method name="public String getName()">1</method>
			<method name="public String getModel()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(String name, String model)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.xpp.ProxyXmlStartTag</name>
		<wmc>28</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>57</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>13</ce>
		<npm>28</npm>
		<lcom3>0.48148148148148145</lcom3>
		<loc>370</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.26785714285714285</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.142857142857142</amc>
		<cc>
			<method name="public org.dom4j.DocumentFactory getDocumentFactory()">1</method>
			<method name="public void addAttribute(String namespaceURI, String localName, String rawName, String value)">1</method>
			<method name="public void removeAtttributes()">1</method>
			<method name="public int getAttributeCount()">2</method>
			<method name="public String getAttributeNamespaceUri(int index)">3</method>
			<method name="public String getAttributeRawName(int index)">3</method>
			<method name="public void addAttribute(String namespaceURI, String localName, String rawName, String value, boolean isNamespaceDeclaration)">1</method>
			<method name="public void modifyTag(String namespaceURI, String lName, String rawName)">1</method>
			<method name="public String getNamespaceUri()">1</method>
			<method name="public void resetTag()">1</method>
			<method name="public void setDocumentFactory(org.dom4j.DocumentFactory documentFactory)">1</method>
			<method name="public boolean removeAttributeByName(String namespaceURI, String localName)">1</method>
			<method name="public String getAttributeValueFromName(String namespaceURI, String localName)">3</method>
			<method name="public String getAttributeValueFromRawName(String rawName)">3</method>
			<method name="public void resetStartTag()">1</method>
			<method name="public String getAttributePrefix(int index)">5</method>
			<method name="public boolean isAttributeNamespaceDeclaration(int index)">3</method>
			<method name="public void ensureAttributesCapacity(int minCapacity)">1</method>
			<method name="public void removeAttributes()">1</method>
			<method name="public String getPrefix()">1</method>
			<method name="public String getAttributeValue(int index)">3</method>
			<method name="public String getLocalName()">1</method>
			<method name="public String getRawName()">1</method>
			<method name="public void _init_(org.dom4j.Element element)">1</method>
			<method name="public org.dom4j.Element getElement()">1</method>
			<method name="public String getAttributeLocalName(int index)">3</method>
			<method name="public boolean removeAttributeByRawName(String rawName)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.iter.IterableFollowingAxis</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>5</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>11</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.5</amc>
		<cc>
			<method name="public java.util.Iterator iterator(Object contextNode, org.jaxen.ContextSupport support)">1</method>
			<method name="public void _init_(int value)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultStep</name>
		<wmc>12</wmc>
		<dit>1</dit>
		<noc>5</noc>
		<cbo>24</cbo>
		<rfc>40</rfc>
		<lcom>24</lcom>
		<ca>6</ca>
		<ce>18</ce>
		<npm>12</npm>
		<lcom3>0.45454545454545453</lcom3>
		<loc>146</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.21428571428571427</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.0</amc>
		<cc>
			<method name="public void _init_(org.jaxen.expr.iter.IterableAxis axis, org.jaxen.expr.PredicateSet predicates)">1</method>
			<method name="public int getAxis()">1</method>
			<method name="public String toString()">1</method>
			<method name="public void addPredicate(org.jaxen.expr.Predicate predicate)">1</method>
			<method name="public org.jaxen.expr.iter.IterableAxis getIterableAxis()">1</method>
			<method name="public String getText()">1</method>
			<method name="public org.jaxen.expr.PredicateSet getPredicateSet()">1</method>
			<method name="public java.util.Iterator axisIterator(Object contextNode, org.jaxen.ContextSupport support)">1</method>
			<method name="public java.util.List evaluate(org.jaxen.Context context)">1</method>
			<method name="public String getAxisName()">1</method>
			<method name="public void simplify()">1</method>
			<method name="public java.util.List getPredicates()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.util.SimpleSingleton</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>10</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>4</npm>
		<lcom3>0.16666666666666666</lcom3>
		<loc>52</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.5</amc>
		<cc>
			<method name="public Object instance()">1</method>
			<method name="public void reset()">2</method>
			<method name="public void setSingletonClassName(String singletonClassName)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.Expr</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>54</cbo>
		<rfc>3</rfc>
		<lcom>3</lcom>
		<ca>48</ca>
		<ce>6</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>3</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract String getText()">1</method>
			<method name="public abstract org.jaxen.expr.Expr simplify()">1</method>
			<method name="public abstract Object evaluate(org.jaxen.Context)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.javabean.ElementIterator</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>9</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>4</npm>
		<lcom3>0.5555555555555555</lcom3>
		<loc>38</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.75</amc>
		<cc>
			<method name="public boolean hasNext()">1</method>
			<method name="public void remove()">1</method>
			<method name="public void _init_(org.jaxen.javabean.Element parent, String name, java.util.Iterator iterator)">1</method>
			<method name="public Object next()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultLiteralExpr</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>11</rfc>
		<lcom>13</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>6</npm>
		<lcom3>0.2</lcom3>
		<loc>47</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.666666666666667</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public String getText()">1</method>
			<method name="public Object evaluate(org.jaxen.Context context)">1</method>
			<method name="public String getLiteral()">1</method>
			<method name="public void _init_(String literal)">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.dom.DOMNamespace</name>
		<wmc>26</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>52</rfc>
		<lcom>325</lcom>
		<ca>1</ca>
		<ce>12</ce>
		<npm>26</npm>
		<lcom3>2.0</lcom3>
		<loc>122</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2923076923076923</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.6923076923076925</amc>
		<cc>
			<method name="public boolean isSupported(String feature, String version)">1</method>
			<method name="public org.w3c.dom.Node getFirstChild()">1</method>
			<method name="public String getNodeName()">1</method>
			<method name="public org.w3c.dom.NamedNodeMap getAttributes()">1</method>
			<method name="public void _init_(org.dom4j.Element parent, String prefix, String uri)">1</method>
			<method name="public org.w3c.dom.NodeList getChildNodes()">1</method>
			<method name="public org.w3c.dom.Node getNextSibling()">1</method>
			<method name="public void setPrefix(String prefix)">1</method>
			<method name="public String getNodeValue()">1</method>
			<method name="public boolean supports(String feature, String version)">1</method>
			<method name="public org.w3c.dom.Document getOwnerDocument()">1</method>
			<method name="public String getNamespaceURI()">1</method>
			<method name="public void _init_(String prefix, String uri)">1</method>
			<method name="public org.w3c.dom.Node insertBefore(org.w3c.dom.Node newChild, org.w3c.dom.Node refChild)">1</method>
			<method name="public org.w3c.dom.Node replaceChild(org.w3c.dom.Node newChild, org.w3c.dom.Node oldChild)">1</method>
			<method name="public org.w3c.dom.Node appendChild(org.w3c.dom.Node newChild)">1</method>
			<method name="public boolean hasAttributes()">1</method>
			<method name="public org.w3c.dom.Node removeChild(org.w3c.dom.Node oldChild)">1</method>
			<method name="public org.w3c.dom.Node getParentNode()">1</method>
			<method name="public String getLocalName()">1</method>
			<method name="public boolean hasChildNodes()">1</method>
			<method name="public org.w3c.dom.Node cloneNode(boolean deep)">1</method>
			<method name="public void setNodeValue(String nodeValue)">1</method>
			<method name="public org.w3c.dom.Node getPreviousSibling()">1</method>
			<method name="public org.w3c.dom.Node getLastChild()">1</method>
			<method name="public void normalize()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.saxpath.base.Verifier</name>
		<wmc>7</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>3</cbo>
		<rfc>8</rfc>
		<lcom>21</lcom>
		<ca>1</ca>
		<ce>2</ce>
		<npm>5</npm>
		<lcom3>2.0</lcom3>
		<loc>2868</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>408.7142857142857</amc>
		<cc>
			<method name="void _init_()">1</method>
			<method name="public static boolean isXMLDigit(char c)">31</method>
			<method name="static boolean isXMLNCNameCharacter(char c)">8</method>
			<method name="public static boolean isXMLNCNameStartCharacter(char c)">3</method>
			<method name="public static boolean isXMLExtender(char c)">16</method>
			<method name="public static boolean isXMLCombiningChar(char c)">162</method>
			<method name="public static boolean isXMLLetter(char c)">358</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.MultiplicativeExpr</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>7</ca>
		<ce>3</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract String getOperator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.iter.IterableAncestorAxis</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>5</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>11</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.5</amc>
		<cc>
			<method name="public java.util.Iterator iterator(Object contextNode, org.jaxen.ContextSupport support)">1</method>
			<method name="public void _init_(int value)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.BaseElement</name>
		<wmc>17</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>13</cbo>
		<rfc>27</rfc>
		<lcom>90</lcom>
		<ca>1</ca>
		<ce>12</ce>
		<npm>13</npm>
		<lcom3>0.8125</lcom3>
		<loc>171</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.20588235294117646</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.823529411764707</amc>
		<cc>
			<method name="public boolean supportsParent()">1</method>
			<method name="protected java.util.List attributeList()">2</method>
			<method name="protected java.util.List contentList()">2</method>
			<method name="public void _init_(String name)">1</method>
			<method name="public void _init_(org.dom4j.QName qname)">1</method>
			<method name="public void _init_(String name, org.dom4j.Namespace namespace)">1</method>
			<method name="public void setAttributes(java.util.List attributes)">2</method>
			<method name="protected void setAttributeList(java.util.List attributeList)">1</method>
			<method name="public void setContent(java.util.List content)">2</method>
			<method name="public org.dom4j.Document getDocument()">3</method>
			<method name="public void setParent(org.dom4j.Element parent)">3</method>
			<method name="public void clearContent()">1</method>
			<method name="public void setDocument(org.dom4j.Document document)">3</method>
			<method name="public void setQName(org.dom4j.QName name)">1</method>
			<method name="public org.dom4j.QName getQName()">1</method>
			<method name="protected java.util.List attributeList(int size)">2</method>
			<method name="public org.dom4j.Element getParent()">2</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.STAXEventWriter$NamespaceIterator</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>12</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>4</npm>
		<lcom3>0.5</lcom3>
		<loc>41</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.75</amc>
		<cc>
			<method name="public boolean hasNext()">1</method>
			<method name="public void remove()">1</method>
			<method name="public void _init_(org.dom4j.io.STAXEventWriter this$0, java.util.Iterator iter)">1</method>
			<method name="public Object next()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.Comment</name>
		<wmc>0</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>22</cbo>
		<rfc>0</rfc>
		<lcom>0</lcom>
		<ca>20</ca>
		<ce>2</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>0</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
		</cc>
	</class>
	<class>
		<name>org.dom4j.datatype.InvalidSchemaException</name>
		<wmc>1</wmc>
		<dit>5</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>4</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>5</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>1.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public void _init_(String reason)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.util.PerThreadSingleton</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>15</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>10</ce>
		<npm>4</npm>
		<lcom3>0.3333333333333333</lcom3>
		<loc>74</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.0</amc>
		<cc>
			<method name="public Object instance()">3</method>
			<method name="public void reset()">1</method>
			<method name="public void setSingletonClassName(String singletonClassName)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.dom.DOMNodeHelper</name>
		<wmc>44</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>35</cbo>
		<rfc>87</rfc>
		<lcom>944</lcom>
		<ca>12</ca>
		<ce>24</ce>
		<npm>42</npm>
		<lcom3>0.9767441860465116</lcom3>
		<loc>835</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.1331923890063425</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.954545454545453</amc>
		<cc>
			<method name="public static void appendData(org.dom4j.CharacterData charData, String arg)">1</method>
			<method name="public static boolean hasChildNodes(org.dom4j.Node node)">1</method>
			<method name="public static org.w3c.dom.Node getParentNode(org.dom4j.Node node)">1</method>
			<method name="public static boolean hasAttributes(org.dom4j.Node node)">4</method>
			<method name="public static void setNodeValue(org.dom4j.Node node, String nodeValue)">1</method>
			<method name="public static void notSupported()">1</method>
			<method name="public static org.w3c.dom.NodeList createNodeList(java.util.List list)">1</method>
			<method name="protected void _init_()">1</method>
			<method name="public static void setPrefix(org.dom4j.Node node, String prefix)">1</method>
			<method name="public static org.w3c.dom.NamedNodeMap getAttributes(org.dom4j.Node node)">1</method>
			<method name="public static org.w3c.dom.Attr asDOMAttr(org.dom4j.Node attribute)">3</method>
			<method name="public static boolean isSupported(org.dom4j.Node n, String feature, String version)">1</method>
			<method name="public static org.w3c.dom.Node removeChild(org.dom4j.Node node, org.w3c.dom.Node oldChild)">1</method>
			<method name="public static org.w3c.dom.Node appendChild(org.dom4j.Node node, org.w3c.dom.Node newChild)">1</method>
			<method name="public static void appendElementsByTagNameNS(java.util.List list, org.dom4j.Branch parent, String namespace, String localName)">12</method>
			<method name="public static int getLength(org.dom4j.CharacterData charData)">2</method>
			<method name="public static org.w3c.dom.DocumentType asDOMDocumentType(org.dom4j.DocumentType dt)">3</method>
			<method name="public static void setData(org.dom4j.CharacterData charData, String data)">1</method>
			<method name="public static org.w3c.dom.Node getFirstChild(org.dom4j.Node node)">1</method>
			<method name="public static void normalize(org.dom4j.Node node)">1</method>
			<method name="public static org.w3c.dom.Node cloneNode(org.dom4j.Node node, boolean deep)">1</method>
			<method name="public static void replaceData(org.dom4j.CharacterData charData, int offset, int count, String arg)">1</method>
			<method name="public static org.w3c.dom.Node getPreviousSibling(org.dom4j.Node node)">3</method>
			<method name="public static org.w3c.dom.Node insertBefore(org.dom4j.Node node, org.w3c.dom.Node newChild, org.w3c.dom.Node refChild)">1</method>
			<method name="public static String getLocalName(org.dom4j.Node node)">1</method>
			<method name="public static org.w3c.dom.Text asDOMText(org.dom4j.CharacterData text)">3</method>
			<method name="public static String getData(org.dom4j.CharacterData charData)">1</method>
			<method name="public static String substringData(org.dom4j.CharacterData charData, int offset, int count)">1</method>
			<method name="public static String getNodeValue(org.dom4j.Node node)">1</method>
			<method name="public static org.w3c.dom.Document getOwnerDocument(org.dom4j.Node node)">1</method>
			<method name="public static org.w3c.dom.Element asDOMElement(org.dom4j.Node element)">3</method>
			<method name="public static void deleteData(org.dom4j.CharacterData charData, int offset, int count)">1</method>
			<method name="public static String getNamespaceURI(org.dom4j.Node node)">1</method>
			<method name="public static org.w3c.dom.Node replaceChild(org.dom4j.Node node, org.w3c.dom.Node newChild, org.w3c.dom.Node oldChild)">1</method>
			<method name="public static org.w3c.dom.Node asDOMNode(org.dom4j.Node node)">3</method>
			<method name="public static org.w3c.dom.Node getNextSibling(org.dom4j.Node node)">4</method>
			<method name="public static void insertData(org.dom4j.CharacterData data, int offset, String arg)">1</method>
			<method name="public static String getPrefix(org.dom4j.Node node)">1</method>
			<method name="public static org.w3c.dom.Document asDOMDocument(org.dom4j.Document document)">3</method>
			<method name="static void _clinit_()">1</method>
			<method name="public static org.w3c.dom.NodeList getChildNodes(org.dom4j.Node node)">1</method>
			<method name="public static boolean supports(org.dom4j.Node node, String feature, String version)">1</method>
			<method name="public static org.w3c.dom.Node getLastChild(org.dom4j.Node node)">1</method>
			<method name="public static void appendElementsByTagName(java.util.List list, org.dom4j.Branch parent, String name)">5</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.HTMLWriter</name>
		<wmc>29</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>23</cbo>
		<rfc>87</rfc>
		<lcom>270</lcom>
		<ca>1</ca>
		<ce>23</ce>
		<npm>16</npm>
		<lcom3>0.7777777777777778</lcom3>
		<loc>661</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.19047619047619047</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>21.482758620689655</amc>
		<cc>
			<method name="public void _init_(java.io.OutputStream out, org.dom4j.io.OutputFormat format)">1</method>
			<method name="public void startCDATA()">1</method>
			<method name="public void setOmitElementCloseSet(java.util.Set newSet)">4</method>
			<method name="protected void writeEmptyElementClose(String qualifiedName)">1</method>
			<method name="public java.util.Set getPreformattedTags()">1</method>
			<method name="protected void writeString(String text)">1</method>
			<method name="public void setPreformattedTags(java.util.Set newSet)">4</method>
			<method name="public void _init_(java.io.OutputStream out)">1</method>
			<method name="public static String prettyPrintHTML(String html)">1</method>
			<method name="public boolean isPreformattedTag(String qualifiedName)">3</method>
			<method name="protected void writeDeclaration()">1</method>
			<method name="private java.util.HashSet internalGetOmitElementCloseSet()">2</method>
			<method name="public void _init_(java.io.Writer writer, org.dom4j.io.OutputFormat format)">1</method>
			<method name="public static String prettyPrintXHTML(String html)">1</method>
			<method name="private void lazyInitNewLinesAfterNTags()">2</method>
			<method name="public static String prettyPrintHTML(String html, boolean newlines, boolean trim, boolean isXHTML, boolean expandEmpty)">1</method>
			<method name="protected void writeEntity(org.dom4j.Entity entity)">1</method>
			<method name="public void _init_(java.io.Writer writer)">1</method>
			<method name="protected boolean omitElementClose(String qualifiedName)">1</method>
			<method name="protected void writeElement(org.dom4j.Element element)">1</method>
			<method name="public void endCDATA()">1</method>
			<method name="protected void writeCDATA(String text)">1</method>
			<method name="protected void writeClose(String qualifiedName)">1</method>
			<method name="public java.util.Set getOmitElementCloseSet()">1</method>
			<method name="protected void loadOmitElementCloseSet(java.util.Set set)">1</method>
			<method name="public void _init_(org.dom4j.io.OutputFormat format)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="private String justSpaces(String text)">5</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.SumFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>14</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>11</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>58</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>18.333333333333332</amc>
		<cc>
			<method name="public static Double evaluate(Object obj, org.jaxen.Navigator nav)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.NormalizeSpaceFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>12</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>84</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>27.0</amc>
		<cc>
			<method name="public static String evaluate(Object strArg, org.jaxen.Navigator nav)">6</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.Text</name>
		<wmc>0</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>24</cbo>
		<rfc>0</rfc>
		<lcom>0</lcom>
		<ca>22</ca>
		<ce>2</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>0</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.AbstractCharacterData</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>3</noc>
		<cbo>10</cbo>
		<rfc>13</rfc>
		<lcom>6</lcom>
		<ca>3</ca>
		<ce>7</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>61</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5833333333333334</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.25</amc>
		<cc>
			<method name="public void appendText(String text)">1</method>
			<method name="public String getPath(org.dom4j.Element context)">3</method>
			<method name="public void _init_()">1</method>
			<method name="public String getUniquePath(org.dom4j.Element context)">3</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.DOMReader</name>
		<wmc>11</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>20</cbo>
		<rfc>65</rfc>
		<lcom>29</lcom>
		<ca>0</ca>
		<ce>20</ce>
		<npm>5</npm>
		<lcom3>0.45</lcom3>
		<loc>407</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.30303030303030304</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>35.81818181818182</amc>
		<cc>
			<method name="public org.dom4j.DocumentFactory getDocumentFactory()">1</method>
			<method name="protected org.dom4j.Namespace getNamespace(String prefix, String uri)">1</method>
			<method name="protected void readElement(org.w3c.dom.Node node, org.dom4j.Branch current)">11</method>
			<method name="public void setDocumentFactory(org.dom4j.DocumentFactory docFactory)">1</method>
			<method name="protected void clearNamespaceStack()">2</method>
			<method name="public org.dom4j.Document read(org.w3c.dom.Document domDocument)">3</method>
			<method name="public void _init_()">1</method>
			<method name="protected org.dom4j.Document createDocument()">1</method>
			<method name="protected void readTree(org.w3c.dom.Node node, org.dom4j.Branch current)">6</method>
			<method name="public void _init_(org.dom4j.DocumentFactory factory)">1</method>
			<method name="private String getPrefix(String xmlnsDecl)">2</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.SAXModifyContentHandler</name>
		<wmc>27</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>18</cbo>
		<rfc>79</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>17</ce>
		<npm>25</npm>
		<lcom3>0.19230769230769232</lcom3>
		<loc>375</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.1962962962962963</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.851851851851851</amc>
		<cc>
			<method name="public void endDocument()">1</method>
			<method name="public void startElement(String uri, String localName, String qName, org.xml.sax.Attributes atts)">1</method>
			<method name="public void characters(char[] parm1, int parm2, int parm3)">1</method>
			<method name="protected org.dom4j.io.XMLWriter getXMLWriter()">1</method>
			<method name="public void startCDATA()">1</method>
			<method name="public void _init_(org.dom4j.DocumentFactory documentFactory, org.dom4j.ElementHandler elementHandler)">1</method>
			<method name="public void startDTD(String name, String publicId, String systemId)">1</method>
			<method name="public void endDTD()">1</method>
			<method name="public void startEntity(String name)">1</method>
			<method name="public void processingInstruction(String target, String data)">1</method>
			<method name="public void comment(char[] characters, int parm2, int parm3)">1</method>
			<method name="public void notationDecl(String name, String publicId, String systemId)">1</method>
			<method name="public void ignorableWhitespace(char[] parm1, int parm2, int parm3)">1</method>
			<method name="public void startDocument()">1</method>
			<method name="public void startPrefixMapping(String prefix, String uri)">1</method>
			<method name="public void endPrefixMapping(String prefix)">1</method>
			<method name="public void _init_(org.dom4j.DocumentFactory documentFactory)">1</method>
			<method name="public void endEntity(String name)">1</method>
			<method name="public void setDocumentLocator(org.xml.sax.Locator locator)">2</method>
			<method name="public void unparsedEntityDecl(String name, String publicId, String systemId, String notation)">1</method>
			<method name="private boolean activeHandlers()">2</method>
			<method name="public void setXMLWriter(org.dom4j.io.XMLWriter writer)">1</method>
			<method name="public void endCDATA()">1</method>
			<method name="public void _init_(org.dom4j.DocumentFactory documentFactory, org.dom4j.ElementHandler elementHandler, org.dom4j.io.ElementStack elementStack)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void endElement(String uri, String localName, String qName)">1</method>
			<method name="public void skippedEntity(String name)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.iter.IterablePrecedingAxis</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>5</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>11</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.5</amc>
		<cc>
			<method name="public java.util.Iterator iterator(Object contextNode, org.jaxen.ContextSupport support)">1</method>
			<method name="public void _init_(int value)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.bean.BeanDocumentFactory</name>
		<wmc>10</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>19</cbo>
		<rfc>26</rfc>
		<lcom>43</lcom>
		<ca>2</ca>
		<ce>18</ce>
		<npm>5</npm>
		<lcom3>0.8888888888888888</lcom3>
		<loc>114</loc>
		<dam>0.5</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.3333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.2</amc>
		<cc>
			<method name="static Class class$(String x0)">1</method>
			<method name="public org.dom4j.Element createElement(org.dom4j.QName qname)">2</method>
			<method name="public static org.dom4j.DocumentFactory getInstance()">1</method>
			<method name="protected Object createBean(org.dom4j.QName qname)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public org.dom4j.Attribute createAttribute(org.dom4j.Element owner, org.dom4j.QName qname, String value)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public org.dom4j.Element createElement(org.dom4j.QName qname, org.xml.sax.Attributes attributes)">2</method>
			<method name="protected Object createBean(org.dom4j.QName qname, org.xml.sax.Attributes attributes)">3</method>
			<method name="protected void handleException(Exception e)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.FunctionContext</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>9</ca>
		<ce>4</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract org.jaxen.Function getFunction(String, String, String)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.ext.LocaleFunctionSupport</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>2</noc>
		<cbo>11</cbo>
		<rfc>19</rfc>
		<lcom>6</lcom>
		<ca>2</ca>
		<ce>9</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>129</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>31.25</amc>
		<cc>
			<method name="protected java.util.Locale findLocale(String localeText)">4</method>
			<method name="protected java.util.Locale getLocale(Object value, org.jaxen.Navigator navigator)">5</method>
			<method name="protected java.util.Locale findLocaleForLanguage(String language)">7</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.ProcessingInstructionNodeStep</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>4</ca>
		<ce>3</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract String getName()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.FilterIterator</name>
		<wmc>6</wmc>
		<dit>1</dit>
		<noc>3</noc>
		<cbo>8</cbo>
		<rfc>11</rfc>
		<lcom>9</lcom>
		<ca>3</ca>
		<ce>5</ce>
		<npm>4</npm>
		<lcom3>0.6</lcom3>
		<loc>80</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4444444444444444</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.833333333333334</amc>
		<cc>
			<method name="public boolean hasNext()">3</method>
			<method name="public void remove()">1</method>
			<method name="protected abstract boolean matches(Object)">1</method>
			<method name="protected Object findNext()">3</method>
			<method name="public void _init_(java.util.Iterator proxy)">1</method>
			<method name="public Object next()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.IdentitySet</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>8</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>4</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>33</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.8333333333333334</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.666666666666666</amc>
		<cc>
			<method name="void _init_()">1</method>
			<method name="public boolean contains(Object object)">1</method>
			<method name="void add(Object object)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.TextNodeStep</name>
		<wmc>0</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>0</rfc>
		<lcom>0</lcom>
		<ca>4</ca>
		<ce>2</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>0</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.iter.IterableAxis</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>13</noc>
		<cbo>28</cbo>
		<rfc>7</rfc>
		<lcom>8</lcom>
		<ca>20</ca>
		<ce>8</ce>
		<npm>5</npm>
		<lcom3>0.75</lcom3>
		<loc>22</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.48</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.2</amc>
		<cc>
			<method name="public void _init_(int axisValue)">1</method>
			<method name="public java.util.Iterator namedAccessIterator(Object contextNode, org.jaxen.ContextSupport support, String localName, String namespacePrefix, String namespaceURI)">1</method>
			<method name="public boolean supportsNamedAccess(org.jaxen.ContextSupport support)">1</method>
			<method name="public int value()">1</method>
			<method name="public abstract java.util.Iterator iterator(Object, org.jaxen.ContextSupport)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.ext.UpperFunction</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>11</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>52</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3888888888888889</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>16.333333333333332</amc>
		<cc>
			<method name="public static String evaluate(Object strArg, java.util.Locale locale, org.jaxen.Navigator nav)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.DispatchHandler</name>
		<wmc>11</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>18</cbo>
		<rfc>31</rfc>
		<lcom>0</lcom>
		<ca>9</ca>
		<ce>9</ce>
		<npm>11</npm>
		<lcom3>0.6</lcom3>
		<loc>233</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4318181818181818</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>19.636363636363637</amc>
		<cc>
			<method name="public void setDefaultHandler(org.dom4j.ElementHandler handler)">1</method>
			<method name="public String getPath()">1</method>
			<method name="public void resetHandlers()">1</method>
			<method name="public void addHandler(String handlerPath, org.dom4j.ElementHandler handler)">1</method>
			<method name="public void onStart(org.dom4j.ElementPath elementPath)">6</method>
			<method name="public org.dom4j.ElementHandler removeHandler(String handlerPath)">1</method>
			<method name="public int getActiveHandlerCount()">1</method>
			<method name="public org.dom4j.ElementHandler getHandler(String handlerPath)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public boolean containsHandler(String handlerPath)">1</method>
			<method name="public void onEnd(org.dom4j.ElementPath elementPath)">6</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.Entity</name>
		<wmc>0</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>19</cbo>
		<rfc>0</rfc>
		<lcom>0</lcom>
		<ca>17</ca>
		<ce>2</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>0</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
		</cc>
	</class>
	<class>
		<name>org.dom4j.datatype.DatatypeElementFactory</name>
		<wmc>8</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>15</cbo>
		<rfc>17</rfc>
		<lcom>14</lcom>
		<ca>3</ca>
		<ce>12</ce>
		<npm>8</npm>
		<lcom3>0.6666666666666666</lcom3>
		<loc>112</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.475</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.625</amc>
		<cc>
			<method name="public com.sun.msv.datatype.xsd.XSDatatype getChildElementXSDatatype(org.dom4j.QName qname)">1</method>
			<method name="public void setChildElementXSDatatype(org.dom4j.QName qname, com.sun.msv.datatype.xsd.XSDatatype dataType)">1</method>
			<method name="public org.dom4j.Element createElement(org.dom4j.QName qname)">4</method>
			<method name="public com.sun.msv.datatype.xsd.XSDatatype getAttributeXSDatatype(org.dom4j.QName attributeQName)">1</method>
			<method name="public org.dom4j.Attribute createAttribute(org.dom4j.Element owner, org.dom4j.QName qname, String value)">2</method>
			<method name="public org.dom4j.QName getQName()">1</method>
			<method name="public void _init_(org.dom4j.QName elementQName)">1</method>
			<method name="public void setAttributeXSDatatype(org.dom4j.QName attributeQName, com.sun.msv.datatype.xsd.XSDatatype type)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.xpath.DefaultNamespaceContext</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>9</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>3</npm>
		<lcom3>0.0</lcom3>
		<loc>62</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4166666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>19.333333333333332</amc>
		<cc>
			<method name="public void _init_(org.dom4j.Element element)">1</method>
			<method name="public String translateNamespacePrefixToUri(String prefix)">4</method>
			<method name="public static org.dom4j.xpath.DefaultNamespaceContext create(Object node)">5</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.util.UserDataDocumentFactory</name>
		<wmc>5</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>8</rfc>
		<lcom>8</lcom>
		<ca>0</ca>
		<ce>9</ce>
		<npm>4</npm>
		<lcom3>0.75</lcom3>
		<loc>27</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.2</amc>
		<cc>
			<method name="public org.dom4j.Element createElement(org.dom4j.QName qname)">1</method>
			<method name="public static org.dom4j.DocumentFactory getInstance()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public org.dom4j.Attribute createAttribute(org.dom4j.Element owner, org.dom4j.QName qname, String value)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.NameFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>21</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>101</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>32.666666666666664</amc>
		<cc>
			<method name="public static String evaluate(java.util.List list, org.jaxen.Navigator nav)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.VisitorSupport</name>
		<wmc>21</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>23</cbo>
		<rfc>22</rfc>
		<lcom>210</lcom>
		<ca>0</ca>
		<ce>23</ce>
		<npm>21</npm>
		<lcom3>2.0</lcom3>
		<loc>44</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.09297052154195011</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>1.0952380952380953</amc>
		<cc>
			<method name="public void visit(org.jaxen.expr.UnionExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.LiteralExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.PathExpr path)">1</method>
			<method name="public void visit(org.jaxen.expr.TextNodeStep step)">1</method>
			<method name="public void visit(org.jaxen.expr.NumberExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.VariableReferenceExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.RelationalExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.FunctionCallExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.CommentNodeStep step)">1</method>
			<method name="public void visit(org.jaxen.expr.AdditiveExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.UnaryExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.NameStep step)">1</method>
			<method name="public void visit(org.jaxen.expr.ProcessingInstructionNodeStep step)">1</method>
			<method name="public void visit(org.jaxen.expr.AllNodeStep step)">1</method>
			<method name="public void visit(org.jaxen.expr.LogicalExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.FilterExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.EqualityExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.Predicate predicate)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void visit(org.jaxen.expr.MultiplicativeExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.LocationPath path)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.AncestorOrSelfAxisIterator</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>11</cbo>
		<rfc>9</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>9</ce>
		<npm>4</npm>
		<lcom3>0.5</lcom3>
		<loc>51</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.25</amc>
		<cc>
			<method name="public boolean hasNext()">2</method>
			<method name="public void remove()">1</method>
			<method name="public Object next()">2</method>
			<method name="public void _init_(Object contextNode, org.jaxen.Navigator navigator)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.ProcessingInstruction</name>
		<wmc>8</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>26</cbo>
		<rfc>8</rfc>
		<lcom>28</lcom>
		<ca>21</ca>
		<ce>5</ce>
		<npm>8</npm>
		<lcom3>2.0</lcom3>
		<loc>8</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5416666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract String getValue(String)">1</method>
			<method name="public abstract String getText()">1</method>
			<method name="public abstract void setValue(String, String)">1</method>
			<method name="public abstract String getTarget()">1</method>
			<method name="public abstract void setTarget(String)">1</method>
			<method name="public abstract void setValues(java.util.Map)">1</method>
			<method name="public abstract boolean removeValue(String)">1</method>
			<method name="public abstract java.util.Map getValues()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.ElementStack</name>
		<wmc>17</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>14</cbo>
		<rfc>29</rfc>
		<lcom>32</lcom>
		<ca>4</ca>
		<ce>10</ce>
		<npm>15</npm>
		<lcom3>0.5416666666666666</lcom3>
		<loc>213</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.2647058823529412</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.352941176470589</amc>
		<cc>
			<method name="public org.dom4j.Element peekElement()">2</method>
			<method name="public void pushElement(org.dom4j.Element element)">2</method>
			<method name="public int size()">1</method>
			<method name="public void _init_(int defaultCapacity)">1</method>
			<method name="public org.dom4j.Element getCurrent()">1</method>
			<method name="public void setDispatchHandler(org.dom4j.io.DispatchHandler dispatchHandler)">1</method>
			<method name="public void clear()">1</method>
			<method name="public org.dom4j.io.DispatchHandler getDispatchHandler()">1</method>
			<method name="public boolean containsHandler(String path)">1</method>
			<method name="public void addHandler(String path, org.dom4j.ElementHandler elementHandler)">1</method>
			<method name="protected void reallocate(int size)">1</method>
			<method name="public String getPath()">2</method>
			<method name="private String getHandlerPath(String path)">4</method>
			<method name="public org.dom4j.Element getElement(int depth)">1</method>
			<method name="public void removeHandler(String path)">1</method>
			<method name="public org.dom4j.Element popElement()">2</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.FlyweightProcessingInstruction</name>
		<wmc>9</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>10</cbo>
		<rfc>16</rfc>
		<lcom>16</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>8</npm>
		<lcom3>0.625</lcom3>
		<loc>79</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4166666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.444444444444445</amc>
		<cc>
			<method name="public String getTarget()">1</method>
			<method name="public void setTarget(String target)">1</method>
			<method name="public String getText()">1</method>
			<method name="protected org.dom4j.Node createXPathResult(org.dom4j.Element parent)">1</method>
			<method name="public String getValue(String name)">2</method>
			<method name="public java.util.Map getValues()">1</method>
			<method name="public void _init_(String target, String text)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(String target, java.util.Map values)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.BaseXPath</name>
		<wmc>27</wmc>
		<dit>1</dit>
		<noc>6</noc>
		<cbo>40</cbo>
		<rfc>61</rfc>
		<lcom>335</lcom>
		<ca>7</ca>
		<ce>33</ce>
		<npm>19</npm>
		<lcom3>0.8173076923076923</lcom3>
		<loc>343</loc>
		<dam>1.0</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.2037037037037037</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.555555555555555</amc>
		<cc>
			<method name="public boolean booleanValueOf(Object node)">1</method>
			<method name="public org.jaxen.FunctionContext getFunctionContext()">2</method>
			<method name="public String debug()">1</method>
			<method name="public Number numberValueOf(Object node)">1</method>
			<method name="protected org.jaxen.FunctionContext createFunctionContext()">1</method>
			<method name="public org.jaxen.VariableContext getVariableContext()">2</method>
			<method name="public String toString()">1</method>
			<method name="public void setFunctionContext(org.jaxen.FunctionContext functionContext)">1</method>
			<method name="public void _init_(String xpathExpr, org.jaxen.Navigator navigator)">1</method>
			<method name="protected org.jaxen.ContextSupport getContextSupport()">2</method>
			<method name="public String valueOf(Object node)">1</method>
			<method name="public Object selectSingleNode(Object node)">1</method>
			<method name="public Object evaluate(Object node)">1</method>
			<method name="public void setVariableContext(org.jaxen.VariableContext variableContext)">1</method>
			<method name="public void addNamespace(String prefix, String uri)">1</method>
			<method name="protected org.jaxen.VariableContext createVariableContext()">1</method>
			<method name="protected org.jaxen.NamespaceContext createNamespaceContext()">1</method>
			<method name="public java.util.List selectNodes(Object node)">1</method>
			<method name="public org.jaxen.expr.Expr getRootExpr()">1</method>
			<method name="protected org.jaxen.Context getContext(Object node)">3</method>
			<method name="public org.jaxen.NamespaceContext getNamespaceContext()">2</method>
			<method name="protected void _init_(String xpathExpr)">1</method>
			<method name="protected Object selectSingleNodeForContext(org.jaxen.Context context)">1</method>
			<method name="public org.jaxen.Navigator getNavigator()">1</method>
			<method name="public String stringValueOf(Object node)">1</method>
			<method name="public void setNamespaceContext(org.jaxen.NamespaceContext namespaceContext)">1</method>
			<method name="protected java.util.List selectNodesForContext(org.jaxen.Context context)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultMultiplyExpr</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>13</rfc>
		<lcom>6</lcom>
		<ca>1</ca>
		<ce>13</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>42</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.5</amc>
		<cc>
			<method name="public Object evaluate(org.jaxen.Context context)">1</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public String getOperator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.SAXEventRecorder</name>
		<wmc>23</wmc>
		<dit>2</dit>
		<noc>0</noc>
		<cbo>26</cbo>
		<rfc>80</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>26</ce>
		<npm>23</npm>
		<lcom3>0.8977272727272727</lcom3>
		<loc>864</loc>
		<dam>0.875</dam>
		<moa>0</moa>
		<mfa>0.4358974358974359</mfa>
		<cam>0.23369565217391305</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>36.21739130434783</amc>
		<cc>
			<method name="public void replay(org.xml.sax.ContentHandler handler)">1</method>
			<method name="public void externalEntityDecl(String name, String publicId, String sysId)">1</method>
			<method name="public void endDocument()">1</method>
			<method name="public void endEntity(String name)">1</method>
			<method name="public void comment(char[] ch, int start, int end)">1</method>
			<method name="public void startCDATA()">1</method>
			<method name="public void attributeDecl(String eName, String aName, String type, String valueDefault, String value)">1</method>
			<method name="public void internalEntityDecl(String name, String value)">1</method>
			<method name="public void readExternal(java.io.ObjectInput in)">1</method>
			<method name="public void endCDATA()">1</method>
			<method name="public void writeExternal(java.io.ObjectOutput out)">1</method>
			<method name="public void startDTD(String name, String publicId, String systemId)">1</method>
			<method name="public void processingInstruction(String target, String data)">1</method>
			<method name="public void endDTD()">1</method>
			<method name="public void startEntity(String name)">1</method>
			<method name="public void elementDecl(String name, String model)">1</method>
			<method name="public void endElement(String namespaceURI, String localName, String qName)">1</method>
			<method name="public void characters(char[] ch, int start, int end)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void startElement(String namespaceURI, String localName, String qualifiedName, org.xml.sax.Attributes attributes)">1</method>
			<method name="public void startPrefixMapping(String prefix, String uri)">1</method>
			<method name="public void startDocument()">1</method>
			<method name="public void endPrefixMapping(String prefix)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.HTMLWriter$FormatState</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>5</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>4</npm>
		<lcom3>0.75</lcom3>
		<loc>41</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.25</amc>
		<cc>
			<method name="public String getIndent()">1</method>
			<method name="public boolean isNewlines()">1</method>
			<method name="public void _init_(org.dom4j.io.HTMLWriter this$0, boolean newLines, boolean trimText, String indent)">1</method>
			<method name="public boolean isTrimText()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.ext.EndsWithFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>10</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>41</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.666666666666666</amc>
		<cc>
			<method name="public static Boolean evaluate(Object strArg, Object matchArg, org.jaxen.Navigator nav)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.AbstractText</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>10</cbo>
		<rfc>14</rfc>
		<lcom>15</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>6</npm>
		<lcom3>2.0</lcom3>
		<loc>38</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4444444444444444</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.333333333333333</amc>
		<cc>
			<method name="public void write(java.io.Writer writer)">1</method>
			<method name="public String toString()">1</method>
			<method name="public String asXML()">1</method>
			<method name="public short getNodeType()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void accept(org.dom4j.Visitor visitor)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.saxpath.SAXPathException</name>
		<wmc>6</wmc>
		<dit>3</dit>
		<noc>3</noc>
		<cbo>27</cbo>
		<rfc>14</rfc>
		<lcom>3</lcom>
		<ca>19</ca>
		<ce>8</ce>
		<npm>6</npm>
		<lcom3>0.2</lcom3>
		<loc>54</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.84</mfa>
		<cam>0.3333333333333333</cam>
		<ic>1</ic>
		<cbm>2</cbm>
		<amc>7.833333333333333</amc>
		<cc>
			<method name="public void printStackTrace(java.io.PrintStream s)">2</method>
			<method name="public void printStackTrace(java.io.PrintWriter s)">2</method>
			<method name="public void _init_(Throwable src)">1</method>
			<method name="public void _init_(String msg)">1</method>
			<method name="public Throwable getCause()">1</method>
			<method name="public void printStackTrace()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.NamespaceCache</name>
		<wmc>6</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>19</rfc>
		<lcom>11</lcom>
		<ca>1</ca>
		<ce>12</ce>
		<npm>3</npm>
		<lcom3>0.8666666666666666</lcom3>
		<loc>267</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.9</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>43.0</amc>
		<cc>
			<method name="protected java.util.Map getURICache(String uri)">3</method>
			<method name="public org.dom4j.Namespace get(String prefix, String uri)">5</method>
			<method name="public org.dom4j.Namespace get(String uri)">5</method>
			<method name="protected org.dom4j.Namespace createNamespace(String prefix, String uri)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.ElementNameIterator</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>5</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>24</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.5</amc>
		<cc>
			<method name="public void _init_(java.util.Iterator proxy, String name)">1</method>
			<method name="protected boolean matches(Object object)">2</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.DocumentHelper</name>
		<wmc>28</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>34</cbo>
		<rfc>74</rfc>
		<lcom>378</lcom>
		<ca>5</ca>
		<ce>29</ce>
		<npm>25</npm>
		<lcom3>2.0</lcom3>
		<loc>285</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.12337662337662338</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.178571428571429</amc>
		<cc>
			<method name="private static org.dom4j.DocumentFactory getDocumentFactory()">1</method>
			<method name="public static org.dom4j.XPath createXPath(String xpathExpression, org.jaxen.VariableContext context)">1</method>
			<method name="public static org.dom4j.Entity createEntity(String name, String text)">1</method>
			<method name="public static void sort(java.util.List list, String xpathExpression)">1</method>
			<method name="public static org.dom4j.Document parseText(String text)">1</method>
			<method name="public static org.dom4j.Attribute createAttribute(org.dom4j.Element owner, String name, String value)">1</method>
			<method name="public static org.dom4j.QName createQName(String localName)">1</method>
			<method name="private void _init_()">1</method>
			<method name="public static org.dom4j.Attribute createAttribute(org.dom4j.Element owner, org.dom4j.QName qname, String value)">1</method>
			<method name="public static org.dom4j.Comment createComment(String text)">1</method>
			<method name="public static org.dom4j.Element createElement(String name)">1</method>
			<method name="public static org.dom4j.ProcessingInstruction createProcessingInstruction(String pi, String d)">1</method>
			<method name="public static java.util.List selectNodes(String xpathFilterExpression, java.util.List nodes)">1</method>
			<method name="public static java.util.List selectNodes(String xpathFilterExpression, org.dom4j.Node node)">1</method>
			<method name="public static org.dom4j.Text createText(String text)">1</method>
			<method name="public static org.dom4j.ProcessingInstruction createProcessingInstruction(String pi, java.util.Map data)">1</method>
			<method name="public static org.dom4j.QName createQName(String localName, org.dom4j.Namespace namespace)">1</method>
			<method name="public static org.dom4j.NodeFilter createXPathFilter(String xpathFilterExpression)">1</method>
			<method name="public static org.dom4j.rule.Pattern createPattern(String xpathPattern)">1</method>
			<method name="public static void sort(java.util.List list, String expression, boolean distinct)">1</method>
			<method name="public static org.dom4j.Document createDocument(org.dom4j.Element rootElement)">1</method>
			<method name="public static org.dom4j.CDATA createCDATA(String text)">1</method>
			<method name="public static org.dom4j.XPath createXPath(String xpathExpression)">1</method>
			<method name="public static org.dom4j.Namespace createNamespace(String prefix, String uri)">1</method>
			<method name="private static String getEncoding(String text)">4</method>
			<method name="public static org.dom4j.Element makeElement(org.dom4j.Branch source, String path)">5</method>
			<method name="public static org.dom4j.Element createElement(org.dom4j.QName qname)">1</method>
			<method name="public static org.dom4j.Document createDocument()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.pattern.NamespaceTest</name>
		<wmc>7</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>22</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>8</ce>
		<npm>6</npm>
		<lcom3>0.4166666666666667</lcom3>
		<loc>124</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.37142857142857144</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>16.428571428571427</amc>
		<cc>
			<method name="public boolean matches(Object node, org.jaxen.Context context)">7</method>
			<method name="public String toString()">1</method>
			<method name="public String getText()">1</method>
			<method name="public short getMatchType()">1</method>
			<method name="public void _init_(String prefix, short nodeType)">2</method>
			<method name="protected String getURI(Object node, org.jaxen.Context context)">3</method>
			<method name="public double getPriority()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.QNameCache</name>
		<wmc>13</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>37</rfc>
		<lcom>48</lcom>
		<ca>2</ca>
		<ce>14</ce>
		<npm>8</npm>
		<lcom3>0.4444444444444444</lcom3>
		<loc>270</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4153846153846154</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>19.53846153846154</amc>
		<cc>
			<method name="public org.dom4j.QName get(String name, org.dom4j.Namespace namespace)">3</method>
			<method name="protected org.dom4j.QName createQName(String name, org.dom4j.Namespace namespace, String qualifiedName)">1</method>
			<method name="public void _init_(org.dom4j.DocumentFactory documentFactory)">1</method>
			<method name="public java.util.List getQNames()">2</method>
			<method name="protected org.dom4j.QName createQName(String name)">1</method>
			<method name="public org.dom4j.QName get(String localName, org.dom4j.Namespace namespace, String qName)">3</method>
			<method name="protected java.util.Map getNamespaceCache(org.dom4j.Namespace namespace)">4</method>
			<method name="protected java.util.Map createMap()">1</method>
			<method name="public org.dom4j.QName intern(org.dom4j.QName qname)">1</method>
			<method name="protected org.dom4j.QName createQName(String name, org.dom4j.Namespace namespace)">1</method>
			<method name="public org.dom4j.QName get(String qualifiedName, String uri)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public org.dom4j.QName get(String name)">3</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.iter.IterableNamespaceAxis</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>5</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>11</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.5</amc>
		<cc>
			<method name="public java.util.Iterator iterator(Object contextNode, org.jaxen.ContextSupport support)">1</method>
			<method name="public void _init_(int value)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.dom4j.DocumentNavigator</name>
		<wmc>38</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>33</cbo>
		<rfc>86</rfc>
		<lcom>701</lcom>
		<ca>3</ca>
		<ce>32</ce>
		<npm>37</npm>
		<lcom3>0.9459459459459459</lcom3>
		<loc>497</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.39473684210526316</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.052631578947368</amc>
		<cc>
			<method name="public java.util.Iterator getChildAxisIterator(Object contextNode)">3</method>
			<method name="public String getCommentStringValue(Object obj)">1</method>
			<method name="public String getAttributeNamespaceUri(Object obj)">2</method>
			<method name="public String getNamespaceStringValue(Object obj)">1</method>
			<method name="public String getElementNamespaceUri(Object obj)">2</method>
			<method name="public java.util.Iterator getAttributeAxisIterator(Object contextNode)">2</method>
			<method name="public org.dom4j.io.SAXReader getSAXReader()">2</method>
			<method name="public String getTextStringValue(Object obj)">1</method>
			<method name="public java.util.Iterator getParentAxisIterator(Object contextNode)">3</method>
			<method name="public boolean isElement(Object obj)">1</method>
			<method name="public String getProcessingInstructionData(Object obj)">1</method>
			<method name="public String getAttributeQName(Object obj)">1</method>
			<method name="public String getAttributeStringValue(Object obj)">1</method>
			<method name="public void setSAXReader(org.dom4j.io.SAXReader reader)">1</method>
			<method name="public boolean isProcessingInstruction(Object obj)">1</method>
			<method name="public java.util.Iterator getAttributeAxisIterator(Object contextNode, String localName, String namespacePrefix, String namespaceURI)">3</method>
			<method name="public String getElementStringValue(Object obj)">1</method>
			<method name="private String getNodeStringValue(org.dom4j.Node node)">1</method>
			<method name="public Object getParentNode(Object contextNode)">4</method>
			<method name="public short getNodeType(Object node)">2</method>
			<method name="public static org.jaxen.Navigator getInstance()">1</method>
			<method name="public boolean isNamespace(Object obj)">1</method>
			<method name="public Object getDocument(String uri)">1</method>
			<method name="public Object getDocumentNode(Object contextNode)">3</method>
			<method name="public String getElementQName(Object obj)">1</method>
			<method name="public String getNamespacePrefix(Object obj)">1</method>
			<method name="public String getProcessingInstructionTarget(Object obj)">1</method>
			<method name="public boolean isDocument(Object obj)">1</method>
			<method name="public boolean isAttribute(Object obj)">1</method>
			<method name="public boolean isText(Object obj)">3</method>
			<method name="public org.jaxen.XPath parseXPath(String xpath)">1</method>
			<method name="public boolean isComment(Object obj)">1</method>
			<method name="public String getAttributeName(Object obj)">1</method>
			<method name="public java.util.Iterator getNamespaceAxisIterator(Object contextNode)">5</method>
			<method name="public String translateNamespacePrefixToUri(String prefix, Object context)">5</method>
			<method name="public String getElementName(Object obj)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public java.util.Iterator getChildAxisIterator(Object contextNode, String localName, String namespacePrefix, String namespaceURI)">6</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.iter.IterablePrecedingSiblingAxis</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>5</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>11</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.5</amc>
		<cc>
			<method name="public java.util.Iterator iterator(Object contextNode, org.jaxen.ContextSupport support)">1</method>
			<method name="public void _init_(int value)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.ContentListFacade</name>
		<wmc>21</wmc>
		<dit>3</dit>
		<noc>0</noc>
		<cbo>15</cbo>
		<rfc>49</rfc>
		<lcom>0</lcom>
		<ca>5</ca>
		<ce>11</ce>
		<npm>19</npm>
		<lcom3>0.3</lcom3>
		<loc>250</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.6296296296296297</mfa>
		<cam>0.2789115646258503</cam>
		<ic>2</ic>
		<cbm>8</cbm>
		<amc>10.80952380952381</amc>
		<cc>
			<method name="protected java.util.List getBackingList()">1</method>
			<method name="public boolean removeAll(java.util.Collection c)">2</method>
			<method name="protected org.dom4j.Node asNode(Object object)">2</method>
			<method name="public boolean addAll(java.util.Collection collection)">3</method>
			<method name="public boolean add(Object object)">1</method>
			<method name="public int indexOf(Object o)">1</method>
			<method name="public int size()">1</method>
			<method name="public boolean addAll(int index, java.util.Collection collection)">3</method>
			<method name="public Object set(int index, Object object)">1</method>
			<method name="public void clear()">2</method>
			<method name="public boolean contains(Object o)">1</method>
			<method name="public void _init_(org.dom4j.tree.AbstractBranch branch, java.util.List branchContent)">1</method>
			<method name="public boolean remove(Object object)">1</method>
			<method name="public Object remove(int index)">2</method>
			<method name="public Object[] toArray()">1</method>
			<method name="public void add(int index, Object object)">1</method>
			<method name="public Object[] toArray(Object[] a)">1</method>
			<method name="public int lastIndexOf(Object o)">1</method>
			<method name="public Object get(int index)">1</method>
			<method name="public boolean isEmpty()">1</method>
			<method name="public boolean containsAll(java.util.Collection c)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.LocationPath</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>18</cbo>
		<rfc>4</rfc>
		<lcom>6</lcom>
		<ca>12</ca>
		<ce>6</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>4</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract String getText()">1</method>
			<method name="public abstract boolean isAbsolute()">1</method>
			<method name="public abstract java.util.List getSteps()">1</method>
			<method name="public abstract void addStep(org.jaxen.expr.Step)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultPlusExpr</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>13</rfc>
		<lcom>6</lcom>
		<ca>1</ca>
		<ce>13</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>42</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.5</amc>
		<cc>
			<method name="public Object evaluate(org.jaxen.Context context)">1</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public String getOperator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.PruningElementStack</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>18</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>9</ce>
		<npm>3</npm>
		<lcom3>0.33333333333333337</lcom3>
		<loc>143</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>22.333333333333332</amc>
		<cc>
			<method name="public void _init_(String[] path, org.dom4j.ElementHandler elementHandler, int defaultCapacity)">1</method>
			<method name="protected void pathMatches(org.dom4j.Element parent, org.dom4j.Element selectedNode)">1</method>
			<method name="public void _init_(String[] path, org.dom4j.ElementHandler elementHandler)">1</method>
			<method name="protected boolean validElement(org.dom4j.Element element, int index)">4</method>
			<method name="public org.dom4j.Element popElement()">7</method>
			<method name="private void checkPath()">2</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.DocumentInputSource</name>
		<wmc>6</wmc>
		<dit>2</dit>
		<noc>0</noc>
		<cbo>16</cbo>
		<rfc>17</rfc>
		<lcom>3</lcom>
		<ca>4</ca>
		<ce>13</ce>
		<npm>6</npm>
		<lcom3>0.4</lcom3>
		<loc>63</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.7142857142857143</mfa>
		<cam>0.5</cam>
		<ic>1</ic>
		<cbm>1</cbm>
		<amc>9.333333333333334</amc>
		<cc>
			<method name="public void setCharacterStream(java.io.Reader characterStream)">1</method>
			<method name="public void setDocument(org.dom4j.Document document)">1</method>
			<method name="public java.io.Reader getCharacterStream()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(org.dom4j.Document document)">1</method>
			<method name="public org.dom4j.Document getDocument()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.javabean.DocumentNavigator$Singleton</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>3</cbo>
		<rfc>5</rfc>
		<lcom>1</lcom>
		<ca>0</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>0.5</lcom3>
		<loc>14</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.3333333333333335</amc>
		<cc>
			<method name="private void _init_()">1</method>
			<method name="static org.jaxen.javabean.DocumentNavigator access$000()">1</method>
			<method name="static void _clinit_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.Navigator</name>
		<wmc>41</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>104</cbo>
		<rfc>41</rfc>
		<lcom>820</lcom>
		<ca>96</ca>
		<ce>9</ce>
		<npm>41</npm>
		<lcom3>2.0</lcom3>
		<loc>41</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6829268292682927</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract java.util.Iterator getAncestorOrSelfAxisIterator(Object)">1</method>
			<method name="public abstract String getAttributeQName(Object)">1</method>
			<method name="public abstract boolean isComment(Object)">1</method>
			<method name="public abstract org.jaxen.XPath parseXPath(String)">1</method>
			<method name="public abstract boolean isNamespace(Object)">1</method>
			<method name="public abstract java.util.Iterator getPrecedingAxisIterator(Object)">1</method>
			<method name="public abstract String getElementName(Object)">1</method>
			<method name="public abstract String translateNamespacePrefixToUri(String, Object)">1</method>
			<method name="public abstract java.util.Iterator getSelfAxisIterator(Object)">1</method>
			<method name="public abstract java.util.Iterator getChildAxisIterator(Object)">1</method>
			<method name="public abstract String getTextStringValue(Object)">1</method>
			<method name="public abstract java.util.Iterator getFollowingAxisIterator(Object)">1</method>
			<method name="public abstract String getElementStringValue(Object)">1</method>
			<method name="public abstract Object getParentNode(Object)">1</method>
			<method name="public abstract String getCommentStringValue(Object)">1</method>
			<method name="public abstract java.util.Iterator getDescendantOrSelfAxisIterator(Object)">1</method>
			<method name="public abstract String getProcessingInstructionData(Object)">1</method>
			<method name="public abstract Object getElementById(Object, String)">1</method>
			<method name="public abstract String getElementNamespaceUri(Object)">1</method>
			<method name="public abstract String getAttributeNamespaceUri(Object)">1</method>
			<method name="public abstract java.util.Iterator getAttributeAxisIterator(Object)">1</method>
			<method name="public abstract String getElementQName(Object)">1</method>
			<method name="public abstract java.util.Iterator getNamespaceAxisIterator(Object)">1</method>
			<method name="public abstract java.util.Iterator getAncestorAxisIterator(Object)">1</method>
			<method name="public abstract java.util.Iterator getDescendantAxisIterator(Object)">1</method>
			<method name="public abstract java.util.Iterator getParentAxisIterator(Object)">1</method>
			<method name="public abstract String getAttributeStringValue(Object)">1</method>
			<method name="public abstract String getNamespaceStringValue(Object)">1</method>
			<method name="public abstract Object getDocumentNode(Object)">1</method>
			<method name="public abstract boolean isElement(Object)">1</method>
			<method name="public abstract String getNamespacePrefix(Object)">1</method>
			<method name="public abstract java.util.Iterator getFollowingSiblingAxisIterator(Object)">1</method>
			<method name="public abstract String getAttributeName(Object)">1</method>
			<method name="public abstract boolean isDocument(Object)">1</method>
			<method name="public abstract short getNodeType(Object)">1</method>
			<method name="public abstract Object getDocument(String)">1</method>
			<method name="public abstract boolean isAttribute(Object)">1</method>
			<method name="public abstract String getProcessingInstructionTarget(Object)">1</method>
			<method name="public abstract boolean isText(Object)">1</method>
			<method name="public abstract boolean isProcessingInstruction(Object)">1</method>
			<method name="public abstract java.util.Iterator getPrecedingSiblingAxisIterator(Object)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultAndExpr</name>
		<wmc>5</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>17</rfc>
		<lcom>10</lcom>
		<ca>1</ca>
		<ce>13</ce>
		<npm>5</npm>
		<lcom3>2.0</lcom3>
		<loc>62</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.4</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public Object evaluate(org.jaxen.Context context)">1</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public String getOperator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultNumberExpr</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>13</rfc>
		<lcom>13</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>6</npm>
		<lcom3>0.2</lcom3>
		<loc>39</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.333333333333333</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public String getText()">1</method>
			<method name="public Object evaluate(org.jaxen.Context context)">1</method>
			<method name="public Number getNumber()">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public void _init_(Number number)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.pattern.LocationPathPattern</name>
		<wmc>15</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>17</cbo>
		<rfc>44</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>15</ce>
		<npm>15</npm>
		<lcom3>0.6428571428571429</lcom3>
		<loc>367</loc>
		<dam>1.0</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.21904761904761905</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>23.133333333333333</amc>
		<cc>
			<method name="public void setAncestorPattern(org.jaxen.pattern.Pattern ancestorPattern)">1</method>
			<method name="public boolean matches(Object node, org.jaxen.Context context)">1</method>
			<method name="public void _init_(org.jaxen.pattern.NodeTest nodeTest)">1</method>
			<method name="public boolean isAbsolute()">1</method>
			<method name="public double getPriority()">2</method>
			<method name="public void setNodeTest(org.jaxen.pattern.NodeTest nodeTest)">1</method>
			<method name="public boolean hasAnyNodeTest()">1</method>
			<method name="public String toString()">1</method>
			<method name="public String getText()">8</method>
			<method name="public org.jaxen.pattern.Pattern simplify()">9</method>
			<method name="public void setParentPattern(org.jaxen.pattern.Pattern parentPattern)">1</method>
			<method name="public short getMatchType()">1</method>
			<method name="public void addFilter(org.jaxen.expr.FilterExpr filter)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public void setAbsolute(boolean absolute)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.PrecedingAxisIterator</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>15</cbo>
		<rfc>24</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>14</ce>
		<npm>4</npm>
		<lcom3>0.44999999999999996</lcom3>
		<loc>156</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>29.2</amc>
		<cc>
			<method name="public boolean hasNext()">5</method>
			<method name="public void remove()">1</method>
			<method name="public Object next()">1</method>
			<method name="public void _init_(Object contextNode, org.jaxen.Navigator navigator)">1</method>
			<method name="private java.util.ListIterator childrenOrSelf(Object node)">3</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.NodeFilter</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>8</ca>
		<ce>3</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract boolean matches(org.dom4j.Node)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.DefaultNamespace</name>
		<wmc>9</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>6</cbo>
		<rfc>14</rfc>
		<lcom>16</lcom>
		<ca>2</ca>
		<ce>5</ce>
		<npm>8</npm>
		<lcom3>0.5</lcom3>
		<loc>68</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.3888888888888889</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.444444444444445</amc>
		<cc>
			<method name="public void setParent(org.dom4j.Element parent)">1</method>
			<method name="public boolean supportsParent()">1</method>
			<method name="protected int createHashCode()">2</method>
			<method name="public int hashCode()">1</method>
			<method name="public void _init_(String prefix, String uri)">1</method>
			<method name="public boolean isReadOnly()">1</method>
			<method name="public boolean equals(Object object)">3</method>
			<method name="public void _init_(org.dom4j.Element parent, String prefix, String uri)">1</method>
			<method name="public org.dom4j.Element getParent()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.saxpath.helpers.XPathReaderFactory</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>17</cbo>
		<rfc>20</rfc>
		<lcom>8</lcom>
		<ca>2</ca>
		<ce>15</ce>
		<npm>3</npm>
		<lcom3>0.95</lcom3>
		<loc>137</loc>
		<dam>0.4</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>25.4</amc>
		<cc>
			<method name="public static org.jaxen.saxpath.XPathReader createReader(String className)">1</method>
			<method name="static Class class$(String x0)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public static org.jaxen.saxpath.XPathReader createReader()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.DefaultComment</name>
		<wmc>7</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>7</cbo>
		<rfc>8</rfc>
		<lcom>15</lcom>
		<ca>3</ca>
		<ce>5</ce>
		<npm>7</npm>
		<lcom3>0.6666666666666666</lcom3>
		<loc>34</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5714285714285714</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.7142857142857144</amc>
		<cc>
			<method name="public void setParent(org.dom4j.Element parent)">1</method>
			<method name="public boolean supportsParent()">1</method>
			<method name="public void _init_(String text)">1</method>
			<method name="public void _init_(org.dom4j.Element parent, String text)">1</method>
			<method name="public boolean isReadOnly()">1</method>
			<method name="public void setText(String text)">1</method>
			<method name="public org.dom4j.Element getParent()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.STAXEventWriter</name>
		<wmc>35</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>48</cbo>
		<rfc>88</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>48</ce>
		<npm>33</npm>
		<lcom3>0.5098039215686274</lcom3>
		<loc>454</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.09428571428571429</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.885714285714286</amc>
		<cc>
			<method name="public void writeEntity(org.dom4j.Entity entity)">1</method>
			<method name="public javax.xml.stream.events.StartElement createStartElement(org.dom4j.Element elem)">1</method>
			<method name="public javax.xml.stream.events.Namespace createNamespace(org.dom4j.Namespace ns)">1</method>
			<method name="public javax.xml.stream.XMLEventFactory getEventFactory()">1</method>
			<method name="public void writeComment(org.dom4j.Comment comment)">1</method>
			<method name="public void writeNamespace(org.dom4j.Namespace ns)">1</method>
			<method name="public javax.xml.stream.events.Characters createCharacters(org.dom4j.CDATA cdata)">1</method>
			<method name="public javax.xml.namespace.QName createQName(org.dom4j.QName qname)">1</method>
			<method name="public javax.xml.stream.events.Attribute createAttribute(org.dom4j.Attribute attr)">1</method>
			<method name="public javax.xml.stream.events.EndElement createEndElement(org.dom4j.Element elem)">1</method>
			<method name="public javax.xml.stream.events.Characters createCharacters(org.dom4j.Text text)">1</method>
			<method name="public javax.xml.stream.events.Comment createComment(org.dom4j.Comment comment)">1</method>
			<method name="public javax.xml.stream.events.ProcessingInstruction createProcessingInstruction(org.dom4j.ProcessingInstruction pi)">1</method>
			<method name="public void _init_(java.io.File file)">1</method>
			<method name="public void writeElement(org.dom4j.Element elem)">1</method>
			<method name="public void writeCDATA(org.dom4j.CDATA cdata)">1</method>
			<method name="public void _init_(javax.xml.stream.util.XMLEventConsumer consumer)">1</method>
			<method name="public void writeChildNodes(org.dom4j.Branch branch)">1</method>
			<method name="public javax.xml.stream.events.StartDocument createStartDocument(org.dom4j.Document doc)">2</method>
			<method name="public void _init_(java.io.Writer writer)">1</method>
			<method name="public void writeNode(org.dom4j.Node n)">1</method>
			<method name="static javax.xml.stream.XMLEventFactory access$000(org.dom4j.io.STAXEventWriter x0)">1</method>
			<method name="private javax.xml.stream.events.EntityReference createEntityReference(org.dom4j.Entity entity)">1</method>
			<method name="public javax.xml.stream.events.EndDocument createEndDocument(org.dom4j.Document doc)">1</method>
			<method name="public void writeAttribute(org.dom4j.Attribute attr)">1</method>
			<method name="public void writeDocumentType(org.dom4j.DocumentType docType)">1</method>
			<method name="public void setEventFactory(javax.xml.stream.XMLEventFactory eventFactory)">1</method>
			<method name="public void writeDocument(org.dom4j.Document doc)">1</method>
			<method name="public void writeText(org.dom4j.Text text)">1</method>
			<method name="public javax.xml.stream.util.XMLEventConsumer getConsumer()">1</method>
			<method name="public void setConsumer(javax.xml.stream.util.XMLEventConsumer consumer)">1</method>
			<method name="public void writeProcessingInstruction(org.dom4j.ProcessingInstruction pi)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public javax.xml.stream.events.DTD createDTD(org.dom4j.DocumentType docType)">1</method>
			<method name="public void _init_(java.io.OutputStream stream)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.xslt.DocumentFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>10</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>32</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.666666666666666</amc>
		<cc>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
			<method name="public static Object evaluate(String url, org.jaxen.Navigator nav)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.Predicate</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>21</cbo>
		<rfc>5</rfc>
		<lcom>10</lcom>
		<ca>13</ca>
		<ce>8</ce>
		<npm>5</npm>
		<lcom3>2.0</lcom3>
		<loc>5</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract org.jaxen.expr.Expr getExpr()">1</method>
			<method name="public abstract String getText()">1</method>
			<method name="public abstract void simplify()">1</method>
			<method name="public abstract Object evaluate(org.jaxen.Context)">1</method>
			<method name="public abstract void setExpr(org.jaxen.expr.Expr)">1</method>
		</cc>
	</class>
	<class>
		<name>com.adobe.ac.ant.tasks.SWFLauncher</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>4</ca>
		<ce>4</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void launch(String)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.SAXContentHandler</name>
		<wmc>55</wmc>
		<dit>2</dit>
		<noc>1</noc>
		<cbo>43</cbo>
		<rfc>120</rfc>
		<lcom>1123</lcom>
		<ca>4</ca>
		<ce>39</ce>
		<npm>46</npm>
		<lcom3>0.9005486968449932</lcom3>
		<loc>976</loc>
		<dam>1.0</dam>
		<moa>6</moa>
		<mfa>0.25</mfa>
		<cam>0.11878787878787879</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>16.254545454545454</amc>
		<cc>
			<method name="public void attributeDecl(String eName, String aName, String type, String valueDefault, String val)">1</method>
			<method name="public void externalEntityDecl(String name, String publicId, String sysId)">1</method>
			<method name="public void endDocument()">1</method>
			<method name="public void setEntityResolver(org.xml.sax.EntityResolver entityResolver)">1</method>
			<method name="public boolean isIncludeExternalDTDDeclarations()">1</method>
			<method name="public void comment(char[] ch, int start, int end)">1</method>
			<method name="public boolean isIgnoreComments()">1</method>
			<method name="protected org.dom4j.io.ElementStack createElementStack()">1</method>
			<method name="public void endDTD()">1</method>
			<method name="public void notationDecl(String name, String publicId, String systemId)">1</method>
			<method name="public void setElementStack(org.dom4j.io.ElementStack elementStack)">1</method>
			<method name="protected void addDeclaredNamespaces(org.dom4j.Element element)">2</method>
			<method name="public void characters(char[] ch, int start, int end)">1</method>
			<method name="public void unparsedEntityDecl(String name, String publicId, String systemId, String notationName)">1</method>
			<method name="public void startElement(String namespaceURI, String localName, String qualifiedName, org.xml.sax.Attributes attributes)">1</method>
			<method name="public void startPrefixMapping(String prefix, String uri)">1</method>
			<method name="public void startDocument()">1</method>
			<method name="public void endPrefixMapping(String prefix)">1</method>
			<method name="public void _init_(org.dom4j.DocumentFactory documentFactory)">1</method>
			<method name="public void endEntity(String name)">1</method>
			<method name="public void setStripWhitespaceText(boolean stripWhitespaceText)">1</method>
			<method name="public void setIncludeExternalDTDDeclarations(boolean include)">1</method>
			<method name="public boolean isStripWhitespaceText()">1</method>
			<method name="public org.xml.sax.EntityResolver getEntityResolver()">1</method>
			<method name="public void endCDATA()">1</method>
			<method name="public void setIncludeInternalDTDDeclarations(boolean include)">1</method>
			<method name="public void endElement(String namespaceURI, String localName, String qName)">1</method>
			<method name="public void error(org.xml.sax.SAXParseException exception)">1</method>
			<method name="public org.dom4j.io.ElementStack getElementStack()">1</method>
			<method name="protected void addAttributes(org.dom4j.Element element, org.xml.sax.Attributes attributes)">5</method>
			<method name="protected void addExternalDTDDeclaration(Object declaration)">2</method>
			<method name="public void setMergeAdjacentText(boolean mergeAdjacentText)">1</method>
			<method name="public void startCDATA()">1</method>
			<method name="public void internalEntityDecl(String name, String value)">1</method>
			<method name="public void _init_(org.dom4j.DocumentFactory documentFactory, org.dom4j.ElementHandler elementHandler)">1</method>
			<method name="public org.dom4j.Document getDocument()">2</method>
			<method name="public void startDTD(String name, String publicId, String systemId)">1</method>
			<method name="public void processingInstruction(String target, String data)">1</method>
			<method name="public void startEntity(String name)">1</method>
			<method name="private String getEncoding()">2</method>
			<method name="protected void addDTDDeclaration(Object declaration)">2</method>
			<method name="public boolean isMergeAdjacentText()">1</method>
			<method name="public void setIgnoreComments(boolean ignoreComments)">1</method>
			<method name="public boolean isIncludeInternalDTDDeclarations()">1</method>
			<method name="protected boolean isIgnorableEntity(String name)">6</method>
			<method name="protected org.dom4j.Document createDocument()">2</method>
			<method name="public void setDocumentLocator(org.xml.sax.Locator documentLocator)">1</method>
			<method name="public org.xml.sax.InputSource getInputSource()">1</method>
			<method name="protected void completeCurrentTextNode()">4</method>
			<method name="public void fatalError(org.xml.sax.SAXParseException exception)">1</method>
			<method name="public void _init_(org.dom4j.DocumentFactory documentFactory, org.dom4j.ElementHandler elementHandler, org.dom4j.io.ElementStack elementStack)">1</method>
			<method name="public void elementDecl(String name, String model)">1</method>
			<method name="public void warning(org.xml.sax.SAXParseException exception)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void setInputSource(org.xml.sax.InputSource inputSource)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.CountFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>8</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>43</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4166666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.333333333333334</amc>
		<cc>
			<method name="public void _init_()">1</method>
			<method name="public static Number evaluate(Object obj)">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.PathExpr</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>3</rfc>
		<lcom>3</lcom>
		<ca>7</ca>
		<ce>4</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>3</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract org.jaxen.expr.Expr getFilterExpr()">1</method>
			<method name="public abstract org.jaxen.expr.LocationPath getLocationPath()">1</method>
			<method name="public abstract void setFilterExpr(org.jaxen.expr.Expr)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.QName</name>
		<wmc>23</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>66</cbo>
		<rfc>52</rfc>
		<lcom>197</lcom>
		<ca>51</ca>
		<ce>17</ce>
		<npm>18</npm>
		<lcom3>0.8246753246753247</lcom3>
		<loc>356</loc>
		<dam>0.8571428571428571</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.2077922077922078</cam>
		<ic>1</ic>
		<cbm>1</cbm>
		<amc>14.173913043478262</amc>
		<cc>
			<method name="public org.dom4j.DocumentFactory getDocumentFactory()">1</method>
			<method name="public void _init_(String name, org.dom4j.Namespace namespace, String qualifiedName)">3</method>
			<method name="public org.dom4j.Namespace getNamespace()">1</method>
			<method name="public String getNamespaceURI()">2</method>
			<method name="public void _init_(String name)">1</method>
			<method name="public void _init_(String name, org.dom4j.Namespace namespace)">3</method>
			<method name="public static org.dom4j.QName get(String name, String prefix, String uri)">7</method>
			<method name="public String getName()">1</method>
			<method name="public String getNamespacePrefix()">2</method>
			<method name="public boolean equals(Object object)">6</method>
			<method name="public static org.dom4j.QName get(String qualifiedName, String uri)">2</method>
			<method name="static Class class$(String x0)">1</method>
			<method name="public String toString()">1</method>
			<method name="public static org.dom4j.QName get(String name, org.dom4j.Namespace namespace)">1</method>
			<method name="public static org.dom4j.QName get(String localName, org.dom4j.Namespace namespace, String qualifiedName)">1</method>
			<method name="public int hashCode()">3</method>
			<method name="private void writeObject(java.io.ObjectOutputStream out)">1</method>
			<method name="public String getQualifiedName()">4</method>
			<method name="public void setDocumentFactory(org.dom4j.DocumentFactory documentFactory)">1</method>
			<method name="public static org.dom4j.QName get(String name)">1</method>
			<method name="private void readObject(java.io.ObjectInputStream in)">1</method>
			<method name="static void _clinit_()">2</method>
			<method name="private static org.dom4j.tree.QNameCache getCache()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.pattern.PatternParser</name>
		<wmc>8</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>42</cbo>
		<rfc>62</rfc>
		<lcom>28</lcom>
		<ca>1</ca>
		<ce>41</ce>
		<npm>2</npm>
		<lcom3>1.0476190476190477</lcom3>
		<loc>367</loc>
		<dam>0.6666666666666666</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.17857142857142858</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>44.5</amc>
		<cc>
			<method name="static Class class$(String x0)">1</method>
			<method name="protected static org.jaxen.pattern.LocationPathPattern convertExpr(org.jaxen.expr.LocationPath locationPath)">1</method>
			<method name="protected static org.jaxen.pattern.Pattern convertExpr(org.jaxen.expr.Expr expr)">1</method>
			<method name="public static org.jaxen.pattern.Pattern parse(String text)">1</method>
			<method name="protected static org.jaxen.pattern.LocationPathPattern convertDefaultStep(org.jaxen.pattern.LocationPathPattern path, org.jaxen.expr.DefaultStep step)">1</method>
			<method name="public void _init_()">1</method>
			<method name="protected static org.jaxen.pattern.LocationPathPattern convertStep(org.jaxen.pattern.LocationPathPattern path, org.jaxen.expr.Step step)">1</method>
			<method name="protected static boolean navigationStep(org.jaxen.expr.Step step)">5</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.DefaultElement</name>
		<wmc>50</wmc>
		<dit>0</dit>
		<noc>5</noc>
		<cbo>28</cbo>
		<rfc>115</rfc>
		<lcom>501</lcom>
		<ca>6</ca>
		<ce>23</ce>
		<npm>42</npm>
		<lcom3>0.7673469387755102</lcom3>
		<loc>1571</loc>
		<dam>1.0</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.16938775510204082</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>30.32</amc>
		<cc>
			<method name="protected org.dom4j.DocumentFactory getDocumentFactory()">2</method>
			<method name="public void _init_(org.dom4j.QName qname)">1</method>
			<method name="public org.dom4j.Namespace getNamespaceForURI(String uri)">10</method>
			<method name="public void setAttributes(java.util.List attributes)">2</method>
			<method name="protected void setAttributeList(java.util.List attributeList)">1</method>
			<method name="public void add(org.dom4j.Attribute attribute)">4</method>
			<method name="public org.dom4j.ProcessingInstruction processingInstruction(String target)">6</method>
			<method name="public void _init_(org.dom4j.QName qname, int attributeCount)">2</method>
			<method name="public void setDocument(org.dom4j.Document document)">3</method>
			<method name="public org.dom4j.Element element(org.dom4j.QName qName)">6</method>
			<method name="public org.dom4j.Attribute attribute(String name)">5</method>
			<method name="public org.dom4j.Attribute attribute(int index)">4</method>
			<method name="public java.util.List additionalNamespaces(String defaultNamespaceURI)">7</method>
			<method name="public int indexOf(org.dom4j.Node node)">4</method>
			<method name="public boolean supportsParent()">1</method>
			<method name="protected void addNewNode(org.dom4j.Node node)">3</method>
			<method name="public java.util.List additionalNamespaces()">7</method>
			<method name="public java.util.List processingInstructions()">5</method>
			<method name="public java.util.List declaredNamespaces()">4</method>
			<method name="public void setContent(java.util.List content)">8</method>
			<method name="public void clearContent()">2</method>
			<method name="public String getText()">3</method>
			<method name="protected boolean removeNode(org.dom4j.Node node)">5</method>
			<method name="static void _clinit_()">1</method>
			<method name="public boolean removeProcessingInstruction(String target)">4</method>
			<method name="public org.dom4j.Attribute attribute(String name, org.dom4j.Namespace namespace)">1</method>
			<method name="public void setQName(org.dom4j.QName name)">1</method>
			<method name="public org.dom4j.Element element(String name, org.dom4j.Namespace namespace)">1</method>
			<method name="public org.dom4j.Element getParent()">2</method>
			<method name="public java.util.Iterator nodeIterator()">3</method>
			<method name="public java.util.Iterator attributeIterator()">3</method>
			<method name="protected java.util.List attributeList()">3</method>
			<method name="protected java.util.List contentList()">3</method>
			<method name="public void _init_(String name)">1</method>
			<method name="public void _init_(String name, org.dom4j.Namespace namespace)">1</method>
			<method name="public Object clone()">2</method>
			<method name="public int attributeCount()">3</method>
			<method name="public org.dom4j.Document getDocument()">3</method>
			<method name="public java.util.List attributes()">1</method>
			<method name="public String getStringValue()">6</method>
			<method name="public org.dom4j.Attribute attribute(org.dom4j.QName qName)">5</method>
			<method name="public int nodeCount()">3</method>
			<method name="public org.dom4j.QName getQName()">1</method>
			<method name="protected java.util.List attributeList(int size)">3</method>
			<method name="public org.dom4j.Element element(String name)">6</method>
			<method name="public java.util.List processingInstructions(String target)">7</method>
			<method name="public org.dom4j.Namespace getNamespaceForPrefix(String prefix)">13</method>
			<method name="public void setParent(org.dom4j.Element parent)">3</method>
			<method name="public org.dom4j.Node node(int index)">7</method>
			<method name="public boolean remove(org.dom4j.Attribute attribute)">6</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.iter.IterableDescendantAxis</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>5</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>11</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.5</amc>
		<cc>
			<method name="public java.util.Iterator iterator(Object contextNode, org.jaxen.ContextSupport support)">1</method>
			<method name="public void _init_(int value)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.Node</name>
		<wmc>33</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>80</cbo>
		<rfc>33</rfc>
		<lcom>528</lcom>
		<ca>69</ca>
		<ce>13</ce>
		<npm>33</npm>
		<lcom3>1.03125</lcom3>
		<loc>46</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.22510822510822512</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract boolean matches(String)">1</method>
			<method name="public abstract String getPath(org.dom4j.Element)">1</method>
			<method name="public abstract java.util.List selectNodes(String, String)">1</method>
			<method name="public abstract short getNodeType()">1</method>
			<method name="public abstract org.dom4j.Node selectSingleNode(String)">1</method>
			<method name="public abstract org.dom4j.XPath createXPath(String)">1</method>
			<method name="public abstract String getName()">1</method>
			<method name="public abstract String getStringValue()">1</method>
			<method name="public abstract String asXML()">1</method>
			<method name="public abstract String getUniquePath(org.dom4j.Element)">1</method>
			<method name="public abstract void accept(org.dom4j.Visitor)">1</method>
			<method name="public abstract void write(java.io.Writer)">1</method>
			<method name="public abstract void setDocument(org.dom4j.Document)">1</method>
			<method name="public abstract org.dom4j.Document getDocument()">1</method>
			<method name="public abstract void setName(String)">1</method>
			<method name="public abstract java.util.List selectNodes(String)">1</method>
			<method name="public abstract String getNodeTypeName()">1</method>
			<method name="public abstract org.dom4j.Node asXPathResult(org.dom4j.Element)">1</method>
			<method name="public abstract void setText(String)">1</method>
			<method name="public abstract org.dom4j.Node detach()">1</method>
			<method name="public abstract String valueOf(String)">1</method>
			<method name="public abstract Object clone()">1</method>
			<method name="public abstract java.util.List selectNodes(String, String, boolean)">1</method>
			<method name="public abstract org.dom4j.Element getParent()">1</method>
			<method name="public abstract boolean hasContent()">1</method>
			<method name="public abstract boolean isReadOnly()">1</method>
			<method name="public abstract boolean supportsParent()">1</method>
			<method name="public abstract String getText()">1</method>
			<method name="public abstract String getUniquePath()">1</method>
			<method name="public abstract String getPath()">1</method>
			<method name="public abstract Object selectObject(String)">1</method>
			<method name="public abstract Number numberValueOf(String)">1</method>
			<method name="public abstract void setParent(org.dom4j.Element)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.dtd.ExternalEntityDecl</name>
		<wmc>9</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>15</rfc>
		<lcom>4</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>9</npm>
		<lcom3>0.625</lcom3>
		<loc>131</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.7222222222222222</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.222222222222221</amc>
		<cc>
			<method name="public String getSystemID()">1</method>
			<method name="public String toString()">5</method>
			<method name="public void setName(String name)">1</method>
			<method name="public void setPublicID(String publicID)">1</method>
			<method name="public void setSystemID(String systemID)">1</method>
			<method name="public void _init_(String name, String publicID, String systemID)">1</method>
			<method name="public String getName()">1</method>
			<method name="public String getPublicID()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.SubstringBeforeFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>11</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>46</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.333333333333334</amc>
		<cc>
			<method name="public static String evaluate(Object strArg, Object matchArg, org.jaxen.Navigator nav)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.DefaultCDATA</name>
		<wmc>7</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>7</cbo>
		<rfc>8</rfc>
		<lcom>15</lcom>
		<ca>3</ca>
		<ce>5</ce>
		<npm>7</npm>
		<lcom3>0.6666666666666666</lcom3>
		<loc>34</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5714285714285714</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.7142857142857144</amc>
		<cc>
			<method name="public void setParent(org.dom4j.Element parent)">1</method>
			<method name="public boolean supportsParent()">1</method>
			<method name="public void _init_(String text)">1</method>
			<method name="public void _init_(org.dom4j.Element parent, String text)">1</method>
			<method name="public boolean isReadOnly()">1</method>
			<method name="public void setText(String text)">1</method>
			<method name="public org.dom4j.Element getParent()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.SAXReader$SAXEntityResolver</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>9</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>36</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>16.5</amc>
		<cc>
			<method name="public void _init_(String uriPrefix)">1</method>
			<method name="public org.xml.sax.InputSource resolveEntity(String publicId, String systemId)">5</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.XPath2XMLVisitor</name>
		<wmc>25</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>33</cbo>
		<rfc>79</rfc>
		<lcom>204</lcom>
		<ca>0</ca>
		<ce>33</ce>
		<npm>22</npm>
		<lcom3>0.08333333333333333</lcom3>
		<loc>613</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.0784</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>23.44</amc>
		<cc>
			<method name="public void visit(org.jaxen.expr.UnionExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.VariableReferenceExpr expr)">1</method>
			<method name="public void _init_(java.io.PrintWriter printer)">1</method>
			<method name="public void visit(org.jaxen.expr.AdditiveExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.UnaryExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.NameStep step)">2</method>
			<method name="public void visit(org.jaxen.expr.ProcessingInstructionNodeStep step)">1</method>
			<method name="public void visit(org.jaxen.expr.FilterExpr expr)">3</method>
			<method name="public void visit(org.jaxen.expr.EqualityExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.MultiplicativeExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.LocationPath expr)">2</method>
			<method name="protected void printLn(String str)">2</method>
			<method name="public void visit(org.jaxen.expr.LiteralExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.PathExpr expr)">3</method>
			<method name="public void visit(org.jaxen.expr.TextNodeStep step)">1</method>
			<method name="public void visit(org.jaxen.expr.NumberExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.RelationalExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.FunctionCallExpr expr)">2</method>
			<method name="public void visit(org.jaxen.expr.CommentNodeStep step)">1</method>
			<method name="protected void handlePredicates(java.util.List predicates)">3</method>
			<method name="void printLhsRhs(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="public void visit(org.jaxen.expr.AllNodeStep step)">1</method>
			<method name="public void visit(org.jaxen.expr.LogicalExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.Predicate predicate)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.xom.DocumentNavigator$2</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>4</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>1.0</lcom3>
		<loc>17</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.875</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.0</amc>
		<cc>
			<method name="public Object get(Object o, int i)">1</method>
			<method name="void _init_(org.jaxen.xom.DocumentNavigator this$0, Object x0, int x1, int x2)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.AbstractAttribute</name>
		<wmc>20</wmc>
		<dit>0</dit>
		<noc>3</noc>
		<cbo>18</cbo>
		<rfc>40</rfc>
		<lcom>190</lcom>
		<ca>3</ca>
		<ce>15</ce>
		<npm>19</npm>
		<lcom3>2.0</lcom3>
		<loc>253</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.20714285714285716</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.65</amc>
		<cc>
			<method name="public void write(java.io.Writer writer)">1</method>
			<method name="public String asXML()">1</method>
			<method name="public org.dom4j.Namespace getNamespace()">1</method>
			<method name="public String getNamespaceURI()">1</method>
			<method name="public void setValue(String value)">1</method>
			<method name="public String getName()">1</method>
			<method name="public short getNodeType()">1</method>
			<method name="public void setNamespace(org.dom4j.Namespace namespace)">1</method>
			<method name="public String getNamespacePrefix()">1</method>
			<method name="public void setData(Object data)">2</method>
			<method name="public void accept(org.dom4j.Visitor visitor)">1</method>
			<method name="public String getUniquePath(org.dom4j.Element context)">7</method>
			<method name="public String toString()">1</method>
			<method name="public String getText()">1</method>
			<method name="protected org.dom4j.Node createXPathResult(org.dom4j.Element parent)">1</method>
			<method name="public String getQualifiedName()">1</method>
			<method name="public Object getData()">1</method>
			<method name="public void setText(String text)">1</method>
			<method name="public String getPath(org.dom4j.Element context)">7</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.xom.DocumentNavigator$1</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>4</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>1.0</lcom3>
		<loc>17</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.875</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.0</amc>
		<cc>
			<method name="public Object get(Object o, int i)">1</method>
			<method name="void _init_(org.jaxen.xom.DocumentNavigator this$0, Object x0, int x1, int x2)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.saxpath.helpers.DefaultXPathHandler</name>
		<wmc>45</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>46</rfc>
		<lcom>990</lcom>
		<ca>0</ca>
		<ce>5</ce>
		<npm>45</npm>
		<lcom3>2.0</lcom3>
		<loc>92</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.28888888888888886</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>1.0444444444444445</amc>
		<cc>
			<method name="public void startTextNodeStep(int axis)">1</method>
			<method name="public void endOrExpr(boolean create)">1</method>
			<method name="public void startAbsoluteLocationPath()">1</method>
			<method name="public void endRelativeLocationPath()">1</method>
			<method name="public void startAllNodeStep(int axis)">1</method>
			<method name="public void endTextNodeStep()">1</method>
			<method name="public void endProcessingInstructionNodeStep()">1</method>
			<method name="public void startPredicate()">1</method>
			<method name="public void endAdditiveExpr(int operator)">1</method>
			<method name="public void startXPath()">1</method>
			<method name="public void startCommentNodeStep(int axis)">1</method>
			<method name="public void endFilterExpr()">1</method>
			<method name="public void endUnaryExpr(int operator)">1</method>
			<method name="public void startUnaryExpr()">1</method>
			<method name="public void startAndExpr()">1</method>
			<method name="public void endUnionExpr(boolean create)">1</method>
			<method name="public void startOrExpr()">1</method>
			<method name="public void startNameStep(int axis, String prefix, String localName)">1</method>
			<method name="public void number(double number)">1</method>
			<method name="public void startRelationalExpr()">1</method>
			<method name="public void startUnionExpr()">1</method>
			<method name="public void endAndExpr(boolean create)">1</method>
			<method name="public void endEqualityExpr(int operator)">1</method>
			<method name="public void endPathExpr()">1</method>
			<method name="public void startMultiplicativeExpr()">1</method>
			<method name="public void endNameStep()">1</method>
			<method name="public void literal(String literal)">1</method>
			<method name="public void endAbsoluteLocationPath()">1</method>
			<method name="public void startFunction(String prefix, String functionName)">1</method>
			<method name="public void endCommentNodeStep()">1</method>
			<method name="public void endFunction()">1</method>
			<method name="public void number(int number)">1</method>
			<method name="public void endXPath()">1</method>
			<method name="public void startEqualityExpr()">1</method>
			<method name="public void startAdditiveExpr()">1</method>
			<method name="public void startRelativeLocationPath()">1</method>
			<method name="public void startProcessingInstructionNodeStep(int axis, String name)">1</method>
			<method name="public void startFilterExpr()">1</method>
			<method name="public void variableReference(String prefix, String variableName)">1</method>
			<method name="public void endPredicate()">1</method>
			<method name="public void endRelationalExpr(int operator)">1</method>
			<method name="public void endMultiplicativeExpr(int operator)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void startPathExpr()">1</method>
			<method name="public void endAllNodeStep()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultPredicated</name>
		<wmc>6</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>18</rfc>
		<lcom>13</lcom>
		<ca>0</ca>
		<ce>8</ce>
		<npm>5</npm>
		<lcom3>0.0</lcom3>
		<loc>91</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5833333333333334</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.0</amc>
		<cc>
			<method name="protected void _init_()">1</method>
			<method name="public String toString()">3</method>
			<method name="public void addPredicate(org.jaxen.expr.Predicate predicate)">1</method>
			<method name="public String getText()">2</method>
			<method name="public void simplifyAllPredicates()">2</method>
			<method name="public java.util.List getPredicates()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.dom.DOMElement</name>
		<wmc>51</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>25</cbo>
		<rfc>117</rfc>
		<lcom>1269</lcom>
		<ca>3</ca>
		<ce>24</ce>
		<npm>44</npm>
		<lcom3>0.88</lcom3>
		<loc>558</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.2125</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.92156862745098</amc>
		<cc>
			<method name="public boolean isSupported(String feature, String version)">1</method>
			<method name="protected org.dom4j.DocumentFactory getDocumentFactory()">2</method>
			<method name="public void _init_(org.dom4j.QName qname)">1</method>
			<method name="public org.w3c.dom.Node getFirstChild()">1</method>
			<method name="public org.w3c.dom.Attr setAttributeNode(org.w3c.dom.Attr newAttr)">1</method>
			<method name="public String getNodeName()">1</method>
			<method name="public org.w3c.dom.NodeList getElementsByTagNameNS(String namespace, String lName)">1</method>
			<method name="public org.w3c.dom.NamedNodeMap getAttributes()">1</method>
			<method name="public String getTagName()">1</method>
			<method name="public org.w3c.dom.NodeList getChildNodes()">1</method>
			<method name="public org.w3c.dom.Node getNextSibling()">1</method>
			<method name="public org.w3c.dom.Attr getAttributeNode(String name)">1</method>
			<method name="public org.w3c.dom.Attr removeAttributeNode(org.w3c.dom.Attr oldAttr)">1</method>
			<method name="public String getNodeValue()">1</method>
			<method name="public void setAttribute(String name, String value)">1</method>
			<method name="public boolean supports(String feature, String version)">1</method>
			<method name="public void _init_(org.dom4j.QName qname, int attributeCount)">1</method>
			<method name="public org.w3c.dom.Document getOwnerDocument()">1</method>
			<method name="protected org.dom4j.Attribute attribute(org.w3c.dom.Attr attr)">1</method>
			<method name="public String getAttributeNS(String namespaceURI, String localName)">3</method>
			<method name="public String getNamespaceURI()">1</method>
			<method name="public void removeAttributeNS(String namespaceURI, String localName)">1</method>
			<method name="public org.w3c.dom.NodeList getElementsByTagName(String name)">1</method>
			<method name="public org.w3c.dom.Node replaceChild(org.w3c.dom.Node newChild, org.w3c.dom.Node oldChild)">1</method>
			<method name="public org.w3c.dom.Node appendChild(org.w3c.dom.Node newChild)">1</method>
			<method name="public org.w3c.dom.Node removeChild(org.w3c.dom.Node oldChild)">1</method>
			<method name="public String getLocalName()">1</method>
			<method name="public org.w3c.dom.Node cloneNode(boolean deep)">1</method>
			<method name="public void setNodeValue(String nodeValue)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public org.w3c.dom.Node getLastChild()">1</method>
			<method name="public String getAttribute(String name)">2</method>
			<method name="public void _init_(String name)">1</method>
			<method name="public void _init_(String name, org.dom4j.Namespace namespace)">1</method>
			<method name="public void setPrefix(String prefix)">1</method>
			<method name="protected org.dom4j.Attribute attribute(String namespaceURI, String localName)">9</method>
			<method name="public org.w3c.dom.Attr getAttributeNodeNS(String namespaceURI, String localName)">2</method>
			<method name="public org.w3c.dom.Attr setAttributeNodeNS(org.w3c.dom.Attr newAttr)">1</method>
			<method name="public org.w3c.dom.Node insertBefore(org.w3c.dom.Node newChild, org.w3c.dom.Node refChild)">1</method>
			<method name="public boolean hasAttribute(String name)">2</method>
			<method name="public boolean hasAttributes()">1</method>
			<method name="protected org.dom4j.Attribute createAttribute(org.w3c.dom.Attr newAttr)">2</method>
			<method name="public String getPrefix()">1</method>
			<method name="public org.w3c.dom.Node getParentNode()">1</method>
			<method name="protected org.dom4j.QName getQName(String namespace, String qualifiedName)">2</method>
			<method name="private void checkNewChildNode(org.w3c.dom.Node newChild)">1</method>
			<method name="public boolean hasChildNodes()">2</method>
			<method name="public org.w3c.dom.Node getPreviousSibling()">1</method>
			<method name="public void removeAttribute(String name)">1</method>
			<method name="public boolean hasAttributeNS(String namespaceURI, String localName)">2</method>
			<method name="public void setAttributeNS(String namespaceURI, String qualifiedName, String value)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.util.UserDataElement</name>
		<wmc>9</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>21</rfc>
		<lcom>16</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>6</npm>
		<lcom3>0.25</lcom3>
		<loc>76</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3888888888888889</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.333333333333333</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="protected org.dom4j.Element createElement(String name)">1</method>
			<method name="public void _init_(String name)">1</method>
			<method name="public void _init_(org.dom4j.QName qname)">1</method>
			<method name="public Object getData()">1</method>
			<method name="public Object clone()">2</method>
			<method name="protected Object getCopyOfUserData()">1</method>
			<method name="public void setData(Object data)">1</method>
			<method name="protected org.dom4j.Element createElement(org.dom4j.QName qName)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultPredicate</name>
		<wmc>8</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>17</rfc>
		<lcom>26</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>8</npm>
		<lcom3>0.14285714285714285</lcom3>
		<loc>62</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.625</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void setExpr(org.jaxen.expr.Expr expr)">1</method>
			<method name="public String getText()">1</method>
			<method name="public Object evaluate(org.jaxen.Context context)">1</method>
			<method name="public org.jaxen.expr.Expr getExpr()">1</method>
			<method name="public void _init_(org.jaxen.expr.Expr expr)">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public void simplify()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.dom4j.DocumentNavigator$Singleton</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>3</cbo>
		<rfc>5</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>0.5</lcom3>
		<loc>14</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.3333333333333335</amc>
		<cc>
			<method name="static org.jaxen.dom4j.DocumentNavigator access$000()">1</method>
			<method name="private void _init_()">1</method>
			<method name="static void _clinit_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.rule.Stylesheet</name>
		<wmc>20</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>15</cbo>
		<rfc>40</rfc>
		<lcom>44</lcom>
		<ca>0</ca>
		<ce>15</ce>
		<npm>20</npm>
		<lcom3>0.42105263157894735</lcom3>
		<loc>287</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.25555555555555554</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.25</amc>
		<cc>
			<method name="public void applyTemplates(Object input, org.jaxen.XPath xpath)">1</method>
			<method name="public void run(Object input)">1</method>
			<method name="public void applyTemplates(Object input, org.dom4j.XPath xpath, String mode)">1</method>
			<method name="public void removeRule(org.dom4j.rule.Rule rule)">1</method>
			<method name="public void clear()">1</method>
			<method name="public org.dom4j.rule.Action getValueOfAction()">1</method>
			<method name="public String getModeName()">1</method>
			<method name="public void run(org.dom4j.Node node, String mode)">1</method>
			<method name="public void applyTemplates(Object input, org.dom4j.XPath xpath)">1</method>
			<method name="public void applyTemplates(Object input, String mode)">1</method>
			<method name="public void run(java.util.List list)">1</method>
			<method name="public void setValueOfAction(org.dom4j.rule.Action valueOfAction)">1</method>
			<method name="public void run(org.dom4j.Node node)">1</method>
			<method name="public void applyTemplates(Object input, org.jaxen.XPath xpath, String mode)">1</method>
			<method name="public void addRule(org.dom4j.rule.Rule rule)">1</method>
			<method name="public void setModeName(String modeName)">1</method>
			<method name="public void run(java.util.List list, String mode)">1</method>
			<method name="public void applyTemplates(Object input)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void run(Object input, String mode)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.AbstractEntity</name>
		<wmc>9</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>11</cbo>
		<rfc>20</rfc>
		<lcom>36</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>9</npm>
		<lcom3>2.0</lcom3>
		<loc>110</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3611111111111111</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.222222222222221</amc>
		<cc>
			<method name="public void write(java.io.Writer writer)">1</method>
			<method name="public String toString()">1</method>
			<method name="public String getStringValue()">1</method>
			<method name="public String asXML()">1</method>
			<method name="public String getPath(org.dom4j.Element context)">3</method>
			<method name="public short getNodeType()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public String getUniquePath(org.dom4j.Element context)">3</method>
			<method name="public void accept(org.dom4j.Visitor visitor)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.ElementIterator</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>0</ca>
		<ce>5</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.5</amc>
		<cc>
			<method name="protected boolean matches(Object element)">1</method>
			<method name="public void _init_(java.util.Iterator proxy)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.FalseFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>6</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>18</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4444444444444444</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.0</amc>
		<cc>
			<method name="public static Boolean evaluate()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.dom.NamespaceNode$EmptyNodeList</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>5</rfc>
		<lcom>6</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>14</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>2.5</amc>
		<cc>
			<method name="public int getLength()">1</method>
			<method name="void _init_(org.jaxen.dom.NamespaceNode$1 x0)">1</method>
			<method name="private void _init_()">1</method>
			<method name="public org.w3c.dom.Node item(int index)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.TrueFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>6</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>18</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4444444444444444</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.0</amc>
		<cc>
			<method name="public static Boolean evaluate()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.iter.IterableChildAxis</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>8</rfc>
		<lcom>6</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>28</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.55</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.0</amc>
		<cc>
			<method name="public java.util.Iterator iterator(Object contextNode, org.jaxen.ContextSupport support)">1</method>
			<method name="public java.util.Iterator namedAccessIterator(Object contextNode, org.jaxen.ContextSupport support, String localName, String namespacePrefix, String namespaceURI)">1</method>
			<method name="public void _init_(int value)">1</method>
			<method name="public boolean supportsNamedAccess(org.jaxen.ContextSupport support)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.SAXModifyElementHandler</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>15</cbo>
		<rfc>21</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>13</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>118</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.5833333333333334</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>28.0</amc>
		<cc>
			<method name="protected org.dom4j.Element getModifiedElement()">1</method>
			<method name="public void onStart(org.dom4j.ElementPath elementPath)">1</method>
			<method name="public void _init_(org.dom4j.io.ElementModifier elemModifier)">1</method>
			<method name="public void onEnd(org.dom4j.ElementPath elementPath)">5</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.bean.BeanAttribute</name>
		<wmc>7</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>13</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>7</npm>
		<lcom3>0.08333333333333333</lcom3>
		<loc>58</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.3142857142857143</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.0</amc>
		<cc>
			<method name="public void setValue(String data)">1</method>
			<method name="public Object getData()">1</method>
			<method name="public String getValue()">2</method>
			<method name="public void _init_(org.dom4j.bean.BeanAttributeList beanList, int index)">1</method>
			<method name="public void setData(Object data)">1</method>
			<method name="public org.dom4j.QName getQName()">1</method>
			<method name="public org.dom4j.Element getParent()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.XMLWriter</name>
		<wmc>94</wmc>
		<dit>2</dit>
		<noc>1</noc>
		<cbo>55</cbo>
		<rfc>214</rfc>
		<lcom>2309</lcom>
		<ca>11</ca>
		<ce>44</ce>
		<npm>57</npm>
		<lcom3>0.8581669226830517</lcom3>
		<loc>2681</loc>
		<dam>1.0</dam>
		<moa>3</moa>
		<mfa>0.2809917355371901</mfa>
		<cam>0.07196029776674938</cam>
		<ic>2</ic>
		<cbm>3</cbm>
		<amc>27.29787234042553</amc>
		<cc>
			<method name="protected boolean shouldEncodeChar(char c)">3</method>
			<method name="public void endDocument()">1</method>
			<method name="protected String escapeAttributeEntities(String text)">20</method>
			<method name="public void _init_(java.io.OutputStream out, org.dom4j.io.OutputFormat format)">1</method>
			<method name="protected void writeEntityRef(String name)">1</method>
			<method name="protected boolean isExpandEmptyElements()">1</method>
			<method name="public boolean isEscapeText()">1</method>
			<method name="protected void writeAttribute(org.xml.sax.Attributes attributes, int index)">1</method>
			<method name="protected final boolean isElementSpacePreserved(org.dom4j.Element element)">4</method>
			<method name="public void endDTD()">1</method>
			<method name="public void _init_(java.io.OutputStream out)">1</method>
			<method name="public void setResolveEntityRefs(boolean resolve)">1</method>
			<method name="protected void writePrintln()">1</method>
			<method name="protected void writeAttribute(org.dom4j.Attribute attribute)">1</method>
			<method name="protected void writeDeclaration()">1</method>
			<method name="public void write(org.dom4j.Entity entity)">1</method>
			<method name="public void startDocument()">1</method>
			<method name="public void startPrefixMapping(String prefix, String uri)">1</method>
			<method name="public void _init_(java.io.Writer writer, org.dom4j.io.OutputFormat format)">1</method>
			<method name="public void endPrefixMapping(String prefix)">1</method>
			<method name="protected java.io.Writer createWriter(java.io.OutputStream outStream, String encoding)">1</method>
			<method name="public void ignorableWhitespace(char[] ch, int start, int length)">1</method>
			<method name="public void characters(char[] ch, int start, int length)">1</method>
			<method name="public void endEntity(String name)">1</method>
			<method name="public void write(org.dom4j.Attribute attribute)">1</method>
			<method name="public void write(org.dom4j.Document doc)">1</method>
			<method name="public void setMaximumAllowedCharacter(int maximumAllowedCharacter)">1</method>
			<method name="protected void writeNamespace(org.dom4j.Namespace namespace)">1</method>
			<method name="public void unparsedEntityDecl(String name, String publicID, String systemID, String notationName)">1</method>
			<method name="public void _init_(java.io.Writer writer)">1</method>
			<method name="protected void writeElement(org.dom4j.Element element)">1</method>
			<method name="public void notationDecl(String name, String publicID, String systemID)">1</method>
			<method name="public void endCDATA()">1</method>
			<method name="protected void writeClose(String qualifiedName)">1</method>
			<method name="public void comment(char[] ch, int start, int length)">1</method>
			<method name="public void write(org.dom4j.Node node)">1</method>
			<method name="public void setProperty(String name, Object value)">1</method>
			<method name="protected boolean isNamespaceDeclaration(org.dom4j.Namespace ns)">5</method>
			<method name="protected void installLexicalHandler()">3</method>
			<method name="protected void writeNode(org.dom4j.Node node)">1</method>
			<method name="protected void writeElementContent(org.dom4j.Element element)">1</method>
			<method name="public void _init_(org.dom4j.io.OutputFormat format)">1</method>
			<method name="public void writeClose(org.dom4j.Element element)">1</method>
			<method name="public void parse(org.xml.sax.InputSource source)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void endElement(String namespaceURI, String localName, String qName)">1</method>
			<method name="public void setOutputStream(java.io.OutputStream out)">1</method>
			<method name="public void write(org.dom4j.Text text)">1</method>
			<method name="public void println()">1</method>
			<method name="public void write(org.dom4j.CDATA cdata)">1</method>
			<method name="protected void writeProcessingInstruction(org.dom4j.ProcessingInstruction pi)">1</method>
			<method name="protected org.dom4j.io.OutputFormat getOutputFormat()">1</method>
			<method name="public void write(String text)">1</method>
			<method name="public void startCDATA()">1</method>
			<method name="protected void writeDocType(String name, String publicID, String systemID)">1</method>
			<method name="protected void writeEmptyElementClose(String qualifiedName)">1</method>
			<method name="protected void writeNamespaces()">1</method>
			<method name="protected void writeString(String text)">1</method>
			<method name="protected void writeNodeText(org.dom4j.Node node)">1</method>
			<method name="public void write(org.dom4j.ProcessingInstruction processingInstruction)">1</method>
			<method name="public void setEscapeText(boolean escapeText)">1</method>
			<method name="public void processingInstruction(String target, String data)">1</method>
			<method name="public void startEntity(String name)">1</method>
			<method name="public void close()">1</method>
			<method name="protected void writeComment(String text)">1</method>
			<method name="protected void writeEscapeAttributeEntities(String txt)">1</method>
			<method name="protected void indent()">1</method>
			<method name="public void setWriter(java.io.Writer writer)">1</method>
			<method name="protected void writeEntity(org.dom4j.Entity entity)">1</method>
			<method name="public void setLexicalHandler(org.xml.sax.ext.LexicalHandler handler)">2</method>
			<method name="protected void writeDocType(org.dom4j.DocumentType docType)">1</method>
			<method name="public void setDocumentLocator(org.xml.sax.Locator locator)">1</method>
			<method name="protected void writeAttributes(org.xml.sax.Attributes attributes)">1</method>
			<method name="protected int defaultMaximumAllowedCharacter()">3</method>
			<method name="public void setIndentLevel(int indentLevel)">1</method>
			<method name="public void write(org.dom4j.Comment comment)">1</method>
			<method name="public Object getProperty(String name)">1</method>
			<method name="protected void writeCDATA(String text)">1</method>
			<method name="public org.xml.sax.ext.LexicalHandler getLexicalHandler()">1</method>
			<method name="protected void writeAttributes(org.dom4j.Element element)">1</method>
			<method name="public void write(org.dom4j.Namespace namespace)">1</method>
			<method name="public int getMaximumAllowedCharacter()">2</method>
			<method name="public void write(Object object)">1</method>
			<method name="public void startDTD(String name, String publicID, String systemID)">1</method>
			<method name="public boolean resolveEntityRefs()">1</method>
			<method name="public void flush()">1</method>
			<method name="protected void writeNamespace(String prefix, String uri)">1</method>
			<method name="protected void handleException(java.io.IOException e)">1</method>
			<method name="public void writeOpen(org.dom4j.Element element)">1</method>
			<method name="public void write(org.dom4j.DocumentType docType)">1</method>
			<method name="protected String escapeElementEntities(String text)">17</method>
			<method name="public void _init_()">1</method>
			<method name="public void write(org.dom4j.Element element)">1</method>
			<method name="public void startElement(String namespaceURI, String localName, String qName, org.xml.sax.Attributes attributes)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.XPP3Reader</name>
		<wmc>22</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>22</cbo>
		<rfc>77</rfc>
		<lcom>221</lcom>
		<ca>0</ca>
		<ce>22</ce>
		<npm>18</npm>
		<lcom3>0.8333333333333334</lcom3>
		<loc>410</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.16942148760330578</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.454545454545453</amc>
		<cc>
			<method name="public org.dom4j.DocumentFactory getDocumentFactory()">2</method>
			<method name="public void setDefaultHandler(org.dom4j.ElementHandler handler)">1</method>
			<method name="public org.dom4j.Document read(char[] text)">1</method>
			<method name="public void setXPPFactory(org.xmlpull.v1.XmlPullParserFactory xPPfactory)">1</method>
			<method name="public org.dom4j.Document read(java.io.File file)">1</method>
			<method name="public org.dom4j.Document read(java.io.InputStream in)">1</method>
			<method name="public org.dom4j.Document read(java.io.Reader reader, String systemID)">1</method>
			<method name="protected org.dom4j.io.DispatchHandler getDispatchHandler()">2</method>
			<method name="protected java.io.Reader createReader(java.io.InputStream in)">1</method>
			<method name="public org.dom4j.Document read(java.io.InputStream in, String systemID)">1</method>
			<method name="public org.dom4j.Document read(java.io.Reader reader)">1</method>
			<method name="public org.xmlpull.v1.XmlPullParserFactory getXPPFactory()">1</method>
			<method name="public org.dom4j.Document read(java.net.URL url)">1</method>
			<method name="public org.xmlpull.v1.XmlPullParser getXPPParser()">1</method>
			<method name="public void setDocumentFactory(org.dom4j.DocumentFactory documentFactory)">1</method>
			<method name="public void removeHandler(String path)">1</method>
			<method name="protected org.dom4j.Document parseDocument()">1</method>
			<method name="protected void setDispatchHandler(org.dom4j.io.DispatchHandler dispatchHandler)">1</method>
			<method name="public org.dom4j.Document read(String systemID)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(org.dom4j.DocumentFactory factory)">1</method>
			<method name="public void addHandler(String path, org.dom4j.ElementHandler handler)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.swing.LeafTreeNode</name>
		<wmc>14</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>8</cbo>
		<rfc>18</rfc>
		<lcom>71</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>13</npm>
		<lcom3>0.8461538461538461</lcom3>
		<loc>73</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.2923076923076923</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public javax.swing.tree.TreeNode getParent()">1</method>
			<method name="public org.dom4j.Node getXmlNode()">1</method>
			<method name="public boolean isLeaf()">1</method>
			<method name="public String toString()">2</method>
			<method name="public int getIndex(javax.swing.tree.TreeNode node)">1</method>
			<method name="public void _init_(javax.swing.tree.TreeNode parent, org.dom4j.Node xmlNode)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public java.util.Enumeration children()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public javax.swing.tree.TreeNode getChildAt(int childIndex)">1</method>
			<method name="public int getChildCount()">1</method>
			<method name="public void _init_(org.dom4j.Node xmlNode)">1</method>
			<method name="public void setParent(org.dom4j.swing.LeafTreeNode parent)">1</method>
			<method name="public boolean getAllowsChildren()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.pattern.NoNodeTest</name>
		<wmc>7</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>8</rfc>
		<lcom>19</lcom>
		<ca>0</ca>
		<ce>5</ce>
		<npm>6</npm>
		<lcom3>0.8333333333333334</lcom3>
		<loc>26</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.3888888888888889</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>2.5714285714285716</amc>
		<cc>
			<method name="public boolean matches(Object node, org.jaxen.Context context)">1</method>
			<method name="public String getText()">1</method>
			<method name="public static org.jaxen.pattern.NoNodeTest getInstance()">1</method>
			<method name="public short getMatchType()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public double getPriority()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.datatype.DatatypeDocumentFactory</name>
		<wmc>9</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>19</cbo>
		<rfc>34</rfc>
		<lcom>18</lcom>
		<ca>1</ca>
		<ce>19</ce>
		<npm>6</npm>
		<lcom3>0.796875</lcom3>
		<loc>305</loc>
		<dam>1.0</dam>
		<moa>6</moa>
		<mfa>0.0</mfa>
		<cam>0.3958333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>32.0</amc>
		<cc>
			<method name="public org.dom4j.datatype.DatatypeElementFactory getElementFactory(org.dom4j.QName elementQName)">2</method>
			<method name="public static org.dom4j.DocumentFactory getInstance()">1</method>
			<method name="protected void loadSchema(org.dom4j.Document document, String schemaInstanceURI, org.dom4j.Namespace namespace)">3</method>
			<method name="protected void loadSchema(org.dom4j.Document document, String schemaInstanceURI)">3</method>
			<method name="static void _clinit_()">1</method>
			<method name="public org.dom4j.Attribute createAttribute(org.dom4j.Element owner, org.dom4j.QName qname, String value)">7</method>
			<method name="public void loadSchema(org.dom4j.Document schemaDocument, org.dom4j.Namespace targetNamespace)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void loadSchema(org.dom4j.Document schemaDocument)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.saxpath.SAXPathParseException</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>4</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>5</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public void _init_(String msg)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.ElementPath</name>
		<wmc>6</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>6</rfc>
		<lcom>15</lcom>
		<ca>9</ca>
		<ce>5</ce>
		<npm>6</npm>
		<lcom3>2.0</lcom3>
		<loc>6</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4166666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract int size()">1</method>
			<method name="public abstract org.dom4j.Element getCurrent()">1</method>
			<method name="public abstract void addHandler(String, org.dom4j.ElementHandler)">1</method>
			<method name="public abstract void removeHandler(String)">1</method>
			<method name="public abstract String getPath()">1</method>
			<method name="public abstract org.dom4j.Element getElement(int)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.dom.DOMEntityReference</name>
		<wmc>29</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>56</rfc>
		<lcom>406</lcom>
		<ca>1</ca>
		<ce>13</ce>
		<npm>28</npm>
		<lcom3>2.0</lcom3>
		<loc>164</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.296551724137931</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.655172413793103</amc>
		<cc>
			<method name="public boolean isSupported(String feature, String version)">1</method>
			<method name="public void _init_(String name)">1</method>
			<method name="public org.w3c.dom.Node getFirstChild()">1</method>
			<method name="public String getNodeName()">1</method>
			<method name="public org.w3c.dom.NamedNodeMap getAttributes()">1</method>
			<method name="public org.w3c.dom.NodeList getChildNodes()">1</method>
			<method name="public org.w3c.dom.Node getNextSibling()">1</method>
			<method name="public void _init_(org.dom4j.Element parent, String name, String text)">1</method>
			<method name="public void setPrefix(String prefix)">1</method>
			<method name="public String getNodeValue()">1</method>
			<method name="public boolean supports(String feature, String version)">1</method>
			<method name="public org.w3c.dom.Document getOwnerDocument()">1</method>
			<method name="public String getNamespaceURI()">1</method>
			<method name="public org.w3c.dom.Node insertBefore(org.w3c.dom.Node newChild, org.w3c.dom.Node refChild)">1</method>
			<method name="public void _init_(String name, String text)">1</method>
			<method name="public org.w3c.dom.Node replaceChild(org.w3c.dom.Node newChild, org.w3c.dom.Node oldChild)">1</method>
			<method name="public org.w3c.dom.Node appendChild(org.w3c.dom.Node newChild)">1</method>
			<method name="public boolean hasAttributes()">1</method>
			<method name="public String getPrefix()">1</method>
			<method name="public org.w3c.dom.Node removeChild(org.w3c.dom.Node oldChild)">1</method>
			<method name="public org.w3c.dom.Node getParentNode()">1</method>
			<method name="public String getLocalName()">1</method>
			<method name="private void checkNewChildNode(org.w3c.dom.Node newChild)">1</method>
			<method name="public boolean hasChildNodes()">1</method>
			<method name="public org.w3c.dom.Node cloneNode(boolean deep)">1</method>
			<method name="public void setNodeValue(String nodeValue)">1</method>
			<method name="public org.w3c.dom.Node getPreviousSibling()">1</method>
			<method name="public org.w3c.dom.Node getLastChild()">1</method>
			<method name="public void normalize()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.saxpath.base.TokenTypes</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>6</cbo>
		<rfc>8</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>120</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>41.5</amc>
		<cc>
			<method name="void _init_()">1</method>
			<method name="String getTokenText(int tokenType)">2</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.jaxb.JAXBModifier</name>
		<wmc>25</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>32</cbo>
		<rfc>60</rfc>
		<lcom>230</lcom>
		<ca>1</ca>
		<ce>32</ce>
		<npm>21</npm>
		<lcom3>0.6416666666666667</lcom3>
		<loc>359</loc>
		<dam>1.0</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.14857142857142858</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.16</amc>
		<cc>
			<method name="public void _init_(String contextPath, ClassLoader classloader)">1</method>
			<method name="public void setOutput(java.io.Writer writer)">1</method>
			<method name="public void _init_(String contextPath, ClassLoader classloader, org.dom4j.io.OutputFormat outputFormat)">1</method>
			<method name="public org.dom4j.Document modify(org.xml.sax.InputSource source)">1</method>
			<method name="public org.dom4j.Document modify(java.io.File source, java.nio.charset.Charset charset)">1</method>
			<method name="public org.dom4j.Document modify(java.io.InputStream source, String systemId)">1</method>
			<method name="public org.dom4j.Document modify(String url)">1</method>
			<method name="public void resetObjectModifiers()">1</method>
			<method name="public void setPruneElements(boolean pruneElements)">1</method>
			<method name="public org.dom4j.Document modify(java.net.URL source)">1</method>
			<method name="private org.dom4j.io.XMLWriter getXMLWriter()">1</method>
			<method name="public void addObjectModifier(String path, org.dom4j.jaxb.JAXBObjectModifier mod)">1</method>
			<method name="private org.dom4j.io.SAXModifier getModifier()">2</method>
			<method name="public boolean isPruneElements()">1</method>
			<method name="public org.dom4j.Document modify(java.io.Reader r)">1</method>
			<method name="public org.dom4j.Document modify(java.io.File source)">1</method>
			<method name="public void removeObjectModifier(String path)">1</method>
			<method name="public void _init_(String contextPath)">1</method>
			<method name="public void _init_(String contextPath, org.dom4j.io.OutputFormat outputFormat)">1</method>
			<method name="public org.dom4j.Document modify(java.io.Reader source, String systemId)">1</method>
			<method name="public void setOutput(java.io.OutputStream outputStream)">1</method>
			<method name="private org.dom4j.io.XMLWriter createXMLWriter()">1</method>
			<method name="public void setOutput(java.io.File file)">1</method>
			<method name="private org.dom4j.io.SAXModifier installModifier()">1</method>
			<method name="public org.dom4j.Document modify(java.io.InputStream source)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.rule.Mode</name>
		<wmc>10</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>16</cbo>
		<rfc>31</rfc>
		<lcom>29</lcom>
		<ca>3</ca>
		<ce>13</ce>
		<npm>7</npm>
		<lcom3>0.37037037037037035</lcom3>
		<loc>363</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.2875</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>35.0</amc>
		<cc>
			<method name="public void applyTemplates(org.dom4j.Document document)">1</method>
			<method name="public void removeRule(org.dom4j.rule.Rule rule)">6</method>
			<method name="protected java.util.Map addToNameMap(java.util.Map map, String name, org.dom4j.rule.Rule rule)">3</method>
			<method name="public void fireRule(org.dom4j.Node node)">1</method>
			<method name="public void addRule(org.dom4j.rule.Rule rule)">8</method>
			<method name="protected void removeFromNameMap(java.util.Map map, String name, org.dom4j.rule.Rule rule)">3</method>
			<method name="public void applyTemplates(org.dom4j.Element element)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public org.dom4j.rule.Rule getMatchingRule(org.dom4j.Node node)">13</method>
			<method name="protected org.dom4j.rule.RuleSet getRuleSet(int matchType)">4</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.NameStep</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>2</rfc>
		<lcom>1</lcom>
		<ca>4</ca>
		<ce>3</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>2</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract String getPrefix()">1</method>
			<method name="public abstract String getLocalName()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultXPathExpr</name>
		<wmc>7</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>16</rfc>
		<lcom>15</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>7</npm>
		<lcom3>0.0</lcom3>
		<loc>55</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.47619047619047616</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.714285714285714</amc>
		<cc>
			<method name="public org.jaxen.expr.Expr getRootExpr()">1</method>
			<method name="public String toString()">1</method>
			<method name="public void setRootExpr(org.jaxen.expr.Expr rootExpr)">1</method>
			<method name="public String getText()">1</method>
			<method name="public void _init_(org.jaxen.expr.Expr rootExpr)">1</method>
			<method name="public java.util.List asList(org.jaxen.Context context)">1</method>
			<method name="public void simplify()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.saxpath.base.DefaultXPathHandler$1</name>
		<wmc>0</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>2</cbo>
		<rfc>0</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>1</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>0</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.SelfAxisIterator</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>5</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public void _init_(Object node)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.Context</name>
		<wmc>14</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>87</cbo>
		<rfc>22</rfc>
		<lcom>75</lcom>
		<ca>76</ca>
		<ce>12</ce>
		<npm>14</npm>
		<lcom3>0.7692307692307693</lcom3>
		<loc>104</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.3142857142857143</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.142857142857143</amc>
		<cc>
			<method name="public Object getVariableValue(String namespaceURI, String prefix, String localName)">1</method>
			<method name="public void _init_(org.jaxen.ContextSupport contextSupport)">1</method>
			<method name="public org.jaxen.ContextSupport getContextSupport()">1</method>
			<method name="public void setNodeSet(java.util.List nodeSet)">1</method>
			<method name="public void setPosition(int position)">1</method>
			<method name="public org.jaxen.Navigator getNavigator()">1</method>
			<method name="public org.jaxen.Context duplicate()">2</method>
			<method name="public String translateNamespacePrefixToUri(String prefix)">1</method>
			<method name="public java.util.List getNodeSet()">1</method>
			<method name="public void setContextSupport(org.jaxen.ContextSupport contextSupport)">1</method>
			<method name="public int getPosition()">1</method>
			<method name="public org.jaxen.Function getFunction(String namespaceURI, String prefix, String localName)">1</method>
			<method name="public int getSize()">1</method>
			<method name="public void setSize(int size)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.swing.XMLTableColumnDefinition</name>
		<wmc>18</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>16</cbo>
		<rfc>34</rfc>
		<lcom>77</lcom>
		<ca>1</ca>
		<ce>15</ce>
		<npm>15</npm>
		<lcom3>0.9411764705882353</lcom3>
		<loc>210</loc>
		<dam>0.3333333333333333</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.2962962962962963</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.0</amc>
		<cc>
			<method name="public void setColumnNameXPath(org.dom4j.XPath columnNameXPath)">1</method>
			<method name="public void setName(String name)">1</method>
			<method name="public void _init_(String name, String expression, int type)">1</method>
			<method name="public static int parseType(String typeName)">6</method>
			<method name="public String getName()">1</method>
			<method name="public void setXPath(org.dom4j.XPath xPath)">1</method>
			<method name="protected org.dom4j.XPath createXPath(String expression)">1</method>
			<method name="public void setType(int type)">1</method>
			<method name="public void _init_(org.dom4j.XPath columnXPath, org.dom4j.XPath xpath, int type)">1</method>
			<method name="public org.dom4j.XPath getXPath()">1</method>
			<method name="static Class class$(String x0)">1</method>
			<method name="public void _init_(String name, org.dom4j.XPath xpath, int type)">1</method>
			<method name="public int getType()">1</method>
			<method name="public Object getValue(Object row)">2</method>
			<method name="public Class getColumnClass()">6</method>
			<method name="public org.dom4j.XPath getColumnNameXPath()">1</method>
			<method name="public void _init_()">1</method>
			<method name="protected void handleException(Exception e)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.VisitorSupport</name>
		<wmc>11</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>12</rfc>
		<lcom>55</lcom>
		<ca>0</ca>
		<ce>13</ce>
		<npm>11</npm>
		<lcom3>2.0</lcom3>
		<loc>24</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.17355371900826447</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>1.1818181818181819</amc>
		<cc>
			<method name="public void visit(org.dom4j.Document document)">1</method>
			<method name="public void visit(org.dom4j.ProcessingInstruction node)">1</method>
			<method name="public void visit(org.dom4j.CDATA node)">1</method>
			<method name="public void visit(org.dom4j.DocumentType documentType)">1</method>
			<method name="public void visit(org.dom4j.Comment node)">1</method>
			<method name="public void visit(org.dom4j.Namespace namespace)">1</method>
			<method name="public void visit(org.dom4j.Text node)">1</method>
			<method name="public void visit(org.dom4j.Attribute node)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void visit(org.dom4j.Entity node)">1</method>
			<method name="public void visit(org.dom4j.Element node)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.iter.IterableAttributeAxis</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>8</rfc>
		<lcom>6</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>28</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.55</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.0</amc>
		<cc>
			<method name="public java.util.Iterator iterator(Object contextNode, org.jaxen.ContextSupport support)">1</method>
			<method name="public java.util.Iterator namedAccessIterator(Object contextNode, org.jaxen.ContextSupport support, String localName, String namespacePrefix, String namespaceURI)">1</method>
			<method name="public void _init_(int value)">1</method>
			<method name="public boolean supportsNamedAccess(org.jaxen.ContextSupport support)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultAllNodeStep</name>
		<wmc>5</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>12</rfc>
		<lcom>10</lcom>
		<ca>2</ca>
		<ce>10</ce>
		<npm>5</npm>
		<lcom3>2.0</lcom3>
		<loc>41</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.2</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public String getText()">1</method>
			<method name="public void _init_(org.jaxen.expr.iter.IterableAxis axis, org.jaxen.expr.PredicateSet predicateSet)">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public boolean matches(Object node, org.jaxen.ContextSupport contextSupport)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.Element</name>
		<wmc>69</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>109</cbo>
		<rfc>69</rfc>
		<lcom>2346</lcom>
		<ca>98</ca>
		<ce>14</ce>
		<npm>69</npm>
		<lcom3>2.0</lcom3>
		<loc>69</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.13600891861761427</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract org.dom4j.Element element(String)">1</method>
			<method name="public abstract org.dom4j.Element element(org.dom4j.QName)">1</method>
			<method name="public abstract void appendAttributes(org.dom4j.Element)">1</method>
			<method name="public abstract java.util.Iterator elementIterator(org.dom4j.QName)">1</method>
			<method name="public abstract String attributeValue(org.dom4j.QName)">1</method>
			<method name="public abstract org.dom4j.Attribute attribute(String)">1</method>
			<method name="public abstract String elementTextTrim(String)">1</method>
			<method name="public abstract String elementText(org.dom4j.QName)">1</method>
			<method name="public abstract String getQualifiedName()">1</method>
			<method name="public abstract org.dom4j.Attribute attribute(org.dom4j.QName)">1</method>
			<method name="public abstract String elementTextTrim(org.dom4j.QName)">1</method>
			<method name="public abstract void setAttributeValue(String, String)">1</method>
			<method name="public abstract String elementText(String)">1</method>
			<method name="public abstract org.dom4j.Element addCDATA(String)">1</method>
			<method name="public abstract void add(org.dom4j.Entity)">1</method>
			<method name="public abstract org.dom4j.Element addAttribute(String, String)">1</method>
			<method name="public abstract String getTextTrim()">1</method>
			<method name="public abstract org.dom4j.Namespace getNamespace()">1</method>
			<method name="public abstract void setAttributes(java.util.List)">1</method>
			<method name="public abstract java.util.Iterator elementIterator(String)">1</method>
			<method name="public abstract org.dom4j.Element addEntity(String, String)">1</method>
			<method name="public abstract org.dom4j.Element addProcessingInstruction(String, String)">1</method>
			<method name="public abstract boolean isRootElement()">1</method>
			<method name="public abstract java.util.List elements(org.dom4j.QName)">1</method>
			<method name="public abstract org.dom4j.Element createCopy(org.dom4j.QName)">1</method>
			<method name="public abstract org.dom4j.Element addComment(String)">1</method>
			<method name="public abstract void add(org.dom4j.Namespace)">1</method>
			<method name="public abstract String getNamespaceURI()">1</method>
			<method name="public abstract String attributeValue(org.dom4j.QName, String)">1</method>
			<method name="public abstract boolean remove(org.dom4j.Namespace)">1</method>
			<method name="public abstract Object getData()">1</method>
			<method name="public abstract java.util.List elements()">1</method>
			<method name="public abstract org.dom4j.Element createCopy()">1</method>
			<method name="public abstract java.util.List elements(String)">1</method>
			<method name="public abstract void setData(Object)">1</method>
			<method name="public abstract boolean hasMixedContent()">1</method>
			<method name="public abstract java.util.Iterator attributeIterator()">1</method>
			<method name="public abstract java.util.List declaredNamespaces()">1</method>
			<method name="public abstract java.util.List getNamespacesForURI(String)">1</method>
			<method name="public abstract org.dom4j.Element addAttribute(org.dom4j.QName, String)">1</method>
			<method name="public abstract org.dom4j.Element addProcessingInstruction(String, java.util.Map)">1</method>
			<method name="public abstract String getStringValue()">1</method>
			<method name="public abstract org.dom4j.QName getQName(String)">1</method>
			<method name="public abstract boolean remove(org.dom4j.CDATA)">1</method>
			<method name="public abstract org.dom4j.Element addText(String)">1</method>
			<method name="public abstract boolean remove(org.dom4j.Text)">1</method>
			<method name="public abstract org.dom4j.Element addNamespace(String, String)">1</method>
			<method name="public abstract java.util.Iterator elementIterator()">1</method>
			<method name="public abstract boolean remove(org.dom4j.Entity)">1</method>
			<method name="public abstract org.dom4j.QName getQName()">1</method>
			<method name="public abstract String getNamespacePrefix()">1</method>
			<method name="public abstract org.dom4j.Attribute attribute(int)">1</method>
			<method name="public abstract void add(org.dom4j.Attribute)">1</method>
			<method name="public abstract void add(org.dom4j.Text)">1</method>
			<method name="public abstract java.util.List attributes()">1</method>
			<method name="public abstract String attributeValue(String, String)">1</method>
			<method name="public abstract org.dom4j.Namespace getNamespaceForURI(String)">1</method>
			<method name="public abstract void setQName(org.dom4j.QName)">1</method>
			<method name="public abstract String getText()">1</method>
			<method name="public abstract org.dom4j.Element createCopy(String)">1</method>
			<method name="public abstract org.dom4j.Node getXPathResult(int)">1</method>
			<method name="public abstract java.util.List additionalNamespaces()">1</method>
			<method name="public abstract org.dom4j.Namespace getNamespaceForPrefix(String)">1</method>
			<method name="public abstract String attributeValue(String)">1</method>
			<method name="public abstract boolean isTextOnly()">1</method>
			<method name="public abstract void setAttributeValue(org.dom4j.QName, String)">1</method>
			<method name="public abstract int attributeCount()">1</method>
			<method name="public abstract void add(org.dom4j.CDATA)">1</method>
			<method name="public abstract boolean remove(org.dom4j.Attribute)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.saxpath.XPathReader</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>4</ca>
		<ce>5</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void parse(String)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.saxpath.Operator</name>
		<wmc>0</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>2</cbo>
		<rfc>0</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>2</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>13</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
		</cc>
	</class>
	<class>
		<name>org.dom4j.dom.DOMCDATA</name>
		<wmc>38</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>18</cbo>
		<rfc>86</rfc>
		<lcom>703</lcom>
		<ca>1</ca>
		<ce>17</ce>
		<npm>36</npm>
		<lcom3>2.0</lcom3>
		<loc>259</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2675438596491228</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.815789473684211</amc>
		<cc>
			<method name="public boolean isSupported(String feature, String version)">1</method>
			<method name="public void deleteData(int offset, int count)">1</method>
			<method name="public void _init_(String text)">1</method>
			<method name="public org.w3c.dom.Node getFirstChild()">1</method>
			<method name="public String getNodeName()">1</method>
			<method name="public org.w3c.dom.NamedNodeMap getAttributes()">1</method>
			<method name="public int getLength()">1</method>
			<method name="public org.w3c.dom.NodeList getChildNodes()">1</method>
			<method name="public org.w3c.dom.Node getNextSibling()">1</method>
			<method name="public void setPrefix(String prefix)">1</method>
			<method name="public String getNodeValue()">1</method>
			<method name="public void setData(String data)">1</method>
			<method name="public org.w3c.dom.Text splitText(int offset)">1</method>
			<method name="public boolean supports(String feature, String version)">1</method>
			<method name="protected org.dom4j.CDATA createCDATA(String text)">1</method>
			<method name="public org.w3c.dom.Document getOwnerDocument()">1</method>
			<method name="public String getNamespaceURI()">1</method>
			<method name="public org.w3c.dom.Node insertBefore(org.w3c.dom.Node newChild, org.w3c.dom.Node refChild)">1</method>
			<method name="public org.w3c.dom.Node replaceChild(org.w3c.dom.Node newChild, org.w3c.dom.Node oldChild)">1</method>
			<method name="public org.w3c.dom.Node appendChild(org.w3c.dom.Node newChild)">1</method>
			<method name="public boolean hasAttributes()">1</method>
			<method name="public String getPrefix()">1</method>
			<method name="public org.w3c.dom.Node removeChild(org.w3c.dom.Node oldChild)">1</method>
			<method name="public void insertData(int offset, String arg)">1</method>
			<method name="public void replaceData(int offset, int count, String arg)">1</method>
			<method name="public org.w3c.dom.Node getParentNode()">1</method>
			<method name="public void _init_(org.dom4j.Element parent, String text)">1</method>
			<method name="public String substringData(int offset, int count)">1</method>
			<method name="public String getLocalName()">1</method>
			<method name="private void checkNewChildNode(org.w3c.dom.Node newChild)">1</method>
			<method name="public boolean hasChildNodes()">1</method>
			<method name="public org.w3c.dom.Node cloneNode(boolean deep)">1</method>
			<method name="public void setNodeValue(String nodeValue)">1</method>
			<method name="public org.w3c.dom.Node getPreviousSibling()">1</method>
			<method name="public org.w3c.dom.Node getLastChild()">1</method>
			<method name="public void appendData(String arg)">1</method>
			<method name="public void normalize()">1</method>
			<method name="public String getData()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.SimpleFunctionContext</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>10</cbo>
		<rfc>13</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>3</npm>
		<lcom3>0.0</lcom3>
		<loc>56</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.333333333333332</amc>
		<cc>
			<method name="public void registerFunction(String namespaceURI, String localName, org.jaxen.Function function)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public org.jaxen.Function getFunction(String namespaceURI, String prefix, String localName)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultNameStep</name>
		<wmc>11</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>22</cbo>
		<rfc>58</rfc>
		<lcom>33</lcom>
		<ca>2</ca>
		<ce>20</ce>
		<npm>9</npm>
		<lcom3>0.625</lcom3>
		<loc>566</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.22727272727272727</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>50.09090909090909</amc>
		<cc>
			<method name="protected boolean matchesNamespaceURIs(String uri1, String uri2)">6</method>
			<method name="public void _init_(org.jaxen.expr.iter.IterableAxis axis, String prefix, String localName, org.jaxen.expr.PredicateSet predicateSet)">3</method>
			<method name="public String toString()">1</method>
			<method name="public String getText()">3</method>
			<method name="public String getLocalName()">1</method>
			<method name="public boolean isMatchesAnyName()">1</method>
			<method name="public java.util.List evaluate(org.jaxen.Context context)">1</method>
			<method name="private boolean hasNamespace(String uri)">3</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public String getPrefix()">1</method>
			<method name="public boolean matches(Object node, org.jaxen.ContextSupport contextSupport)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.IdentitySet$IdentityWrapper</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>5</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>26</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.8333333333333334</cam>
		<ic>1</ic>
		<cbm>1</cbm>
		<amc>7.333333333333333</amc>
		<cc>
			<method name="public int hashCode()">1</method>
			<method name="public boolean equals(Object o)">2</method>
			<method name="void _init_(Object object)">1</method>
		</cc>
	</class>
	<class>
		<name>com.adobe.ac.ant.tasks.WindowsSWFLauncher</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>9</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>23</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.0</amc>
		<cc>
			<method name="public void launch(String arg0)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.swing.DocumentTreeModel</name>
		<wmc>3</wmc>
		<dit>2</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>6</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>0.0</lcom3>
		<loc>27</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.9393939393939394</mfa>
		<cam>0.8333333333333334</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.666666666666667</amc>
		<cc>
			<method name="public void setDocument(org.dom4j.Document document)">1</method>
			<method name="public void _init_(org.dom4j.Document document)">1</method>
			<method name="public org.dom4j.Document getDocument()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultMultiplicativeExpr</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>3</noc>
		<cbo>10</cbo>
		<rfc>9</rfc>
		<lcom>1</lcom>
		<ca>3</ca>
		<ce>7</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>24</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.0</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.DefaultNavigator</name>
		<wmc>22</wmc>
		<dit>1</dit>
		<noc>5</noc>
		<cbo>21</cbo>
		<rfc>41</rfc>
		<lcom>231</lcom>
		<ca>5</ca>
		<ce>16</ce>
		<npm>22</npm>
		<lcom3>2.0</lcom3>
		<loc>162</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6818181818181818</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.363636363636363</amc>
		<cc>
			<method name="public java.util.Iterator getChildAxisIterator(Object contextNode)">1</method>
			<method name="public short getNodeType(Object node)">7</method>
			<method name="public Object getParentNode(Object contextNode)">1</method>
			<method name="public java.util.Iterator getDescendantAxisIterator(Object contextNode)">1</method>
			<method name="public Object getDocument(String url)">1</method>
			<method name="public java.util.Iterator getAncestorOrSelfAxisIterator(Object contextNode)">1</method>
			<method name="public Object getDocumentNode(Object contextNode)">1</method>
			<method name="public String getProcessingInstructionTarget(Object obj)">1</method>
			<method name="public java.util.Iterator getPrecedingSiblingAxisIterator(Object contextNode)">1</method>
			<method name="public java.util.Iterator getAttributeAxisIterator(Object contextNode)">1</method>
			<method name="public java.util.Iterator getPrecedingAxisIterator(Object contextNode)">1</method>
			<method name="public java.util.Iterator getDescendantOrSelfAxisIterator(Object contextNode)">1</method>
			<method name="public java.util.Iterator getParentAxisIterator(Object contextNode)">1</method>
			<method name="public Object getElementById(Object contextNode, String elementId)">1</method>
			<method name="public java.util.Iterator getFollowingSiblingAxisIterator(Object contextNode)">1</method>
			<method name="public String translateNamespacePrefixToUri(String prefix, Object element)">1</method>
			<method name="public java.util.Iterator getAncestorAxisIterator(Object contextNode)">1</method>
			<method name="public String getProcessingInstructionData(Object obj)">1</method>
			<method name="public java.util.Iterator getNamespaceAxisIterator(Object contextNode)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public java.util.Iterator getFollowingAxisIterator(Object contextNode)">1</method>
			<method name="public java.util.Iterator getSelfAxisIterator(Object contextNode)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.XPathFactory</name>
		<wmc>25</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>22</cbo>
		<rfc>25</rfc>
		<lcom>300</lcom>
		<ca>4</ca>
		<ce>18</ce>
		<npm>25</npm>
		<lcom3>2.0</lcom3>
		<loc>25</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3142857142857143</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract org.jaxen.expr.LocationPath createRelativeLocationPath()">1</method>
			<method name="public abstract org.jaxen.expr.FilterExpr createFilterExpr(org.jaxen.expr.Expr)">1</method>
			<method name="public abstract org.jaxen.expr.NumberExpr createNumberExpr(double)">1</method>
			<method name="public abstract org.jaxen.expr.Predicate createPredicate(org.jaxen.expr.Expr)">1</method>
			<method name="public abstract org.jaxen.expr.BinaryExpr createMultiplicativeExpr(org.jaxen.expr.Expr, org.jaxen.expr.Expr, int)">1</method>
			<method name="public abstract org.jaxen.expr.Expr createUnaryExpr(org.jaxen.expr.Expr, int)">1</method>
			<method name="public abstract org.jaxen.expr.XPathExpr createXPath(org.jaxen.expr.Expr)">1</method>
			<method name="public abstract org.jaxen.expr.Step createAllNodeStep(int)">1</method>
			<method name="public abstract org.jaxen.expr.PathExpr createPathExpr(org.jaxen.expr.FilterExpr, org.jaxen.expr.LocationPath)">1</method>
			<method name="public abstract org.jaxen.expr.LiteralExpr createLiteralExpr(String)">1</method>
			<method name="public abstract org.jaxen.expr.Step createTextNodeStep(int)">1</method>
			<method name="public abstract org.jaxen.expr.BinaryExpr createRelationalExpr(org.jaxen.expr.Expr, org.jaxen.expr.Expr, int)">1</method>
			<method name="public abstract org.jaxen.expr.PredicateSet createPredicateSet()">1</method>
			<method name="public abstract org.jaxen.expr.Step createProcessingInstructionNodeStep(int, String)">1</method>
			<method name="public abstract org.jaxen.expr.BinaryExpr createOrExpr(org.jaxen.expr.Expr, org.jaxen.expr.Expr)">1</method>
			<method name="public abstract org.jaxen.expr.LocationPath createAbsoluteLocationPath()">1</method>
			<method name="public abstract org.jaxen.expr.BinaryExpr createAdditiveExpr(org.jaxen.expr.Expr, org.jaxen.expr.Expr, int)">1</method>
			<method name="public abstract org.jaxen.expr.UnionExpr createUnionExpr(org.jaxen.expr.Expr, org.jaxen.expr.Expr)">1</method>
			<method name="public abstract org.jaxen.expr.BinaryExpr createAndExpr(org.jaxen.expr.Expr, org.jaxen.expr.Expr)">1</method>
			<method name="public abstract org.jaxen.expr.Step createNameStep(int, String, String)">1</method>
			<method name="public abstract org.jaxen.expr.Step createCommentNodeStep(int)">1</method>
			<method name="public abstract org.jaxen.expr.VariableReferenceExpr createVariableReferenceExpr(String, String)">1</method>
			<method name="public abstract org.jaxen.expr.NumberExpr createNumberExpr(int)">1</method>
			<method name="public abstract org.jaxen.expr.BinaryExpr createEqualityExpr(org.jaxen.expr.Expr, org.jaxen.expr.Expr, int)">1</method>
			<method name="public abstract org.jaxen.expr.FunctionCallExpr createFunctionCallExpr(String, String)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.jdom.JDOMXPath</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>6</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.0</amc>
		<cc>
			<method name="public void _init_(String xpathExpr)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.jaxb.JAXBModifier$JAXBElementModifier</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>6</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>2</npm>
		<lcom3>0.33333333333333326</lcom3>
		<loc>32</loc>
		<dam>1.0</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.5</amc>
		<cc>
			<method name="public void _init_(org.dom4j.jaxb.JAXBModifier this$0, org.dom4j.jaxb.JAXBModifier jaxbModifier, org.dom4j.jaxb.JAXBObjectModifier objectModifier)">1</method>
			<method name="public org.dom4j.Element modifyElement(org.dom4j.Element element)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.BinaryExpr</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>2</rfc>
		<lcom>1</lcom>
		<ca>10</ca>
		<ce>2</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>2</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract org.jaxen.expr.Expr getLHS()">1</method>
			<method name="public abstract org.jaxen.expr.Expr getRHS()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.CommentNodeStep</name>
		<wmc>0</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>0</rfc>
		<lcom>0</lcom>
		<ca>4</ca>
		<ce>2</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>0</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.AbstractCDATA</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>11</cbo>
		<rfc>16</rfc>
		<lcom>15</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>6</npm>
		<lcom3>2.0</lcom3>
		<loc>56</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4444444444444444</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.333333333333334</amc>
		<cc>
			<method name="public void write(java.io.Writer writer)">1</method>
			<method name="public String toString()">1</method>
			<method name="public String asXML()">1</method>
			<method name="public short getNodeType()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void accept(org.dom4j.Visitor visitor)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.bean.BeanMetaData</name>
		<wmc>11</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>18</cbo>
		<rfc>26</rfc>
		<lcom>35</lcom>
		<ca>1</ca>
		<ce>18</ce>
		<npm>9</npm>
		<lcom3>0.8222222222222222</lcom3>
		<loc>231</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.25</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>19.181818181818183</amc>
		<cc>
			<method name="public static org.dom4j.bean.BeanMetaData get(Class beanClass)">2</method>
			<method name="public int getIndex(org.dom4j.QName qName)">2</method>
			<method name="public Object getData(int index, Object bean)">1</method>
			<method name="public void _init_(Class beanClass)">4</method>
			<method name="public org.dom4j.bean.BeanAttributeList createAttributeList(org.dom4j.bean.BeanElement parent)">1</method>
			<method name="public void setData(int index, Object bean, Object data)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public int attributeCount()">1</method>
			<method name="public org.dom4j.QName getQName(int index)">1</method>
			<method name="public int getIndex(String name)">2</method>
			<method name="protected void handleException(Exception e)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.SAXWriter</name>
		<wmc>49</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>42</cbo>
		<rfc>129</rfc>
		<lcom>914</lcom>
		<ca>1</ca>
		<ce>41</ce>
		<npm>33</npm>
		<lcom3>0.890625</lcom3>
		<loc>940</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.0859375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.93877551020408</amc>
		<cc>
			<method name="public void setLexicalHandler(org.xml.sax.ext.LexicalHandler lexicalHandler)">1</method>
			<method name="public void setEntityResolver(org.xml.sax.EntityResolver entityResolver)">1</method>
			<method name="protected boolean isIgnoreableNamespace(org.dom4j.Namespace namespace, org.dom4j.tree.NamespaceStack namespaceStack)">5</method>
			<method name="protected void documentLocator(org.dom4j.Document document)">1</method>
			<method name="protected void endDocument()">1</method>
			<method name="public org.xml.sax.ErrorHandler getErrorHandler()">1</method>
			<method name="protected org.xml.sax.helpers.AttributesImpl addNamespaceAttribute(org.xml.sax.helpers.AttributesImpl attrs, org.dom4j.Namespace namespace)">5</method>
			<method name="public void write(org.dom4j.Entity entity)">1</method>
			<method name="public org.xml.sax.ContentHandler getContentHandler()">1</method>
			<method name="protected org.xml.sax.Attributes createAttributes(org.dom4j.Element element, org.xml.sax.Attributes namespaceAttributes)">1</method>
			<method name="protected void startDocument()">1</method>
			<method name="public void setDeclareNamespaceAttributes(boolean declareNamespaceAttrs)">1</method>
			<method name="public void write(org.dom4j.Document document)">1</method>
			<method name="public void parse(org.xml.sax.InputSource input)">1</method>
			<method name="public org.xml.sax.EntityResolver getEntityResolver()">1</method>
			<method name="public void write(org.dom4j.Node node)">1</method>
			<method name="public void setProperty(String name, Object value)">3</method>
			<method name="protected void dtdHandler(org.dom4j.Document document)">1</method>
			<method name="public void writeClose(org.dom4j.Element element)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void setXMLReader(org.xml.sax.XMLReader xmlReader)">1</method>
			<method name="protected void endElement(org.dom4j.Element element)">1</method>
			<method name="public void write(org.dom4j.ProcessingInstruction pi)">1</method>
			<method name="protected void checkForNullHandlers()">1</method>
			<method name="public void write(org.dom4j.CDATA cdata)">1</method>
			<method name="public boolean isDeclareNamespaceAttributes()">1</method>
			<method name="public void _init_(org.xml.sax.ContentHandler contentHandler)">1</method>
			<method name="public void parse(String systemId)">1</method>
			<method name="public void write(String text)">1</method>
			<method name="protected void endPrefixMapping(org.dom4j.tree.NamespaceStack stack, int stackSize)">1</method>
			<method name="protected org.xml.sax.helpers.AttributesImpl startPrefixMapping(org.dom4j.Element element, org.dom4j.tree.NamespaceStack namespaceStack)">1</method>
			<method name="protected void startElement(org.dom4j.Element element, org.xml.sax.helpers.AttributesImpl namespaceAttributes)">1</method>
			<method name="public void _init_(org.xml.sax.ContentHandler contentHandler, org.xml.sax.ext.LexicalHandler lexicalHandler, org.xml.sax.EntityResolver entityResolver)">1</method>
			<method name="protected void write(org.dom4j.Element element, org.dom4j.tree.NamespaceStack namespaceStack)">1</method>
			<method name="public void setDTDHandler(org.xml.sax.DTDHandler handler)">1</method>
			<method name="public void setErrorHandler(org.xml.sax.ErrorHandler errorHandler)">1</method>
			<method name="public boolean getFeature(String name)">1</method>
			<method name="protected void writeContent(org.dom4j.Branch branch, org.dom4j.tree.NamespaceStack namespaceStack)">1</method>
			<method name="public void write(org.dom4j.Comment comment)">1</method>
			<method name="public Object getProperty(String name)">1</method>
			<method name="public void setContentHandler(org.xml.sax.ContentHandler contentHandler)">1</method>
			<method name="public org.xml.sax.ext.LexicalHandler getLexicalHandler()">1</method>
			<method name="public org.xml.sax.DTDHandler getDTDHandler()">1</method>
			<method name="protected void entityResolver(org.dom4j.Document document)">1</method>
			<method name="public void _init_(org.xml.sax.ContentHandler contentHandler, org.xml.sax.ext.LexicalHandler lexicalHandler)">1</method>
			<method name="public void setFeature(String name, boolean value)">1</method>
			<method name="public void writeOpen(org.dom4j.Element element)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void write(org.dom4j.Element element)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.SAXModifier</name>
		<wmc>23</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>29</cbo>
		<rfc>56</rfc>
		<lcom>187</lcom>
		<ca>1</ca>
		<ce>28</ce>
		<npm>20</npm>
		<lcom3>0.6818181818181818</lcom3>
		<loc>319</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.15217391304347827</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.652173913043478</amc>
		<cc>
			<method name="public org.dom4j.DocumentFactory getDocumentFactory()">1</method>
			<method name="private org.dom4j.io.SAXReader installModifyReader()">1</method>
			<method name="public org.dom4j.Document modify(java.io.Reader source)">1</method>
			<method name="public void resetModifiers()">1</method>
			<method name="public org.dom4j.io.XMLWriter getXMLWriter()">1</method>
			<method name="public void addModifier(String path, org.dom4j.io.ElementModifier modifier)">1</method>
			<method name="public org.dom4j.Document modify(String source)">1</method>
			<method name="public boolean isPruneElements()">1</method>
			<method name="public org.dom4j.Document modify(java.io.File source)">1</method>
			<method name="public org.dom4j.Document modify(org.xml.sax.InputSource source)">1</method>
			<method name="public void setXMLWriter(org.dom4j.io.XMLWriter writer)">1</method>
			<method name="private org.xml.sax.XMLReader getXMLReader()">1</method>
			<method name="private org.dom4j.io.SAXModifyReader getSAXModifyReader()">2</method>
			<method name="public void _init_(org.xml.sax.XMLReader xmlReader)">1</method>
			<method name="public void removeModifier(String path)">1</method>
			<method name="public org.dom4j.Document modify(java.io.InputStream source, String systemId)">1</method>
			<method name="public void _init_(org.xml.sax.XMLReader xmlReader, boolean pruneElements)">1</method>
			<method name="public void setDocumentFactory(org.dom4j.DocumentFactory factory)">1</method>
			<method name="public org.dom4j.Document modify(java.io.Reader source, String systemId)">1</method>
			<method name="public org.dom4j.Document modify(java.net.URL source)">1</method>
			<method name="public void _init_(boolean pruneElements)">1</method>
			<method name="public org.dom4j.Document modify(java.io.InputStream source)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.ConcurrentReaderHashMap$Entry</name>
		<wmc>7</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>17</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>6</ce>
		<npm>6</npm>
		<lcom3>0.625</lcom3>
		<loc>91</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.42857142857142855</cam>
		<ic>1</ic>
		<cbm>1</cbm>
		<amc>11.428571428571429</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public int hashCode()">1</method>
			<method name="void _init_(int hash, Object key, Object value, org.dom4j.tree.ConcurrentReaderHashMap$Entry next)">1</method>
			<method name="public boolean equals(Object o)">4</method>
			<method name="public Object getKey()">1</method>
			<method name="public Object setValue(Object value)">2</method>
			<method name="public Object getValue()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.IdentityHashMap$EmptyHashIterator</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>7</rfc>
		<lcom>6</lcom>
		<ca>0</ca>
		<ce>5</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>17</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.25</amc>
		<cc>
			<method name="public boolean hasNext()">1</method>
			<method name="void _init_()">1</method>
			<method name="public void remove()">1</method>
			<method name="public Object next()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultEqualsExpr</name>
		<wmc>5</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>16</rfc>
		<lcom>10</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>52</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.4</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="protected boolean evaluateObjectObject(Object lhs, Object rhs)">4</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public String getOperator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultGreaterThanExpr</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>7</rfc>
		<lcom>6</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>23</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.75</amc>
		<cc>
			<method name="protected boolean evaluateDoubleDouble(Double lhs, Double rhs)">2</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public String getOperator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.IdentityHashMap</name>
		<wmc>29</wmc>
		<dit>2</dit>
		<noc>0</noc>
		<cbo>28</cbo>
		<rfc>61</rfc>
		<lcom>148</lcom>
		<ca>4</ca>
		<ce>28</ce>
		<npm>17</npm>
		<lcom3>0.806547619047619</lcom3>
		<loc>862</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.4186046511627907</mfa>
		<cam>0.1853448275862069</cam>
		<ic>2</ic>
		<cbm>10</cbm>
		<amc>28.310344827586206</amc>
		<cc>
			<method name="public boolean containsKey(Object key)">6</method>
			<method name="public void _init_(int initialCapacity)">1</method>
			<method name="private void rehash()">2</method>
			<method name="public Object remove(Object key)">8</method>
			<method name="private void writeObject(java.io.ObjectOutputStream s)">1</method>
			<method name="public java.util.Set entrySet()">2</method>
			<method name="static int access$308(org.jaxen.util.IdentityHashMap x0)">1</method>
			<method name="public Object clone()">3</method>
			<method name="public int size()">1</method>
			<method name="static org.jaxen.util.IdentityHashMap$Entry[] access$200(org.jaxen.util.IdentityHashMap x0)">1</method>
			<method name="public void clear()">2</method>
			<method name="int capacity()">1</method>
			<method name="static int access$110(org.jaxen.util.IdentityHashMap x0)">1</method>
			<method name="float loadFactor()">1</method>
			<method name="public void _init_(java.util.Map t)">1</method>
			<method name="public java.util.Collection values()">2</method>
			<method name="static int access$300(org.jaxen.util.IdentityHashMap x0)">1</method>
			<method name="private java.util.Iterator getHashIterator(int type)">2</method>
			<method name="public java.util.Set keySet()">2</method>
			<method name="public Object put(Object key, Object value)">7</method>
			<method name="public boolean containsValue(Object value)">7</method>
			<method name="static java.util.Iterator access$000(org.jaxen.util.IdentityHashMap x0, int x1)">1</method>
			<method name="static int access$100(org.jaxen.util.IdentityHashMap x0)">1</method>
			<method name="public void putAll(java.util.Map t)">2</method>
			<method name="private void readObject(java.io.ObjectInputStream s)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public boolean isEmpty()">2</method>
			<method name="public Object get(Object key)">6</method>
			<method name="public void _init_(int initialCapacity, float loadFactor)">5</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.PrecedingSiblingAxisIterator</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>16</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>9</ce>
		<npm>4</npm>
		<lcom3>0.625</lcom3>
		<loc>107</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>19.6</amc>
		<cc>
			<method name="public boolean hasNext()">2</method>
			<method name="public void remove()">1</method>
			<method name="public Object next()">1</method>
			<method name="public void _init_(Object contextNode, org.jaxen.Navigator navigator)">1</method>
			<method name="private void init()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.JAXPHelper</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>14</rfc>
		<lcom>3</lcom>
		<ca>2</ca>
		<ce>9</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>34</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.333333333333334</amc>
		<cc>
			<method name="protected void _init_()">1</method>
			<method name="public static org.xml.sax.XMLReader createXMLReader(boolean validating, boolean namespaceAware)">1</method>
			<method name="public static org.w3c.dom.Document createDocument(boolean validating, boolean namespaceAware)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.jaxb.JAXBObjectModifier</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>3</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract javax.xml.bind.Element modifyObject(javax.xml.bind.Element)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.FlyweightAttribute</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>8</cbo>
		<rfc>10</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>6</npm>
		<lcom3>0.3</lcom3>
		<loc>54</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.666666666666667</amc>
		<cc>
			<method name="public void _init_(String name, String value)">1</method>
			<method name="public void _init_(String name, String value, org.dom4j.Namespace namespace)">1</method>
			<method name="public void _init_(org.dom4j.QName qname)">1</method>
			<method name="public String getValue()">1</method>
			<method name="public void _init_(org.dom4j.QName qname, String value)">1</method>
			<method name="public org.dom4j.QName getQName()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.IllegalAddException</name>
		<wmc>3</wmc>
		<dit>5</dit>
		<noc>0</noc>
		<cbo>15</cbo>
		<rfc>10</rfc>
		<lcom>3</lcom>
		<ca>7</ca>
		<ce>8</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>49</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>1.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>15.333333333333334</amc>
		<cc>
			<method name="public void _init_(String reason)">1</method>
			<method name="public void _init_(org.dom4j.Element parent, org.dom4j.Node node, String reason)">1</method>
			<method name="public void _init_(org.dom4j.Branch parent, org.dom4j.Node node, String reason)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.jaxb.JAXBReader$PruningElementHandler</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>6</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>1.0</lcom3>
		<loc>20</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.333333333333333</amc>
		<cc>
			<method name="public void onStart(org.dom4j.ElementPath parm1)">1</method>
			<method name="public void _init_(org.dom4j.jaxb.JAXBReader this$0)">1</method>
			<method name="public void onEnd(org.dom4j.ElementPath elementPath)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.NodeComparator</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>13</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>156</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>30.0</amc>
		<cc>
			<method name="private int compareSiblings(Object sib1, Object sib2)">1</method>
			<method name="private int getDepth(Object o)">1</method>
			<method name="public int compare(Object o1, Object o2)">9</method>
			<method name="void _init_(org.jaxen.Navigator navigator)">1</method>
			<method name="private boolean isNonChild(Object o)">3</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.SubstringAfterFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>12</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>48</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>15.0</amc>
		<cc>
			<method name="public static String evaluate(Object strArg, Object matchArg, org.jaxen.Navigator nav)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.AbstractNode</name>
		<wmc>35</wmc>
		<dit>1</dit>
		<noc>7</noc>
		<cbo>27</cbo>
		<rfc>63</rfc>
		<lcom>591</lcom>
		<ca>7</ca>
		<ce>20</ce>
		<npm>32</npm>
		<lcom3>0.9264705882352942</lcom3>
		<loc>336</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.25980392156862747</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.542857142857143</amc>
		<cc>
			<method name="public void write(java.io.Writer writer)">1</method>
			<method name="public java.util.List selectNodes(String xpathExpression, String comparisonXPathExpression)">1</method>
			<method name="public void setName(String name)">1</method>
			<method name="protected org.dom4j.DocumentFactory getDocumentFactory()">1</method>
			<method name="public org.dom4j.Node asXPathResult(org.dom4j.Element parent)">2</method>
			<method name="public short getNodeType()">1</method>
			<method name="public Object clone()">2</method>
			<method name="public String getUniquePath()">1</method>
			<method name="public org.dom4j.Document getDocument()">2</method>
			<method name="public String getStringValue()">1</method>
			<method name="public String getNodeTypeName()">3</method>
			<method name="public org.dom4j.NodeFilter createXPathFilter(String patternText)">1</method>
			<method name="public boolean isReadOnly()">1</method>
			<method name="public void setDocument(org.dom4j.Document document)">1</method>
			<method name="public org.dom4j.Node detach()">3</method>
			<method name="public boolean supportsParent()">1</method>
			<method name="public Number numberValueOf(String xpathExpression)">1</method>
			<method name="public java.util.List selectNodes(String xpathExpression)">1</method>
			<method name="public String valueOf(String xpathExpression)">1</method>
			<method name="public String getName()">1</method>
			<method name="public org.dom4j.rule.Pattern createPattern(String patternText)">1</method>
			<method name="public void setParent(org.dom4j.Element parent)">1</method>
			<method name="public String getText()">1</method>
			<method name="protected org.dom4j.Node createXPathResult(org.dom4j.Element parent)">1</method>
			<method name="public java.util.List selectNodes(String xpathExpression, String comparisonXPathExpression, boolean removeDuplicates)">1</method>
			<method name="public String getPath()">1</method>
			<method name="public boolean hasContent()">1</method>
			<method name="public void setText(String text)">1</method>
			<method name="public Object selectObject(String xpathExpression)">1</method>
			<method name="public org.dom4j.Node selectSingleNode(String xpathExpression)">1</method>
			<method name="public org.dom4j.XPath createXPath(String xpathExpression)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public boolean matches(String patternText)">1</method>
			<method name="public org.dom4j.Element getParent()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.Visitor</name>
		<wmc>10</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>23</cbo>
		<rfc>10</rfc>
		<lcom>45</lcom>
		<ca>12</ca>
		<ce>12</ce>
		<npm>10</npm>
		<lcom3>2.0</lcom3>
		<loc>10</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.18181818181818182</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void visit(org.dom4j.Element)">1</method>
			<method name="public abstract void visit(org.dom4j.CDATA)">1</method>
			<method name="public abstract void visit(org.dom4j.Attribute)">1</method>
			<method name="public abstract void visit(org.dom4j.Comment)">1</method>
			<method name="public abstract void visit(org.dom4j.DocumentType)">1</method>
			<method name="public abstract void visit(org.dom4j.Entity)">1</method>
			<method name="public abstract void visit(org.dom4j.ProcessingInstruction)">1</method>
			<method name="public abstract void visit(org.dom4j.Text)">1</method>
			<method name="public abstract void visit(org.dom4j.Document)">1</method>
			<method name="public abstract void visit(org.dom4j.Namespace)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.xom.DocumentNavigator$XPathNamespace</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>10</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>5</npm>
		<lcom3>0.5</lcom3>
		<loc>52</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.8</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public String getNamespaceURI()">1</method>
			<method name="public void _init_(nu.xom.Element elt, String uri, String prefix)">1</method>
			<method name="public String getNamespacePrefix()">1</method>
			<method name="public nu.xom.Element getElement()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.CharacterData</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>17</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>13</ca>
		<ce>4</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void appendText(String)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.util.IndexedDocumentFactory</name>
		<wmc>5</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>8</rfc>
		<lcom>8</lcom>
		<ca>0</ca>
		<ce>6</ce>
		<npm>4</npm>
		<lcom3>0.75</lcom3>
		<loc>27</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.2</amc>
		<cc>
			<method name="public org.dom4j.Element createElement(org.dom4j.QName qname)">1</method>
			<method name="public org.dom4j.Element createElement(org.dom4j.QName qname, int attributeCount)">1</method>
			<method name="public static org.dom4j.DocumentFactory getInstance()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.datatype.SchemaParser</name>
		<wmc>19</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>30</cbo>
		<rfc>66</rfc>
		<lcom>99</lcom>
		<ca>1</ca>
		<ce>30</ce>
		<npm>4</npm>
		<lcom3>0.6626984126984127</lcom3>
		<loc>785</loc>
		<dam>1.0</dam>
		<moa>13</moa>
		<mfa>0.0</mfa>
		<cam>0.22777777777777777</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>39.578947368421055</amc>
		<cc>
			<method name="public void _init_(org.dom4j.datatype.DatatypeDocumentFactory documentFactory)">1</method>
			<method name="private com.sun.msv.datatype.xsd.XSDatatype getTypeByName(String type)">6</method>
			<method name="private void onDatatypeElement(org.dom4j.Element xsdElement, org.dom4j.DocumentFactory parentFactory)">8</method>
			<method name="private com.sun.msv.datatype.xsd.XSDatatype loadXSDatatypeFromSimpleType(org.dom4j.Element xsdSimpleType)">5</method>
			<method name="private void onSchemaError(String message)">1</method>
			<method name="private void onSchemaComplexType(org.dom4j.Element schemaComplexType, org.dom4j.datatype.DatatypeElementFactory elementFactory)">5</method>
			<method name="private com.sun.msv.datatype.xsd.XSDatatype dataTypeForXsdAttribute(org.dom4j.Element xsdAttribute)">3</method>
			<method name="private void onNamedSchemaSimpleType(org.dom4j.Element schemaSimpleType)">2</method>
			<method name="private synchronized void internalBuild(org.dom4j.Document schemaDocument)">8</method>
			<method name="private void onDatatypeAttribute(org.dom4j.Element xsdElement, org.dom4j.datatype.DatatypeElementFactory elementFactory, org.dom4j.Element xsdAttribute)">2</method>
			<method name="public void build(org.dom4j.Document schemaDocument, org.dom4j.Namespace namespace)">1</method>
			<method name="public void build(org.dom4j.Document schemaDocument)">1</method>
			<method name="private void onChildElements(org.dom4j.Element element, org.dom4j.datatype.DatatypeElementFactory fact)">2</method>
			<method name="private com.sun.msv.datatype.xsd.XSDatatype deriveSimpleType(com.sun.msv.datatype.xsd.XSDatatype baseType, org.dom4j.Element xsdRestriction)">2</method>
			<method name="static void _clinit_()">1</method>
			<method name="private org.dom4j.datatype.DatatypeElementFactory getDatatypeElementFactory(org.dom4j.QName name)">2</method>
			<method name="public void _init_()">1</method>
			<method name="private void onNamedSchemaComplexType(org.dom4j.Element schemaComplexType)">2</method>
			<method name="private org.dom4j.QName getQName(String name)">2</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.NamespaceUriFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>21</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>101</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>32.666666666666664</amc>
		<cc>
			<method name="public static String evaluate(java.util.List list, org.jaxen.Navigator nav)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.rule.pattern.DefaultPattern</name>
		<wmc>6</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>8</rfc>
		<lcom>13</lcom>
		<ca>0</ca>
		<ce>6</ce>
		<npm>6</npm>
		<lcom3>0.8</lcom3>
		<loc>26</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4444444444444444</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.1666666666666665</amc>
		<cc>
			<method name="public boolean matches(org.dom4j.Node node)">1</method>
			<method name="public org.dom4j.rule.Pattern[] getUnionPatterns()">1</method>
			<method name="public short getMatchType()">1</method>
			<method name="public String getMatchesNodeName()">1</method>
			<method name="public double getPriority()">1</method>
			<method name="public void _init_(org.dom4j.NodeFilter filter)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultPathExpr</name>
		<wmc>9</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>25</rfc>
		<lcom>28</lcom>
		<ca>1</ca>
		<ce>13</ce>
		<npm>9</npm>
		<lcom3>0.3125</lcom3>
		<loc>160</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.3111111111111111</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>16.555555555555557</amc>
		<cc>
			<method name="public String toString()">2</method>
			<method name="public String getText()">3</method>
			<method name="public Object evaluate(org.jaxen.Context context)">1</method>
			<method name="public org.jaxen.expr.Expr simplify()">7</method>
			<method name="public void _init_(org.jaxen.expr.Expr filterExpr, org.jaxen.expr.LocationPath locationPath)">1</method>
			<method name="public org.jaxen.expr.LocationPath getLocationPath()">1</method>
			<method name="public org.jaxen.expr.Expr getFilterExpr()">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public void setFilterExpr(org.jaxen.expr.Expr filterExpr)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.FilterExpr</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>16</cbo>
		<rfc>2</rfc>
		<lcom>1</lcom>
		<ca>10</ca>
		<ce>6</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>2</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract boolean asBoolean(org.jaxen.Context)">1</method>
			<method name="public abstract org.jaxen.expr.Expr getExpr()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.VariableReferenceExpr</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>2</rfc>
		<lcom>1</lcom>
		<ca>7</ca>
		<ce>3</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>2</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract String getVariableName()">1</method>
			<method name="public abstract String getPrefix()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.dom.DocumentNavigator$AttributeIterator</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>10</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>0.3333333333333333</lcom3>
		<loc>49</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.75</amc>
		<cc>
			<method name="public boolean hasNext()">2</method>
			<method name="public void remove()">1</method>
			<method name="public Object next()">2</method>
			<method name="void _init_(org.w3c.dom.Node parent)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.LastFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>8</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>24</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.0</amc>
		<cc>
			<method name="public static Double evaluate(org.jaxen.Context context)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.ConcurrentReaderHashMap$Values</name>
		<wmc>6</wmc>
		<dit>2</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>11</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>4</npm>
		<lcom3>0.0</lcom3>
		<loc>36</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.8</mfa>
		<cam>0.4166666666666667</cam>
		<ic>1</ic>
		<cbm>5</cbm>
		<amc>4.833333333333333</amc>
		<cc>
			<method name="private void _init_(org.dom4j.tree.ConcurrentReaderHashMap this$0)">1</method>
			<method name="public boolean contains(Object o)">1</method>
			<method name="public void clear()">1</method>
			<method name="void _init_(org.dom4j.tree.ConcurrentReaderHashMap x0, org.dom4j.tree.ConcurrentReaderHashMap$1 x1)">1</method>
			<method name="public int size()">1</method>
			<method name="public java.util.Iterator iterator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.SAXHelper</name>
		<wmc>7</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>18</cbo>
		<rfc>23</rfc>
		<lcom>19</lcom>
		<ca>4</ca>
		<ce>14</ce>
		<npm>3</npm>
		<lcom3>0.6666666666666666</lcom3>
		<loc>127</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.0</amc>
		<cc>
			<method name="protected void _init_()">1</method>
			<method name="public static boolean setParserFeature(org.xml.sax.XMLReader reader, String featureName, boolean value)">1</method>
			<method name="protected static org.xml.sax.XMLReader createXMLReaderViaJAXP(boolean validating, boolean namespaceAware)">3</method>
			<method name="protected static boolean isVerboseErrorReporting()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public static org.xml.sax.XMLReader createXMLReader(boolean validating)">1</method>
			<method name="public static boolean setParserProperty(org.xml.sax.XMLReader reader, String propertyName, Object value)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.dom.NamespaceNode$1</name>
		<wmc>0</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>3</cbo>
		<rfc>0</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>1</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>0</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
		</cc>
	</class>
	<class>
		<name>org.jaxen.javabean.JavaBeanXPath</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>15</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>13</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>106</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>34.333333333333336</amc>
		<cc>
			<method name="protected org.jaxen.Context getContext(Object node)">5</method>
			<method name="public Object evaluate(Object node)">1</method>
			<method name="public void _init_(String xpathExpr)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.saxpath.base.XPathLexer</name>
		<wmc>44</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>51</rfc>
		<lcom>920</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>3</npm>
		<lcom3>0.5697674418604651</lcom3>
		<loc>1082</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.2318181818181818</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>23.5</amc>
		<cc>
			<method name="org.jaxen.saxpath.base.Token at()">1</method>
			<method name="org.jaxen.saxpath.base.Token relationalOperator()">6</method>
			<method name="char LA(int i)">2</method>
			<method name="int currentPosition()">1</method>
			<method name="void setPreviousToken(org.jaxen.saxpath.base.Token previousToken)">1</method>
			<method name="org.jaxen.saxpath.base.Token rightBracket()">1</method>
			<method name="org.jaxen.saxpath.base.Token slashes()">3</method>
			<method name="org.jaxen.saxpath.base.Token and()">5</method>
			<method name="org.jaxen.saxpath.base.Token div()">5</method>
			<method name="int endPosition()">1</method>
			<method name="org.jaxen.saxpath.base.Token minus()">1</method>
			<method name="public void _init_(String xpath)">1</method>
			<method name="void consume(int i)">1</method>
			<method name="org.jaxen.saxpath.base.Token literal()">4</method>
			<method name="org.jaxen.saxpath.base.Token identifier()">3</method>
			<method name="org.jaxen.saxpath.base.Token leftBracket()">1</method>
			<method name="org.jaxen.saxpath.base.Token rightParen()">1</method>
			<method name="boolean hasMoreChars()">2</method>
			<method name="org.jaxen.saxpath.base.Token operatorName()">6</method>
			<method name="boolean isIdentifierStartChar(char c)">1</method>
			<method name="public org.jaxen.saxpath.base.Token nextToken()">9</method>
			<method name="org.jaxen.saxpath.base.Token mod()">5</method>
			<method name="org.jaxen.saxpath.base.Token whitespace()">7</method>
			<method name="void _init_()">1</method>
			<method name="void consume()">1</method>
			<method name="org.jaxen.saxpath.base.Token dots()">3</method>
			<method name="org.jaxen.saxpath.base.Token notEquals()">1</method>
			<method name="org.jaxen.saxpath.base.Token leftParen()">1</method>
			<method name="org.jaxen.saxpath.base.Token number()">3</method>
			<method name="org.jaxen.saxpath.base.Token or()">4</method>
			<method name="org.jaxen.saxpath.base.Token plus()">1</method>
			<method name="void setXPath(String xpath)">1</method>
			<method name="org.jaxen.saxpath.base.Token pipe()">1</method>
			<method name="org.jaxen.saxpath.base.Token getPreviousToken()">1</method>
			<method name="public String getXPath()">1</method>
			<method name="org.jaxen.saxpath.base.Token star()">1</method>
			<method name="org.jaxen.saxpath.base.Token equals()">1</method>
			<method name="org.jaxen.saxpath.base.Token doubleColon()">1</method>
			<method name="boolean isIdentifierChar(char c)">1</method>
			<method name="org.jaxen.saxpath.base.Token dollar()">1</method>
			<method name="org.jaxen.saxpath.base.Token identifierOrOperatorName()">3</method>
			<method name="org.jaxen.saxpath.base.Token comma()">1</method>
			<method name="org.jaxen.saxpath.base.Token not()">1</method>
			<method name="org.jaxen.saxpath.base.Token colon()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.saxpath.Axis</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>6</rfc>
		<lcom>3</lcom>
		<ca>2</ca>
		<ce>4</ce>
		<npm>3</npm>
		<lcom3>1.5</lcom3>
		<loc>133</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>38.666666666666664</amc>
		<cc>
			<method name="public static String lookup(int axisNum)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public static int lookup(String axisName)">14</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.util.AttributeHelper</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>11</rfc>
		<lcom>6</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>42</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.5</amc>
		<cc>
			<method name="protected void _init_()">1</method>
			<method name="protected static boolean booleanValue(org.dom4j.Attribute attribute)">4</method>
			<method name="public static boolean booleanValue(org.dom4j.Element element, org.dom4j.QName attributeQName)">1</method>
			<method name="public static boolean booleanValue(org.dom4j.Element element, String attributeName)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.SubstringFunction</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>14</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>13</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>103</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>50.5</amc>
		<cc>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.ContainsFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>10</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>41</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.666666666666666</amc>
		<cc>
			<method name="public static Boolean evaluate(Object strArg, Object matchArg, org.jaxen.Navigator nav)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.util.XMLErrorHandler</name>
		<wmc>15</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>28</rfc>
		<lcom>17</lcom>
		<ca>0</ca>
		<ce>9</ce>
		<npm>13</npm>
		<lcom3>0.7551020408163265</lcom3>
		<loc>170</loc>
		<dam>1.0</dam>
		<moa>7</moa>
		<mfa>0.0</mfa>
		<cam>0.42857142857142855</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.866666666666667</amc>
		<cc>
			<method name="public org.dom4j.Element getErrors()">1</method>
			<method name="public org.dom4j.QName getFatalErrorQName()">1</method>
			<method name="public void _init_(org.dom4j.Element errors)">1</method>
			<method name="protected void addException(org.dom4j.Element element, org.xml.sax.SAXParseException e)">5</method>
			<method name="public org.dom4j.QName getErrorQName()">1</method>
			<method name="public void error(org.xml.sax.SAXParseException e)">1</method>
			<method name="public void setWarningQName(org.dom4j.QName warningQName)">1</method>
			<method name="public void fatalError(org.xml.sax.SAXParseException e)">1</method>
			<method name="public org.dom4j.QName getWarningQName()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void warning(org.xml.sax.SAXParseException e)">1</method>
			<method name="public void setErrors(org.dom4j.Element errors)">1</method>
			<method name="public void setFatalErrorQName(org.dom4j.QName fatalErrorQName)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void setErrorQName(org.dom4j.QName errorQName)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultTextNodeStep</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>13</rfc>
		<lcom>6</lcom>
		<ca>2</ca>
		<ce>11</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>33</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.25</amc>
		<cc>
			<method name="public String getText()">1</method>
			<method name="public void _init_(org.jaxen.expr.iter.IterableAxis axis, org.jaxen.expr.PredicateSet predicateSet)">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public boolean matches(Object node, org.jaxen.ContextSupport support)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.FloorFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>12</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>12</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>33</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.0</amc>
		<cc>
			<method name="public static Double evaluate(Object obj, org.jaxen.Navigator nav)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultVariableReferenceExpr</name>
		<wmc>7</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>14</rfc>
		<lcom>17</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>7</npm>
		<lcom3>0.3333333333333333</lcom3>
		<loc>104</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.35714285714285715</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.571428571428571</amc>
		<cc>
			<method name="public String toString()">2</method>
			<method name="public String getText()">2</method>
			<method name="public Object evaluate(org.jaxen.Context context)">1</method>
			<method name="public String getVariableName()">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public void _init_(String prefix, String variableName)">1</method>
			<method name="public String getPrefix()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.DocumentSource</name>
		<wmc>7</wmc>
		<dit>2</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>17</rfc>
		<lcom>9</lcom>
		<ca>0</ca>
		<ce>12</ce>
		<npm>7</npm>
		<lcom3>0.8333333333333334</lcom3>
		<loc>99</loc>
		<dam>0.5</dam>
		<moa>0</moa>
		<mfa>0.5833333333333334</mfa>
		<cam>0.34285714285714286</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.857142857142858</amc>
		<cc>
			<method name="public void setXMLReader(org.xml.sax.XMLReader reader)">1</method>
			<method name="public void setDocument(org.dom4j.Document document)">1</method>
			<method name="public void _init_(org.dom4j.Node node)">1</method>
			<method name="public void _init_(org.dom4j.Document document)">1</method>
			<method name="public org.xml.sax.XMLReader getXMLReader()">1</method>
			<method name="public void setInputSource(org.xml.sax.InputSource inputSource)">1</method>
			<method name="public org.dom4j.Document getDocument()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.dom.html.HTMLXPath</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>4</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>13</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.8333333333333334</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.5</amc>
		<cc>
			<method name="public void _init_(String xpathExpr, boolean toLowerCase)">1</method>
			<method name="public void _init_(String xpathExpr)">1</method>
		</cc>
	</class>
	<class>
		<name>com.adobe.ac.ant.tasks.UnixSWFLauncher</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>10</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>39</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>18.0</amc>
		<cc>
			<method name="public void launch(String arg0)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.xom.DocumentNavigator</name>
		<wmc>34</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>32</cbo>
		<rfc>77</rfc>
		<lcom>561</lcom>
		<ca>3</ca>
		<ce>31</ce>
		<npm>33</npm>
		<lcom3>2.0</lcom3>
		<loc>477</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4117647058823529</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.029411764705882</amc>
		<cc>
			<method name="public boolean isDocument(Object o)">1</method>
			<method name="public String getProcessingInstructionTarget(Object o)">2</method>
			<method name="public String getElementNamespaceUri(Object o)">2</method>
			<method name="public String getCommentStringValue(Object o)">2</method>
			<method name="public String getAttributeQName(Object o)">2</method>
			<method name="public String getAttributeStringValue(Object o)">2</method>
			<method name="public boolean isElement(Object o)">1</method>
			<method name="private boolean addNamespaceForElement(nu.xom.Element elt, String uri, String prefix, java.util.Map map)">4</method>
			<method name="public String translateNamespacePrefixToUri(String s, Object o)">6</method>
			<method name="public java.util.Iterator getNamespaceAxisIterator(Object o)">4</method>
			<method name="public boolean isAttribute(Object o)">1</method>
			<method name="public String getProcessingInstructionData(Object o)">2</method>
			<method name="public String getElementQName(Object o)">2</method>
			<method name="public String getElementName(Object o)">2</method>
			<method name="public boolean isProcessingInstruction(Object o)">1</method>
			<method name="public boolean isNamespace(Object o)">1</method>
			<method name="public String getTextStringValue(Object o)">2</method>
			<method name="public String getNamespaceStringValue(Object o)">4</method>
			<method name="public boolean isText(Object o)">1</method>
			<method name="public String getElementStringValue(Object o)">2</method>
			<method name="public Object getDocument(String s)">1</method>
			<method name="public java.util.Iterator getAttributeAxisIterator(Object o)">1</method>
			<method name="public Object getDocumentNode(Object o)">3</method>
			<method name="public java.util.Iterator getChildAxisIterator(Object o)">1</method>
			<method name="public boolean isComment(Object o)">1</method>
			<method name="public java.util.Iterator getPrecedingSiblingAxisIterator(Object o)">1</method>
			<method name="public String getAttributeName(Object o)">2</method>
			<method name="public java.util.Iterator getParentAxisIterator(Object o)">1</method>
			<method name="public String getAttributeNamespaceUri(Object o)">2</method>
			<method name="public java.util.Iterator getPrecedingAxisIterator(Object o)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public String getNamespacePrefix(Object o)">4</method>
			<method name="public Object getParentNode(Object o)">1</method>
			<method name="public org.jaxen.XPath parseXPath(String s)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.CeilingFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>12</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>12</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>33</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.0</amc>
		<cc>
			<method name="public static Double evaluate(Object obj, org.jaxen.Navigator nav)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.dom.DocumentNavigator$NodeIterator</name>
		<wmc>7</wmc>
		<dit>1</dit>
		<noc>7</noc>
		<cbo>14</cbo>
		<rfc>11</rfc>
		<lcom>15</lcom>
		<ca>7</ca>
		<ce>7</ce>
		<npm>4</npm>
		<lcom3>0.8333333333333334</lcom3>
		<loc>84</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5714285714285714</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.714285714285714</amc>
		<cc>
			<method name="public boolean hasNext()">2</method>
			<method name="public void remove()">1</method>
			<method name="protected abstract org.w3c.dom.Node getFirstNode(org.w3c.dom.Node)">1</method>
			<method name="public Object next()">3</method>
			<method name="protected abstract org.w3c.dom.Node getNextNode(org.w3c.dom.Node)">1</method>
			<method name="private boolean isXPathNode(org.w3c.dom.Node node)">3</method>
			<method name="public void _init_(org.jaxen.dom.DocumentNavigator this$0, org.w3c.dom.Node contextNode)">2</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.FollowingAxisIterator</name>
		<wmc>6</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>16</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>11</ce>
		<npm>4</npm>
		<lcom3>0.25</lcom3>
		<loc>120</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4444444444444444</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>18.333333333333332</amc>
		<cc>
			<method name="public boolean hasNext()">3</method>
			<method name="public void remove()">1</method>
			<method name="private boolean goForward()">3</method>
			<method name="private boolean goUp()">5</method>
			<method name="public Object next()">1</method>
			<method name="public void _init_(Object contextNode, org.jaxen.Navigator navigator)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.javabean.Element</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>5</rfc>
		<lcom>0</lcom>
		<ca>3</ca>
		<ce>3</ce>
		<npm>4</npm>
		<lcom3>0.6666666666666666</lcom3>
		<loc>28</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.25</amc>
		<cc>
			<method name="public Object getObject()">1</method>
			<method name="public void _init_(org.jaxen.javabean.Element parent, String name, Object object)">1</method>
			<method name="public String getName()">1</method>
			<method name="public org.jaxen.javabean.Element getParent()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.jdom.DocumentNavigator</name>
		<wmc>33</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>31</cbo>
		<rfc>90</rfc>
		<lcom>528</lcom>
		<ca>2</ca>
		<ce>31</ce>
		<npm>33</npm>
		<lcom3>2.0</lcom3>
		<loc>664</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>19.12121212121212</amc>
		<cc>
			<method name="public java.util.Iterator getChildAxisIterator(Object contextNode)">3</method>
			<method name="public String getCommentStringValue(Object obj)">1</method>
			<method name="public Object getDocument(String url)">1</method>
			<method name="public String getAttributeNamespaceUri(Object obj)">3</method>
			<method name="public String getNamespaceStringValue(Object obj)">2</method>
			<method name="public String getElementNamespaceUri(Object obj)">3</method>
			<method name="public java.util.Iterator getAttributeAxisIterator(Object contextNode)">2</method>
			<method name="public String getTextStringValue(Object obj)">3</method>
			<method name="public java.util.Iterator getParentAxisIterator(Object contextNode)">11</method>
			<method name="public boolean isElement(Object obj)">1</method>
			<method name="public String getProcessingInstructionData(Object obj)">1</method>
			<method name="public String getAttributeQName(Object obj)">3</method>
			<method name="public String getAttributeStringValue(Object obj)">1</method>
			<method name="public boolean isProcessingInstruction(Object obj)">1</method>
			<method name="public java.util.Iterator getAttributeAxisIterator(Object contextNode, String localName, String namespacePrefix, String namespaceURI)">4</method>
			<method name="public String getElementStringValue(Object obj)">5</method>
			<method name="public static org.jaxen.Navigator getInstance()">1</method>
			<method name="public boolean isNamespace(Object obj)">3</method>
			<method name="public Object getDocumentNode(Object contextNode)">2</method>
			<method name="public String getElementQName(Object obj)">3</method>
			<method name="public String getNamespacePrefix(Object obj)">2</method>
			<method name="public String getProcessingInstructionTarget(Object obj)">1</method>
			<method name="public boolean isDocument(Object obj)">1</method>
			<method name="public boolean isAttribute(Object obj)">1</method>
			<method name="public boolean isText(Object obj)">3</method>
			<method name="public org.jaxen.XPath parseXPath(String xpath)">1</method>
			<method name="public boolean isComment(Object obj)">1</method>
			<method name="public String getAttributeName(Object obj)">1</method>
			<method name="public java.util.Iterator getNamespaceAxisIterator(Object contextNode)">8</method>
			<method name="public String translateNamespacePrefixToUri(String prefix, Object context)">9</method>
			<method name="public String getElementName(Object obj)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public java.util.Iterator getChildAxisIterator(Object contextNode, String localName, String namespacePrefix, String namespaceURI)">7</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.util.NodeComparator</name>
		<wmc>14</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>22</cbo>
		<rfc>46</rfc>
		<lcom>91</lcom>
		<ca>0</ca>
		<ce>22</ce>
		<npm>14</npm>
		<lcom3>2.0</lcom3>
		<loc>434</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.1377551020408163</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>30.0</amc>
		<cc>
			<method name="public int compare(org.dom4j.ProcessingInstruction n1, org.dom4j.ProcessingInstruction n2)">2</method>
			<method name="public int compare(Object o1, Object o2)">8</method>
			<method name="public int compare(org.dom4j.Element n1, org.dom4j.Element n2)">5</method>
			<method name="public int compare(org.dom4j.Namespace n1, org.dom4j.Namespace n2)">2</method>
			<method name="public int compare(String o1, String o2)">4</method>
			<method name="public int compareContent(org.dom4j.Branch b1, org.dom4j.Branch b2)">4</method>
			<method name="public int compare(org.dom4j.Node n1, org.dom4j.Node n2)">3</method>
			<method name="public int compare(org.dom4j.Entity n1, org.dom4j.Entity n2)">2</method>
			<method name="public int compare(org.dom4j.CharacterData t1, org.dom4j.CharacterData t2)">1</method>
			<method name="public int compare(org.dom4j.Document n1, org.dom4j.Document n2)">2</method>
			<method name="public int compare(org.dom4j.DocumentType o1, org.dom4j.DocumentType o2)">6</method>
			<method name="public void _init_()">1</method>
			<method name="public int compare(org.dom4j.Attribute n1, org.dom4j.Attribute n2)">2</method>
			<method name="public int compare(org.dom4j.QName n1, org.dom4j.QName n2)">2</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.ConcurrentReaderHashMap$1</name>
		<wmc>0</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>0</rfc>
		<lcom>0</lcom>
		<ca>4</ca>
		<ce>1</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>0</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
		</cc>
	</class>
	<class>
		<name>org.dom4j.dom.DOMDocument</name>
		<wmc>51</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>38</cbo>
		<rfc>101</rfc>
		<lcom>1263</lcom>
		<ca>2</ca>
		<ce>37</ce>
		<npm>47</npm>
		<lcom3>0.64</lcom3>
		<loc>356</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.2733333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.96078431372549</amc>
		<cc>
			<method name="public boolean isSupported(String feature, String version)">1</method>
			<method name="protected org.dom4j.DocumentFactory getDocumentFactory()">2</method>
			<method name="public org.w3c.dom.Node getFirstChild()">1</method>
			<method name="public String getNodeName()">1</method>
			<method name="public org.w3c.dom.NamedNodeMap getAttributes()">1</method>
			<method name="public org.w3c.dom.Attr createAttribute(String name)">1</method>
			<method name="public org.w3c.dom.NodeList getChildNodes()">1</method>
			<method name="public org.w3c.dom.Node getNextSibling()">1</method>
			<method name="public org.w3c.dom.Element createElementNS(String namespaceURI, String qualifiedName)">1</method>
			<method name="public org.w3c.dom.Node importNode(org.w3c.dom.Node importedNode, boolean deep)">1</method>
			<method name="public String getNodeValue()">1</method>
			<method name="public void _init_(org.dom4j.dom.DOMElement rootElement, org.dom4j.dom.DOMDocumentType docType)">1</method>
			<method name="public boolean supports(String feature, String version)">1</method>
			<method name="public org.w3c.dom.Document getOwnerDocument()">1</method>
			<method name="public org.w3c.dom.DocumentFragment createDocumentFragment()">1</method>
			<method name="public String getNamespaceURI()">1</method>
			<method name="public org.w3c.dom.Element getDocumentElement()">1</method>
			<method name="public org.w3c.dom.NodeList getElementsByTagName(String name)">1</method>
			<method name="public void _init_(org.dom4j.dom.DOMElement rootElement)">1</method>
			<method name="public org.w3c.dom.Node replaceChild(org.w3c.dom.Node newChild, org.w3c.dom.Node oldChild)">1</method>
			<method name="public org.w3c.dom.Node appendChild(org.w3c.dom.Node newChild)">1</method>
			<method name="public org.w3c.dom.Node removeChild(org.w3c.dom.Node oldChild)">1</method>
			<method name="public org.w3c.dom.CDATASection createCDATASection(String data)">1</method>
			<method name="public org.w3c.dom.Comment createComment(String data)">1</method>
			<method name="public String getLocalName()">1</method>
			<method name="public org.w3c.dom.Node cloneNode(boolean deep)">1</method>
			<method name="public void setNodeValue(String nodeValue)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public org.w3c.dom.Node getLastChild()">1</method>
			<method name="public org.w3c.dom.EntityReference createEntityReference(String name)">1</method>
			<method name="public org.w3c.dom.Element createElement(String name)">1</method>
			<method name="public void _init_(String name)">1</method>
			<method name="public org.w3c.dom.DocumentType getDoctype()">1</method>
			<method name="public org.w3c.dom.Text createTextNode(String data)">1</method>
			<method name="public void setPrefix(String prefix)">1</method>
			<method name="public org.w3c.dom.DOMImplementation getImplementation()">2</method>
			<method name="public org.w3c.dom.NodeList getElementsByTagNameNS(String namespace, String name)">1</method>
			<method name="public org.w3c.dom.Element getElementById(String elementId)">1</method>
			<method name="public org.w3c.dom.ProcessingInstruction createProcessingInstruction(String target, String data)">1</method>
			<method name="public void _init_(String name, org.dom4j.dom.DOMElement rootElement, org.dom4j.dom.DOMDocumentType docType)">1</method>
			<method name="public org.w3c.dom.Node insertBefore(org.w3c.dom.Node newChild, org.w3c.dom.Node refChild)">1</method>
			<method name="public boolean hasAttributes()">1</method>
			<method name="public String getPrefix()">1</method>
			<method name="private void init()">1</method>
			<method name="public void _init_(org.dom4j.dom.DOMDocumentType docType)">1</method>
			<method name="public org.w3c.dom.Node getParentNode()">1</method>
			<method name="private void checkNewChildNode(org.w3c.dom.Node newChild)">1</method>
			<method name="public boolean hasChildNodes()">2</method>
			<method name="public org.w3c.dom.Attr createAttributeNS(String namespaceURI, String qualifiedName)">1</method>
			<method name="public org.w3c.dom.Node getPreviousSibling()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.SingletonList</name>
		<wmc>3</wmc>
		<dit>3</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>9</rfc>
		<lcom>1</lcom>
		<ca>4</ca>
		<ce>6</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>29</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.9444444444444444</mfa>
		<cam>0.5555555555555556</cam>
		<ic>2</ic>
		<cbm>5</cbm>
		<amc>8.333333333333334</amc>
		<cc>
			<method name="public Object get(int index)">2</method>
			<method name="public int size()">1</method>
			<method name="public void _init_(Object element)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.NamedAccessNavigator</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>2</rfc>
		<lcom>1</lcom>
		<ca>5</ca>
		<ce>5</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>2</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract java.util.Iterator getChildAxisIterator(Object, String, String, String)">1</method>
			<method name="public abstract java.util.Iterator getAttributeAxisIterator(Object, String, String, String)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.PruningDispatchHandler</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>7</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>16</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.0</amc>
		<cc>
			<method name="void _init_()">1</method>
			<method name="public void onEnd(org.dom4j.ElementPath elementPath)">2</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.TranslateFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>23</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>13</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>140</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>45.666666666666664</amc>
		<cc>
			<method name="public static String evaluate(Object strArg, Object fromArg, Object toArg, org.jaxen.Navigator nav)">6</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.IdentityHashMap$Entry</name>
		<wmc>8</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>17</rfc>
		<lcom>0</lcom>
		<ca>3</ca>
		<ce>5</ce>
		<npm>6</npm>
		<lcom3>0.5357142857142857</lcom3>
		<loc>123</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.40625</cam>
		<ic>1</ic>
		<cbm>1</cbm>
		<amc>13.875</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="void _init_(int hash, Object key, Object value, org.jaxen.util.IdentityHashMap$Entry next)">1</method>
			<method name="public int hashCode()">2</method>
			<method name="public boolean equals(Object o)">8</method>
			<method name="protected Object clone()">2</method>
			<method name="public Object getKey()">1</method>
			<method name="public Object setValue(Object value)">1</method>
			<method name="public Object getValue()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.bean.BeanAttributeList</name>
		<wmc>18</wmc>
		<dit>3</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>32</rfc>
		<lcom>63</lcom>
		<ca>3</ca>
		<ce>11</ce>
		<npm>17</npm>
		<lcom3>0.5490196078431373</lcom3>
		<loc>215</loc>
		<dam>1.0</dam>
		<moa>3</moa>
		<mfa>0.68</mfa>
		<cam>0.30158730158730157</cam>
		<ic>2</ic>
		<cbm>7</cbm>
		<amc>10.777777777777779</amc>
		<cc>
			<method name="public void _init_(org.dom4j.bean.BeanElement parent)">2</method>
			<method name="public void _init_(org.dom4j.bean.BeanElement parent, org.dom4j.bean.BeanMetaData beanMetaData)">1</method>
			<method name="public void setData(int index, Object data)">1</method>
			<method name="public org.dom4j.Attribute attribute(org.dom4j.QName qname)">1</method>
			<method name="public boolean add(Object object)">1</method>
			<method name="public int size()">1</method>
			<method name="protected org.dom4j.bean.BeanAttribute createAttribute(org.dom4j.bean.BeanElement element, int index)">1</method>
			<method name="public Object set(int index, Object object)">1</method>
			<method name="public void clear()">3</method>
			<method name="public org.dom4j.bean.BeanAttribute attribute(int index)">4</method>
			<method name="public boolean remove(Object object)">1</method>
			<method name="public Object remove(int index)">1</method>
			<method name="public Object getData(int index)">1</method>
			<method name="public void add(int index, Object object)">1</method>
			<method name="public org.dom4j.bean.BeanElement getParent()">1</method>
			<method name="public Object get(int index)">2</method>
			<method name="public org.dom4j.Attribute attribute(String name)">1</method>
			<method name="public org.dom4j.QName getQName(int index)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.OutputFormat</name>
		<wmc>35</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>15</cbo>
		<rfc>45</rfc>
		<lcom>323</lcom>
		<ca>8</ca>
		<ce>7</ce>
		<npm>35</npm>
		<lcom3>0.7857142857142857</lcom3>
		<loc>554</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2619047619047619</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.428571428571429</amc>
		<cc>
			<method name="public void setAttributeQuoteCharacter(char quoteChar)">3</method>
			<method name="public void setIndentSize(int indentSize)">2</method>
			<method name="public boolean isExpandEmptyElements()">1</method>
			<method name="public void setNewLineAfterDeclaration(boolean newLineAfterDeclaration)">1</method>
			<method name="public String getIndent()">1</method>
			<method name="public void setIndent(boolean doIndent)">2</method>
			<method name="public void _init_(String indent, boolean newlines)">1</method>
			<method name="public boolean isNewlines()">1</method>
			<method name="public boolean isPadText()">1</method>
			<method name="public boolean isXHTML()">1</method>
			<method name="public static org.dom4j.io.OutputFormat createCompactFormat()">1</method>
			<method name="public void _init_(String indent)">1</method>
			<method name="public void setXHTML(boolean xhtml)">1</method>
			<method name="public char getAttributeQuoteCharacter()">1</method>
			<method name="public int getNewLineAfterNTags()">1</method>
			<method name="public void setNewlines(boolean newlines)">1</method>
			<method name="public String getLineSeparator()">1</method>
			<method name="public void setSuppressDeclaration(boolean suppressDeclaration)">1</method>
			<method name="public boolean isNewLineAfterDeclaration()">1</method>
			<method name="public void setEncoding(String encoding)">2</method>
			<method name="public void setOmitEncoding(boolean omitEncoding)">1</method>
			<method name="public void _init_(String indent, boolean newlines, String encoding)">1</method>
			<method name="public boolean isTrimText()">1</method>
			<method name="public int parseOptions(String[] args, int i)">13</method>
			<method name="public void setLineSeparator(String separator)">1</method>
			<method name="public void setNewLineAfterNTags(int tagCount)">1</method>
			<method name="public boolean isOmitEncoding()">1</method>
			<method name="public void setIndent(String indent)">3</method>
			<method name="public boolean isSuppressDeclaration()">1</method>
			<method name="public String getEncoding()">1</method>
			<method name="public void setExpandEmptyElements(boolean expandEmptyElements)">1</method>
			<method name="public static org.dom4j.io.OutputFormat createPrettyPrint()">1</method>
			<method name="public void setTrimText(boolean trimText)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void setPadText(boolean padText)">1</method>
		</cc>
	</class>
	<class>
		<name>com.adobe.ac.ant.tasks.FlexUnitTask</name>
		<wmc>21</wmc>
		<dit>3</dit>
		<noc>0</noc>
		<cbo>24</cbo>
		<rfc>51</rfc>
		<lcom>160</lcom>
		<ca>1</ca>
		<ce>24</ce>
		<npm>11</npm>
		<lcom3>0.9194444444444445</lcom3>
		<loc>399</loc>
		<dam>0.9444444444444444</dam>
		<moa>0</moa>
		<mfa>0.6491228070175439</mfa>
		<cam>0.23129251700680273</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.142857142857142</amc>
		<cc>
			<method name="public void setToDir(String arg0)">1</method>
			<method name="private void receiveFlexUnitResults()">1</method>
			<method name="public void setFailureproperty(String arg0)">1</method>
			<method name="private String formatLogReport(org.dom4j.Element arg0)">1</method>
			<method name="public void execute()">1</method>
			<method name="public void setHaltonfailure(boolean arg0)">1</method>
			<method name="public void setSWF(String arg0)">1</method>
			<method name="static int access$500(com.adobe.ac.ant.tasks.FlexUnitTask arg0)">1</method>
			<method name="private void handleFailures()">3</method>
			<method name="static int access$200(com.adobe.ac.ant.tasks.FlexUnitTask arg0)">1</method>
			<method name="static String access$002(com.adobe.ac.ant.tasks.FlexUnitTask arg0, String arg1)">1</method>
			<method name="public void setTimeout(int arg0)">1</method>
			<method name="private void writeTestReport(String arg0)">4</method>
			<method name="public void log(String arg0)">1</method>
			<method name="public void setPort(int arg0)">1</method>
			<method name="static void access$400(com.adobe.ac.ant.tasks.FlexUnitTask arg0, String arg1)">1</method>
			<method name="public static void main(String[] arg0)">1</method>
			<method name="public void setVerbose(boolean arg0)">1</method>
			<method name="static boolean access$102(com.adobe.ac.ant.tasks.FlexUnitTask arg0, boolean arg1)">1</method>
			<method name="static boolean access$300(com.adobe.ac.ant.tasks.FlexUnitTask arg0)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.AbstractElement</name>
		<wmc>118</wmc>
		<dit>0</dit>
		<noc>2</noc>
		<cbo>43</cbo>
		<rfc>232</rfc>
		<lcom>6901</lcom>
		<ca>4</ca>
		<ce>39</ce>
		<npm>102</npm>
		<lcom3>0.9606837606837607</lcom3>
		<loc>2326</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.09230769230769231</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>18.66949152542373</amc>
		<cc>
			<method name="public org.dom4j.Element addAttribute(String name, String value)">5</method>
			<method name="protected org.dom4j.Element createElement(String name)">1</method>
			<method name="public String getNamespacePrefix()">1</method>
			<method name="public boolean remove(org.dom4j.Entity entity)">1</method>
			<method name="public void add(org.dom4j.Element element)">1</method>
			<method name="public String getQualifiedName()">1</method>
			<method name="public org.dom4j.ProcessingInstruction processingInstruction(String target)">4</method>
			<method name="public org.dom4j.Element addProcessingInstruction(String target, String data)">1</method>
			<method name="public boolean remove(org.dom4j.Node node)">2</method>
			<method name="public void add(org.dom4j.Comment comment)">1</method>
			<method name="public void write(java.io.Writer out)">1</method>
			<method name="public org.dom4j.Attribute attribute(String name)">3</method>
			<method name="public org.dom4j.Attribute attribute(int index)">1</method>
			<method name="public String elementText(String name)">2</method>
			<method name="public int indexOf(org.dom4j.Node node)">1</method>
			<method name="public java.util.List additionalNamespaces(String defaultNamespaceURI)">4</method>
			<method name="protected void addNode(org.dom4j.Node node)">2</method>
			<method name="public String getNamespaceURI()">1</method>
			<method name="protected void addNewNode(org.dom4j.Node node)">1</method>
			<method name="public java.util.Iterator elementIterator(org.dom4j.QName qName)">1</method>
			<method name="public java.util.List processingInstructions()">3</method>
			<method name="public void add(org.dom4j.ProcessingInstruction pi)">1</method>
			<method name="public String attributeValue(String name, String defaultValue)">2</method>
			<method name="public String getName()">1</method>
			<method name="public java.util.List elements()">3</method>
			<method name="public org.dom4j.Element createCopy()">1</method>
			<method name="public boolean isRootElement()">3</method>
			<method name="protected org.dom4j.Element createElement(org.dom4j.QName qName)">1</method>
			<method name="public java.util.List getNamespacesForURI(String uri)">4</method>
			<method name="public void appendAttributes(org.dom4j.Element element)">3</method>
			<method name="public void setText(String text)">3</method>
			<method name="public String getXPathNameStep()">5</method>
			<method name="protected boolean removeNode(org.dom4j.Node node)">2</method>
			<method name="public org.dom4j.Attribute attribute(String name, org.dom4j.Namespace namespace)">1</method>
			<method name="public org.dom4j.Element element(String name, org.dom4j.Namespace namespace)">1</method>
			<method name="public org.dom4j.Element addEntity(String name, String text)">1</method>
			<method name="public boolean remove(org.dom4j.Namespace namespace)">1</method>
			<method name="public String elementText(org.dom4j.QName qName)">2</method>
			<method name="public void setName(String name)">1</method>
			<method name="protected java.util.List createAttributeList(int size)">1</method>
			<method name="protected void addNode(int index, org.dom4j.Node node)">2</method>
			<method name="public void setAttributeValue(org.dom4j.QName qName, String value)">1</method>
			<method name="public void setData(Object data)">1</method>
			<method name="public String getUniquePath(org.dom4j.Element context)">5</method>
			<method name="public java.util.List elements(org.dom4j.QName qName)">4</method>
			<method name="public java.util.List attributes()">1</method>
			<method name="public String toString()">3</method>
			<method name="public org.dom4j.Element addNamespace(String prefix, String uri)">1</method>
			<method name="public void add(org.dom4j.Namespace namespace)">1</method>
			<method name="public boolean remove(org.dom4j.Comment comment)">1</method>
			<method name="public int nodeCount()">1</method>
			<method name="public java.util.List elements(String name, org.dom4j.Namespace namespace)">1</method>
			<method name="public org.dom4j.Element addComment(String comment)">1</method>
			<method name="public org.dom4j.Namespace getNamespace()">1</method>
			<method name="public org.dom4j.Element element(String name)">4</method>
			<method name="public void add(org.dom4j.Entity entity)">1</method>
			<method name="public org.dom4j.Namespace getNamespaceForPrefix(String prefix)">11</method>
			<method name="public void setNamespace(org.dom4j.Namespace namespace)">1</method>
			<method name="public void ensureAttributesCapacity(int minCapacity)">3</method>
			<method name="public org.dom4j.Element addElement(String name)">4</method>
			<method name="protected void childAdded(org.dom4j.Node node)">2</method>
			<method name="public void add(org.dom4j.Node node)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public org.dom4j.Node node(int index)">5</method>
			<method name="public boolean remove(org.dom4j.Attribute attribute)">3</method>
			<method name="public void setAttributeValue(String name, String value)">1</method>
			<method name="protected org.dom4j.DocumentFactory getDocumentFactory()">3</method>
			<method name="public String attributeValue(org.dom4j.QName qName)">2</method>
			<method name="public boolean remove(org.dom4j.CDATA cdata)">1</method>
			<method name="public void add(org.dom4j.Text text)">1</method>
			<method name="public org.dom4j.Namespace getNamespaceForURI(String uri)">7</method>
			<method name="public boolean isTextOnly()">4</method>
			<method name="public short getNodeType()">1</method>
			<method name="public String elementTextTrim(org.dom4j.QName qName)">2</method>
			<method name="public void add(org.dom4j.Attribute attribute)">3</method>
			<method name="public org.dom4j.Element addAttribute(org.dom4j.QName qName, String value)">5</method>
			<method name="public org.dom4j.Element addProcessingInstruction(String target, java.util.Map data)">1</method>
			<method name="public org.dom4j.Element element(org.dom4j.QName qName)">4</method>
			<method name="public void setAttributes(org.xml.sax.Attributes attributes, org.dom4j.tree.NamespaceStack namespaceStack, boolean noNamespaceAttributes)">7</method>
			<method name="public java.util.Iterator elementIterator(String name)">1</method>
			<method name="public org.dom4j.Node getXPathResult(int index)">3</method>
			<method name="public boolean hasMixedContent()">6</method>
			<method name="public boolean remove(org.dom4j.Element element)">1</method>
			<method name="public java.util.List additionalNamespaces()">4</method>
			<method name="public boolean remove(org.dom4j.ProcessingInstruction pi)">1</method>
			<method name="public org.dom4j.Element addCDATA(String cdata)">1</method>
			<method name="public java.util.List declaredNamespaces()">3</method>
			<method name="protected java.util.List createAttributeList()">1</method>
			<method name="public org.dom4j.QName getQName(String qualifiedName)">3</method>
			<method name="static void _clinit_()">1</method>
			<method name="public boolean removeProcessingInstruction(String target)">2</method>
			<method name="public java.util.List elements(String name)">4</method>
			<method name="public java.util.Iterator nodeIterator()">1</method>
			<method name="public java.util.Iterator attributeIterator()">1</method>
			<method name="public void add(org.dom4j.CDATA cdata)">1</method>
			<method name="public boolean remove(org.dom4j.Text text)">1</method>
			<method name="protected java.util.Iterator createSingleIterator(Object result)">1</method>
			<method name="public java.util.Iterator elementIterator(String name, org.dom4j.Namespace ns)">1</method>
			<method name="public int attributeCount()">1</method>
			<method name="public org.dom4j.Element createCopy(org.dom4j.QName qName)">1</method>
			<method name="protected void addNewNode(int index, org.dom4j.Node node)">1</method>
			<method name="protected abstract java.util.List attributeList(int)">1</method>
			<method name="public String getStringValue()">5</method>
			<method name="protected abstract java.util.List attributeList()">1</method>
			<method name="public org.dom4j.Attribute attribute(org.dom4j.QName qName)">3</method>
			<method name="public String attributeValue(org.dom4j.QName qName, String defaultValue)">2</method>
			<method name="protected void childRemoved(org.dom4j.Node node)">2</method>
			<method name="public String getPath(org.dom4j.Element context)">4</method>
			<method name="public org.dom4j.Element addText(String text)">1</method>
			<method name="public String asXML()">1</method>
			<method name="public java.util.List processingInstructions(String target)">4</method>
			<method name="public java.util.Iterator elementIterator()">1</method>
			<method name="public void accept(org.dom4j.Visitor visitor)">3</method>
			<method name="public org.dom4j.Element createCopy(String name)">1</method>
			<method name="public Object getData()">1</method>
			<method name="public String attributeValue(String name)">2</method>
			<method name="public String elementTextTrim(String name)">2</method>
			<method name="public void normalize()">7</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.DocumentFactory</name>
		<wmc>38</wmc>
		<dit>1</dit>
		<noc>7</noc>
		<cbo>81</cbo>
		<rfc>79</rfc>
		<lcom>653</lcom>
		<ca>37</ca>
		<ce>49</ce>
		<npm>30</npm>
		<lcom3>0.8783783783783784</lcom3>
		<loc>343</loc>
		<dam>0.75</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.23310810810810811</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.921052631578948</amc>
		<cc>
			<method name="public org.dom4j.Text createText(String text)">2</method>
			<method name="public org.dom4j.CDATA createCDATA(String text)">1</method>
			<method name="public org.dom4j.Element createElement(org.dom4j.QName qname)">1</method>
			<method name="public org.dom4j.Namespace createNamespace(String prefix, String uri)">1</method>
			<method name="public org.dom4j.ProcessingInstruction createProcessingInstruction(String target, String data)">1</method>
			<method name="public org.dom4j.QName createQName(String qualifiedName, String uri)">1</method>
			<method name="public java.util.Map getXPathNamespaceURIs()">1</method>
			<method name="public org.dom4j.Element createElement(String name)">1</method>
			<method name="public org.dom4j.QName createQName(String name, String prefix, String uri)">1</method>
			<method name="static Class class$(String x0)">1</method>
			<method name="public org.dom4j.Document createDocument()">1</method>
			<method name="public org.dom4j.rule.Pattern createPattern(String xpathPattern)">1</method>
			<method name="protected org.dom4j.QName intern(org.dom4j.QName qname)">1</method>
			<method name="public org.dom4j.Document createDocument(org.dom4j.Element rootElement)">1</method>
			<method name="private void readObject(java.io.ObjectInputStream in)">1</method>
			<method name="public void setXPathNamespaceURIs(java.util.Map namespaceURIs)">1</method>
			<method name="protected void init()">1</method>
			<method name="public org.dom4j.Document createDocument(String encoding)">2</method>
			<method name="public org.dom4j.DocumentType createDocType(String name, String publicId, String systemId)">1</method>
			<method name="public org.dom4j.QName createQName(String localName)">1</method>
			<method name="private static org.dom4j.util.SingletonStrategy createSingleton()">1</method>
			<method name="public java.util.List getQNames()">1</method>
			<method name="protected org.dom4j.tree.QNameCache createQNameCache()">1</method>
			<method name="public org.dom4j.Entity createEntity(String name, String text)">1</method>
			<method name="public org.dom4j.Attribute createAttribute(org.dom4j.Element owner, String name, String value)">1</method>
			<method name="public org.dom4j.NodeFilter createXPathFilter(String xpathFilterExpression)">1</method>
			<method name="public org.dom4j.Element createElement(String qualifiedName, String namespaceURI)">1</method>
			<method name="public org.dom4j.Comment createComment(String text)">1</method>
			<method name="public org.dom4j.Attribute createAttribute(org.dom4j.Element owner, org.dom4j.QName qname, String value)">1</method>
			<method name="public static synchronized org.dom4j.DocumentFactory getInstance()">2</method>
			<method name="public org.dom4j.NodeFilter createXPathFilter(String xpathFilterExpression, org.jaxen.VariableContext variableContext)">1</method>
			<method name="protected static org.dom4j.DocumentFactory createSingleton(String className)">2</method>
			<method name="public org.dom4j.QName createQName(String localName, org.dom4j.Namespace namespace)">1</method>
			<method name="public org.dom4j.XPath createXPath(String xpathExpression)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public org.dom4j.XPath createXPath(String xpathExpression, org.jaxen.VariableContext variableContext)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public org.dom4j.ProcessingInstruction createProcessingInstruction(String target, java.util.Map data)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.pattern.PatternHandler</name>
		<wmc>20</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>20</cbo>
		<rfc>46</rfc>
		<lcom>188</lcom>
		<ca>0</ca>
		<ce>20</ce>
		<npm>16</npm>
		<lcom3>0.8947368421052632</lcom3>
		<loc>305</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.3625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.2</amc>
		<cc>
			<method name="public void startTextNodeStep(int axis)">1</method>
			<method name="protected org.jaxen.pattern.Pattern createRelativeLocationPath()">1</method>
			<method name="public void endPathExpr()">1</method>
			<method name="public void startAbsoluteLocationPath()">1</method>
			<method name="public void endRelativeLocationPath()">1</method>
			<method name="public void startAllNodeStep(int axis)">1</method>
			<method name="public void endAbsoluteLocationPath()">1</method>
			<method name="public org.jaxen.pattern.Pattern getPattern()">1</method>
			<method name="protected void endStep()">3</method>
			<method name="public void endXPath()">1</method>
			<method name="public void startCommentNodeStep(int axis)">1</method>
			<method name="public void startRelativeLocationPath()">1</method>
			<method name="public void startProcessingInstructionNodeStep(int axis, String name)">1</method>
			<method name="public org.jaxen.pattern.Pattern getPattern(boolean shouldSimplify)">3</method>
			<method name="public void endUnionExpr(boolean create)">1</method>
			<method name="public void startNameStep(int axis, String prefix, String localName)">1</method>
			<method name="protected void endLocationPath()">1</method>
			<method name="protected org.jaxen.pattern.Pattern createAbsoluteLocationPath()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void startUnionExpr()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.DocumentException</name>
		<wmc>9</wmc>
		<dit>3</dit>
		<noc>0</noc>
		<cbo>19</cbo>
		<rfc>24</rfc>
		<lcom>0</lcom>
		<ca>10</ca>
		<ce>9</ce>
		<npm>9</npm>
		<lcom3>0.25</lcom3>
		<loc>96</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.8076923076923077</mfa>
		<cam>0.3333333333333333</cam>
		<ic>1</ic>
		<cbm>2</cbm>
		<amc>9.555555555555555</amc>
		<cc>
			<method name="public void _init_(String message)">1</method>
			<method name="public void _init_(Throwable nestedException)">1</method>
			<method name="public void printStackTrace(java.io.PrintWriter writer)">2</method>
			<method name="public Throwable getNestedException()">1</method>
			<method name="public void printStackTrace()">2</method>
			<method name="public void _init_(String message, Throwable nestedException)">1</method>
			<method name="public void printStackTrace(java.io.PrintStream out)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public String getMessage()">2</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.saxpath.XPathHandler</name>
		<wmc>44</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>44</rfc>
		<lcom>946</lcom>
		<ca>7</ca>
		<ce>4</ce>
		<npm>44</npm>
		<lcom3>2.0</lcom3>
		<loc>44</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2909090909090909</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void startRelativeLocationPath()">1</method>
			<method name="public abstract void variableReference(String, String)">1</method>
			<method name="public abstract void startPredicate()">1</method>
			<method name="public abstract void endCommentNodeStep()">1</method>
			<method name="public abstract void endAndExpr(boolean)">1</method>
			<method name="public abstract void endEqualityExpr(int)">1</method>
			<method name="public abstract void startUnaryExpr()">1</method>
			<method name="public abstract void startCommentNodeStep(int)">1</method>
			<method name="public abstract void startFilterExpr()">1</method>
			<method name="public abstract void startTextNodeStep(int)">1</method>
			<method name="public abstract void startNameStep(int, String, String)">1</method>
			<method name="public abstract void endAdditiveExpr(int)">1</method>
			<method name="public abstract void startProcessingInstructionNodeStep(int, String)">1</method>
			<method name="public abstract void startXPath()">1</method>
			<method name="public abstract void endPathExpr()">1</method>
			<method name="public abstract void startMultiplicativeExpr()">1</method>
			<method name="public abstract void endAbsoluteLocationPath()">1</method>
			<method name="public abstract void endAllNodeStep()">1</method>
			<method name="public abstract void endRelativeLocationPath()">1</method>
			<method name="public abstract void endUnaryExpr(int)">1</method>
			<method name="public abstract void startAdditiveExpr()">1</method>
			<method name="public abstract void endPredicate()">1</method>
			<method name="public abstract void endRelationalExpr(int)">1</method>
			<method name="public abstract void startRelationalExpr()">1</method>
			<method name="public abstract void number(double)">1</method>
			<method name="public abstract void startOrExpr()">1</method>
			<method name="public abstract void endMultiplicativeExpr(int)">1</method>
			<method name="public abstract void endXPath()">1</method>
			<method name="public abstract void endProcessingInstructionNodeStep()">1</method>
			<method name="public abstract void endTextNodeStep()">1</method>
			<method name="public abstract void endOrExpr(boolean)">1</method>
			<method name="public abstract void endNameStep()">1</method>
			<method name="public abstract void number(int)">1</method>
			<method name="public abstract void startUnionExpr()">1</method>
			<method name="public abstract void startAbsoluteLocationPath()">1</method>
			<method name="public abstract void startFunction(String, String)">1</method>
			<method name="public abstract void startPathExpr()">1</method>
			<method name="public abstract void endFilterExpr()">1</method>
			<method name="public abstract void literal(String)">1</method>
			<method name="public abstract void endFunction()">1</method>
			<method name="public abstract void startEqualityExpr()">1</method>
			<method name="public abstract void endUnionExpr(boolean)">1</method>
			<method name="public abstract void startAllNodeStep(int)">1</method>
			<method name="public abstract void startAndExpr()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.dom.DOMXPath</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>6</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.0</amc>
		<cc>
			<method name="public void _init_(String xpathExpr)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.xom.XOMXPath</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>7</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>8</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.0</amc>
		<cc>
			<method name="public void _init_(String xpathExpr)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.DefaultEntity</name>
		<wmc>9</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>7</cbo>
		<rfc>11</rfc>
		<lcom>30</lcom>
		<ca>3</ca>
		<ce>5</ce>
		<npm>9</npm>
		<lcom3>0.75</lcom3>
		<loc>46</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5925925925925926</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public void setParent(org.dom4j.Element parent)">1</method>
			<method name="public boolean supportsParent()">1</method>
			<method name="public void setName(String name)">1</method>
			<method name="public void _init_(String name)">1</method>
			<method name="public void _init_(org.dom4j.Element parent, String name, String text)">1</method>
			<method name="public boolean isReadOnly()">1</method>
			<method name="public void setText(String text)">1</method>
			<method name="public void _init_(String name, String text)">1</method>
			<method name="public org.dom4j.Element getParent()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.ConcurrentReaderHashMap$EntrySet</name>
		<wmc>7</wmc>
		<dit>3</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>16</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>5</npm>
		<lcom3>0.0</lcom3>
		<loc>68</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.7916666666666666</mfa>
		<cam>0.42857142857142855</cam>
		<ic>2</ic>
		<cbm>10</cbm>
		<amc>8.571428571428571</amc>
		<cc>
			<method name="private void _init_(org.dom4j.tree.ConcurrentReaderHashMap this$0)">1</method>
			<method name="public boolean contains(Object o)">4</method>
			<method name="public void clear()">1</method>
			<method name="void _init_(org.dom4j.tree.ConcurrentReaderHashMap x0, org.dom4j.tree.ConcurrentReaderHashMap$1 x1)">1</method>
			<method name="public boolean remove(Object o)">2</method>
			<method name="public int size()">1</method>
			<method name="public java.util.Iterator iterator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.XPathSyntaxException</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>15</rfc>
		<lcom>5</lcom>
		<ca>2</ca>
		<ce>7</ce>
		<npm>6</npm>
		<lcom3>0.3</lcom3>
		<loc>88</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.333333333333334</amc>
		<cc>
			<method name="public void _init_(String xpath, int position, String message)">1</method>
			<method name="public String getXPath()">1</method>
			<method name="public String getMultilineMessage()">1</method>
			<method name="public int getPosition()">1</method>
			<method name="public String getPositionMarker()">2</method>
			<method name="public void _init_(org.jaxen.saxpath.XPathSyntaxException e)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.XPathFunctionContext$Singleton</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>3</cbo>
		<rfc>5</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>0.5</lcom3>
		<loc>14</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.3333333333333335</amc>
		<cc>
			<method name="static org.jaxen.XPathFunctionContext access$000()">1</method>
			<method name="private void _init_()">1</method>
			<method name="static void _clinit_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.jaxb.JAXBRuntimeException</name>
		<wmc>1</wmc>
		<dit>4</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>3</ca>
		<ce>4</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>5</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>1.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="protected void _init_(Throwable cause)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.StringLengthFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>12</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>11</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>42</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.0</amc>
		<cc>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
			<method name="public static Number evaluate(Object obj, org.jaxen.Navigator nav)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.DefaultProcessingInstruction</name>
		<wmc>11</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>8</cbo>
		<rfc>16</rfc>
		<lcom>43</lcom>
		<ca>3</ca>
		<ce>6</ce>
		<npm>11</npm>
		<lcom3>0.8</lcom3>
		<loc>70</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4772727272727273</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.2727272727272725</amc>
		<cc>
			<method name="public void setParent(org.dom4j.Element parent)">1</method>
			<method name="public void setValues(java.util.Map values)">1</method>
			<method name="public boolean supportsParent()">1</method>
			<method name="public void setTarget(String target)">1</method>
			<method name="public boolean isReadOnly()">1</method>
			<method name="public void setText(String text)">1</method>
			<method name="public void _init_(String target, String values)">1</method>
			<method name="public void _init_(String target, java.util.Map values)">1</method>
			<method name="public void _init_(org.dom4j.Element parent, String target, String values)">1</method>
			<method name="public void setValue(String name, String value)">1</method>
			<method name="public org.dom4j.Element getParent()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.util.UserDataAttribute</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>6</rfc>
		<lcom>4</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>4</npm>
		<lcom3>0.6666666666666666</lcom3>
		<loc>21</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public void _init_(org.dom4j.QName qname)">1</method>
			<method name="public Object getData()">1</method>
			<method name="public void _init_(org.dom4j.QName qname, String text)">1</method>
			<method name="public void setData(Object data)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.pattern.NodeTest</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>7</noc>
		<cbo>13</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>10</ca>
		<ce>3</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>4</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.PositionFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>8</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>24</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.0</amc>
		<cc>
			<method name="public static Number evaluate(org.jaxen.Context context)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.rule.Action</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>6</ca>
		<ce>4</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void run(org.dom4j.Node)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultAbsoluteLocationPath</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>15</cbo>
		<rfc>23</rfc>
		<lcom>15</lcom>
		<ca>1</ca>
		<ce>14</ce>
		<npm>6</npm>
		<lcom3>2.0</lcom3>
		<loc>80</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4444444444444444</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.333333333333334</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public String getText()">1</method>
			<method name="public Object evaluate(org.jaxen.Context context)">1</method>
			<method name="public boolean isAbsolute()">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.NumberExpr</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>7</ca>
		<ce>3</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract Number getNumber()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.QualifiedName</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>8</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>3</ce>
		<npm>4</npm>
		<lcom3>0.25</lcom3>
		<loc>75</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>1</ic>
		<cbm>1</cbm>
		<amc>13.6</amc>
		<cc>
			<method name="void _init_(String namespaceURI, String localName)">1</method>
			<method name="public String getNamespaceURI()">1</method>
			<method name="public int hashCode()">2</method>
			<method name="public boolean equals(Object o)">7</method>
			<method name="public String getLocalName()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.dom.DOMComment</name>
		<wmc>36</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>15</cbo>
		<rfc>70</rfc>
		<lcom>630</lcom>
		<ca>1</ca>
		<ce>14</ce>
		<npm>35</npm>
		<lcom3>2.0</lcom3>
		<loc>181</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2638888888888889</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.027777777777778</amc>
		<cc>
			<method name="public boolean isSupported(String feature, String version)">1</method>
			<method name="public void deleteData(int offset, int count)">1</method>
			<method name="public void _init_(String text)">1</method>
			<method name="public org.w3c.dom.Node getFirstChild()">1</method>
			<method name="public String getNodeName()">1</method>
			<method name="public org.w3c.dom.NamedNodeMap getAttributes()">1</method>
			<method name="public int getLength()">1</method>
			<method name="public org.w3c.dom.NodeList getChildNodes()">1</method>
			<method name="public org.w3c.dom.Node getNextSibling()">1</method>
			<method name="public void setPrefix(String prefix)">1</method>
			<method name="public String getNodeValue()">1</method>
			<method name="public void setData(String data)">1</method>
			<method name="public boolean supports(String feature, String version)">1</method>
			<method name="public org.w3c.dom.Document getOwnerDocument()">1</method>
			<method name="public String getNamespaceURI()">1</method>
			<method name="public org.w3c.dom.Node insertBefore(org.w3c.dom.Node newChild, org.w3c.dom.Node refChild)">1</method>
			<method name="public org.w3c.dom.Node replaceChild(org.w3c.dom.Node newChild, org.w3c.dom.Node oldChild)">1</method>
			<method name="public org.w3c.dom.Node appendChild(org.w3c.dom.Node newChild)">1</method>
			<method name="public boolean hasAttributes()">1</method>
			<method name="public String getPrefix()">1</method>
			<method name="public org.w3c.dom.Node removeChild(org.w3c.dom.Node oldChild)">1</method>
			<method name="public void insertData(int offset, String arg)">1</method>
			<method name="public void replaceData(int offset, int count, String arg)">1</method>
			<method name="public org.w3c.dom.Node getParentNode()">1</method>
			<method name="public void _init_(org.dom4j.Element parent, String text)">1</method>
			<method name="public String substringData(int offset, int count)">1</method>
			<method name="public String getLocalName()">1</method>
			<method name="private void checkNewChildNode(org.w3c.dom.Node newChild)">1</method>
			<method name="public boolean hasChildNodes()">1</method>
			<method name="public org.w3c.dom.Node cloneNode(boolean deep)">1</method>
			<method name="public void setNodeValue(String nodeValue)">1</method>
			<method name="public org.w3c.dom.Node getPreviousSibling()">1</method>
			<method name="public org.w3c.dom.Node getLastChild()">1</method>
			<method name="public void appendData(String arg)">1</method>
			<method name="public void normalize()">1</method>
			<method name="public String getData()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.RelationalExpr</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>8</ca>
		<ce>3</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract String getOperator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.jaxb.JAXBSupport</name>
		<wmc>7</wmc>
		<dit>1</dit>
		<noc>3</noc>
		<cbo>19</cbo>
		<rfc>19</rfc>
		<lcom>15</lcom>
		<ca>3</ca>
		<ce>16</ce>
		<npm>2</npm>
		<lcom3>0.6333333333333333</lcom3>
		<loc>98</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.34285714285714286</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.285714285714286</amc>
		<cc>
			<method name="private javax.xml.bind.Unmarshaller getUnmarshaller()">1</method>
			<method name="public void _init_(String contextPath, ClassLoader classloader)">1</method>
			<method name="protected org.dom4j.Element marshal(javax.xml.bind.Element element)">1</method>
			<method name="private javax.xml.bind.Marshaller getMarshaller()">1</method>
			<method name="private javax.xml.bind.JAXBContext getContext()">1</method>
			<method name="protected javax.xml.bind.Element unmarshal(org.dom4j.Element element)">1</method>
			<method name="public void _init_(String contextPath)">1</method>
		</cc>
	</class>


	<class>
		<name>org.antlr.runtime.tree.RewriteEmptyStreamException</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>5</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public void _init_(String arg0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$Visitor</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>5</cbo>
		<rfc>4</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>10</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5833333333333334</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>2.3333333333333335</amc>
		<cc>
			<method name="public abstract void visit(Object)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void visit(Object arg0, Object arg1, int arg2, java.util.Map arg3)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.MismatchedRangeException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>10</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>40</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.666666666666666</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_(int arg0, int arg1, org.antlr.runtime.IntStream arg2)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenRewriteStream$InsertBeforeOp</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>7</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>33</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.6</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>15.0</amc>
		<cc>
			<method name="public int execute(StringBuffer arg0)">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenRewriteStream arg0, int arg1, Object arg2)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$WildcardTreePattern</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>5</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.Token arg0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.UnBufferedTreeNodeStream</name>
		<wmc>33</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>18</cbo>
		<rfc>67</rfc>
		<lcom>312</lcom>
		<ca>1</ca>
		<ce>18</ce>
		<npm>25</npm>
		<lcom3>0.7640625</lcom3>
		<loc>918</loc>
		<dam>0.9</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.22943722943722944</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>26.21212121212121</amc>
		<cc>
			<method name="public void setUniqueNavigationNodes(boolean arg0)">1</method>
			<method name="public int mark()">4</method>
			<method name="public void replaceChildren(Object arg0, int arg1, int arg2, Object arg3)">1</method>
			<method name="public void reset()">1</method>
			<method name="protected Object visitChild(int arg0)">3</method>
			<method name="public int size()">1</method>
			<method name="public String toString(Object arg0, Object arg1)">5</method>
			<method name="public void seek(int arg0)">3</method>
			<method name="protected Object handleRootNode()">3</method>
			<method name="public String toString()">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public Object getTreeSource()">1</method>
			<method name="protected void addNavigationNode(int arg0)">4</method>
			<method name="public Object get(int arg0)">1</method>
			<method name="public void setTokenStream(org.antlr.runtime.TokenStream arg0)">1</method>
			<method name="protected void addLookahead(Object arg0)">2</method>
			<method name="public org.antlr.runtime.tree.TreeAdaptor getTreeAdaptor()">1</method>
			<method name="public void release(int arg0)">1</method>
			<method name="protected void fill(int arg0)">2</method>
			<method name="public void rewind()">1</method>
			<method name="public org.antlr.runtime.TokenStream getTokenStream()">1</method>
			<method name="public int index()">1</method>
			<method name="public Object LT(int arg0)">4</method>
			<method name="protected void toStringWork(Object arg0, Object arg1, StringBuffer arg2)">9</method>
			<method name="public Object next()">5</method>
			<method name="public int LA(int arg0)">2</method>
			<method name="protected void walkBackToMostRecentNodeWithUnvisitedChildren()">7</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor arg0, Object arg1)">1</method>
			<method name="public boolean hasUniqueNavigationNodes()">1</method>
			<method name="protected int getLookaheadSize()">2</method>
			<method name="public void consume()">1</method>
			<method name="public void rewind(int arg0)">3</method>
			<method name="public void _init_(Object arg0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.CommonTreeAdaptor</name>
		<wmc>18</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>13</cbo>
		<rfc>38</rfc>
		<lcom>153</lcom>
		<ca>5</ca>
		<ce>8</ce>
		<npm>18</npm>
		<lcom3>2.0</lcom3>
		<loc>169</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4444444444444444</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.38888888888889</amc>
		<cc>
			<method name="public String getText(Object arg0)">2</method>
			<method name="public Object create(org.antlr.runtime.Token arg0)">1</method>
			<method name="public Object getParent(Object arg0)">2</method>
			<method name="public void setParent(Object arg0, Object arg1)">2</method>
			<method name="public void replaceChildren(Object arg0, int arg1, int arg2, Object arg3)">2</method>
			<method name="public void setTokenBoundaries(Object arg0, org.antlr.runtime.Token arg1, org.antlr.runtime.Token arg2)">4</method>
			<method name="public org.antlr.runtime.Token createToken(int arg0, String arg1)">1</method>
			<method name="public int getTokenStopIndex(Object arg0)">2</method>
			<method name="public void setChildIndex(Object arg0, int arg1)">2</method>
			<method name="public int getTokenStartIndex(Object arg0)">2</method>
			<method name="public int getChildCount(Object arg0)">2</method>
			<method name="public Object getChild(Object arg0, int arg1)">2</method>
			<method name="public Object dupNode(Object arg0)">2</method>
			<method name="public int getChildIndex(Object arg0)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public int getType(Object arg0)">2</method>
			<method name="public org.antlr.runtime.Token getToken(Object arg0)">2</method>
			<method name="public org.antlr.runtime.Token createToken(org.antlr.runtime.Token arg0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreePatternLexer</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>9</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>0.9285714285714286</lcom3>
		<loc>255</loc>
		<dam>0.2857142857142857</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>79.33333333333333</amc>
		<cc>
			<method name="protected void consume()">2</method>
			<method name="public void _init_(String arg0)">1</method>
			<method name="public int nextToken()">27</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.UnwantedTokenException</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>12</rfc>
		<lcom>4</lcom>
		<ca>2</ca>
		<ce>7</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>61</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.25</amc>
		<cc>
			<method name="public String toString()">3</method>
			<method name="public org.antlr.runtime.Token getUnexpectedToken()">1</method>
			<method name="public void _init_(int arg0, org.antlr.runtime.IntStream arg1)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.ANTLRInputStream</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>10</rfc>
		<lcom>15</lcom>
		<ca>0</ca>
		<ce>8</ce>
		<npm>6</npm>
		<lcom3>2.0</lcom3>
		<loc>55</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.7083333333333334</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.166666666666666</amc>
		<cc>
			<method name="public void _init_(java.io.InputStream arg0)">1</method>
			<method name="public void _init_(java.io.InputStream arg0, String arg1)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(java.io.InputStream arg0, int arg1, String arg2)">1</method>
			<method name="public void _init_(java.io.InputStream arg0, int arg1)">1</method>
			<method name="public void _init_(java.io.InputStream arg0, int arg1, int arg2, String arg3)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeAdaptor</name>
		<wmc>31</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>23</cbo>
		<rfc>31</rfc>
		<lcom>465</lcom>
		<ca>18</ca>
		<ce>6</ce>
		<npm>31</npm>
		<lcom3>2.0</lcom3>
		<loc>31</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.35023041474654376</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void setTokenBoundaries(Object, org.antlr.runtime.Token, org.antlr.runtime.Token)">1</method>
			<method name="public abstract Object becomeRoot(org.antlr.runtime.Token, Object)">1</method>
			<method name="public abstract int getUniqueID(Object)">1</method>
			<method name="public abstract void setParent(Object, Object)">1</method>
			<method name="public abstract Object nil()">1</method>
			<method name="public abstract Object errorNode(org.antlr.runtime.TokenStream, org.antlr.runtime.Token, org.antlr.runtime.Token, org.antlr.runtime.RecognitionException)">1</method>
			<method name="public abstract Object getParent(Object)">1</method>
			<method name="public abstract int getChildCount(Object)">1</method>
			<method name="public abstract void replaceChildren(Object, int, int, Object)">1</method>
			<method name="public abstract void setText(Object, String)">1</method>
			<method name="public abstract Object create(org.antlr.runtime.Token)">1</method>
			<method name="public abstract Object dupTree(Object)">1</method>
			<method name="public abstract Object dupNode(Object)">1</method>
			<method name="public abstract Object create(int, String)">1</method>
			<method name="public abstract Object getChild(Object, int)">1</method>
			<method name="public abstract int getTokenStartIndex(Object)">1</method>
			<method name="public abstract String getText(Object)">1</method>
			<method name="public abstract int getChildIndex(Object)">1</method>
			<method name="public abstract int getTokenStopIndex(Object)">1</method>
			<method name="public abstract Object create(int, org.antlr.runtime.Token)">1</method>
			<method name="public abstract int getType(Object)">1</method>
			<method name="public abstract Object deleteChild(Object, int)">1</method>
			<method name="public abstract void setType(Object, int)">1</method>
			<method name="public abstract void addChild(Object, Object)">1</method>
			<method name="public abstract Object create(int, org.antlr.runtime.Token, String)">1</method>
			<method name="public abstract Object rulePostProcessing(Object)">1</method>
			<method name="public abstract void setChild(Object, int, Object)">1</method>
			<method name="public abstract Object becomeRoot(Object, Object)">1</method>
			<method name="public abstract org.antlr.runtime.Token getToken(Object)">1</method>
			<method name="public abstract void setChildIndex(Object, int)">1</method>
			<method name="public abstract boolean isNil(Object)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.RewriteEarlyExitException</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>0</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>10</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public void _init_(String arg0)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugTreeAdaptor</name>
		<wmc>37</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>77</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>8</ce>
		<npm>36</npm>
		<lcom3>0.3194444444444444</lcom3>
		<loc>376</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.26426426426426425</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.108108108108109</amc>
		<cc>
			<method name="public String getText(Object arg0)">1</method>
			<method name="public int getUniqueID(Object arg0)">1</method>
			<method name="public void setParent(Object arg0, Object arg1)">1</method>
			<method name="public void replaceChildren(Object arg0, int arg1, int arg2, Object arg3)">1</method>
			<method name="public void setType(Object arg0, int arg1)">1</method>
			<method name="public Object becomeRoot(Object arg0, Object arg1)">1</method>
			<method name="public void setChildIndex(Object arg0, int arg1)">1</method>
			<method name="public Object create(int arg0, String arg1)">1</method>
			<method name="public Object deleteChild(Object arg0, int arg1)">1</method>
			<method name="public int getTokenStartIndex(Object arg0)">1</method>
			<method name="public void _init_(org.antlr.runtime.debug.DebugEventListener arg0, org.antlr.runtime.tree.TreeAdaptor arg1)">1</method>
			<method name="public void setText(Object arg0, String arg1)">1</method>
			<method name="public Object rulePostProcessing(Object arg0)">1</method>
			<method name="public Object create(int arg0, org.antlr.runtime.Token arg1, String arg2)">1</method>
			<method name="public Object nil()">1</method>
			<method name="public int getType(Object arg0)">1</method>
			<method name="public org.antlr.runtime.Token getToken(Object arg0)">1</method>
			<method name="protected void simulateTreeConstruction(Object arg0)">2</method>
			<method name="public Object create(int arg0, org.antlr.runtime.Token arg1)">1</method>
			<method name="public org.antlr.runtime.tree.TreeAdaptor getTreeAdaptor()">1</method>
			<method name="public Object errorNode(org.antlr.runtime.TokenStream arg0, org.antlr.runtime.Token arg1, org.antlr.runtime.Token arg2, org.antlr.runtime.RecognitionException arg3)">2</method>
			<method name="public Object becomeRoot(org.antlr.runtime.Token arg0, Object arg1)">1</method>
			<method name="public Object create(org.antlr.runtime.Token arg0)">2</method>
			<method name="public Object getParent(Object arg0)">1</method>
			<method name="public void setDebugListener(org.antlr.runtime.debug.DebugEventListener arg0)">1</method>
			<method name="public void setTokenBoundaries(Object arg0, org.antlr.runtime.Token arg1, org.antlr.runtime.Token arg2)">4</method>
			<method name="public void addChild(Object arg0, Object arg1)">3</method>
			<method name="public int getTokenStopIndex(Object arg0)">1</method>
			<method name="public int getChildCount(Object arg0)">1</method>
			<method name="public Object getChild(Object arg0, int arg1)">1</method>
			<method name="public void addChild(Object arg0, org.antlr.runtime.Token arg1)">1</method>
			<method name="public Object dupNode(Object arg0)">1</method>
			<method name="public org.antlr.runtime.debug.DebugEventListener getDebugListener()">1</method>
			<method name="public void setChild(Object arg0, int arg1, Object arg2)">1</method>
			<method name="public int getChildIndex(Object arg0)">1</method>
			<method name="public Object dupTree(Object arg0)">1</method>
			<method name="public boolean isNil(Object arg0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeParser</name>
		<wmc>18</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>20</cbo>
		<rfc>51</rfc>
		<lcom>95</lcom>
		<ca>1</ca>
		<ce>19</ce>
		<npm>13</npm>
		<lcom3>0.907563025210084</lcom3>
		<loc>391</loc>
		<dam>0.14285714285714285</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.23529411764705882</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>20.333333333333332</amc>
		<cc>
			<method name="public void matchAny(org.antlr.runtime.IntStream arg0)">7</method>
			<method name="public org.antlr.runtime.tree.TreeNodeStream getTreeNodeStream()">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeNodeStream arg0, org.antlr.runtime.RecognizerSharedState arg1)">1</method>
			<method name="public void reset()">2</method>
			<method name="public boolean inContext(String arg0)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeNodeStream arg0)">1</method>
			<method name="public void traceOut(String arg0, int arg1)">1</method>
			<method name="protected Object getCurrentInputSymbol(org.antlr.runtime.IntStream arg0)">1</method>
			<method name="protected Object getMissingSymbol(org.antlr.runtime.IntStream arg0, org.antlr.runtime.RecognitionException arg1, int arg2, org.antlr.runtime.BitSet arg3)">1</method>
			<method name="public void setTreeNodeStream(org.antlr.runtime.tree.TreeNodeStream arg0)">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public static boolean inContext(org.antlr.runtime.tree.TreeAdaptor arg0, String[] arg1, Object arg2, String arg3)">11</method>
			<method name="public String getErrorMessage(org.antlr.runtime.RecognitionException arg0, String[] arg1)">3</method>
			<method name="protected void mismatch(org.antlr.runtime.IntStream arg0, int arg1, org.antlr.runtime.BitSet arg2)">1</method>
			<method name="public String getErrorHeader(org.antlr.runtime.RecognitionException arg0)">2</method>
			<method name="static void _clinit_()">1</method>
			<method name="protected static Object getAncestor(org.antlr.runtime.tree.TreeAdaptor arg0, String[] arg1, Object arg2, String arg3)">3</method>
			<method name="public void traceIn(String arg0, int arg1)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.CharStreamState</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>3</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>2</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>7</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenRewriteStream</name>
		<wmc>46</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>24</cbo>
		<rfc>85</rfc>
		<lcom>949</lcom>
		<ca>4</ca>
		<ce>23</ce>
		<npm>36</npm>
		<lcom3>0.9333333333333333</lcom3>
		<loc>1024</loc>
		<dam>0.2857142857142857</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3070652173913043</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>21.108695652173914</amc>
		<cc>
			<method name="public void delete(int arg0, int arg1)">1</method>
			<method name="public void deleteProgram()">1</method>
			<method name="public int getLastRewriteTokenIndex()">1</method>
			<method name="public void deleteProgram(String arg0)">1</method>
			<method name="protected java.util.List getKindOfOps(java.util.List arg0, Class arg1)">1</method>
			<method name="protected void setLastRewriteTokenIndex(String arg0, int arg1)">1</method>
			<method name="public void delete(int arg0)">1</method>
			<method name="public String toString(int arg0, int arg1)">1</method>
			<method name="public void delete(String arg0, int arg1, int arg2)">1</method>
			<method name="public String toString(String arg0, int arg1, int arg2)">10</method>
			<method name="public String toString(String arg0)">1</method>
			<method name="public void delete(org.antlr.runtime.Token arg0, org.antlr.runtime.Token arg1)">1</method>
			<method name="public void insertBefore(String arg0, org.antlr.runtime.Token arg1, Object arg2)">1</method>
			<method name="protected String catOpText(Object arg0, Object arg1)">3</method>
			<method name="public String toString()">1</method>
			<method name="public void replace(int arg0, int arg1, Object arg2)">1</method>
			<method name="private java.util.List initializeProgram(String arg0)">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenSource arg0, int arg1)">1</method>
			<method name="public void rollback(int arg0)">1</method>
			<method name="public String toDebugString()">1</method>
			<method name="static Class class$(String arg0)">1</method>
			<method name="protected void init()">1</method>
			<method name="public void rollback(String arg0, int arg1)">2</method>
			<method name="public void insertAfter(String arg0, org.antlr.runtime.Token arg1, Object arg2)">1</method>
			<method name="protected java.util.List getProgram(String arg0)">2</method>
			<method name="public void delete(org.antlr.runtime.Token arg0)">1</method>
			<method name="protected java.util.List getKindOfOps(java.util.List arg0, Class arg1, int arg2)">5</method>
			<method name="public String toOriginalString()">1</method>
			<method name="public void delete(String arg0, org.antlr.runtime.Token arg1, org.antlr.runtime.Token arg2)">1</method>
			<method name="public void replace(org.antlr.runtime.Token arg0, org.antlr.runtime.Token arg1, Object arg2)">1</method>
			<method name="public void replace(String arg0, int arg1, int arg2, Object arg3)">5</method>
			<method name="public void insertAfter(int arg0, Object arg1)">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenSource arg0)">1</method>
			<method name="public void replace(String arg0, org.antlr.runtime.Token arg1, org.antlr.runtime.Token arg2, Object arg3)">1</method>
			<method name="public void insertBefore(String arg0, int arg1, Object arg2)">1</method>
			<method name="protected java.util.Map reduceToSingleOperationPerIndex(java.util.List arg0)">32</method>
			<method name="public void insertAfter(String arg0, int arg1, Object arg2)">1</method>
			<method name="public void insertBefore(int arg0, Object arg1)">1</method>
			<method name="public void replace(int arg0, Object arg1)">1</method>
			<method name="public void insertAfter(org.antlr.runtime.Token arg0, Object arg1)">1</method>
			<method name="public String toDebugString(int arg0, int arg1)">4</method>
			<method name="public void insertBefore(org.antlr.runtime.Token arg0, Object arg1)">1</method>
			<method name="public String toOriginalString(int arg0, int arg1)">4</method>
			<method name="public void _init_()">1</method>
			<method name="public void replace(org.antlr.runtime.Token arg0, Object arg1)">1</method>
			<method name="protected int getLastRewriteTokenIndex(String arg0)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$ContextVisitor</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>4</ca>
		<ce>3</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void visit(Object, Object, int, java.util.Map)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.RewriteRuleNodeStream</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>12</rfc>
		<lcom>15</lcom>
		<ca>0</ca>
		<ce>7</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>36</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.0</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor arg0, String arg1, java.util.List arg2)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor arg0, String arg1)">1</method>
			<method name="protected Object toTree(Object arg0)">1</method>
			<method name="public Object nextNode()">1</method>
			<method name="protected Object dup(Object arg0)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor arg0, String arg1, Object arg2)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.ClassicToken</name>
		<wmc>19</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>30</rfc>
		<lcom>75</lcom>
		<ca>0</ca>
		<ce>6</ce>
		<npm>19</npm>
		<lcom3>0.7685185185185185</lcom3>
		<loc>205</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3368421052631579</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.473684210526315</amc>
		<cc>
			<method name="public int getTokenIndex()">1</method>
			<method name="public int getChannel()">1</method>
			<method name="public void setTokenIndex(int arg0)">1</method>
			<method name="public void _init_(org.antlr.runtime.Token arg0)">1</method>
			<method name="public void setChannel(int arg0)">1</method>
			<method name="public org.antlr.runtime.CharStream getInputStream()">1</method>
			<method name="public String toString()">3</method>
			<method name="public void setLine(int arg0)">1</method>
			<method name="public String getText()">1</method>
			<method name="public void setText(String arg0)">1</method>
			<method name="public int getLine()">1</method>
			<method name="public int getCharPositionInLine()">1</method>
			<method name="public int getType()">1</method>
			<method name="public void setCharPositionInLine(int arg0)">1</method>
			<method name="public void _init_(int arg0)">1</method>
			<method name="public void _init_(int arg0, String arg1)">1</method>
			<method name="public void _init_(int arg0, String arg1, int arg2)">1</method>
			<method name="public void setType(int arg0)">1</method>
			<method name="public void setInputStream(org.antlr.runtime.CharStream arg0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.CommonTree</name>
		<wmc>20</wmc>
		<dit>0</dit>
		<noc>2</noc>
		<cbo>13</cbo>
		<rfc>33</rfc>
		<lcom>12</lcom>
		<ca>8</ca>
		<ce>7</ce>
		<npm>20</npm>
		<lcom3>0.6842105263157895</lcom3>
		<loc>292</loc>
		<dam>0.4</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.26</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.35</amc>
		<cc>
			<method name="public org.antlr.runtime.Token getToken()">1</method>
			<method name="public void setTokenStopIndex(int arg0)">1</method>
			<method name="public void setChildIndex(int arg0)">1</method>
			<method name="public void _init_(org.antlr.runtime.Token arg0)">1</method>
			<method name="public int getTokenStartIndex()">3</method>
			<method name="public void setTokenStartIndex(int arg0)">1</method>
			<method name="public org.antlr.runtime.tree.Tree getParent()">1</method>
			<method name="public String toString()">4</method>
			<method name="public org.antlr.runtime.tree.Tree dupNode()">1</method>
			<method name="public String getText()">2</method>
			<method name="public void setParent(org.antlr.runtime.tree.Tree arg0)">1</method>
			<method name="public boolean isNil()">2</method>
			<method name="public int getLine()">4</method>
			<method name="public int getCharPositionInLine()">4</method>
			<method name="public int getType()">2</method>
			<method name="public int getChildIndex()">1</method>
			<method name="public void setUnknownTokenBoundaries()">8</method>
			<method name="public void _init_(org.antlr.runtime.tree.CommonTree arg0)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public int getTokenStopIndex()">3</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.MismatchedNotSetException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>11</rfc>
		<lcom>3</lcom>
		<ca>2</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>28</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.333333333333334</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_(org.antlr.runtime.BitSet arg0, org.antlr.runtime.IntStream arg1)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.BaseTree</name>
		<wmc>28</wmc>
		<dit>1</dit>
		<noc>3</noc>
		<cbo>13</cbo>
		<rfc>53</rfc>
		<lcom>306</lcom>
		<ca>3</ca>
		<ce>11</ce>
		<npm>27</npm>
		<lcom3>0.5925925925925926</lcom3>
		<loc>629</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.32142857142857145</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>21.428571428571427</amc>
		<cc>
			<method name="public void addChildren(java.util.List arg0)">2</method>
			<method name="public org.antlr.runtime.tree.Tree getAncestor(int arg0)">3</method>
			<method name="public org.antlr.runtime.tree.Tree getChild(int arg0)">3</method>
			<method name="public void sanityCheckParentAndChildIndexes()">1</method>
			<method name="public void setChild(int arg0, org.antlr.runtime.tree.Tree arg1)">4</method>
			<method name="public void replaceChildren(int arg0, int arg1, Object arg2)">9</method>
			<method name="public void _init_(org.antlr.runtime.tree.Tree arg0)">1</method>
			<method name="public String toStringTree()">8</method>
			<method name="public int getLine()">1</method>
			<method name="public int getChildIndex()">1</method>
			<method name="public int getChildCount()">2</method>
			<method name="public void setChildIndex(int arg0)">1</method>
			<method name="public java.util.List getChildren()">1</method>
			<method name="protected java.util.List createChildrenList()">1</method>
			<method name="public void freshenParentAndChildIndexes(int arg0)">2</method>
			<method name="public void addChild(org.antlr.runtime.tree.Tree arg0)">8</method>
			<method name="public org.antlr.runtime.tree.Tree getParent()">1</method>
			<method name="public void setParent(org.antlr.runtime.tree.Tree arg0)">1</method>
			<method name="public java.util.List getAncestors()">3</method>
			<method name="public boolean isNil()">1</method>
			<method name="public void sanityCheckParentAndChildIndexes(org.antlr.runtime.tree.Tree arg0, int arg1)">4</method>
			<method name="public int getCharPositionInLine()">1</method>
			<method name="public abstract String toString()">1</method>
			<method name="public void freshenParentAndChildIndexes()">1</method>
			<method name="public Object deleteChild(int arg0)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public org.antlr.runtime.tree.Tree getFirstChildWithType(int arg0)">4</method>
			<method name="public boolean hasAncestor(int arg0)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenRewriteStream$ReplaceOp</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>7</cbo>
		<rfc>9</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>6</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>52</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>15.666666666666666</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public int execute(StringBuffer arg0)">2</method>
			<method name="public void _init_(org.antlr.runtime.TokenRewriteStream arg0, int arg1, int arg2, Object arg3)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$TreePattern</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>12</cbo>
		<rfc>7</rfc>
		<lcom>1</lcom>
		<ca>6</ca>
		<ce>6</ce>
		<npm>2</npm>
		<lcom3>1.5</lcom3>
		<loc>29</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.5</amc>
		<cc>
			<method name="public String toString()">2</method>
			<method name="public void _init_(org.antlr.runtime.Token arg0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.ParseTree</name>
		<wmc>12</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>22</rfc>
		<lcom>60</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>12</npm>
		<lcom3>0.7272727272727273</lcom3>
		<loc>137</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.25</amc>
		<cc>
			<method name="public String toString()">3</method>
			<method name="public org.antlr.runtime.tree.Tree dupNode()">1</method>
			<method name="public String getText()">1</method>
			<method name="public void setTokenStopIndex(int arg0)">1</method>
			<method name="public void _toStringLeaves(StringBuffer arg0)">4</method>
			<method name="public int getType()">1</method>
			<method name="public String toStringWithHiddenTokens()">4</method>
			<method name="public int getTokenStartIndex()">1</method>
			<method name="public String toInputString()">1</method>
			<method name="public int getTokenStopIndex()">1</method>
			<method name="public void _init_(Object arg0)">1</method>
			<method name="public void setTokenStartIndex(int arg0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.Profiler</name>
		<wmc>25</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>20</cbo>
		<rfc>64</rfc>
		<lcom>160</lcom>
		<ca>0</ca>
		<ce>20</ce>
		<npm>22</npm>
		<lcom3>0.8256172839506174</lcom3>
		<loc>1404</loc>
		<dam>0.2222222222222222</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.204</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>54.08</amc>
		<cc>
			<method name="public void exitDecision(int arg0)">5</method>
			<method name="public int getNumberOfHiddenTokens(int arg0, int arg1)">4</method>
			<method name="public void enterRule(String arg0, String arg1)">2</method>
			<method name="public void beginBacktrack(int arg0)">1</method>
			<method name="public void recognitionException(org.antlr.runtime.RecognitionException arg0)">1</method>
			<method name="protected int[] trim(int[] arg0, int arg1)">2</method>
			<method name="public static String toString(String arg0)">2</method>
			<method name="public String toString()">1</method>
			<method name="public void exitRule(String arg0, String arg1)">1</method>
			<method name="public String toNotifyString()">5</method>
			<method name="public void examineRuleMemoization(org.antlr.runtime.IntStream arg0, int arg1, String arg2)">2</method>
			<method name="public void consumeHiddenToken(org.antlr.runtime.Token arg0)">1</method>
			<method name="public void terminate()">1</method>
			<method name="public void _init_(org.antlr.runtime.debug.DebugParser arg0)">1</method>
			<method name="public boolean inDecision()">2</method>
			<method name="public void memoize(org.antlr.runtime.IntStream arg0, int arg1, int arg2, String arg3)">1</method>
			<method name="protected static String[] decodeReportData(String arg0)">3</method>
			<method name="public void consumeToken(org.antlr.runtime.Token arg0)">1</method>
			<method name="public void semanticPredicate(boolean arg0, String arg1)">2</method>
			<method name="public void LT(int arg0, org.antlr.runtime.Token arg1)">3</method>
			<method name="public void enterDecision(int arg0)">1</method>
			<method name="protected int[] toArray(java.util.List arg0)">2</method>
			<method name="public void endBacktrack(int arg0, boolean arg1)">1</method>
			<method name="public void setParser(org.antlr.runtime.debug.DebugParser arg0)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.ANTLRFileStream</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>12</rfc>
		<lcom>4</lcom>
		<ca>0</ca>
		<ce>9</ce>
		<npm>4</npm>
		<lcom3>0.3333333333333333</lcom3>
		<loc>73</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.875</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.0</amc>
		<cc>
			<method name="public void load(String arg0, String arg1)">1</method>
			<method name="public void _init_(String arg0)">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public void _init_(String arg0, String arg1)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.BitSet</name>
		<wmc>28</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>20</cbo>
		<rfc>42</rfc>
		<lcom>106</lcom>
		<ca>9</ca>
		<ce>11</ce>
		<npm>24</npm>
		<lcom3>0.8055555555555556</lcom3>
		<loc>605</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.20918367346938777</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>20.464285714285715</amc>
		<cc>
			<method name="public void remove(int arg0)">2</method>
			<method name="public String toString(String[] arg0)">6</method>
			<method name="public long[] toPackedArray()">1</method>
			<method name="public Object clone()">1</method>
			<method name="public int size()">5</method>
			<method name="private static final long bitMask(int arg0)">1</method>
			<method name="public void add(int arg0)">2</method>
			<method name="public String toString()">1</method>
			<method name="private void setSize(int arg0)">1</method>
			<method name="public void growToInclude(int arg0)">1</method>
			<method name="public boolean member(int arg0)">4</method>
			<method name="public static org.antlr.runtime.BitSet of(int arg0)">1</method>
			<method name="public static org.antlr.runtime.BitSet of(int arg0, int arg1)">1</method>
			<method name="public void _init_(java.util.List arg0)">2</method>
			<method name="private final int numWordsToHold(int arg0)">1</method>
			<method name="public int lengthInLongWords()">1</method>
			<method name="public int numBits()">1</method>
			<method name="public void orInPlace(org.antlr.runtime.BitSet arg0)">4</method>
			<method name="public void _init_(long[] arg0)">1</method>
			<method name="public boolean equals(Object arg0)">10</method>
			<method name="public int[] toArray()">3</method>
			<method name="public static org.antlr.runtime.BitSet of(int arg0, int arg1, int arg2)">1</method>
			<method name="private static final int wordNumber(int arg0)">1</method>
			<method name="public org.antlr.runtime.BitSet or(org.antlr.runtime.BitSet arg0)">2</method>
			<method name="public boolean isNil()">3</method>
			<method name="public void _init_(int arg0)">1</method>
			<method name="public static org.antlr.runtime.BitSet of(int arg0, int arg1, int arg2, int arg3)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenRewriteStream$DeleteOp</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>7</rfc>
		<lcom>1</lcom>
		<ca>0</ca>
		<ce>6</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>30</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.5</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.TokenRewriteStream arg0, int arg1, int arg2)">1</method>
			<method name="public String toString()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.CharStream</name>
		<wmc>6</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>6</rfc>
		<lcom>15</lcom>
		<ca>8</ca>
		<ce>4</ce>
		<npm>6</npm>
		<lcom3>1.2</lcom3>
		<loc>7</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.8333333333333334</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract int getLine()">1</method>
			<method name="public abstract void setLine(int)">1</method>
			<method name="public abstract void setCharPositionInLine(int)">1</method>
			<method name="public abstract int getCharPositionInLine()">1</method>
			<method name="public abstract int LT(int)">1</method>
			<method name="public abstract String substring(int, int)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugParser</name>
		<wmc>11</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>21</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>11</ce>
		<npm>11</npm>
		<lcom3>0.45</lcom3>
		<loc>118</loc>
		<dam>0.5</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.2727272727272727</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.545454545454545</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.TokenStream arg0, org.antlr.runtime.debug.DebugEventListener arg1, org.antlr.runtime.RecognizerSharedState arg2)">2</method>
			<method name="public void reportError(org.antlr.runtime.RecognitionException arg0)">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream arg0, org.antlr.runtime.debug.DebugEventListener arg1)">2</method>
			<method name="public void setDebugListener(org.antlr.runtime.debug.DebugEventListener arg0)">2</method>
			<method name="public void endBacktrack(int arg0, boolean arg1)">1</method>
			<method name="public org.antlr.runtime.debug.DebugEventListener getDebugListener()">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream arg0, org.antlr.runtime.RecognizerSharedState arg1)">2</method>
			<method name="public void beginBacktrack(int arg0)">1</method>
			<method name="public void endResync()">1</method>
			<method name="public void reportError(java.io.IOException arg0)">1</method>
			<method name="public void beginResync()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.CommonErrorNode</name>
		<wmc>5</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>16</cbo>
		<rfc>18</rfc>
		<lcom>6</lcom>
		<ca>1</ca>
		<ce>15</ce>
		<npm>5</npm>
		<lcom3>0.5625</lcom3>
		<loc>188</loc>
		<dam>0.0</dam>
		<moa>4</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>35.8</amc>
		<cc>
			<method name="public String toString()">5</method>
			<method name="public String getText()">4</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream arg0, org.antlr.runtime.Token arg1, org.antlr.runtime.Token arg2, org.antlr.runtime.RecognitionException arg3)">4</method>
			<method name="public boolean isNil()">1</method>
			<method name="public int getType()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeNodeStream</name>
		<wmc>8</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>8</rfc>
		<lcom>28</lcom>
		<ca>8</ca>
		<ce>6</ce>
		<npm>8</npm>
		<lcom3>2.0</lcom3>
		<loc>8</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract String toString(Object, Object)">1</method>
			<method name="public abstract Object LT(int)">1</method>
			<method name="public abstract void replaceChildren(Object, int, int, Object)">1</method>
			<method name="public abstract Object get(int)">1</method>
			<method name="public abstract void setUniqueNavigationNodes(boolean)">1</method>
			<method name="public abstract Object getTreeSource()">1</method>
			<method name="public abstract org.antlr.runtime.tree.TreeAdaptor getTreeAdaptor()">1</method>
			<method name="public abstract org.antlr.runtime.TokenStream getTokenStream()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$TreePatternTreeAdaptor</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>4</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>10</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public Object create(org.antlr.runtime.Token arg0)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeRuleReturnScope</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>3</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>0</ca>
		<ce>3</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public void _init_()">1</method>
			<method name="public Object getStart()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.BaseTreeAdaptor</name>
		<wmc>24</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>15</cbo>
		<rfc>50</rfc>
		<lcom>274</lcom>
		<ca>1</ca>
		<ce>14</ce>
		<npm>24</npm>
		<lcom3>0.9782608695652174</lcom3>
		<loc>305</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.35119047619047616</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.625</amc>
		<cc>
			<method name="public Object errorNode(org.antlr.runtime.TokenStream arg0, org.antlr.runtime.Token arg1, org.antlr.runtime.Token arg2, org.antlr.runtime.RecognitionException arg3)">1</method>
			<method name="public Object becomeRoot(org.antlr.runtime.Token arg0, Object arg1)">1</method>
			<method name="public String getText(Object arg0)">1</method>
			<method name="public abstract org.antlr.runtime.Token createToken(org.antlr.runtime.Token)">1</method>
			<method name="public int getUniqueID(Object arg0)">3</method>
			<method name="public void setType(Object arg0, int arg1)">1</method>
			<method name="public void addChild(Object arg0, Object arg1)">3</method>
			<method name="public Object becomeRoot(Object arg0, Object arg1)">5</method>
			<method name="public Object create(int arg0, String arg1)">1</method>
			<method name="public Object deleteChild(Object arg0, int arg1)">1</method>
			<method name="public int getChildCount(Object arg0)">1</method>
			<method name="public Object getChild(Object arg0, int arg1)">1</method>
			<method name="public void setText(Object arg0, String arg1)">1</method>
			<method name="public Object rulePostProcessing(Object arg0)">5</method>
			<method name="public Object create(int arg0, org.antlr.runtime.Token arg1, String arg2)">1</method>
			<method name="public void setChild(Object arg0, int arg1, Object arg2)">1</method>
			<method name="public abstract org.antlr.runtime.Token createToken(int, String)">1</method>
			<method name="public Object dupTree(Object arg0)">1</method>
			<method name="public Object dupTree(Object arg0, Object arg1)">3</method>
			<method name="public void _init_()">1</method>
			<method name="public Object nil()">1</method>
			<method name="public int getType(Object arg0)">1</method>
			<method name="public boolean isNil(Object arg0)">1</method>
			<method name="public Object create(int arg0, org.antlr.runtime.Token arg1)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugTreeNodeStream</name>
		<wmc>20</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>43</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>20</npm>
		<lcom3>0.7157894736842105</lcom3>
		<loc>199</loc>
		<dam>1.0</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.275</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.7</amc>
		<cc>
			<method name="public void setUniqueNavigationNodes(boolean arg0)">1</method>
			<method name="public void release(int arg0)">1</method>
			<method name="public int mark()">1</method>
			<method name="public void setDebugListener(org.antlr.runtime.debug.DebugEventListener arg0)">1</method>
			<method name="public void rewind()">1</method>
			<method name="public void replaceChildren(Object arg0, int arg1, int arg2, Object arg3)">1</method>
			<method name="public int index()">1</method>
			<method name="public org.antlr.runtime.TokenStream getTokenStream()">1</method>
			<method name="public Object LT(int arg0)">1</method>
			<method name="public int LA(int arg0)">1</method>
			<method name="public int size()">1</method>
			<method name="public String toString(Object arg0, Object arg1)">1</method>
			<method name="public void seek(int arg0)">1</method>
			<method name="public void consume()">1</method>
			<method name="public void rewind(int arg0)">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public Object getTreeSource()">1</method>
			<method name="public Object get(int arg0)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeNodeStream arg0, org.antlr.runtime.debug.DebugEventListener arg1)">1</method>
			<method name="public org.antlr.runtime.tree.TreeAdaptor getTreeAdaptor()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.RewriteRuleTokenStream</name>
		<wmc>7</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>13</rfc>
		<lcom>21</lcom>
		<ca>0</ca>
		<ce>8</ce>
		<npm>5</npm>
		<lcom3>2.0</lcom3>
		<loc>44</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4857142857142857</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.285714285714286</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor arg0, String arg1, java.util.List arg2)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor arg0, String arg1)">1</method>
			<method name="protected Object toTree(Object arg0)">1</method>
			<method name="public Object nextNode()">1</method>
			<method name="public org.antlr.runtime.Token nextToken()">1</method>
			<method name="protected Object dup(Object arg0)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor arg0, String arg1, Object arg2)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.BlankDebugEventListener</name>
		<wmc>32</wmc>
		<dit>1</dit>
		<noc>5</noc>
		<cbo>11</cbo>
		<rfc>33</rfc>
		<lcom>496</lcom>
		<ca>5</ca>
		<ce>6</ce>
		<npm>32</npm>
		<lcom3>2.0</lcom3>
		<loc>66</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2857142857142857</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>1.0625</amc>
		<cc>
			<method name="public void exitDecision(int arg0)">1</method>
			<method name="public void createNode(Object arg0)">1</method>
			<method name="public void enterAlt(int arg0)">1</method>
			<method name="public void enterRule(String arg0, String arg1)">1</method>
			<method name="public void beginBacktrack(int arg0)">1</method>
			<method name="public void mark(int arg0)">1</method>
			<method name="public void location(int arg0, int arg1)">1</method>
			<method name="public void recognitionException(org.antlr.runtime.RecognitionException arg0)">1</method>
			<method name="public void setTokenBoundaries(Object arg0, int arg1, int arg2)">1</method>
			<method name="public void exitRule(String arg0, String arg1)">1</method>
			<method name="public void nilNode(Object arg0)">1</method>
			<method name="public void exitSubRule(int arg0)">1</method>
			<method name="public void becomeRoot(Object arg0, Object arg1)">1</method>
			<method name="public void consumeHiddenToken(org.antlr.runtime.Token arg0)">1</method>
			<method name="public void terminate()">1</method>
			<method name="public void rewind()">1</method>
			<method name="public void consumeNode(Object arg0)">1</method>
			<method name="public void errorNode(Object arg0)">1</method>
			<method name="public void endResync()">1</method>
			<method name="public void LT(int arg0, Object arg1)">1</method>
			<method name="public void addChild(Object arg0, Object arg1)">1</method>
			<method name="public void consumeToken(org.antlr.runtime.Token arg0)">1</method>
			<method name="public void semanticPredicate(boolean arg0, String arg1)">1</method>
			<method name="public void createNode(Object arg0, org.antlr.runtime.Token arg1)">1</method>
			<method name="public void LT(int arg0, org.antlr.runtime.Token arg1)">1</method>
			<method name="public void enterDecision(int arg0)">1</method>
			<method name="public void endBacktrack(int arg0, boolean arg1)">1</method>
			<method name="public void rewind(int arg0)">1</method>
			<method name="public void enterSubRule(int arg0)">1</method>
			<method name="public void commence()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void beginResync()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard</name>
		<wmc>23</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>25</cbo>
		<rfc>57</rfc>
		<lcom>187</lcom>
		<ca>4</ca>
		<ce>25</ce>
		<npm>18</npm>
		<lcom3>0.6969696969696969</lcom3>
		<loc>585</loc>
		<dam>0.6666666666666666</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.30434782608695654</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>24.304347826086957</amc>
		<cc>
			<method name="public boolean parse(Object arg0, String arg1)">1</method>
			<method name="public Object findFirst(Object arg0, String arg1)">1</method>
			<method name="protected void _index(Object arg0, java.util.Map arg1)">4</method>
			<method name="public java.util.List find(Object arg0, int arg1)">1</method>
			<method name="public boolean parse(Object arg0, String arg1, java.util.Map arg2)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor arg0, java.util.Map arg1)">1</method>
			<method name="public static boolean equals(Object arg0, Object arg1, org.antlr.runtime.tree.TreeAdaptor arg2)">1</method>
			<method name="protected static boolean _equals(Object arg0, Object arg1, org.antlr.runtime.tree.TreeAdaptor arg2)">8</method>
			<method name="protected boolean _parse(Object arg0, org.antlr.runtime.tree.TreeWizard$TreePattern arg1, java.util.Map arg2)">13</method>
			<method name="public java.util.List find(Object arg0, String arg1)">5</method>
			<method name="public void _init_(String[] arg0)">1</method>
			<method name="public java.util.Map index(Object arg0)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor arg0, String[] arg1)">1</method>
			<method name="public void visit(Object arg0, int arg1, org.antlr.runtime.tree.TreeWizard$ContextVisitor arg2)">1</method>
			<method name="public void visit(Object arg0, String arg1, org.antlr.runtime.tree.TreeWizard$ContextVisitor arg2)">5</method>
			<method name="public Object create(String arg0)">1</method>
			<method name="static Class class$(String arg0)">1</method>
			<method name="public Object findFirst(Object arg0, int arg1)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor arg0)">1</method>
			<method name="public java.util.Map computeTokenTypes(String[] arg0)">3</method>
			<method name="public boolean equals(Object arg0, Object arg1)">1</method>
			<method name="public int getTokenType(String arg0)">3</method>
			<method name="protected void _visit(Object arg0, Object arg1, int arg2, int arg3, org.antlr.runtime.tree.TreeWizard$ContextVisitor arg4)">4</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.CommonToken</name>
		<wmc>23</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>36</rfc>
		<lcom>83</lcom>
		<ca>8</ca>
		<ce>7</ce>
		<npm>23</npm>
		<lcom3>0.7727272727272727</lcom3>
		<loc>310</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.33043478260869563</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.08695652173913</amc>
		<cc>
			<method name="public int getTokenIndex()">1</method>
			<method name="public int getChannel()">1</method>
			<method name="public void _init_(org.antlr.runtime.CharStream arg0, int arg1, int arg2, int arg3, int arg4)">1</method>
			<method name="public void setTokenIndex(int arg0)">1</method>
			<method name="public void _init_(org.antlr.runtime.Token arg0)">2</method>
			<method name="public int getStartIndex()">1</method>
			<method name="public int getStopIndex()">1</method>
			<method name="public void setChannel(int arg0)">1</method>
			<method name="public org.antlr.runtime.CharStream getInputStream()">1</method>
			<method name="public String toString()">3</method>
			<method name="public void setLine(int arg0)">1</method>
			<method name="public String getText()">3</method>
			<method name="public void setText(String arg0)">1</method>
			<method name="public void setStartIndex(int arg0)">1</method>
			<method name="public void setStopIndex(int arg0)">1</method>
			<method name="public int getLine()">1</method>
			<method name="public int getCharPositionInLine()">1</method>
			<method name="public int getType()">1</method>
			<method name="public void setCharPositionInLine(int arg0)">1</method>
			<method name="public void _init_(int arg0)">1</method>
			<method name="public void _init_(int arg0, String arg1)">1</method>
			<method name="public void setType(int arg0)">1</method>
			<method name="public void setInputStream(org.antlr.runtime.CharStream arg0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugEventSocketProxy</name>
		<wmc>42</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>24</cbo>
		<rfc>82</rfc>
		<lcom>719</lcom>
		<ca>0</ca>
		<ce>24</ce>
		<npm>36</npm>
		<lcom3>0.7886178861788619</lcom3>
		<loc>895</loc>
		<dam>0.8888888888888888</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.20714285714285716</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>20.095238095238095</amc>
		<cc>
			<method name="public void exitDecision(int arg0)">1</method>
			<method name="public void createNode(Object arg0)">1</method>
			<method name="public void enterAlt(int arg0)">1</method>
			<method name="public void enterRule(String arg0, String arg1)">1</method>
			<method name="public void beginBacktrack(int arg0)">1</method>
			<method name="public void mark(int arg0)">1</method>
			<method name="public void _init_(org.antlr.runtime.BaseRecognizer arg0, org.antlr.runtime.tree.TreeAdaptor arg1)">1</method>
			<method name="protected void transmit(String arg0)">1</method>
			<method name="public void location(int arg0, int arg1)">1</method>
			<method name="protected void serializeText(StringBuffer arg0, String arg1)">2</method>
			<method name="public void recognitionException(org.antlr.runtime.RecognitionException arg0)">1</method>
			<method name="public void setTokenBoundaries(Object arg0, int arg1, int arg2)">1</method>
			<method name="public void exitRule(String arg0, String arg1)">1</method>
			<method name="public void nilNode(Object arg0)">1</method>
			<method name="public void exitSubRule(int arg0)">1</method>
			<method name="protected void ack()">1</method>
			<method name="public void setTreeAdaptor(org.antlr.runtime.tree.TreeAdaptor arg0)">1</method>
			<method name="public void becomeRoot(Object arg0, Object arg1)">1</method>
			<method name="public org.antlr.runtime.tree.TreeAdaptor getTreeAdaptor()">1</method>
			<method name="public void consumeHiddenToken(org.antlr.runtime.Token arg0)">1</method>
			<method name="public void terminate()">1</method>
			<method name="public void rewind()">1</method>
			<method name="public void _init_(org.antlr.runtime.BaseRecognizer arg0, int arg1, org.antlr.runtime.tree.TreeAdaptor arg2)">1</method>
			<method name="public void consumeNode(Object arg0)">1</method>
			<method name="public void errorNode(Object arg0)">1</method>
			<method name="public void endResync()">1</method>
			<method name="public void LT(int arg0, Object arg1)">1</method>
			<method name="public void addChild(Object arg0, Object arg1)">1</method>
			<method name="public void handshake()">1</method>
			<method name="public void consumeToken(org.antlr.runtime.Token arg0)">1</method>
			<method name="public void semanticPredicate(boolean arg0, String arg1)">1</method>
			<method name="public void createNode(Object arg0, org.antlr.runtime.Token arg1)">1</method>
			<method name="protected String escapeNewlines(String arg0)">1</method>
			<method name="public void LT(int arg0, org.antlr.runtime.Token arg1)">2</method>
			<method name="public void enterDecision(int arg0)">1</method>
			<method name="protected String serializeToken(org.antlr.runtime.Token arg0)">1</method>
			<method name="public void endBacktrack(int arg0, boolean arg1)">2</method>
			<method name="public void rewind(int arg0)">1</method>
			<method name="public void enterSubRule(int arg0)">1</method>
			<method name="public void commence()">1</method>
			<method name="public void beginResync()">1</method>
			<method name="protected void serializeNode(StringBuffer arg0, Object arg1)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.Lexer</name>
		<wmc>27</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>19</cbo>
		<rfc>59</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>19</ce>
		<npm>27</npm>
		<lcom3>0.3076923076923077</lcom3>
		<loc>632</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.20833333333333334</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>22.37037037037037</amc>
		<cc>
			<method name="public org.antlr.runtime.CharStream getCharStream()">1</method>
			<method name="public void setCharStream(org.antlr.runtime.CharStream arg0)">1</method>
			<method name="public void emit(org.antlr.runtime.Token arg0)">1</method>
			<method name="public void reset()">3</method>
			<method name="public void traceOut(String arg0, int arg1)">1</method>
			<method name="public void skip()">1</method>
			<method name="public void setText(String arg0)">1</method>
			<method name="public void match(String arg0)">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public int getLine()">1</method>
			<method name="public void _init_(org.antlr.runtime.CharStream arg0)">1</method>
			<method name="public int getCharIndex()">1</method>
			<method name="public void _init_(org.antlr.runtime.CharStream arg0, org.antlr.runtime.RecognizerSharedState arg1)">1</method>
			<method name="public String getCharErrorDisplay(int arg0)">6</method>
			<method name="public void recover(org.antlr.runtime.RecognitionException arg0)">1</method>
			<method name="public abstract void mTokens()">1</method>
			<method name="public void reportError(org.antlr.runtime.RecognitionException arg0)">1</method>
			<method name="public String getText()">2</method>
			<method name="public org.antlr.runtime.Token nextToken()">4</method>
			<method name="public void matchAny()">1</method>
			<method name="public int getCharPositionInLine()">1</method>
			<method name="public String getErrorMessage(org.antlr.runtime.RecognitionException arg0, String[] arg1)">7</method>
			<method name="public void matchRange(int arg0, int arg1)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void match(int arg0)">1</method>
			<method name="public org.antlr.runtime.Token emit()">1</method>
			<method name="public void traceIn(String arg0, int arg1)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.misc.Stats</name>
		<wmc>8</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>24</rfc>
		<lcom>28</lcom>
		<ca>1</ca>
		<ce>12</ce>
		<npm>8</npm>
		<lcom3>1.1428571428571428</lcom3>
		<loc>226</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>27.125</amc>
		<cc>
			<method name="public static int min(int[] arg0)">4</method>
			<method name="public static void writeReport(String arg0, String arg1)">1</method>
			<method name="public static int sum(int[] arg0)">3</method>
			<method name="public static double stddev(int[] arg0)">3</method>
			<method name="public static String getAbsoluteFileName(String arg0)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public static int max(int[] arg0)">4</method>
			<method name="public static double avg(int[] arg0)">4</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.RemoteDebugEventSocketListener$ProxyTree</name>
		<wmc>10</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>11</rfc>
		<lcom>35</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>10</npm>
		<lcom3>0.8703703703703705</lcom3>
		<loc>78</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.2</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public org.antlr.runtime.tree.Tree dupNode()">1</method>
			<method name="public String getText()">1</method>
			<method name="public void setTokenStopIndex(int arg0)">1</method>
			<method name="public int getType()">1</method>
			<method name="public void _init_(int arg0)">1</method>
			<method name="public void _init_(int arg0, int arg1, int arg2, int arg3, int arg4, String arg5)">1</method>
			<method name="public int getTokenStartIndex()">1</method>
			<method name="public int getTokenStopIndex()">1</method>
			<method name="public void setTokenStartIndex(int arg0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.MissingTokenException</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>11</rfc>
		<lcom>4</lcom>
		<ca>2</ca>
		<ce>7</ce>
		<npm>4</npm>
		<lcom3>0.6666666666666666</lcom3>
		<loc>61</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.0</amc>
		<cc>
			<method name="public String toString()">4</method>
			<method name="public void _init_(int arg0, org.antlr.runtime.IntStream arg1, Object arg2)">1</method>
			<method name="public int getMissingType()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.EarlyExitException</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>4</rfc>
		<lcom>1</lcom>
		<ca>2</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>13</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.0</amc>
		<cc>
			<method name="public void _init_(int arg0, org.antlr.runtime.IntStream arg1)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenRewriteStream$RewriteOperation</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>2</noc>
		<cbo>8</cbo>
		<rfc>14</rfc>
		<lcom>0</lcom>
		<ca>3</ca>
		<ce>6</ce>
		<npm>2</npm>
		<lcom3>0.75</lcom3>
		<loc>59</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.333333333333332</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public int execute(StringBuffer arg0)">1</method>
			<method name="protected void _init_(org.antlr.runtime.TokenRewriteStream arg0, int arg1, Object arg2)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.RecognitionException</name>
		<wmc>4</wmc>
		<dit>3</dit>
		<noc>7</noc>
		<cbo>38</cbo>
		<rfc>21</rfc>
		<lcom>0</lcom>
		<ca>26</ca>
		<ce>13</ce>
		<npm>3</npm>
		<lcom3>0.625</lcom3>
		<loc>216</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.9130434782608695</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>51.0</amc>
		<cc>
			<method name="protected void extractInformationFromTreeNodeStream(org.antlr.runtime.IntStream arg0)">7</method>
			<method name="public int getUnexpectedType()">3</method>
			<method name="public void _init_(org.antlr.runtime.IntStream arg0)">4</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.Token</name>
		<wmc>15</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>46</cbo>
		<rfc>16</rfc>
		<lcom>105</lcom>
		<ca>42</ca>
		<ce>5</ce>
		<npm>14</npm>
		<lcom3>1.051948051948052</lcom3>
		<loc>42</loc>
		<dam>0.0</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>1.0666666666666667</amc>
		<cc>
			<method name="public abstract int getLine()">1</method>
			<method name="public abstract void setCharPositionInLine(int)">1</method>
			<method name="public abstract int getChannel()">1</method>
			<method name="public abstract int getCharPositionInLine()">1</method>
			<method name="public abstract void setText(String)">1</method>
			<method name="public abstract int getType()">1</method>
			<method name="public abstract void setTokenIndex(int)">1</method>
			<method name="public abstract void setChannel(int)">1</method>
			<method name="public abstract org.antlr.runtime.CharStream getInputStream()">1</method>
			<method name="public abstract void setType(int)">1</method>
			<method name="public abstract void setLine(int)">1</method>
			<method name="public abstract String getText()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public abstract int getTokenIndex()">1</method>
			<method name="public abstract void setInputStream(org.antlr.runtime.CharStream)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugTokenStream</name>
		<wmc>19</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>40</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>18</npm>
		<lcom3>0.5972222222222222</lcom3>
		<loc>222</loc>
		<dam>0.75</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.3157894736842105</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.473684210526315</amc>
		<cc>
			<method name="public void release(int arg0)">1</method>
			<method name="public int mark()">1</method>
			<method name="public void setDebugListener(org.antlr.runtime.debug.DebugEventListener arg0)">1</method>
			<method name="public void rewind()">1</method>
			<method name="public org.antlr.runtime.Token get(int arg0)">1</method>
			<method name="public int index()">1</method>
			<method name="public String toString(int arg0, int arg1)">1</method>
			<method name="public org.antlr.runtime.TokenSource getTokenSource()">1</method>
			<method name="public int LA(int arg0)">2</method>
			<method name="public int size()">1</method>
			<method name="public void seek(int arg0)">1</method>
			<method name="protected void consumeInitialHiddenTokens()">2</method>
			<method name="public String toString()">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream arg0, org.antlr.runtime.debug.DebugEventListener arg1)">1</method>
			<method name="public void consume()">4</method>
			<method name="public void rewind(int arg0)">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public org.antlr.runtime.Token LT(int arg0)">2</method>
			<method name="public String toString(org.antlr.runtime.Token arg0, org.antlr.runtime.Token arg1)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.TraceDebugEventListener</name>
		<wmc>14</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>24</rfc>
		<lcom>19</lcom>
		<ca>0</ca>
		<ce>9</ce>
		<npm>14</npm>
		<lcom3>0.38461538461538464</lcom3>
		<loc>278</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.36904761904761907</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>18.785714285714285</amc>
		<cc>
			<method name="public void createNode(Object arg0)">1</method>
			<method name="public void consumeNode(Object arg0)">1</method>
			<method name="public void LT(int arg0, Object arg1)">1</method>
			<method name="public void addChild(Object arg0, Object arg1)">1</method>
			<method name="public void exitRule(String arg0)">1</method>
			<method name="public void location(int arg0, int arg1)">1</method>
			<method name="public void enterRule(String arg0)">1</method>
			<method name="public void createNode(Object arg0, org.antlr.runtime.Token arg1)">1</method>
			<method name="public void setTokenBoundaries(Object arg0, int arg1, int arg2)">1</method>
			<method name="public void nilNode(Object arg0)">1</method>
			<method name="public void enterSubRule(int arg0)">1</method>
			<method name="public void exitSubRule(int arg0)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor arg0)">1</method>
			<method name="public void becomeRoot(Object arg0, Object arg1)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugTreeParser</name>
		<wmc>12</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>24</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>13</ce>
		<npm>11</npm>
		<lcom3>0.45454545454545453</lcom3>
		<loc>132</loc>
		<dam>0.5</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.24166666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.833333333333334</amc>
		<cc>
			<method name="public void reportError(org.antlr.runtime.RecognitionException arg0)">1</method>
			<method name="public void setDebugListener(org.antlr.runtime.debug.DebugEventListener arg0)">2</method>
			<method name="public void endBacktrack(int arg0, boolean arg1)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeNodeStream arg0, org.antlr.runtime.RecognizerSharedState arg1)">2</method>
			<method name="public org.antlr.runtime.debug.DebugEventListener getDebugListener()">1</method>
			<method name="public void beginBacktrack(int arg0)">1</method>
			<method name="public void endResync()">1</method>
			<method name="public void reportError(java.io.IOException arg0)">1</method>
			<method name="public void beginResync()">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeNodeStream arg0, org.antlr.runtime.debug.DebugEventListener arg1, org.antlr.runtime.RecognizerSharedState arg2)">2</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeNodeStream arg0, org.antlr.runtime.debug.DebugEventListener arg1)">2</method>
			<method name="protected Object getMissingSymbol(org.antlr.runtime.IntStream arg0, org.antlr.runtime.RecognitionException arg1, int arg2, org.antlr.runtime.BitSet arg3)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreePatternParser</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>17</cbo>
		<rfc>20</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>17</ce>
		<npm>4</npm>
		<lcom3>0.30000000000000004</lcom3>
		<loc>299</loc>
		<dam>0.8</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.32</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>57.8</amc>
		<cc>
			<method name="public Object pattern()">4</method>
			<method name="public Object parseTree()">10</method>
			<method name="static Class class$(String arg0)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreePatternLexer arg0, org.antlr.runtime.tree.TreeWizard arg1, org.antlr.runtime.tree.TreeAdaptor arg2)">1</method>
			<method name="public Object parseNode()">16</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.Parser</name>
		<wmc>10</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>13</cbo>
		<rfc>26</rfc>
		<lcom>15</lcom>
		<ca>1</ca>
		<ce>12</ce>
		<npm>8</npm>
		<lcom3>0.2222222222222222</lcom3>
		<loc>128</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.2875</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.7</amc>
		<cc>
			<method name="public org.antlr.runtime.TokenStream getTokenStream()">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public void reset()">2</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream arg0, org.antlr.runtime.RecognizerSharedState arg1)">1</method>
			<method name="public void traceOut(String arg0, int arg1)">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream arg0)">1</method>
			<method name="protected Object getCurrentInputSymbol(org.antlr.runtime.IntStream arg0)">1</method>
			<method name="public void setTokenStream(org.antlr.runtime.TokenStream arg0)">1</method>
			<method name="protected Object getMissingSymbol(org.antlr.runtime.IntStream arg0, org.antlr.runtime.RecognitionException arg1, int arg2, org.antlr.runtime.BitSet arg3)">3</method>
			<method name="public void traceIn(String arg0, int arg1)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.Tracer</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>14</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>11</ce>
		<npm>4</npm>
		<lcom3>0.16666666666666666</lcom3>
		<loc>102</loc>
		<dam>0.5</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>24.0</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.IntStream arg0)">1</method>
			<method name="public Object getInputSymbol(int arg0)">2</method>
			<method name="public void exitRule(String arg0)">2</method>
			<method name="public void enterRule(String arg0)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeVisitor</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>10</rfc>
		<lcom>1</lcom>
		<ca>0</ca>
		<ce>5</ce>
		<npm>3</npm>
		<lcom3>0.0</lcom3>
		<loc>62</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>19.333333333333332</amc>
		<cc>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor arg0)">1</method>
			<method name="public Object visit(Object arg0, org.antlr.runtime.tree.TreeVisitorAction arg1)">6</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenSource</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>2</rfc>
		<lcom>1</lcom>
		<ca>5</ca>
		<ce>3</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>2</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract String getSourceName()">1</method>
			<method name="public abstract org.antlr.runtime.Token nextToken()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.CommonTreeNodeStream</name>
		<wmc>37</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>18</cbo>
		<rfc>71</rfc>
		<lcom>220</lcom>
		<ca>2</ca>
		<ce>17</ce>
		<npm>33</npm>
		<lcom3>0.767094017094017</lcom3>
		<loc>746</loc>
		<dam>0.7692307692307693</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.24324324324324326</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>18.81081081081081</amc>
		<cc>
			<method name="public void setUniqueNavigationNodes(boolean arg0)">1</method>
			<method name="protected void fillBuffer()">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor arg0, Object arg1, int arg2)">1</method>
			<method name="public int mark()">2</method>
			<method name="public void replaceChildren(Object arg0, int arg1, int arg2, Object arg3)">2</method>
			<method name="public void reset()">2</method>
			<method name="public void push(int arg0)">2</method>
			<method name="public int pop()">1</method>
			<method name="public int size()">2</method>
			<method name="public String toString(Object arg0, Object arg1)">14</method>
			<method name="public Object getCurrentSymbol()">1</method>
			<method name="public void seek(int arg0)">2</method>
			<method name="protected Object LB(int arg0)">3</method>
			<method name="public String toString()">3</method>
			<method name="public String toTokenString(int arg0, int arg1)">4</method>
			<method name="public void fillBuffer(Object arg0)">7</method>
			<method name="public String getSourceName()">1</method>
			<method name="protected void addNavigationNode(int arg0)">4</method>
			<method name="public Object getTreeSource()">1</method>
			<method name="public Object get(int arg0)">2</method>
			<method name="public void _init_(org.antlr.runtime.tree.CommonTreeNodeStream arg0, int arg1, int arg2)">1</method>
			<method name="public void setTokenStream(org.antlr.runtime.TokenStream arg0)">1</method>
			<method name="public void setTreeAdaptor(org.antlr.runtime.tree.TreeAdaptor arg0)">1</method>
			<method name="public org.antlr.runtime.tree.TreeAdaptor getTreeAdaptor()">1</method>
			<method name="public void release(int arg0)">1</method>
			<method name="public void rewind()">1</method>
			<method name="public org.antlr.runtime.TokenStream getTokenStream()">1</method>
			<method name="public int index()">1</method>
			<method name="public Object LT(int arg0)">5</method>
			<method name="public int LA(int arg0)">1</method>
			<method name="public java.util.Iterator iterator()">2</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor arg0, Object arg1)">1</method>
			<method name="public boolean hasUniqueNavigationNodes()">1</method>
			<method name="public void consume()">2</method>
			<method name="public void rewind(int arg0)">1</method>
			<method name="protected int getNodeIndex(Object arg0)">4</method>
			<method name="public void _init_(Object arg0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.ParseTreeBuilder</name>
		<wmc>11</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>25</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>12</ce>
		<npm>11</npm>
		<lcom3>0.675</lcom3>
		<loc>174</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.30303030303030304</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.454545454545455</amc>
		<cc>
			<method name="public org.antlr.runtime.tree.ParseTree getTree()">1</method>
			<method name="public void consumeHiddenToken(org.antlr.runtime.Token arg0)">2</method>
			<method name="public void exitDecision(int arg0)">1</method>
			<method name="public void enterDecision(int arg0)">1</method>
			<method name="public void exitRule(String arg0, String arg1)">3</method>
			<method name="public org.antlr.runtime.tree.ParseTree epsilonNode()">1</method>
			<method name="public void _init_(String arg0)">1</method>
			<method name="public void enterRule(String arg0, String arg1)">2</method>
			<method name="public void consumeToken(org.antlr.runtime.Token arg0)">2</method>
			<method name="public void recognitionException(org.antlr.runtime.RecognitionException arg0)">2</method>
			<method name="public org.antlr.runtime.tree.ParseTree create(Object arg0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.RemoteDebugEventSocketListener$ProxyToken</name>
		<wmc>17</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>22</rfc>
		<lcom>74</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>17</npm>
		<lcom3>0.8020833333333333</lcom3>
		<loc>146</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.39705882352941174</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.235294117647059</amc>
		<cc>
			<method name="public int getTokenIndex()">1</method>
			<method name="public int getChannel()">1</method>
			<method name="public void _init_(int arg0, int arg1, int arg2, int arg3, int arg4, String arg5)">1</method>
			<method name="public void setTokenIndex(int arg0)">1</method>
			<method name="public void setChannel(int arg0)">1</method>
			<method name="public org.antlr.runtime.CharStream getInputStream()">1</method>
			<method name="public String toString()">2</method>
			<method name="public String getText()">1</method>
			<method name="public void setLine(int arg0)">1</method>
			<method name="public void setText(String arg0)">1</method>
			<method name="public int getLine()">1</method>
			<method name="public int getCharPositionInLine()">1</method>
			<method name="public int getType()">1</method>
			<method name="public void setCharPositionInLine(int arg0)">1</method>
			<method name="public void _init_(int arg0)">1</method>
			<method name="public void setType(int arg0)">1</method>
			<method name="public void setInputStream(org.antlr.runtime.CharStream arg0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.RewriteRuleElementStream</name>
		<wmc>12</wmc>
		<dit>1</dit>
		<noc>3</noc>
		<cbo>11</cbo>
		<rfc>19</rfc>
		<lcom>24</lcom>
		<ca>3</ca>
		<ce>8</ce>
		<npm>9</npm>
		<lcom3>0.5606060606060607</lcom3>
		<loc>224</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.38333333333333336</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.166666666666668</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor arg0, String arg1, java.util.List arg2)">1</method>
			<method name="public Object nextTree()">4</method>
			<method name="public boolean hasNext()">5</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor arg0, String arg1)">1</method>
			<method name="protected Object toTree(Object arg0)">1</method>
			<method name="public String getDescription()">1</method>
			<method name="public void add(Object arg0)">4</method>
			<method name="protected Object _next()">5</method>
			<method name="public void reset()">1</method>
			<method name="public int size()">3</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor arg0, String arg1, Object arg2)">1</method>
			<method name="protected abstract Object dup(Object)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.DOTTreeGenerator</name>
		<wmc>10</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>31</rfc>
		<lcom>31</lcom>
		<ca>0</ca>
		<ce>10</ce>
		<npm>4</npm>
		<lcom3>0.6222222222222222</lcom3>
		<loc>319</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.46296296296296297</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>30.4</amc>
		<cc>
			<method name="public org.antlr.stringtemplate.StringTemplate toDOT(Object arg0, org.antlr.runtime.tree.TreeAdaptor arg1)">1</method>
			<method name="protected void toDOTDefineEdges(Object arg0, org.antlr.runtime.tree.TreeAdaptor arg1, org.antlr.stringtemplate.StringTemplate arg2)">4</method>
			<method name="protected void toDOTDefineNodes(Object arg0, org.antlr.runtime.tree.TreeAdaptor arg1, org.antlr.stringtemplate.StringTemplate arg2)">4</method>
			<method name="protected org.antlr.stringtemplate.StringTemplate getNodeST(org.antlr.runtime.tree.TreeAdaptor arg0, Object arg1)">1</method>
			<method name="public org.antlr.stringtemplate.StringTemplate toDOT(org.antlr.runtime.tree.Tree arg0)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public org.antlr.stringtemplate.StringTemplate toDOT(Object arg0, org.antlr.runtime.tree.TreeAdaptor arg1, org.antlr.stringtemplate.StringTemplate arg2, org.antlr.stringtemplate.StringTemplate arg3)">1</method>
			<method name="public void _init_()">1</method>
			<method name="protected String fixString(String arg0)">3</method>
			<method name="protected int getNodeNumber(Object arg0)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugEventRepeater</name>
		<wmc>32</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>64</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>6</ce>
		<npm>32</npm>
		<lcom3>0.0</lcom3>
		<loc>201</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.25390625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.25</amc>
		<cc>
			<method name="public void exitDecision(int arg0)">1</method>
			<method name="public void createNode(Object arg0)">1</method>
			<method name="public void enterAlt(int arg0)">1</method>
			<method name="public void enterRule(String arg0, String arg1)">1</method>
			<method name="public void beginBacktrack(int arg0)">1</method>
			<method name="public void mark(int arg0)">1</method>
			<method name="public void location(int arg0, int arg1)">1</method>
			<method name="public void recognitionException(org.antlr.runtime.RecognitionException arg0)">1</method>
			<method name="public void setTokenBoundaries(Object arg0, int arg1, int arg2)">1</method>
			<method name="public void exitRule(String arg0, String arg1)">1</method>
			<method name="public void nilNode(Object arg0)">1</method>
			<method name="public void exitSubRule(int arg0)">1</method>
			<method name="public void becomeRoot(Object arg0, Object arg1)">1</method>
			<method name="public void consumeHiddenToken(org.antlr.runtime.Token arg0)">1</method>
			<method name="public void terminate()">1</method>
			<method name="public void _init_(org.antlr.runtime.debug.DebugEventListener arg0)">1</method>
			<method name="public void rewind()">1</method>
			<method name="public void consumeNode(Object arg0)">1</method>
			<method name="public void errorNode(Object arg0)">1</method>
			<method name="public void endResync()">1</method>
			<method name="public void LT(int arg0, Object arg1)">1</method>
			<method name="public void addChild(Object arg0, Object arg1)">1</method>
			<method name="public void consumeToken(org.antlr.runtime.Token arg0)">1</method>
			<method name="public void semanticPredicate(boolean arg0, String arg1)">1</method>
			<method name="public void createNode(Object arg0, org.antlr.runtime.Token arg1)">1</method>
			<method name="public void LT(int arg0, org.antlr.runtime.Token arg1)">1</method>
			<method name="public void enterDecision(int arg0)">1</method>
			<method name="public void endBacktrack(int arg0, boolean arg1)">1</method>
			<method name="public void rewind(int arg0)">1</method>
			<method name="public void enterSubRule(int arg0)">1</method>
			<method name="public void commence()">1</method>
			<method name="public void beginResync()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.CommonTreeNodeStream$StreamIterator</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>8</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>0.3333333333333333</lcom3>
		<loc>56</loc>
		<dam>0.5</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.5</amc>
		<cc>
			<method name="public boolean hasNext()">2</method>
			<method name="public void remove()">1</method>
			<method name="public Object next()">2</method>
			<method name="protected void _init_(org.antlr.runtime.tree.CommonTreeNodeStream arg0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.RecognizerSharedState</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>7</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>44</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>28.0</amc>
		<cc>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.NoViableAltException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>11</rfc>
		<lcom>1</lcom>
		<ca>4</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>0.8333333333333334</lcom3>
		<loc>61</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>18.333333333333332</amc>
		<cc>
			<method name="public String toString()">2</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(String arg0, int arg1, int arg2, org.antlr.runtime.IntStream arg3)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.misc.IntArray</name>
		<wmc>7</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>9</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>7</npm>
		<lcom3>0.611111111111111</lcom3>
		<loc>103</loc>
		<dam>0.3333333333333333</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.7142857142857143</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.285714285714286</amc>
		<cc>
			<method name="public void clear()">1</method>
			<method name="public void push(int arg0)">1</method>
			<method name="public int pop()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public int size()">1</method>
			<method name="public void ensureCapacity(int arg0)">4</method>
			<method name="public void add(int arg0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.FailedPredicateException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>8</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>35</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.0</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_(org.antlr.runtime.IntStream arg0, String arg1, String arg2)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.CommonTokenStream</name>
		<wmc>33</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>16</cbo>
		<rfc>62</rfc>
		<lcom>222</lcom>
		<ca>1</ca>
		<ce>15</ce>
		<npm>29</npm>
		<lcom3>0.5390625</lcom3>
		<loc>594</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.24675324675324675</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>16.757575757575758</amc>
		<cc>
			<method name="protected void fillBuffer()">10</method>
			<method name="public int mark()">2</method>
			<method name="public void setTokenTypeChannel(int arg0, int arg1)">2</method>
			<method name="public org.antlr.runtime.Token get(int arg0)">1</method>
			<method name="public void discardOffChannelTokens(boolean arg0)">1</method>
			<method name="public void reset()">1</method>
			<method name="public String toString(int arg0, int arg1)">6</method>
			<method name="public org.antlr.runtime.TokenSource getTokenSource()">1</method>
			<method name="public int size()">1</method>
			<method name="public void seek(int arg0)">1</method>
			<method name="protected int skipOffTokenChannels(int arg0)">3</method>
			<method name="public java.util.List getTokens()">2</method>
			<method name="public String toString()">2</method>
			<method name="public java.util.List getTokens(int arg0, int arg1, org.antlr.runtime.BitSet arg2)">9</method>
			<method name="public void discardTokenType(int arg0)">2</method>
			<method name="public String getSourceName()">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenSource arg0, int arg1)">1</method>
			<method name="public java.util.List getTokens(int arg0, int arg1)">1</method>
			<method name="public java.util.List getTokens(int arg0, int arg1, java.util.List arg2)">1</method>
			<method name="public String toString(org.antlr.runtime.Token arg0, org.antlr.runtime.Token arg1)">3</method>
			<method name="public void release(int arg0)">1</method>
			<method name="protected org.antlr.runtime.Token LB(int arg0)">6</method>
			<method name="public void rewind()">1</method>
			<method name="public int index()">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenSource arg0)">1</method>
			<method name="public java.util.List getTokens(int arg0, int arg1, int arg2)">1</method>
			<method name="public int LA(int arg0)">1</method>
			<method name="protected int skipOffTokenChannelsReverse(int arg0)">3</method>
			<method name="public void setTokenSource(org.antlr.runtime.TokenSource arg0)">1</method>
			<method name="public void consume()">2</method>
			<method name="public void rewind(int arg0)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public org.antlr.runtime.Token LT(int arg0)">7</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.MismatchedTreeNodeException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>10</rfc>
		<lcom>1</lcom>
		<ca>2</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>31</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.0</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_(int arg0, org.antlr.runtime.tree.TreeNodeStream arg1)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenStream</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>21</cbo>
		<rfc>5</rfc>
		<lcom>10</lcom>
		<ca>15</ca>
		<ce>6</ce>
		<npm>5</npm>
		<lcom3>2.0</lcom3>
		<loc>5</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract org.antlr.runtime.Token LT(int)">1</method>
			<method name="public abstract org.antlr.runtime.Token get(int)">1</method>
			<method name="public abstract org.antlr.runtime.TokenSource getTokenSource()">1</method>
			<method name="public abstract String toString(int, int)">1</method>
			<method name="public abstract String toString(org.antlr.runtime.Token, org.antlr.runtime.Token)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.ParserRuleReturnScope</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>4</rfc>
		<lcom>3</lcom>
		<ca>0</ca>
		<ce>4</ce>
		<npm>3</npm>
		<lcom3>1.0</lcom3>
		<loc>14</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getStop()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object getStart()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.RuleReturnScope</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>2</noc>
		<cbo>4</cbo>
		<rfc>6</rfc>
		<lcom>10</lcom>
		<ca>2</ca>
		<ce>2</ce>
		<npm>5</npm>
		<lcom3>2.0</lcom3>
		<loc>16</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>2.2</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public Object getTemplate()">1</method>
			<method name="public Object getStop()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object getStart()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.ANTLRStringStream</name>
		<wmc>20</wmc>
		<dit>1</dit>
		<noc>2</noc>
		<cbo>9</cbo>
		<rfc>29</rfc>
		<lcom>62</lcom>
		<ca>2</ca>
		<ce>7</ce>
		<npm>20</npm>
		<lcom3>0.6900584795321637</lcom3>
		<loc>303</loc>
		<dam>0.8888888888888888</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3875</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.7</amc>
		<cc>
			<method name="public void release(int arg0)">1</method>
			<method name="public int mark()">3</method>
			<method name="public void _init_(String arg0)">1</method>
			<method name="public void rewind()">1</method>
			<method name="public int index()">1</method>
			<method name="public void reset()">1</method>
			<method name="public int LA(int arg0)">5</method>
			<method name="public int size()">1</method>
			<method name="public void seek(int arg0)">3</method>
			<method name="public String substring(int arg0, int arg1)">1</method>
			<method name="public void _init_(char[] arg0, int arg1)">1</method>
			<method name="public void setLine(int arg0)">1</method>
			<method name="public void consume()">3</method>
			<method name="public void rewind(int arg0)">1</method>
			<method name="public int getLine()">1</method>
			<method name="public int getCharPositionInLine()">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public void setCharPositionInLine(int arg0)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public int LT(int arg0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.ANTLRReaderStream</name>
		<wmc>5</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>7</cbo>
		<rfc>9</rfc>
		<lcom>10</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>5</npm>
		<lcom3>1.25</lcom3>
		<loc>103</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.8</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>19.2</amc>
		<cc>
			<method name="public void _init_(java.io.Reader arg0, int arg1)">1</method>
			<method name="public void _init_(java.io.Reader arg0)">1</method>
			<method name="public void load(java.io.Reader arg0, int arg1, int arg2)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(java.io.Reader arg0, int arg1, int arg2)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.IntStream</name>
		<wmc>10</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>26</cbo>
		<rfc>10</rfc>
		<lcom>45</lcom>
		<ca>23</ca>
		<ce>3</ce>
		<npm>10</npm>
		<lcom3>2.0</lcom3>
		<loc>10</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.7</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract int size()">1</method>
			<method name="public abstract void rewind()">1</method>
			<method name="public abstract int index()">1</method>
			<method name="public abstract void rewind(int)">1</method>
			<method name="public abstract void release(int)">1</method>
			<method name="public abstract void consume()">1</method>
			<method name="public abstract String getSourceName()">1</method>
			<method name="public abstract void seek(int)">1</method>
			<method name="public abstract int LA(int)">1</method>
			<method name="public abstract int mark()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugEventListener</name>
		<wmc>31</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>31</rfc>
		<lcom>465</lcom>
		<ca>9</ca>
		<ce>5</ce>
		<npm>31</npm>
		<lcom3>1.0333333333333334</lcom3>
		<loc>34</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2903225806451613</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void mark(int)">1</method>
			<method name="public abstract void terminate()">1</method>
			<method name="public abstract void enterRule(String, String)">1</method>
			<method name="public abstract void consumeToken(org.antlr.runtime.Token)">1</method>
			<method name="public abstract void rewind(int)">1</method>
			<method name="public abstract void exitDecision(int)">1</method>
			<method name="public abstract void endResync()">1</method>
			<method name="public abstract void createNode(Object)">1</method>
			<method name="public abstract void rewind()">1</method>
			<method name="public abstract void errorNode(Object)">1</method>
			<method name="public abstract void LT(int, org.antlr.runtime.Token)">1</method>
			<method name="public abstract void beginBacktrack(int)">1</method>
			<method name="public abstract void semanticPredicate(boolean, String)">1</method>
			<method name="public abstract void commence()">1</method>
			<method name="public abstract void LT(int, Object)">1</method>
			<method name="public abstract void endBacktrack(int, boolean)">1</method>
			<method name="public abstract void nilNode(Object)">1</method>
			<method name="public abstract void enterAlt(int)">1</method>
			<method name="public abstract void enterSubRule(int)">1</method>
			<method name="public abstract void exitSubRule(int)">1</method>
			<method name="public abstract void exitRule(String, String)">1</method>
			<method name="public abstract void enterDecision(int)">1</method>
			<method name="public abstract void becomeRoot(Object, Object)">1</method>
			<method name="public abstract void location(int, int)">1</method>
			<method name="public abstract void addChild(Object, Object)">1</method>
			<method name="public abstract void beginResync()">1</method>
			<method name="public abstract void setTokenBoundaries(Object, int, int)">1</method>
			<method name="public abstract void consumeNode(Object)">1</method>
			<method name="public abstract void recognitionException(org.antlr.runtime.RecognitionException)">1</method>
			<method name="public abstract void createNode(Object, org.antlr.runtime.Token)">1</method>
			<method name="public abstract void consumeHiddenToken(org.antlr.runtime.Token)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.RewriteCardinalityException</name>
		<wmc>2</wmc>
		<dit>4</dit>
		<noc>2</noc>
		<cbo>7</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>3</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>17</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.9545454545454546</mfa>
		<cam>0.75</cam>
		<ic>1</ic>
		<cbm>1</cbm>
		<amc>7.0</amc>
		<cc>
			<method name="public void _init_(String arg0)">1</method>
			<method name="public String getMessage()">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.UnBufferedTreeNodeStream$TreeWalkState</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>3</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>15</loc>
		<dam>0.125</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.0</amc>
		<cc>
			<method name="protected void _init_(org.antlr.runtime.tree.UnBufferedTreeNodeStream arg0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$1</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>4</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>1</npm>
		<lcom3>0.5</lcom3>
		<loc>19</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.5</amc>
		<cc>
			<method name="void _init_(org.antlr.runtime.tree.TreeWizard arg0, java.util.List arg1)">1</method>
			<method name="public void visit(Object arg0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$3</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>6</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>42</loc>
		<dam>1.0</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.6428571428571429</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>18.0</amc>
		<cc>
			<method name="void _init_(org.antlr.runtime.tree.TreeWizard arg0, java.util.Map arg1, org.antlr.runtime.tree.TreeWizard$TreePattern arg2, org.antlr.runtime.tree.TreeWizard$ContextVisitor arg3)">1</method>
			<method name="public void visit(Object arg0, Object arg1, int arg2, java.util.Map arg3)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugEventHub</name>
		<wmc>34</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>70</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>8</ce>
		<npm>34</npm>
		<lcom3>0.0</lcom3>
		<loc>668</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2536764705882353</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>18.61764705882353</amc>
		<cc>
			<method name="public void exitDecision(int arg0)">2</method>
			<method name="public void createNode(Object arg0)">2</method>
			<method name="public void enterAlt(int arg0)">2</method>
			<method name="public void enterRule(String arg0, String arg1)">2</method>
			<method name="public void beginBacktrack(int arg0)">2</method>
			<method name="public void mark(int arg0)">2</method>
			<method name="public void location(int arg0, int arg1)">2</method>
			<method name="public void recognitionException(org.antlr.runtime.RecognitionException arg0)">2</method>
			<method name="public void setTokenBoundaries(Object arg0, int arg1, int arg2)">2</method>
			<method name="public void exitRule(String arg0, String arg1)">2</method>
			<method name="public void _init_(org.antlr.runtime.debug.DebugEventListener arg0, org.antlr.runtime.debug.DebugEventListener arg1)">1</method>
			<method name="public void nilNode(Object arg0)">2</method>
			<method name="public void exitSubRule(int arg0)">2</method>
			<method name="public void becomeRoot(Object arg0, Object arg1)">2</method>
			<method name="public void consumeHiddenToken(org.antlr.runtime.Token arg0)">2</method>
			<method name="public void terminate()">2</method>
			<method name="public void _init_(org.antlr.runtime.debug.DebugEventListener arg0)">1</method>
			<method name="public void rewind()">2</method>
			<method name="public void consumeNode(Object arg0)">2</method>
			<method name="public void errorNode(Object arg0)">2</method>
			<method name="public void endResync()">2</method>
			<method name="public void LT(int arg0, Object arg1)">2</method>
			<method name="public void addChild(Object arg0, Object arg1)">2</method>
			<method name="public void consumeToken(org.antlr.runtime.Token arg0)">2</method>
			<method name="public void semanticPredicate(boolean arg0, String arg1)">2</method>
			<method name="public void createNode(Object arg0, org.antlr.runtime.Token arg1)">2</method>
			<method name="public void LT(int arg0, org.antlr.runtime.Token arg1)">2</method>
			<method name="public void enterDecision(int arg0)">2</method>
			<method name="public void endBacktrack(int arg0, boolean arg1)">2</method>
			<method name="public void rewind(int arg0)">2</method>
			<method name="public void enterSubRule(int arg0)">2</method>
			<method name="public void commence()">2</method>
			<method name="public void beginResync()">2</method>
			<method name="public void addListener(org.antlr.runtime.debug.DebugEventListener arg0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$2</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>5</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>31</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.5714285714285714</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.0</amc>
		<cc>
			<method name="void _init_(org.antlr.runtime.tree.TreeWizard arg0, org.antlr.runtime.tree.TreeWizard$TreePattern arg1, java.util.List arg2)">1</method>
			<method name="public void visit(Object arg0, Object arg1, int arg2, java.util.Map arg3)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.RewriteRuleSubtreeStream</name>
		<wmc>5</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>12</rfc>
		<lcom>8</lcom>
		<ca>0</ca>
		<ce>6</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>53</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.56</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.6</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor arg0, String arg1, java.util.List arg2)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor arg0, String arg1)">1</method>
			<method name="public Object nextNode()">4</method>
			<method name="protected Object dup(Object arg0)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor arg0, String arg1, Object arg2)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeVisitorAction</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>2</cbo>
		<rfc>2</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>1</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>2</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract Object post(Object)">1</method>
			<method name="public abstract Object pre(Object)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.MismatchedSetException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>10</cbo>
		<rfc>11</rfc>
		<lcom>1</lcom>
		<ca>3</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>31</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.0</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_(org.antlr.runtime.BitSet arg0, org.antlr.runtime.IntStream arg1)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.MismatchedTokenException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>2</noc>
		<cbo>11</cbo>
		<rfc>10</rfc>
		<lcom>0</lcom>
		<ca>5</ca>
		<ce>6</ce>
		<npm>3</npm>
		<lcom3>0.0</lcom3>
		<loc>37</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.0</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_(int arg0, org.antlr.runtime.IntStream arg1)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.Tree</name>
		<wmc>27</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>17</cbo>
		<rfc>28</rfc>
		<lcom>351</lcom>
		<ca>12</ca>
		<ce>6</ce>
		<npm>26</npm>
		<lcom3>1.0</lcom3>
		<loc>34</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.2222222222222222</amc>
		<cc>
			<method name="public abstract java.util.List getAncestors()">1</method>
			<method name="public abstract void freshenParentAndChildIndexes()">1</method>
			<method name="public abstract int getLine()">1</method>
			<method name="public abstract int getCharPositionInLine()">1</method>
			<method name="public abstract void addChild(org.antlr.runtime.tree.Tree)">1</method>
			<method name="public abstract int getType()">1</method>
			<method name="public abstract org.antlr.runtime.tree.Tree getAncestor(int)">1</method>
			<method name="public abstract void setChild(int, org.antlr.runtime.tree.Tree)">1</method>
			<method name="public abstract boolean hasAncestor(int)">1</method>
			<method name="public abstract void setTokenStopIndex(int)">1</method>
			<method name="public abstract org.antlr.runtime.tree.Tree dupNode()">1</method>
			<method name="public abstract void setParent(org.antlr.runtime.tree.Tree)">1</method>
			<method name="public abstract boolean isNil()">1</method>
			<method name="public abstract int getTokenStartIndex()">1</method>
			<method name="public abstract void setChildIndex(int)">1</method>
			<method name="public abstract int getChildCount()">1</method>
			<method name="public abstract int getChildIndex()">1</method>
			<method name="public abstract String getText()">1</method>
			<method name="public abstract org.antlr.runtime.tree.Tree getChild(int)">1</method>
			<method name="public abstract int getTokenStopIndex()">1</method>
			<method name="public abstract void setTokenStartIndex(int)">1</method>
			<method name="public abstract org.antlr.runtime.tree.Tree getParent()">1</method>
			<method name="public abstract String toString()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public abstract Object deleteChild(int)">1</method>
			<method name="public abstract void replaceChildren(int, int, Object)">1</method>
			<method name="public abstract String toStringTree()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.BaseRecognizer</name>
		<wmc>42</wmc>
		<dit>1</dit>
		<noc>3</noc>
		<cbo>33</cbo>
		<rfc>89</rfc>
		<lcom>481</lcom>
		<ca>5</ca>
		<ce>28</ce>
		<npm>35</npm>
		<lcom3>0.940766550522648</lcom3>
		<loc>1162</loc>
		<dam>0.14285714285714285</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.1684981684981685</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>26.5</amc>
		<cc>
			<method name="public int getRuleMemoizationCacheSize()">4</method>
			<method name="public void matchAny(org.antlr.runtime.IntStream arg0)">1</method>
			<method name="public java.util.List getRuleInvocationStack()">1</method>
			<method name="public void reset()">4</method>
			<method name="public String getTokenErrorDisplay(org.antlr.runtime.Token arg0)">3</method>
			<method name="protected Object recoverFromMismatchedToken(org.antlr.runtime.IntStream arg0, int arg1, org.antlr.runtime.BitSet arg2)">1</method>
			<method name="public void emitErrorMessage(String arg0)">1</method>
			<method name="public int getRuleMemoization(int arg0, int arg1)">3</method>
			<method name="public boolean mismatchIsMissingToken(org.antlr.runtime.IntStream arg0, org.antlr.runtime.BitSet arg1)">6</method>
			<method name="protected Object getMissingSymbol(org.antlr.runtime.IntStream arg0, org.antlr.runtime.RecognitionException arg1, int arg2, org.antlr.runtime.BitSet arg3)">1</method>
			<method name="public static java.util.List getRuleInvocationStack(Throwable arg0, String arg1)">5</method>
			<method name="public boolean alreadyParsedRule(org.antlr.runtime.IntStream arg0, int arg1)">3</method>
			<method name="public void consumeUntil(org.antlr.runtime.IntStream arg0, org.antlr.runtime.BitSet arg1)">3</method>
			<method name="public abstract String getSourceName()">1</method>
			<method name="public void displayRecognitionError(String[] arg0, org.antlr.runtime.RecognitionException arg1)">1</method>
			<method name="public Object recoverFromMismatchedSet(org.antlr.runtime.IntStream arg0, org.antlr.runtime.RecognitionException arg1, org.antlr.runtime.BitSet arg2)">1</method>
			<method name="public String getGrammarFileName()">1</method>
			<method name="public void traceOut(String arg0, int arg1, Object arg2)">3</method>
			<method name="public int getBacktrackingLevel()">1</method>
			<method name="public int getNumberOfSyntaxErrors()">1</method>
			<method name="public boolean mismatchIsUnwantedToken(org.antlr.runtime.IntStream arg0, int arg1)">2</method>
			<method name="public void _init_(org.antlr.runtime.RecognizerSharedState arg0)">2</method>
			<method name="protected org.antlr.runtime.BitSet computeContextSensitiveRuleFOLLOW()">1</method>
			<method name="public void consumeUntil(org.antlr.runtime.IntStream arg0, int arg1)">3</method>
			<method name="protected void pushFollow(org.antlr.runtime.BitSet arg0)">2</method>
			<method name="public java.util.List toStrings(java.util.List arg0)">3</method>
			<method name="protected org.antlr.runtime.BitSet computeErrorRecoverySet()">1</method>
			<method name="public void endResync()">1</method>
			<method name="protected org.antlr.runtime.BitSet combineFollows(boolean arg0)">5</method>
			<method name="protected Object getCurrentInputSymbol(org.antlr.runtime.IntStream arg0)">1</method>
			<method name="public void reportError(org.antlr.runtime.RecognitionException arg0)">2</method>
			<method name="public void memoize(org.antlr.runtime.IntStream arg0, int arg1, int arg2)">5</method>
			<method name="public Object match(org.antlr.runtime.IntStream arg0, int arg1, org.antlr.runtime.BitSet arg2)">1</method>
			<method name="public String getErrorMessage(org.antlr.runtime.RecognitionException arg0, String[] arg1)">14</method>
			<method name="public void traceIn(String arg0, int arg1, Object arg2)">2</method>
			<method name="public String getErrorHeader(org.antlr.runtime.RecognitionException arg0)">1</method>
			<method name="public void setBacktrackingLevel(int arg0)">1</method>
			<method name="public boolean failed()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void recover(org.antlr.runtime.IntStream arg0, org.antlr.runtime.RecognitionException arg1)">2</method>
			<method name="public void beginResync()">1</method>
			<method name="public String[] getTokenNames()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.RemoteDebugEventSocketListener</name>
		<wmc>14</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>33</cbo>
		<rfc>92</rfc>
		<lcom>65</lcom>
		<ca>0</ca>
		<ce>33</ce>
		<npm>5</npm>
		<lcom3>0.8012820512820512</lcom3>
		<loc>1236</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.34285714285714286</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>86.42857142857143</amc>
		<cc>
			<method name="protected void closeConnection()">10</method>
			<method name="public String[] getEventElements(String arg0)">5</method>
			<method name="protected void dispatch(String arg0)">36</method>
			<method name="protected org.antlr.runtime.debug.RemoteDebugEventSocketListener$ProxyTree deserializeNode(String[] arg0, int arg1)">1</method>
			<method name="protected String unEscapeNewlines(String arg0)">1</method>
			<method name="public void run()">1</method>
			<method name="public void start()">1</method>
			<method name="public void _init_(org.antlr.runtime.debug.DebugEventListener arg0, String arg1, int arg2)">1</method>
			<method name="protected void handshake()">1</method>
			<method name="protected org.antlr.runtime.debug.RemoteDebugEventSocketListener$ProxyToken deserializeToken(String[] arg0, int arg1)">1</method>
			<method name="public boolean tokenIndexesAreInvalid()">1</method>
			<method name="protected void eventHandler()">2</method>
			<method name="protected boolean openConnection()">1</method>
			<method name="protected void ack()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.DFA</name>
		<wmc>8</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>16</rfc>
		<lcom>28</lcom>
		<ca>0</ca>
		<ce>8</ce>
		<npm>6</npm>
		<lcom3>0.9857142857142858</lcom3>
		<loc>320</loc>
		<dam>0.9</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.35</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>37.75</amc>
		<cc>
			<method name="protected void error(org.antlr.runtime.NoViableAltException arg0)">1</method>
			<method name="public String getDescription()">1</method>
			<method name="public static char[] unpackEncodedStringToUnsignedChars(String arg0)">4</method>
			<method name="public int predict(org.antlr.runtime.IntStream arg0)">1</method>
			<method name="public int specialStateTransition(int arg0, org.antlr.runtime.IntStream arg1)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public static short[] unpackEncodedString(String arg0)">4</method>
			<method name="protected void noViableAlt(int arg0, org.antlr.runtime.IntStream arg1)">1</method>
		</cc>
	</class>



	<class>
		<name>org.antlr.analysis.DFAState</name>
		<wmc>29</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>44</cbo>
		<rfc>81</rfc>
		<lcom>198</lcom>
		<ca>18</ca>
		<ce>28</ce>
		<npm>26</npm>
		<lcom3>0.911764705882353</lcom3>
		<loc>895</loc>
		<dam>0.5294117647058824</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.13505747126436782</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>29.275862068965516</amc>
		<cc>
			<method name="public void removeTransition(int trans)">1</method>
			<method name="protected java.util.Set getConflictingAlts()">17</method>
			<method name="public void reset()">1</method>
			<method name="public org.antlr.analysis.NFAConfiguration addNFAConfiguration(org.antlr.analysis.NFAState state, int alt, org.antlr.analysis.NFAContext context, org.antlr.analysis.SemanticContext semanticContext)">1</method>
			<method name="public void _init_(org.antlr.analysis.DFA dfa)">1</method>
			<method name="public boolean isResolvedWithPredicates()">1</method>
			<method name="public void setNFAConfigurations(org.antlr.misc.OrderedHashSet configs)">1</method>
			<method name="public java.util.Set getDisabledAlternatives()">3</method>
			<method name="protected java.util.Set getNonDeterministicAlts()">5</method>
			<method name="public String toString()">3</method>
			<method name="public int hashCode()">2</method>
			<method name="public org.antlr.analysis.Transition getTransition(int trans)">1</method>
			<method name="public void addNFAConfiguration(org.antlr.analysis.NFAState state, org.antlr.analysis.NFAConfiguration c)">8</method>
			<method name="public void setAcceptStateReachable(int acceptStateReachable)">1</method>
			<method name="public org.antlr.misc.OrderedHashSet getReachableLabels()">1</method>
			<method name="public int addTransition(org.antlr.analysis.DFAState target, org.antlr.analysis.Label label)">1</method>
			<method name="public boolean equals(Object o)">1</method>
			<method name="public java.util.Set getGatedSyntacticPredicatesInNFAConfigurations()">5</method>
			<method name="public org.antlr.analysis.SemanticContext getGatedPredicatesInNFAConfigurations()">7</method>
			<method name="public int getAcceptStateReachable()">1</method>
			<method name="public int getNumberOfTransitions()">1</method>
			<method name="public org.antlr.analysis.Transition transition(int i)">1</method>
			<method name="public int getUniqueAlt()">4</method>
			<method name="public java.util.Set getAltSet()">3</method>
			<method name="public void setLookaheadDepth(int k)">2</method>
			<method name="public int getUniquelyPredictedAlt()">6</method>
			<method name="public int getLookaheadDepth()">1</method>
			<method name="public void addTransition(org.antlr.analysis.Transition t)">1</method>
			<method name="protected void addReachableLabel(org.antlr.analysis.Label label)">8</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Rule</name>
		<wmc>36</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>54</cbo>
		<rfc>91</rfc>
		<lcom>386</lcom>
		<ca>29</ca>
		<ce>32</ce>
		<npm>35</npm>
		<lcom3>0.9549783549783549</lcom3>
		<loc>1071</loc>
		<dam>0.21212121212121213</dam>
		<moa>10</moa>
		<mfa>0.0</mfa>
		<cam>0.22857142857142856</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>27.833333333333332</amc>
		<cc>
			<method name="public org.antlr.tool.AttributeScope getLocalAttributeScope(String name)">6</method>
			<method name="public String setOption(String key, Object value, antlr.Token optionsStartToken)">8</method>
			<method name="public void defineLabel(antlr.Token label, org.antlr.tool.GrammarAST elementRef, int type)">9</method>
			<method name="public java.util.Map getRuleLabels()">1</method>
			<method name="public java.util.Set getAllTokenRefsInAltsWithRewrites()">6</method>
			<method name="public String getSingleValueReturnName()">3</method>
			<method name="public org.antlr.tool.Grammar$LabelElementPair getRuleListLabel(String name)">2</method>
			<method name="public java.util.List getRuleRefsInAlt(String ref, int outerAltNum)">2</method>
			<method name="public String toString()">1</method>
			<method name="public org.antlr.tool.Grammar$LabelElementPair getLabel(String name)">1</method>
			<method name="public org.antlr.tool.Grammar$LabelElementPair getTokenLabel(String name)">2</method>
			<method name="public java.util.List getInlineActions()">1</method>
			<method name="public boolean getHasSingleReturnValue()">6</method>
			<method name="public void setOptions(java.util.Map options, antlr.Token optionsStartToken)">3</method>
			<method name="public boolean getHasReturnValue()">6</method>
			<method name="public void trackAltsWithRewrites(org.antlr.tool.GrammarAST altAST, int outerAltNum)">5</method>
			<method name="public void trackInlineAction(org.antlr.tool.GrammarAST actionAST)">1</method>
			<method name="public java.util.List getTokenRefsInAlt(String ref, int outerAltNum)">2</method>
			<method name="public java.util.Set getRuleRefsInAlt(int outerAltNum)">1</method>
			<method name="public boolean getHasMultipleReturnValues()">6</method>
			<method name="public void defineNamedAction(org.antlr.tool.GrammarAST ampersandAST, org.antlr.tool.GrammarAST nameAST, org.antlr.tool.GrammarAST actionAST)">2</method>
			<method name="public org.antlr.tool.AttributeScope getAttributeScope(String name)">4</method>
			<method name="public String getSingleValueReturnType()">3</method>
			<method name="public void trackTokenReferenceInAlt(org.antlr.tool.GrammarAST refAST, int outerAltNum)">2</method>
			<method name="public String getElementLabel(String refdSymbol, int outerAltNum, org.antlr.codegen.CodeGenerator generator)">7</method>
			<method name="public java.util.Set getTokenRefsInAlt(int altNum)">1</method>
			<method name="public java.util.Map getActions()">1</method>
			<method name="public org.antlr.tool.Grammar$LabelElementPair getTokenListLabel(String name)">2</method>
			<method name="public void trackRuleReferenceInAlt(org.antlr.tool.GrammarAST refAST, int outerAltNum)">2</method>
			<method name="public java.util.Set getAllRuleRefsInAltsWithRewrites()">3</method>
			<method name="public java.util.Map getRuleListLabels()">1</method>
			<method name="public void _init_(org.antlr.tool.Grammar grammar, String ruleName, int ruleIndex, int numberOfAlts)">2</method>
			<method name="static void _clinit_()">1</method>
			<method name="public boolean hasRewrite(int i)">2</method>
			<method name="public org.antlr.tool.Grammar$LabelElementPair getRuleLabel(String name)">2</method>
			<method name="public void setActions(java.util.Map actions)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$DFA72</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>38</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.5</amc>
		<cc>
			<method name="public String getDescription()">1</method>
			<method name="public void _init_(org.antlr.grammar.v3.ANTLRv3Parser, org.antlr.runtime.BaseRecognizer recognizer)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.DFA</name>
		<wmc>51</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>62</cbo>
		<rfc>137</rfc>
		<lcom>961</lcom>
		<ca>33</ca>
		<ce>41</ce>
		<npm>42</npm>
		<lcom3>0.9333333333333332</lcom3>
		<loc>1701</loc>
		<dam>0.38095238095238093</dam>
		<moa>8</moa>
		<mfa>0.0</mfa>
		<cam>0.19714285714285715</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>31.529411764705884</amc>
		<cc>
			<method name="protected void createMinMaxTables(org.antlr.analysis.DFAState s)">14</method>
			<method name="public java.util.List getJavaCompressedSpecial()">1</method>
			<method name="public boolean isTokensRuleDecision()">3</method>
			<method name="public java.util.List getJavaCompressedAccept()">1</method>
			<method name="public java.util.List getRunLengthEncoding(java.util.List data)">8</method>
			<method name="public boolean analysisTimedOut()">1</method>
			<method name="public void createStateTables(org.antlr.codegen.CodeGenerator generator)">6</method>
			<method name="public void removeState(org.antlr.analysis.DFAState d)">2</method>
			<method name="public int predict(org.antlr.runtime.IntStream input)">1</method>
			<method name="public int getNumberOfAlts()">1</method>
			<method name="public void _init_(int decisionNumber, org.antlr.analysis.NFAState decisionStartState)">4</method>
			<method name="public boolean canInlineDecision()">4</method>
			<method name="public boolean isCyclic()">3</method>
			<method name="public java.util.List getJavaCompressedMin()">1</method>
			<method name="public void setState(int stateNumber, org.antlr.analysis.DFAState d)">1</method>
			<method name="public org.antlr.analysis.NFAState getNFADecisionStartState()">1</method>
			<method name="public boolean okToRetryDFAWithK1()">7</method>
			<method name="public boolean getAutoBacktrackMode()">1</method>
			<method name="public void setUserMaxLookahead(int k)">1</method>
			<method name="public java.util.List getUnreachableAlts()">1</method>
			<method name="protected org.antlr.analysis.DFAState addState(org.antlr.analysis.DFAState d)">3</method>
			<method name="public String getReasonForFailure()">7</method>
			<method name="static void _clinit_()">1</method>
			<method name="public int getMaxLookaheadDepth()">2</method>
			<method name="public org.antlr.analysis.DFAState getAcceptState(int alt)">1</method>
			<method name="public String getDescription()">1</method>
			<method name="public int getMaxStateNumber()">1</method>
			<method name="public java.util.List getJavaCompressedTransition()">4</method>
			<method name="public java.util.List getJavaCompressedMax()">1</method>
			<method name="public java.util.List getJavaCompressedEOF()">1</method>
			<method name="protected void initAltRelatedInfo()">2</method>
			<method name="public org.antlr.analysis.DFAState newState()">1</method>
			<method name="protected void _init_()">1</method>
			<method name="public String toString()">2</method>
			<method name="protected void createEOTAndEOFTables(org.antlr.analysis.DFAState s)">9</method>
			<method name="public int getUserMaxLookahead()">2</method>
			<method name="public boolean isGreedy()">3</method>
			<method name="public org.antlr.analysis.DFAState getState(int stateNumber)">1</method>
			<method name="public java.util.List getJavaCompressedEOT()">1</method>
			<method name="protected void createSpecialTable(org.antlr.analysis.DFAState s)">6</method>
			<method name="public void findAllGatedSynPredsUsedInDFAAcceptStates()">5</method>
			<method name="public int getDecisionNumber()">1</method>
			<method name="public void verify()">1</method>
			<method name="protected boolean doesStateReachAcceptState(org.antlr.analysis.DFAState d)">8</method>
			<method name="public org.antlr.tool.GrammarAST getDecisionASTNode()">1</method>
			<method name="protected void createTransitionTableEntryForState(org.antlr.analysis.DFAState s)">8</method>
			<method name="public boolean isReduced()">1</method>
			<method name="public void setAcceptState(int alt, org.antlr.analysis.DFAState acceptState)">1</method>
			<method name="public java.util.Map getUniqueStates()">1</method>
			<method name="public void resetStateNumbersToBeContiguous()">7</method>
			<method name="public int getNumberOfStates()">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.Tool</name>
		<wmc>23</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>56</cbo>
		<rfc>119</rfc>
		<lcom>165</lcom>
		<ca>16</ca>
		<ce>45</ce>
		<npm>16</npm>
		<lcom3>0.8227272727272728</lcom3>
		<loc>1538</loc>
		<dam>0.7</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.33636363636363636</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>65.0</amc>
		<cc>
			<method name="public java.io.File getImportedVocabFile(String vocabName)">2</method>
			<method name="public String getLibraryFile(String fileName)">1</method>
			<method name="protected void generateRecognizer(org.antlr.tool.Grammar grammar)">7</method>
			<method name="protected void writeDOTFile(org.antlr.tool.Grammar g, String name, String dot)">1</method>
			<method name="private static void Xhelp()">1</method>
			<method name="public static void main(String[] args)">3</method>
			<method name="public java.io.Writer getOutputFile(org.antlr.tool.Grammar g, String fileName)">1</method>
			<method name="public void setOutputDirectory(String outputDirectory)">1</method>
			<method name="public void process()">10</method>
			<method name="public void generateDFAs(org.antlr.tool.Grammar g)">4</method>
			<method name="public org.antlr.tool.Grammar getRootGrammar(String grammarFileName)">1</method>
			<method name="protected void writeDOTFile(org.antlr.tool.Grammar g, org.antlr.tool.Rule r, String dot)">1</method>
			<method name="public void _init_(String[] args)">1</method>
			<method name="public void panic()">1</method>
			<method name="private static void help()">1</method>
			<method name="public String getFileDirectory(String fileName)">1</method>
			<method name="public static String getCurrentTimeStamp()">6</method>
			<method name="static void _clinit_()">1</method>
			<method name="public String getLibraryDirectory()">1</method>
			<method name="public void _init_()">1</method>
			<method name="protected void generateNFAs(org.antlr.tool.Grammar g)">2</method>
			<method name="public java.io.File getOutputDirectory(String fileNameWithPath)">8</method>
			<method name="public void processArgs(String[] args)">46</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v2.ANTLRParser$1</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>8</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>40</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.0</amc>
		<cc>
			<method name="public antlr.collections.AST create(int i)">1</method>
			<method name="public antlr.collections.AST create(antlr.Token token)">1</method>
			<method name="void _init_(org.antlr.grammar.v2.ANTLRParser)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.ErrorManager$5</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>10</rfc>
		<lcom>6</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>42</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.5</amc>
		<cc>
			<method name="void _init_()">1</method>
			<method name="public void debug(String s)">1</method>
			<method name="public void error(String s, Throwable e)">2</method>
			<method name="public void warning(String s)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.ErrorManager$4</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>11</rfc>
		<lcom>10</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>61</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.45</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.2</amc>
		<cc>
			<method name="void _init_()">1</method>
			<method name="public void info(String msg)">2</method>
			<method name="public void warning(org.antlr.tool.Message msg)">2</method>
			<method name="public void error(org.antlr.tool.Message msg)">2</method>
			<method name="public void error(org.antlr.tool.ToolMessage msg)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.LookaheadSet</name>
		<wmc>15</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>27</rfc>
		<lcom>0</lcom>
		<ca>6</ca>
		<ce>6</ce>
		<npm>15</npm>
		<lcom3>0.0</lcom3>
		<loc>128</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.28888888888888886</cam>
		<ic>1</ic>
		<cbm>1</cbm>
		<amc>7.466666666666667</amc>
		<cc>
			<method name="public boolean member(int a)">1</method>
			<method name="public void _init_(org.antlr.misc.IntSet s)">1</method>
			<method name="public void _init_(int atom)">1</method>
			<method name="public boolean equals(Object other)">1</method>
			<method name="public org.antlr.analysis.LookaheadSet intersection(org.antlr.analysis.LookaheadSet s)">1</method>
			<method name="public void _init_(org.antlr.analysis.LookaheadSet other)">1</method>
			<method name="public void orInPlace(org.antlr.analysis.LookaheadSet other)">1</method>
			<method name="public void remove(int a)">1</method>
			<method name="public String toString()">1</method>
			<method name="public int hashCode()">1</method>
			<method name="public String toString(org.antlr.tool.Grammar g)">2</method>
			<method name="public boolean isNil()">1</method>
			<method name="public org.antlr.analysis.LookaheadSet or(org.antlr.analysis.LookaheadSet other)">1</method>
			<method name="public org.antlr.analysis.LookaheadSet subtract(org.antlr.analysis.LookaheadSet other)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.ErrorManager$7</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>8</rfc>
		<lcom>6</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>24</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.0</amc>
		<cc>
			<method name="void _init_()">1</method>
			<method name="public void debug(String s)">1</method>
			<method name="public void error(String s, Throwable e)">2</method>
			<method name="public void warning(String s)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.ErrorManager$6</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>5</rfc>
		<lcom>6</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>10</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>1.5</amc>
		<cc>
			<method name="void _init_()">1</method>
			<method name="public void debug(String s)">1</method>
			<method name="public void error(String s, Throwable e)">1</method>
			<method name="public void warning(String s)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.DecisionProbe</name>
		<wmc>45</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>44</cbo>
		<rfc>127</rfc>
		<lcom>546</lcom>
		<ca>13</ca>
		<ce>34</ce>
		<npm>35</npm>
		<lcom3>0.9191919191919191</lcom3>
		<loc>1336</loc>
		<dam>0.7222222222222222</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.18863636363636363</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>28.288888888888888</amc>
		<cc>
			<method name="protected java.util.Set getDFAPathStatesToTarget(org.antlr.analysis.DFAState targetState)">3</method>
			<method name="public String getDescription()">1</method>
			<method name="public java.util.Set getDFAStatesWithSyntacticallyAmbiguousAlts()">1</method>
			<method name="public void reportDanglingState(org.antlr.analysis.DFAState d)">1</method>
			<method name="public boolean analysisTimedOut()">1</method>
			<method name="public void reset()">1</method>
			<method name="public boolean hasPredicate()">2</method>
			<method name="public void removeRecursiveOverflowState(org.antlr.analysis.DFAState d)">1</method>
			<method name="protected void stripWildCardAlts(java.util.Set disabledAlts)">5</method>
			<method name="public void _init_(org.antlr.analysis.DFA dfa)">1</method>
			<method name="public java.util.Set getDisabledAlternatives(org.antlr.analysis.DFAState d)">1</method>
			<method name="public String getInputSequenceDisplay(java.util.List labels)">2</method>
			<method name="public java.util.Set getNondeterministicStatesResolvedWithSemanticPredicate()">1</method>
			<method name="protected boolean reachesState(org.antlr.analysis.DFAState startState, org.antlr.analysis.DFAState targetState, java.util.Set states)">7</method>
			<method name="public void reportAltPredicateContext(org.antlr.analysis.DFAState d, java.util.Map altPredicateContext)">1</method>
			<method name="public java.util.List getSampleNonDeterministicInputSequence(org.antlr.analysis.DFAState targetState)">3</method>
			<method name="protected void getSampleInputSequenceUsingStateSet(org.antlr.analysis.State startState, org.antlr.analysis.State targetState, java.util.Set states, java.util.List labels)">5</method>
			<method name="public java.util.Set getNonDeterministicAlts()">1</method>
			<method name="public java.util.Set getDanglingStates()">1</method>
			<method name="public String getTokenNameForTokensRuleAlt(int alt)">1</method>
			<method name="public boolean isCyclic()">1</method>
			<method name="protected void issueRecursionWarnings()">2</method>
			<method name="public java.util.List getNFAPathStatesForAlt(int firstAlt, int alt, java.util.List labels)">2</method>
			<method name="public void reportNondeterminismResolvedWithSemanticPredicate(org.antlr.analysis.DFAState d)">2</method>
			<method name="public boolean analysisOverflowed()">2</method>
			<method name="public void reportNonLLStarDecision(org.antlr.analysis.DFA dfa)">1</method>
			<method name="public void reportNondeterminism(org.antlr.analysis.DFAState d, java.util.Set nondeterministicAlts)">1</method>
			<method name="public void reportAnalysisTimeout()">1</method>
			<method name="protected String getStateLabelIndexKey(int s, int i)">1</method>
			<method name="public java.util.List getUnreachableAlts()">1</method>
			<method name="protected boolean getNFAPath(org.antlr.analysis.NFAState s, int labelIndex, java.util.List labels, java.util.List path)">9</method>
			<method name="public void issueWarnings()">19</method>
			<method name="public void reportIncompletelyCoveredAlts(org.antlr.analysis.DFAState d, java.util.Map altToLocationsReachableWithoutPredicate)">1</method>
			<method name="public java.util.List getNonDeterministicAltsForState(org.antlr.analysis.DFAState targetState)">2</method>
			<method name="public void reportLexerRuleNondeterminism(org.antlr.analysis.DFAState d, java.util.Set nondeterministicAlts)">1</method>
			<method name="private java.util.Set getUnaliasedDFAStateSet(java.util.Set dfaStatesWithRecursionProblems)">2</method>
			<method name="public boolean isReduced()">1</method>
			<method name="private void computeAltToProblemMaps(java.util.Set dfaStatesUnaliased, java.util.Map configurationsMap, java.util.Map altToTargetToCallSitesMap, java.util.Map altToDFAState)">5</method>
			<method name="public java.util.Map getIncompletelyCoveredAlts(org.antlr.analysis.DFAState d)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public boolean isNonLLStarDecision()">1</method>
			<method name="public boolean isDeterministic()">6</method>
			<method name="public org.antlr.analysis.SemanticContext getSemanticContextForAlt(org.antlr.analysis.DFAState d, int alt)">2</method>
			<method name="public void reportRecursionOverflow(org.antlr.analysis.DFAState d, org.antlr.analysis.NFAConfiguration recursionNFAConfiguration)">2</method>
			<method name="public int getNumberOfStates()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.codegen.DelphiTarget</name>
		<wmc>7</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>27</rfc>
		<lcom>19</lcom>
		<ca>0</ca>
		<ce>13</ce>
		<npm>6</npm>
		<lcom3>2.0</lcom3>
		<loc>262</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.30158730158730157</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>36.42857142857143</amc>
		<cc>
			<method name="protected org.antlr.stringtemplate.StringTemplate chooseWhereCyclicDFAsGo(org.antlr.Tool tool, org.antlr.codegen.CodeGenerator generator, org.antlr.tool.Grammar grammar, org.antlr.stringtemplate.StringTemplate recognizerST, org.antlr.stringtemplate.StringTemplate cyclicDFAST)">1</method>
			<method name="public String encodeIntAsCharEscape(int v)">2</method>
			<method name="public String getTargetStringLiteralFromANTLRStringLiteral(org.antlr.codegen.CodeGenerator generator, String literal)">1</method>
			<method name="public String getTarget64BitStringFromValue(long word)">2</method>
			<method name="public String getTargetStringLiteralFromString(String s, boolean quoted)">9</method>
			<method name="public void _init_()">1</method>
			<method name="public String getTargetCharLiteralFromANTLRCharLiteral(org.antlr.codegen.CodeGenerator generator, String literal)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.misc.IntervalSet</name>
		<wmc>29</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>29</cbo>
		<rfc>73</rfc>
		<lcom>62</lcom>
		<ca>12</ca>
		<ce>18</ce>
		<npm>27</npm>
		<lcom3>0.5178571428571429</lcom3>
		<loc>974</loc>
		<dam>0.5</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.2193877551020408</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>32.51724137931034</amc>
		<cc>
			<method name="public boolean member(int el)">5</method>
			<method name="public org.antlr.misc.IntSet complement(org.antlr.misc.IntSet vocabulary)">7</method>
			<method name="public void remove(int el)">1</method>
			<method name="public void addAll(org.antlr.misc.IntSet set)">4</method>
			<method name="public int size()">3</method>
			<method name="protected void add(org.antlr.misc.Interval addition)">9</method>
			<method name="public org.antlr.misc.IntSet complement(int minElement, int maxElement)">1</method>
			<method name="public String toString()">1</method>
			<method name="public boolean equals(Object obj)">3</method>
			<method name="public void _init_(java.util.List intervals)">1</method>
			<method name="public void add(int a, int b)">1</method>
			<method name="public org.antlr.misc.IntSet or(org.antlr.misc.IntSet a)">1</method>
			<method name="public org.antlr.misc.IntSet subtract(org.antlr.misc.IntSet other)">1</method>
			<method name="public int getMaxElement()">2</method>
			<method name="public org.antlr.misc.IntSet and(org.antlr.misc.IntSet other)">13</method>
			<method name="public static org.antlr.misc.IntervalSet of(int a, int b)">1</method>
			<method name="public int get(int i)">4</method>
			<method name="public int getMinElement()">5</method>
			<method name="public int[] toArray()">3</method>
			<method name="public int getSingleElement()">4</method>
			<method name="public String toString(org.antlr.tool.Grammar g)">9</method>
			<method name="public java.util.List toList()">3</method>
			<method name="public void add(int el)">1</method>
			<method name="public boolean isNil()">3</method>
			<method name="public java.util.List getIntervals()">1</method>
			<method name="public static org.antlr.misc.IntervalSet of(int a)">1</method>
			<method name="public org.antlr.runtime.BitSet toRuntimeBitSet()">3</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$terminal_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.GrammarAST</name>
		<wmc>41</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>51</cbo>
		<rfc>77</rfc>
		<lcom>510</lcom>
		<ca>37</ca>
		<ce>18</ce>
		<npm>40</npm>
		<lcom3>0.9044117647058825</lcom3>
		<loc>745</loc>
		<dam>0.11764705882352941</dam>
		<moa>5</moa>
		<mfa>0.0</mfa>
		<cam>0.14423076923076922</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>16.75609756097561</amc>
		<cc>
			<method name="public void setBlockOptions(java.util.Map blockOptions)">1</method>
			<method name="public org.antlr.tool.GrammarAST getLastSibling()">2</method>
			<method name="public org.antlr.tool.GrammarAST getLastChild()">1</method>
			<method name="public void _init_(int t, String txt)">1</method>
			<method name="public void initialize(antlr.collections.AST ast)">1</method>
			<method name="public org.antlr.misc.IntSet getSetValue()">1</method>
			<method name="public boolean equals(Object ast)">6</method>
			<method name="public static org.antlr.tool.GrammarAST dupTreeNoActions(org.antlr.tool.GrammarAST t, org.antlr.tool.GrammarAST parent)">5</method>
			<method name="public void setOptions(org.antlr.tool.Grammar grammar, java.util.Map options)">3</method>
			<method name="public org.antlr.tool.GrammarAST getFirstChildWithType(int ttype)">3</method>
			<method name="public String setOption(java.util.Map options, java.util.Set legalOptions, org.antlr.tool.Grammar grammar, String key, Object value)">7</method>
			<method name="public int getLine()">4</method>
			<method name="public int getType()">2</method>
			<method name="public void setNFAStartState(org.antlr.analysis.NFAState nfaStartState)">1</method>
			<method name="public void setSetValue(org.antlr.misc.IntSet setValue)">1</method>
			<method name="public void setTreeEnclosingRuleNameDeeply(String rname)">2</method>
			<method name="public String setBlockOption(org.antlr.tool.Grammar grammar, String key, Object value)">2</method>
			<method name="public void setLine(int line)">1</method>
			<method name="public org.antlr.tool.GrammarAST getChild(int i)">3</method>
			<method name="public org.antlr.tool.GrammarAST findFirstType(int ttype)">4</method>
			<method name="public java.util.Map getBlockOptions()">1</method>
			<method name="public void initialize(antlr.Token token)">1</method>
			<method name="public String setTerminalOption(org.antlr.tool.Grammar grammar, String key, Object value)">2</method>
			<method name="public void setType(int type)">1</method>
			<method name="public void initialize(int i, String s)">1</method>
			<method name="public boolean hasSameTreeStructure(antlr.collections.AST t)">5</method>
			<method name="public static org.antlr.tool.GrammarAST dupListNoActions(org.antlr.tool.GrammarAST t, org.antlr.tool.GrammarAST parent)">5</method>
			<method name="public org.antlr.analysis.DFA getLookaheadDFA()">1</method>
			<method name="public org.antlr.analysis.NFAState getNFAStartState()">1</method>
			<method name="public String getText()">2</method>
			<method name="public int getColumn()">4</method>
			<method name="public antlr.Token getToken()">1</method>
			<method name="public Object getBlockOption(String key)">2</method>
			<method name="public void setText(String text)">1</method>
			<method name="public void setLookaheadDFA(org.antlr.analysis.DFA lookaheadDFA)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public boolean hasSameListStructure(antlr.collections.AST t)">10</method>
			<method name="public void _init_()">1</method>
			<method name="public void setColumn(int col)">1</method>
			<method name="public org.antlr.tool.GrammarAST[] getChildrenAsArray()">2</method>
			<method name="public static org.antlr.tool.GrammarAST dup(antlr.collections.AST t)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Attribute</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>15</rfc>
		<lcom>0</lcom>
		<ca>6</ca>
		<ce>6</ce>
		<npm>3</npm>
		<lcom3>0.25</lcom3>
		<loc>208</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.875</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>50.0</amc>
		<cc>
			<method name="public String toString()">2</method>
			<method name="public void _init_(String decl)">1</method>
			<method name="protected void extractAttribute(String decl)">18</method>
			<method name="public void _init_(String name, String decl)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v2.ANTLRTreePrinterTokenTypes</name>
		<wmc>0</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>3</cbo>
		<rfc>0</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>2</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>100</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$DFA64</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>14</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>103</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>33.0</amc>
		<cc>
			<method name="public String getDescription()">1</method>
			<method name="public int specialStateTransition(int s, org.antlr.runtime.IntStream _input)">1</method>
			<method name="public void _init_(org.antlr.grammar.v3.ANTLRv3Parser, org.antlr.runtime.BaseRecognizer recognizer)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.NFAState</name>
		<wmc>15</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>42</cbo>
		<rfc>27</rfc>
		<lcom>65</lcom>
		<ca>33</ca>
		<ce>13</ce>
		<npm>15</npm>
		<lcom3>0.9705882352941176</lcom3>
		<loc>232</loc>
		<dam>0.17647058823529413</dam>
		<moa>5</moa>
		<mfa>0.0</mfa>
		<cam>0.22857142857142856</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.333333333333334</amc>
		<cc>
			<method name="public String getDescription()">1</method>
			<method name="public void setEOTTargetState(boolean eot)">1</method>
			<method name="public boolean isEOTTargetState()">1</method>
			<method name="public void setTransition0(org.antlr.analysis.Transition e)">2</method>
			<method name="public boolean isDecisionState()">2</method>
			<method name="public int getNumberOfTransitions()">1</method>
			<method name="public void setDecisionNumber(int decisionNumber)">1</method>
			<method name="public void addTransition(org.antlr.analysis.Transition e)">7</method>
			<method name="public String toString()">1</method>
			<method name="public void _init_(org.antlr.analysis.NFA nfa)">1</method>
			<method name="public int translateDisplayAltToWalkAlt(int displayAlt)">5</method>
			<method name="public void setDecisionASTNode(org.antlr.tool.GrammarAST decisionASTNode)">1</method>
			<method name="public org.antlr.analysis.Transition transition(int i)">1</method>
			<method name="public void setDescription(String description)">1</method>
			<method name="public int getDecisionNumber()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$DFA67</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>38</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.5</amc>
		<cc>
			<method name="public String getDescription()">1</method>
			<method name="public void _init_(org.antlr.grammar.v3.ANTLRv3Parser, org.antlr.runtime.BaseRecognizer recognizer)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.SemanticContext$TruePredicate</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>6</rfc>
		<lcom>3</lcom>
		<ca>4</ca>
		<ce>8</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>22</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.333333333333333</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public org.antlr.stringtemplate.StringTemplate genExpr(org.antlr.codegen.CodeGenerator generator, org.antlr.stringtemplate.StringTemplateGroup templates, org.antlr.analysis.DFA dfa)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.AttributeScope</name>
		<wmc>11</wmc>
		<dit>1</dit>
		<noc>4</noc>
		<cbo>26</cbo>
		<rfc>35</rfc>
		<lcom>0</lcom>
		<ca>12</ca>
		<ce>16</ce>
		<npm>10</npm>
		<lcom3>0.8272727272727274</lcom3>
		<loc>268</loc>
		<dam>0.18181818181818182</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.3333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>22.363636363636363</amc>
		<cc>
			<method name="public String toString()">2</method>
			<method name="public void addAttribute(String name, String decl)">1</method>
			<method name="public java.util.Set intersection(org.antlr.tool.AttributeScope other)">6</method>
			<method name="public void _init_(String name, antlr.Token derivedFromToken)">1</method>
			<method name="public String getName()">3</method>
			<method name="static void _clinit_()">1</method>
			<method name="public org.antlr.tool.Attribute getAttribute(String name)">1</method>
			<method name="public void _init_(org.antlr.tool.Grammar grammar, String name, antlr.Token derivedFromToken)">1</method>
			<method name="public void addAttributes(String definitions, int separator)">4</method>
			<method name="public int size()">2</method>
			<method name="public java.util.List getAttributes()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$rewrite_tree_element_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.codegen.JavaTarget</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>0</ca>
		<ce>7</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>7</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>2.5</amc>
		<cc>
			<method name="protected org.antlr.stringtemplate.StringTemplate chooseWhereCyclicDFAsGo(org.antlr.Tool tool, org.antlr.codegen.CodeGenerator generator, org.antlr.tool.Grammar grammar, org.antlr.stringtemplate.StringTemplate recognizerST, org.antlr.stringtemplate.StringTemplate cyclicDFAST)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Interp</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>22</cbo>
		<rfc>36</rfc>
		<lcom>1</lcom>
		<ca>0</ca>
		<ce>22</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>198</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>98.0</amc>
		<cc>
			<method name="public static void main(String[] args)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v2.ANTLRParser</name>
		<wmc>125</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>33</cbo>
		<rfc>200</rfc>
		<lcom>3650</lcom>
		<ca>3</ca>
		<ce>32</ce>
		<npm>65</npm>
		<lcom3>0.9484149054505006</lcom3>
		<loc>11013</loc>
		<dam>0.08620689655172414</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.07258064516129033</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>86.64</amc>
		<cc>
			<method name="public final void attrScopes()">1</method>
			<method name="public void _init_(antlr.ParserSharedInputState state)">1</method>
			<method name="private static final long[] mk_tokenSet_3()">1</method>
			<method name="public final void grammar(org.antlr.tool.Grammar g)">1</method>
			<method name="public final void rewrite_ebnf()">1</method>
			<method name="protected org.antlr.tool.GrammarAST createBlockFromDupAlt(org.antlr.tool.GrammarAST alt)">1</method>
			<method name="private static final long[] mk_tokenSet_42()">1</method>
			<method name="public final Object optionValue()">7</method>
			<method name="public final void attrScope()">1</method>
			<method name="protected void prefixWithSynPred(org.antlr.tool.GrammarAST alt)">7</method>
			<method name="private static final long[] mk_tokenSet_23()">1</method>
			<method name="private static final long[] mk_tokenSet_27()">1</method>
			<method name="private static final long[] mk_tokenSet_46()">1</method>
			<method name="public final void rewrite_tree()">1</method>
			<method name="public void setGtype(int gtype)">1</method>
			<method name="public void cleanup(org.antlr.tool.GrammarAST root)">4</method>
			<method name="public final void range()">1</method>
			<method name="public final void ruleref()">1</method>
			<method name="public final void alternative()">1</method>
			<method name="public final void finallyClause()">1</method>
			<method name="private static final long[] mk_tokenSet_7()">1</method>
			<method name="public final void element()">1</method>
			<method name="private static final long[] mk_tokenSet_30()">1</method>
			<method name="private static final long[] mk_tokenSet_34()">1</method>
			<method name="public final void exceptionHandler()">1</method>
			<method name="public final void terminal()">1</method>
			<method name="private static final long[] mk_tokenSet_11()">1</method>
			<method name="private static final long[] mk_tokenSet_38()">1</method>
			<method name="private static final long[] mk_tokenSet_15()">1</method>
			<method name="public final void tokensSpec()">1</method>
			<method name="public final void rewrite_element()">1</method>
			<method name="private static final long[] mk_tokenSet_19()">1</method>
			<method name="public final void elementOption(org.antlr.tool.GrammarAST terminalAST)">1</method>
			<method name="private static final long[] mk_tokenSet_0()">1</method>
			<method name="public final void elementNoOptionSpec()">1</method>
			<method name="public final void defaultNodeOption(org.antlr.tool.GrammarAST terminalAST)">1</method>
			<method name="public final void rewrite_template()">1</method>
			<method name="private static final long[] mk_tokenSet_4()">1</method>
			<method name="private static final long[] mk_tokenSet_41()">1</method>
			<method name="public final void option(java.util.Map opts)">1</method>
			<method name="public final void idList()">1</method>
			<method name="public final void rewrite_template_arg()">1</method>
			<method name="private static final long[] mk_tokenSet_22()">1</method>
			<method name="private static final long[] mk_tokenSet_49()">1</method>
			<method name="public final void notTerminal()">4</method>
			<method name="private static final long[] mk_tokenSet_26()">1</method>
			<method name="private static final long[] mk_tokenSet_45()">1</method>
			<method name="public void reportError(antlr.RecognitionException ex)">1</method>
			<method name="protected void buildTokenTypeASTClassMap()">1</method>
			<method name="public final void rewrite_template_args()">1</method>
			<method name="public final void id()">3</method>
			<method name="public final java.util.Map optionsSpec()">1</method>
			<method name="public final void ruleActions()">1</method>
			<method name="public final void atom()">1</method>
			<method name="public final org.antlr.tool.GrammarAST ebnfSuffix(org.antlr.tool.GrammarAST elemAST, boolean inRewrite)">1</method>
			<method name="public final void block()">1</method>
			<method name="private static final long[] mk_tokenSet_8()">1</method>
			<method name="public final void rule()">1</method>
			<method name="private static final long[] mk_tokenSet_10()">1</method>
			<method name="private static final long[] mk_tokenSet_33()">1</method>
			<method name="private static final long[] mk_tokenSet_14()">1</method>
			<method name="private static final long[] mk_tokenSet_37()">1</method>
			<method name="private static final long[] mk_tokenSet_18()">1</method>
			<method name="public final void rewrite()">1</method>
			<method name="private static final long[] mk_tokenSet_1()">1</method>
			<method name="public final void tokenSpec()">3</method>
			<method name="public final void treeRoot()">1</method>
			<method name="private static final long[] mk_tokenSet_5()">1</method>
			<method name="public final void action()">1</method>
			<method name="public final void rewrite_indirect_template_head()">1</method>
			<method name="public org.antlr.tool.Grammar getGrammar()">1</method>
			<method name="public final void altList(java.util.Map opts)">1</method>
			<method name="public final void rewrite_block()">1</method>
			<method name="private static final long[] mk_tokenSet_40()">1</method>
			<method name="public final void notSet()">5</method>
			<method name="public final void delegateGrammar()">1</method>
			<method name="private static final long[] mk_tokenSet_48()">1</method>
			<method name="private static final long[] mk_tokenSet_21()">1</method>
			<method name="protected org.antlr.tool.GrammarAST setToBlockWithSet(org.antlr.tool.GrammarAST b)">1</method>
			<method name="private static final long[] mk_tokenSet_44()">1</method>
			<method name="public final void grammarType()">5</method>
			<method name="private static final long[] mk_tokenSet_25()">1</method>
			<method name="public final void ruleAction()">1</method>
			<method name="public final void ruleScopeSpec()">1</method>
			<method name="private static final long[] mk_tokenSet_29()">1</method>
			<method name="public final void ebnf()">1</method>
			<method name="public final void exceptionGroup()">10</method>
			<method name="public final void throwsSpec()">1</method>
			<method name="protected void _init_(antlr.TokenStream lexer, int k)">1</method>
			<method name="private static final long[] mk_tokenSet_9()">1</method>
			<method name="private static final long[] mk_tokenSet_51()">1</method>
			<method name="private static final long[] mk_tokenSet_13()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="private static final long[] mk_tokenSet_32()">1</method>
			<method name="private static final long[] mk_tokenSet_17()">1</method>
			<method name="private static final long[] mk_tokenSet_36()">1</method>
			<method name="public final void rewrite_alternative()">1</method>
			<method name="protected org.antlr.tool.GrammarAST createSynSemPredFromBlock(org.antlr.tool.GrammarAST synpredBlockAST, int synpredTokenType)">1</method>
			<method name="private static final long[] mk_tokenSet_2()">1</method>
			<method name="private static final long[] mk_tokenSet_6()">1</method>
			<method name="public final void actions()">1</method>
			<method name="public final void tree()">1</method>
			<method name="public final void rewrite_template_head()">1</method>
			<method name="public void _init_(antlr.TokenBuffer tokenBuf)">1</method>
			<method name="private static final long[] mk_tokenSet_20()">1</method>
			<method name="public int getGtype()">1</method>
			<method name="public final void delegateGrammars()">1</method>
			<method name="private static final long[] mk_tokenSet_24()">1</method>
			<method name="private static final long[] mk_tokenSet_47()">1</method>
			<method name="private static final long[] mk_tokenSet_28()">1</method>
			<method name="private static final long[] mk_tokenSet_43()">1</method>
			<method name="public final void actionScopeName()">5</method>
			<method name="public final void rewrite_atom()">1</method>
			<method name="protected void _init_(antlr.TokenBuffer tokenBuf, int k)">1</method>
			<method name="public final void rules()">1</method>
			<method name="public org.antlr.tool.GrammarAST createSimpleRuleAST(String name, org.antlr.tool.GrammarAST block, boolean fragment)">2</method>
			<method name="public final void elementOptions(org.antlr.tool.GrammarAST terminalAST)">1</method>
			<method name="private static final long[] mk_tokenSet_50()">1</method>
			<method name="private static final long[] mk_tokenSet_31()">1</method>
			<method name="private static final long[] mk_tokenSet_12()">1</method>
			<method name="private static final long[] mk_tokenSet_35()">1</method>
			<method name="public void setGrammar(org.antlr.tool.Grammar grammar)">1</method>
			<method name="private static final long[] mk_tokenSet_16()">1</method>
			<method name="private static final long[] mk_tokenSet_39()">1</method>
			<method name="public void _init_(antlr.TokenStream lexer)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.misc.MutableInteger</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>2</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>0</ca>
		<ce>2</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>13</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.0</amc>
		<cc>
			<method name="public void _init_(int value)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Grammar$LabelElementPair</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>7</rfc>
		<lcom>0</lcom>
		<ca>7</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>0.9166666666666666</lcom3>
		<loc>35</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.666666666666666</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_(org.antlr.tool.Grammar, antlr.Token label, org.antlr.tool.GrammarAST elementRef)">1</method>
			<method name="public org.antlr.tool.Rule getReferencedRule()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.CompositeGrammar</name>
		<wmc>24</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>35</cbo>
		<rfc>72</rfc>
		<lcom>56</lcom>
		<ca>14</ca>
		<ce>25</ce>
		<npm>23</npm>
		<lcom3>0.9006211180124224</lcom3>
		<loc>761</loc>
		<dam>0.42857142857142855</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.24404761904761904</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>30.125</amc>
		<cc>
			<method name="public org.antlr.tool.Grammar getDelegator(org.antlr.tool.Grammar g)">3</method>
			<method name="public java.util.Set getDelegatedRules(org.antlr.tool.Grammar g)">4</method>
			<method name="public org.antlr.tool.Rule getRule(String ruleName)">1</method>
			<method name="public void _init_(org.antlr.tool.Grammar g)">1</method>
			<method name="public org.antlr.tool.Grammar getGrammar(String grammarName)">2</method>
			<method name="public void setDelegationRoot(org.antlr.tool.Grammar root)">1</method>
			<method name="public void assignTokenTypes()">1</method>
			<method name="public void defineGrammarSymbols()">5</method>
			<method name="protected void initTokenSymbolTables()">1</method>
			<method name="public int getNewNFAStateNumber()">1</method>
			<method name="public java.util.List getDelegates(org.antlr.tool.Grammar g)">2</method>
			<method name="public java.util.List getDirectDelegates(org.antlr.tool.Grammar g)">4</method>
			<method name="public java.util.Set getAllImportedRules(org.antlr.tool.Grammar g)">3</method>
			<method name="public org.antlr.tool.Grammar getRootGrammar()">2</method>
			<method name="public void minimizeRuleSet()">1</method>
			<method name="public void addGrammar(org.antlr.tool.Grammar delegator, org.antlr.tool.Grammar delegate)">2</method>
			<method name="public void createNFAs()">7</method>
			<method name="public java.util.List getIndirectDelegates(org.antlr.tool.Grammar g)">1</method>
			<method name="public java.util.List getDelegators(org.antlr.tool.Grammar g)">3</method>
			<method name="public void _init_()">1</method>
			<method name="public void _minimizeRuleSet(java.util.Set ruleDefs, org.antlr.tool.CompositeGrammarTree p)">5</method>
			<method name="public void addState(org.antlr.analysis.NFAState state)">1</method>
			<method name="public Object getOption(String key)">1</method>
			<method name="public org.antlr.analysis.NFAState getState(int s)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.codegen.CTarget</name>
		<wmc>7</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>28</rfc>
		<lcom>15</lcom>
		<ca>0</ca>
		<ce>13</ce>
		<npm>4</npm>
		<lcom3>0.6666666666666666</lcom3>
		<loc>364</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5306122448979592</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>50.857142857142854</amc>
		<cc>
			<method name="protected void genRecognizerFile(org.antlr.Tool tool, org.antlr.codegen.CodeGenerator generator, org.antlr.tool.Grammar grammar, org.antlr.stringtemplate.StringTemplate outputFileST)">1</method>
			<method name="protected org.antlr.stringtemplate.StringTemplate chooseWhereCyclicDFAsGo(org.antlr.Tool tool, org.antlr.codegen.CodeGenerator generator, org.antlr.tool.Grammar grammar, org.antlr.stringtemplate.StringTemplate recognizerST, org.antlr.stringtemplate.StringTemplate cyclicDFAST)">1</method>
			<method name="protected void genRecognizerHeaderFile(org.antlr.Tool tool, org.antlr.codegen.CodeGenerator generator, org.antlr.tool.Grammar grammar, org.antlr.stringtemplate.StringTemplate headerFileST, String extName)">1</method>
			<method name="public boolean isValidActionScope(int grammarType, String scope)">23</method>
			<method name="public String getTargetStringLiteralFromANTLRStringLiteral(org.antlr.codegen.CodeGenerator generator, String literal)">17</method>
			<method name="public void _init_()">1</method>
			<method name="public String getTargetCharLiteralFromANTLRCharLiteral(org.antlr.codegen.CodeGenerator generator, String literal)">4</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.NonLLStarDecisionException</name>
		<wmc>1</wmc>
		<dit>4</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>4</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>8</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>1.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.0</amc>
		<cc>
			<method name="public void _init_(org.antlr.analysis.DFA abortedDFA)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.AssignTokenTypesBehavior</name>
		<wmc>12</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>20</cbo>
		<rfc>47</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>20</ce>
		<npm>2</npm>
		<lcom3>0.6493506493506493</lcom3>
		<loc>547</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6363636363636364</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>44.0</amc>
		<cc>
			<method name="protected void defineTokenNamesAndLiteralsInGrammar(org.antlr.tool.Grammar root)">3</method>
			<method name="protected void alias(org.antlr.tool.GrammarAST t, org.antlr.tool.GrammarAST s)">7</method>
			<method name="protected void init(org.antlr.tool.Grammar g)">2</method>
			<method name="protected void assignStringTypes(org.antlr.tool.Grammar root)">2</method>
			<method name="protected void trackToken(org.antlr.tool.GrammarAST t)">3</method>
			<method name="static void _clinit_()">1</method>
			<method name="protected void assignTokenIDTypes(org.antlr.tool.Grammar root)">2</method>
			<method name="public void defineTokens(org.antlr.tool.Grammar root)">1</method>
			<method name="public void _init_()">1</method>
			<method name="protected void aliasTokenIDsAndLiterals(org.antlr.tool.Grammar root)">3</method>
			<method name="protected void trackString(org.antlr.tool.GrammarAST t)">10</method>
			<method name="protected void trackTokenRule(org.antlr.tool.GrammarAST t, org.antlr.tool.GrammarAST modifier, org.antlr.tool.GrammarAST block)">12</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.GrammarSemanticsMessage</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>11</rfc>
		<lcom>4</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>4</npm>
		<lcom3>0.0</lcom3>
		<loc>84</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>19.5</amc>
		<cc>
			<method name="public String toString()">5</method>
			<method name="public void _init_(int msgID, org.antlr.tool.Grammar g, antlr.Token offendingToken, Object arg, Object arg2)">1</method>
			<method name="public void _init_(int msgID, org.antlr.tool.Grammar g, antlr.Token offendingToken)">1</method>
			<method name="public void _init_(int msgID, org.antlr.tool.Grammar g, antlr.Token offendingToken, Object arg)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.GrammarAnalysisAbortedMessage</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>11</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>12</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>51</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>24.0</amc>
		<cc>
			<method name="public String toString()">2</method>
			<method name="public void _init_(org.antlr.analysis.DecisionProbe probe)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.ActionLabel</name>
		<wmc>5</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>10</rfc>
		<lcom>8</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>5</npm>
		<lcom3>0.5</lcom3>
		<loc>32</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.2</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public String toString(org.antlr.tool.Grammar g)">1</method>
			<method name="public void _init_(org.antlr.tool.GrammarAST actionAST)">1</method>
			<method name="public boolean isEpsilon()">1</method>
			<method name="public boolean isAction()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$rewrite_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.codegen.ActionScriptTarget</name>
		<wmc>7</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>26</rfc>
		<lcom>21</lcom>
		<ca>0</ca>
		<ce>13</ce>
		<npm>5</npm>
		<lcom3>2.0</lcom3>
		<loc>186</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.30158730158730157</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>25.571428571428573</amc>
		<cc>
			<method name="public String getTokenTypeAsTargetLabel(org.antlr.codegen.CodeGenerator generator, int ttype)">4</method>
			<method name="protected org.antlr.stringtemplate.StringTemplate chooseWhereCyclicDFAsGo(org.antlr.Tool tool, org.antlr.codegen.CodeGenerator generator, org.antlr.tool.Grammar grammar, org.antlr.stringtemplate.StringTemplate recognizerST, org.antlr.stringtemplate.StringTemplate cyclicDFAST)">1</method>
			<method name="public String encodeIntAsCharEscape(int v)">4</method>
			<method name="public String getTarget64BitStringFromValue(long word)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public String getTargetCharLiteralFromANTLRCharLiteral(org.antlr.codegen.CodeGenerator generator, String literal)">1</method>
			<method name="private void writeHexWithPadding(StringBuffer buf, String digits)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.DOTGenerator</name>
		<wmc>11</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>33</cbo>
		<rfc>63</rfc>
		<lcom>9</lcom>
		<ca>1</ca>
		<ce>33</ce>
		<npm>6</npm>
		<lcom3>0.7166666666666666</lcom3>
		<loc>782</loc>
		<dam>0.6666666666666666</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.2857142857142857</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>69.54545454545455</amc>
		<cc>
			<method name="protected void walkRuleNFACreatingDOT(org.antlr.stringtemplate.StringTemplate dot, org.antlr.analysis.State s)">14</method>
			<method name="protected void walkCreatingDFADOT(org.antlr.stringtemplate.StringTemplate dot, org.antlr.analysis.DFAState s)">4</method>
			<method name="public void setArrowheadType(String arrowhead)">1</method>
			<method name="public String getDOT(org.antlr.analysis.State startState)">3</method>
			<method name="protected String getStateLabel(org.antlr.analysis.State s)">22</method>
			<method name="public void _init_(org.antlr.tool.Grammar grammar)">1</method>
			<method name="public String getArrowheadType()">1</method>
			<method name="public String getRankdir()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void setRankdir(String rankdir)">1</method>
			<method name="protected String getEdgeLabel(org.antlr.analysis.Transition edge)">5</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$altpair_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.SemanticContext</name>
		<wmc>9</wmc>
		<dit>1</dit>
		<noc>4</noc>
		<cbo>24</cbo>
		<rfc>16</rfc>
		<lcom>30</lcom>
		<ca>19</ca>
		<ce>12</ce>
		<npm>8</npm>
		<lcom3>0.75</lcom3>
		<loc>124</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.25</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.666666666666666</amc>
		<cc>
			<method name="public static org.antlr.analysis.SemanticContext not(org.antlr.analysis.SemanticContext a)">1</method>
			<method name="public abstract org.antlr.analysis.SemanticContext getGatedPredicateContext()">1</method>
			<method name="public void trackUseOfSyntacticPredicates(org.antlr.tool.Grammar g)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public abstract org.antlr.stringtemplate.StringTemplate genExpr(org.antlr.codegen.CodeGenerator, org.antlr.stringtemplate.StringTemplateGroup, org.antlr.analysis.DFA)">1</method>
			<method name="public abstract boolean isSyntacticPredicate()">1</method>
			<method name="public static org.antlr.analysis.SemanticContext and(org.antlr.analysis.SemanticContext a, org.antlr.analysis.SemanticContext b)">6</method>
			<method name="public static org.antlr.analysis.SemanticContext or(org.antlr.analysis.SemanticContext a, org.antlr.analysis.SemanticContext b)">12</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ActionAnalysis</name>
		<wmc>18</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>25</cbo>
		<rfc>55</rfc>
		<lcom>5</lcom>
		<ca>1</ca>
		<ce>25</ce>
		<npm>18</npm>
		<lcom3>0.9019607843137255</lcom3>
		<loc>983</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.19444444444444445</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>53.111111111111114</amc>
		<cc>
			<method name="public final void synpred1_ActionAnalysis_fragment()">1</method>
			<method name="public void _init_(org.antlr.runtime.CharStream input, org.antlr.runtime.RecognizerSharedState state)">1</method>
			<method name="public final void mX_Y()">1</method>
			<method name="public boolean alreadyParsedRule(org.antlr.runtime.IntStream input, int ruleIndex)">2</method>
			<method name="public final void mID()">1</method>
			<method name="public final boolean synpred1_ActionAnalysis()">2</method>
			<method name="public void memoize(org.antlr.runtime.IntStream input, int ruleIndex, int ruleStartIndex)">2</method>
			<method name="public void _init_(org.antlr.tool.Grammar grammar, String ruleName, org.antlr.tool.GrammarAST actionAST)">1</method>
			<method name="public org.antlr.runtime.Token nextToken()">3</method>
			<method name="public final void synpred2_ActionAnalysis_fragment()">1</method>
			<method name="public void analyze()">2</method>
			<method name="public final void mX()">1</method>
			<method name="public void _init_(org.antlr.runtime.CharStream input)">1</method>
			<method name="public final void mY()">1</method>
			<method name="public void mTokens()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public String getGrammarFileName()">1</method>
			<method name="public final boolean synpred2_ActionAnalysis()">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.RuleClosureTransition</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>16</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>10</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>14</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.0</amc>
		<cc>
			<method name="public void _init_(org.antlr.tool.Rule rule, org.antlr.analysis.NFAState ruleStart, org.antlr.analysis.NFAState followState)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.codegen.RubyTarget</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>16</rfc>
		<lcom>6</lcom>
		<ca>0</ca>
		<ce>7</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>92</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>22.0</amc>
		<cc>
			<method name="public String getTokenTypeAsTargetLabel(org.antlr.codegen.CodeGenerator generator, int ttype)">2</method>
			<method name="public int getMaxCharValue(org.antlr.codegen.CodeGenerator generator)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public String getTargetCharLiteralFromANTLRCharLiteral(org.antlr.codegen.CodeGenerator generator, String literal)">4</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.misc.MultiMap</name>
		<wmc>2</wmc>
		<dit>3</dit>
		<noc>1</noc>
		<cbo>10</cbo>
		<rfc>7</rfc>
		<lcom>1</lcom>
		<ca>5</ca>
		<ce>5</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>26</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.9848484848484849</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.0</amc>
		<cc>
			<method name="public void _init_()">1</method>
			<method name="public void map(Object key, Object value)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$notTerminal_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Grammar$Decision</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>5</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>8</loc>
		<dam>0.0</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.SemanticContext$NOT</name>
		<wmc>7</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>20</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>7</npm>
		<lcom3>0.0</lcom3>
		<loc>85</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.2653061224489796</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.0</amc>
		<cc>
			<method name="public boolean isSyntacticPredicate()">1</method>
			<method name="public String toString()">1</method>
			<method name="public void _init_(org.antlr.analysis.SemanticContext ctx)">1</method>
			<method name="public void trackUseOfSyntacticPredicates(org.antlr.tool.Grammar g)">1</method>
			<method name="public org.antlr.analysis.SemanticContext getGatedPredicateContext()">2</method>
			<method name="public boolean equals(Object object)">2</method>
			<method name="public org.antlr.stringtemplate.StringTemplate genExpr(org.antlr.codegen.CodeGenerator generator, org.antlr.stringtemplate.StringTemplateGroup templates, org.antlr.analysis.DFA dfa)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.ErrorManager$1</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>31</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>30.0</amc>
		<cc>
			<method name="void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.StateCluster</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>3</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>12</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.0</amc>
		<cc>
			<method name="public void _init_(org.antlr.analysis.NFAState left, org.antlr.analysis.NFAState right)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.ErrorManager$3</name>
		<wmc>1</wmc>
		<dit>3</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>4</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>11</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>1.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.0</amc>
		<cc>
			<method name="void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.NonRegularDecisionMessage</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>18</cbo>
		<rfc>14</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>17</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>72</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>34.0</amc>
		<cc>
			<method name="public String toString()">2</method>
			<method name="public void _init_(org.antlr.analysis.DecisionProbe probe, java.util.Set altsWithRecursion)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$atom_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.ErrorManager$2</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>22</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>21.0</amc>
		<cc>
			<method name="void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.NFAToDFAConverter$1</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>1</npm>
		<lcom3>1.0</lcom3>
		<loc>31</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.0</amc>
		<cc>
			<method name="void _init_(org.antlr.analysis.NFAToDFAConverter)">1</method>
			<method name="public int compare(Object a, Object b)">3</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$alternative_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Message</name>
		<wmc>9</wmc>
		<dit>1</dit>
		<noc>11</noc>
		<cbo>19</cbo>
		<rfc>19</rfc>
		<lcom>12</lcom>
		<ca>14</ca>
		<ce>6</ce>
		<npm>9</npm>
		<lcom3>0.8409090909090908</lcom3>
		<loc>159</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4444444444444444</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>15.444444444444445</amc>
		<cc>
			<method name="public void setMessageID(int msgID)">1</method>
			<method name="public void setLine(int line)">1</method>
			<method name="public org.antlr.stringtemplate.StringTemplate getLocationTemplate()">1</method>
			<method name="public String toString(org.antlr.stringtemplate.StringTemplate messageST)">5</method>
			<method name="public void _init_(int msgID, Object arg, Object arg2)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void setColumn(int column)">1</method>
			<method name="public void _init_(int msgID)">1</method>
			<method name="public org.antlr.stringtemplate.StringTemplate getMessageTemplate()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.GrammarReport</name>
		<wmc>9</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>25</cbo>
		<rfc>54</rfc>
		<lcom>14</lcom>
		<ca>1</ca>
		<ce>24</ce>
		<npm>6</npm>
		<lcom3>0.9</lcom3>
		<loc>1337</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.3125</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>147.0</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_(org.antlr.tool.Grammar grammar)">1</method>
			<method name="protected static String[] decodeReportData(String data)">3</method>
			<method name="public String toNotifyString()">10</method>
			<method name="public String getAnalysisTimeoutReport()">1</method>
			<method name="protected String getDFALocations(java.util.Set dfas)">3</method>
			<method name="static void _clinit_()">1</method>
			<method name="public String getBacktrackingReport()">1</method>
			<method name="public static String toString(String notifyDataLine)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Interpreter$LexerActionGetTokenType</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>6</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>2</npm>
		<lcom3>0.33333333333333326</lcom3>
		<loc>39</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.0</amc>
		<cc>
			<method name="public void exitRule(String grammarFileName, String ruleName)">2</method>
			<method name="public void _init_(org.antlr.tool.Interpreter, org.antlr.tool.Grammar g)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.misc.OrderedHashSet</name>
		<wmc>9</wmc>
		<dit>4</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>21</rfc>
		<lcom>0</lcom>
		<ca>4</ca>
		<ce>7</ce>
		<npm>9</npm>
		<lcom3>0.125</lcom3>
		<loc>78</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.7894736842105263</mfa>
		<cam>0.5185185185185185</cam>
		<ic>2</ic>
		<cbm>5</cbm>
		<amc>7.555555555555555</amc>
		<cc>
			<method name="public void clear()">1</method>
			<method name="public String toString()">1</method>
			<method name="public Object get(int i)">1</method>
			<method name="public Object set(int i, Object value)">1</method>
			<method name="public boolean remove(Object o)">1</method>
			<method name="public java.util.List elements()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public int size()">1</method>
			<method name="public boolean add(Object value)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v2.DefineGrammarItemsWalker</name>
		<wmc>42</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>29</cbo>
		<rfc>104</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>29</ce>
		<npm>38</npm>
		<lcom3>0.7134146341463414</lcom3>
		<loc>6097</loc>
		<dam>0.875</dam>
		<moa>4</moa>
		<mfa>0.0</mfa>
		<cam>0.33739837398373984</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>143.97619047619048</amc>
		<cc>
			<method name="protected void trimGrammar()">6</method>
			<method name="public final void ruleAction(antlr.collections.AST _t, org.antlr.tool.Rule r)">1</method>
			<method name="public final void rewrite_ebnf(antlr.collections.AST _t)">1</method>
			<method name="public final void ebnf(antlr.collections.AST _t)">1</method>
			<method name="public final void grammarSpec(antlr.collections.AST _t)">1</method>
			<method name="public final void rewrite_alternative(antlr.collections.AST _t)">1</method>
			<method name="public final void rewrite_element(antlr.collections.AST _t)">1</method>
			<method name="public final void action(antlr.collections.AST _t)">1</method>
			<method name="public final void block(antlr.collections.AST _t)">1</method>
			<method name="public final void ast_suffix(antlr.collections.AST _t)">1</method>
			<method name="public final void actions(antlr.collections.AST _t)">1</method>
			<method name="public final String modifier(antlr.collections.AST _t)">1</method>
			<method name="public final void atom(antlr.collections.AST _t, org.antlr.tool.GrammarAST scope)">1</method>
			<method name="public final void rewrite_block(antlr.collections.AST _t)">1</method>
			<method name="public final int countAltsForRule(antlr.collections.AST _t)">1</method>
			<method name="public final void rewrite_template(antlr.collections.AST _t)">1</method>
			<method name="public final void ruleScopeSpec(antlr.collections.AST _t, org.antlr.tool.Rule r)">1</method>
			<method name="public final void rules(antlr.collections.AST _t)">1</method>
			<method name="public final void tree(antlr.collections.AST _t)">1</method>
			<method name="protected void finish()">1</method>
			<method name="public void reportError(antlr.RecognitionException ex)">3</method>
			<method name="public final void exceptionHandler(antlr.collections.AST _t)">1</method>
			<method name="public final void element(antlr.collections.AST _t)">1</method>
			<method name="public final void blockAction(antlr.collections.AST _t)">1</method>
			<method name="public final void rewrite_tree(antlr.collections.AST _t)">1</method>
			<method name="public final void exceptionGroup(antlr.collections.AST _t)">1</method>
			<method name="public final void delegateGrammars(antlr.collections.AST _t)">1</method>
			<method name="public final void rule(antlr.collections.AST _t)">1</method>
			<method name="protected void trackInlineAction(org.antlr.tool.GrammarAST actionAST)">2</method>
			<method name="public final void attrScope(antlr.collections.AST _t)">1</method>
			<method name="public final void finallyClause(antlr.collections.AST _t)">1</method>
			<method name="public final void tokensSpec(antlr.collections.AST _t)">1</method>
			<method name="public final void grammar(antlr.collections.AST _t, org.antlr.tool.Grammar g)">1</method>
			<method name="public final void alternative(antlr.collections.AST _t)">1</method>
			<method name="public final void optionsSpec(antlr.collections.AST _t)">1</method>
			<method name="public final void rewrite_atom(antlr.collections.AST _t)">1</method>
			<method name="public final void tokenSpec(antlr.collections.AST _t)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public final void dotBlock(antlr.collections.AST _t)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public final void rewrite(antlr.collections.AST _t)">1</method>
			<method name="public final void dotLoop(antlr.collections.AST _t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.NFAConfiguration</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>16</rfc>
		<lcom>0</lcom>
		<ca>6</ca>
		<ce>7</ce>
		<npm>5</npm>
		<lcom3>0.53125</lcom3>
		<loc>152</loc>
		<dam>0.5</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.3333333333333333</cam>
		<ic>1</ic>
		<cbm>1</cbm>
		<amc>27.8</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public int hashCode()">1</method>
			<method name="public String toString(boolean showAlt)">7</method>
			<method name="public boolean equals(Object o)">6</method>
			<method name="public void _init_(int state, int alt, org.antlr.analysis.NFAContext context, org.antlr.analysis.SemanticContext semanticContext)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.GrammarSyntaxMessage</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>10</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>3</npm>
		<lcom3>0.16666666666666674</lcom3>
		<loc>71</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>21.666666666666668</amc>
		<cc>
			<method name="public String toString()">4</method>
			<method name="public void _init_(int msgID, org.antlr.tool.Grammar grammar, antlr.Token offendingToken, Object arg, antlr.RecognitionException exception)">1</method>
			<method name="public void _init_(int msgID, org.antlr.tool.Grammar grammar, antlr.Token offendingToken, antlr.RecognitionException exception)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$exceptionHandler_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.SemanticContext$OR</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>25</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>14</ce>
		<npm>6</npm>
		<lcom3>0.0</lcom3>
		<loc>188</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3055555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>30.166666666666668</amc>
		<cc>
			<method name="public boolean isSyntacticPredicate()">2</method>
			<method name="public String toString()">3</method>
			<method name="public void _init_(org.antlr.analysis.SemanticContext a, org.antlr.analysis.SemanticContext b)">5</method>
			<method name="public void trackUseOfSyntacticPredicates(org.antlr.tool.Grammar g)">2</method>
			<method name="public org.antlr.analysis.SemanticContext getGatedPredicateContext()">2</method>
			<method name="public org.antlr.stringtemplate.StringTemplate genExpr(org.antlr.codegen.CodeGenerator generator, org.antlr.stringtemplate.StringTemplateGroup templates, org.antlr.analysis.DFA dfa)">3</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.codegen.Target</name>
		<wmc>14</wmc>
		<dit>1</dit>
		<noc>12</noc>
		<cbo>31</cbo>
		<rfc>44</rfc>
		<lcom>85</lcom>
		<ca>17</ca>
		<ce>16</ce>
		<npm>11</npm>
		<lcom3>0.7692307692307693</lcom3>
		<loc>406</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2662337662337662</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>27.928571428571427</amc>
		<cc>
			<method name="protected void genRecognizerFile(org.antlr.Tool tool, org.antlr.codegen.CodeGenerator generator, org.antlr.tool.Grammar grammar, org.antlr.stringtemplate.StringTemplate outputFileST)">1</method>
			<method name="protected void performGrammarAnalysis(org.antlr.codegen.CodeGenerator generator, org.antlr.tool.Grammar grammar)">1</method>
			<method name="public String getTargetStringLiteralFromANTLRStringLiteral(org.antlr.codegen.CodeGenerator generator, String literal)">13</method>
			<method name="public int getMaxCharValue(org.antlr.codegen.CodeGenerator generator)">1</method>
			<method name="public String getTargetCharLiteralFromANTLRCharLiteral(org.antlr.codegen.CodeGenerator generator, String literal)">6</method>
			<method name="public String getTokenTypeAsTargetLabel(org.antlr.codegen.CodeGenerator generator, int ttype)">2</method>
			<method name="protected void genRecognizerHeaderFile(org.antlr.Tool tool, org.antlr.codegen.CodeGenerator generator, org.antlr.tool.Grammar grammar, org.antlr.stringtemplate.StringTemplate headerFileST, String extName)">1</method>
			<method name="public boolean isValidActionScope(int grammarType, String scope)">7</method>
			<method name="public String encodeIntAsCharEscape(int v)">2</method>
			<method name="public java.util.List postProcessAction(java.util.List chunks, antlr.Token actionToken)">1</method>
			<method name="public String getTarget64BitStringFromValue(long word)">2</method>
			<method name="public String getTargetStringLiteralFromString(String s, boolean quoted)">8</method>
			<method name="public void _init_()">1</method>
			<method name="public String getTargetStringLiteralFromString(String s)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ActionTranslator</name>
		<wmc>107</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>38</cbo>
		<rfc>181</rfc>
		<lcom>0</lcom>
		<ca>3</ca>
		<ce>38</ce>
		<npm>102</npm>
		<lcom3>0.9519000797236248</lcom3>
		<loc>8560</loc>
		<dam>0.028169014084507043</dam>
		<moa>5</moa>
		<mfa>0.0</mfa>
		<cam>0.11063464837049743</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>78.33644859813084</amc>
		<cc>
			<method name="public org.antlr.tool.Grammar$LabelElementPair getElementLabel(String id)">1</method>
			<method name="public final boolean synpred11_ActionTranslator()">2</method>
			<method name="static org.antlr.runtime.RecognizerSharedState access$100(org.antlr.grammar.v3.ActionTranslator x0)">1</method>
			<method name="public boolean isRuleRefInAlt(String id)">2</method>
			<method name="public final void mSET_DYNAMIC_SCOPE_ATTR()">1</method>
			<method name="public void checkElementRefUniqueness(String ref, boolean isToken)">4</method>
			<method name="public final void synpred12_ActionTranslator_fragment()">1</method>
			<method name="public boolean isTokenRefInAlt(String id)">2</method>
			<method name="public final void mRULE_SCOPE_ATTR()">1</method>
			<method name="public final boolean synpred24_ActionTranslator()">2</method>
			<method name="public final void mLABEL_REF()">1</method>
			<method name="public final void mTEMPLATE_INSTANCE()">1</method>
			<method name="public final boolean synpred21_ActionTranslator()">2</method>
			<method name="public final void mERROR_SCOPED_XY()">1</method>
			<method name="public final void synpred13_ActionTranslator_fragment()">1</method>
			<method name="public final void mACTION()">2</method>
			<method name="public final void synpred6_ActionTranslator_fragment()">1</method>
			<method name="public boolean alreadyParsedRule(org.antlr.runtime.IntStream input, int ruleIndex)">2</method>
			<method name="public final void mSET_TOKEN_SCOPE_ATTR()">1</method>
			<method name="public final void mID()">1</method>
			<method name="static org.antlr.runtime.RecognizerSharedState access$000(org.antlr.grammar.v3.ActionTranslator x0)">1</method>
			<method name="public final void mINT()">1</method>
			<method name="org.antlr.tool.AttributeScope resolveDynamicScope(String scopeName)">3</method>
			<method name="public final void mSET_RULE_SCOPE_ATTR()">1</method>
			<method name="public final void synpred1_ActionTranslator_fragment()">1</method>
			<method name="public final void synpred18_ActionTranslator_fragment()">1</method>
			<method name="public final void mSCOPE_INDEX_EXPR()">1</method>
			<method name="public final void synpred4_ActionTranslator_fragment()">1</method>
			<method name="public final boolean synpred10_ActionTranslator()">2</method>
			<method name="protected org.antlr.stringtemplate.StringTemplate template(String name)">1</method>
			<method name="public final void synpred16_ActionTranslator_fragment()">1</method>
			<method name="public final void mDYNAMIC_ABSOLUTE_INDEXED_SCOPE_ATTR()">1</method>
			<method name="public final void mINDIRECT_TEMPLATE_INSTANCE()">1</method>
			<method name="public final void mTEMPLATE_EXPR()">1</method>
			<method name="public final boolean synpred25_ActionTranslator()">2</method>
			<method name="public final void mTEXT()">1</method>
			<method name="public final void mERROR_XY()">1</method>
			<method name="public final void mSET_ENCLOSING_RULE_SCOPE_ATTR()">1</method>
			<method name="public final void mISOLATED_DYNAMIC_SCOPE()">1</method>
			<method name="public final boolean synpred20_ActionTranslator()">2</method>
			<method name="public final void synpred22_ActionTranslator_fragment()">1</method>
			<method name="public final void synpred17_ActionTranslator_fragment()">1</method>
			<method name="public final boolean synpred17_ActionTranslator()">2</method>
			<method name="public final boolean synpred18_ActionTranslator()">2</method>
			<method name="public final boolean synpred19_ActionTranslator()">2</method>
			<method name="public final void mTOKEN_SCOPE_ATTR()">1</method>
			<method name="public final boolean synpred15_ActionTranslator()">2</method>
			<method name="public org.antlr.runtime.Token nextToken()">3</method>
			<method name="public final boolean synpred16_ActionTranslator()">2</method>
			<method name="public final boolean synpred14_ActionTranslator()">2</method>
			<method name="public final boolean synpred13_ActionTranslator()">2</method>
			<method name="public final void mARG()">1</method>
			<method name="public final boolean synpred12_ActionTranslator()">2</method>
			<method name="public final void synpred5_ActionTranslator_fragment()">1</method>
			<method name="public void mTokens()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public final void synpred11_ActionTranslator_fragment()">1</method>
			<method name="public final void mSET_EXPR_ATTRIBUTE()">1</method>
			<method name="public final void synpred15_ActionTranslator_fragment()">1</method>
			<method name="public final void synpred20_ActionTranslator_fragment()">1</method>
			<method name="public void _init_(org.antlr.runtime.CharStream input, org.antlr.runtime.RecognizerSharedState state)">1</method>
			<method name="public final void synpred8_ActionTranslator_fragment()">1</method>
			<method name="public final void mATTR_VALUE_EXPR()">1</method>
			<method name="public final void synpred10_ActionTranslator_fragment()">1</method>
			<method name="public final void synpred25_ActionTranslator_fragment()">1</method>
			<method name="public org.antlr.tool.Attribute getRuleLabelAttribute(String ruleName, String attrName)">3</method>
			<method name="public final void synpred3_ActionTranslator_fragment()">1</method>
			<method name="public final boolean synpred26_ActionTranslator()">2</method>
			<method name="public void _init_(org.antlr.runtime.CharStream input)">1</method>
			<method name="public final void mSET_ATTRIBUTE()">1</method>
			<method name="public void _init_(org.antlr.codegen.CodeGenerator generator, String ruleName, antlr.Token actionToken, int outerAltNum)">1</method>
			<method name="public final void mENCLOSING_RULE_SCOPE_ATTR()">1</method>
			<method name="public final boolean synpred22_ActionTranslator()">2</method>
			<method name="public final void mWS()">1</method>
			<method name="public final void mISOLATED_TOKEN_REF()">1</method>
			<method name="public final void mDYNAMIC_SCOPE_ATTR()">1</method>
			<method name="public final void synpred21_ActionTranslator_fragment()">1</method>
			<method name="static void _clinit_()">3</method>
			<method name="public java.util.List translateAction(String action)">2</method>
			<method name="public final void synpred9_ActionTranslator_fragment()">1</method>
			<method name="public final void synpred24_ActionTranslator_fragment()">1</method>
			<method name="public final void synpred19_ActionTranslator_fragment()">1</method>
			<method name="public final void mUNKNOWN_SYNTAX()">1</method>
			<method name="public final void mERROR_X()">1</method>
			<method name="public java.util.List translateToChunks()">2</method>
			<method name="public final void mESC()">1</method>
			<method name="public void _init_(org.antlr.codegen.CodeGenerator generator, String ruleName, org.antlr.tool.GrammarAST actionAST)">1</method>
			<method name="public final void synpred7_ActionTranslator_fragment()">1</method>
			<method name="public String getGrammarFileName()">1</method>
			<method name="public final void synpred26_ActionTranslator_fragment()">1</method>
			<method name="public final void mSET_LOCAL_ATTR()">1</method>
			<method name="public final boolean synpred2_ActionTranslator()">2</method>
			<method name="public final boolean synpred3_ActionTranslator()">2</method>
			<method name="public final boolean synpred1_ActionTranslator()">2</method>
			<method name="public final void synpred2_ActionTranslator_fragment()">1</method>
			<method name="public final void mISOLATED_LEXER_RULE_REF()">1</method>
			<method name="public String translate()">2</method>
			<method name="public final void mLOCAL_ATTR()">1</method>
			<method name="public final void synpred14_ActionTranslator_fragment()">1</method>
			<method name="public void memoize(org.antlr.runtime.IntStream input, int ruleIndex, int ruleStartIndex)">2</method>
			<method name="public final void mDYNAMIC_NEGATIVE_INDEXED_SCOPE_ATTR()">1</method>
			<method name="public final boolean synpred6_ActionTranslator()">2</method>
			<method name="public final boolean synpred5_ActionTranslator()">2</method>
			<method name="public final boolean synpred4_ActionTranslator()">2</method>
			<method name="public final boolean synpred7_ActionTranslator()">2</method>
			<method name="public final boolean synpred9_ActionTranslator()">2</method>
			<method name="public final boolean synpred8_ActionTranslator()">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.Label</name>
		<wmc>22</wmc>
		<dit>1</dit>
		<noc>2</noc>
		<cbo>33</cbo>
		<rfc>44</rfc>
		<lcom>0</lcom>
		<ca>20</ca>
		<ce>13</ce>
		<npm>22</npm>
		<lcom3>0.9629629629629629</lcom3>
		<loc>438</loc>
		<dam>0.1111111111111111</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.24242424242424243</cam>
		<ic>1</ic>
		<cbm>1</cbm>
		<amc>18.09090909090909</amc>
		<cc>
			<method name="public org.antlr.analysis.SemanticContext getSemanticContext()">1</method>
			<method name="public static boolean intersect(org.antlr.analysis.Label label, org.antlr.analysis.Label edgeLabel)">13</method>
			<method name="public boolean matches(int atom)">3</method>
			<method name="public boolean isSemanticPredicate()">1</method>
			<method name="public boolean equals(Object o)">5</method>
			<method name="public void _init_(org.antlr.misc.IntSet labelSet)">3</method>
			<method name="public Object clone()">1</method>
			<method name="public int getAtom()">2</method>
			<method name="public org.antlr.misc.IntSet getSet()">2</method>
			<method name="public void setSet(org.antlr.misc.IntSet set)">1</method>
			<method name="public void add(org.antlr.analysis.Label a)">7</method>
			<method name="public boolean isAction()">1</method>
			<method name="public boolean matches(org.antlr.misc.IntSet set)">4</method>
			<method name="public String toString()">3</method>
			<method name="public int hashCode()">2</method>
			<method name="public int compareTo(Object o)">1</method>
			<method name="public String toString(org.antlr.tool.Grammar g)">3</method>
			<method name="public boolean matches(org.antlr.analysis.Label other)">3</method>
			<method name="public boolean isAtom()">2</method>
			<method name="public void _init_(int label)">1</method>
			<method name="public boolean isEpsilon()">2</method>
			<method name="public boolean isSet()">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.GrammarInsufficientPredicatesMessage</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>22</cbo>
		<rfc>24</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>21</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>117</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>56.0</amc>
		<cc>
			<method name="public String toString()">3</method>
			<method name="public void _init_(org.antlr.analysis.DecisionProbe probe, org.antlr.analysis.DFAState problemState, java.util.Map altToLocations)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$rewrite_tree_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.AnalysisTimeoutException</name>
		<wmc>1</wmc>
		<dit>4</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>4</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>8</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>1.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.0</amc>
		<cc>
			<method name="public void _init_(org.antlr.analysis.DFA abortedDFA)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$throwsSpec_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$rewrite_tree_block_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.NFA</name>
		<wmc>6</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>20</cbo>
		<rfc>10</rfc>
		<lcom>0</lcom>
		<ca>17</ca>
		<ce>6</ce>
		<npm>6</npm>
		<lcom3>0.85</lcom3>
		<loc>43</loc>
		<dam>0.25</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.3333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.5</amc>
		<cc>
			<method name="public org.antlr.tool.NFAFactory getFactory()">1</method>
			<method name="public void _init_(org.antlr.tool.Grammar g)">1</method>
			<method name="public void addState(org.antlr.analysis.NFAState state)">1</method>
			<method name="public int getNewNFAStateNumber()">1</method>
			<method name="public org.antlr.analysis.NFAState getState(int s)">1</method>
			<method name="public void setFactory(org.antlr.tool.NFAFactory factory)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.ANTLRErrorListener</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>4</rfc>
		<lcom>6</lcom>
		<ca>2</ca>
		<ce>5</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>4</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void error(org.antlr.tool.ToolMessage)">1</method>
			<method name="public abstract void warning(org.antlr.tool.Message)">1</method>
			<method name="public abstract void info(String)">1</method>
			<method name="public abstract void error(org.antlr.tool.Message)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.DFAOptimizer</name>
		<wmc>6</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>18</cbo>
		<rfc>28</rfc>
		<lcom>0</lcom>
		<ca>3</ca>
		<ce>15</ce>
		<npm>2</npm>
		<lcom3>0.6666666666666667</lcom3>
		<loc>210</loc>
		<dam>0.3333333333333333</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.45</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>33.0</amc>
		<cc>
			<method name="public void optimize()">2</method>
			<method name="public void _init_(org.antlr.tool.Grammar grammar)">1</method>
			<method name="protected void optimizeEOTBranches(org.antlr.analysis.DFAState d)">8</method>
			<method name="protected void optimize(org.antlr.analysis.DFA dfa)">10</method>
			<method name="protected void optimizeExitBranches(org.antlr.analysis.DFAState d)">5</method>
			<method name="static void _clinit_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$rewrite_template_arg_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$rewrite_indirect_template_head_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.codegen.ACyclicDFACodeGenerator</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>19</cbo>
		<rfc>30</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>19</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>278</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>91.33333333333333</amc>
		<cc>
			<method name="public org.antlr.stringtemplate.StringTemplate genFixedLookaheadDecision(org.antlr.stringtemplate.StringTemplateGroup templates, org.antlr.analysis.DFA dfa)">1</method>
			<method name="public void _init_(org.antlr.codegen.CodeGenerator parent)">1</method>
			<method name="protected org.antlr.stringtemplate.StringTemplate walkFixedDFAGeneratingStateMachine(org.antlr.stringtemplate.StringTemplateGroup templates, org.antlr.analysis.DFA dfa, org.antlr.analysis.DFAState s, int k)">15</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$id_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$range_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$attrScope_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$optionValue_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Strip$8</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>8</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>25</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.0</amc>
		<cc>
			<method name="void _init_(org.antlr.runtime.TokenRewriteStream)">1</method>
			<method name="public void visit(Object t)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Strip$7</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>7</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>25</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.0</amc>
		<cc>
			<method name="void _init_(org.antlr.runtime.TokenRewriteStream)">1</method>
			<method name="public void visit(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Strip$9</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>7</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>34</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>15.5</amc>
		<cc>
			<method name="void _init_(org.antlr.runtime.TokenRewriteStream)">1</method>
			<method name="public void visit(Object t)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$treeSpec_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Interpreter</name>
		<wmc>12</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>38</cbo>
		<rfc>79</rfc>
		<lcom>6</lcom>
		<ca>3</ca>
		<ce>37</ce>
		<npm>11</npm>
		<lcom3>0.2727272727272727</lcom3>
		<loc>645</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.2833333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>52.583333333333336</amc>
		<cc>
			<method name="public org.antlr.runtime.CommonToken scan(String startRule)">1</method>
			<method name="public int predict(org.antlr.analysis.DFA dfa)">6</method>
			<method name="public void reportScanError(org.antlr.runtime.RecognitionException re)">1</method>
			<method name="public org.antlr.runtime.Token nextToken()">5</method>
			<method name="public org.antlr.runtime.tree.ParseTree parse(String startRule)">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public void scan(String startRule, org.antlr.runtime.debug.DebugEventListener actions, java.util.List visitedStates)">1</method>
			<method name="public org.antlr.runtime.CommonToken scan(String startRule, java.util.List visitedStates)">1</method>
			<method name="public void _init_(org.antlr.tool.Grammar grammar, org.antlr.runtime.IntStream input)">1</method>
			<method name="protected void parseEngine(String startRule, org.antlr.analysis.NFAState start, org.antlr.analysis.NFAState stop, org.antlr.runtime.IntStream input, java.util.Stack ruleInvocationStack, org.antlr.runtime.debug.DebugEventListener actions, java.util.List visitedStates)">1</method>
			<method name="public void parse(String startRule, org.antlr.runtime.debug.DebugEventListener actions, java.util.List visitedStates)">1</method>
			<method name="public org.antlr.runtime.tree.ParseTree parse(String startRule, java.util.List visitedStates)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.Transition</name>
		<wmc>9</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>27</cbo>
		<rfc>23</rfc>
		<lcom>0</lcom>
		<ca>21</ca>
		<ce>7</ce>
		<npm>9</npm>
		<lcom3>0.25</lcom3>
		<loc>94</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.3333333333333333</cam>
		<ic>1</ic>
		<cbm>1</cbm>
		<amc>9.222222222222221</amc>
		<cc>
			<method name="public void _init_(org.antlr.analysis.Label label, org.antlr.analysis.State target)">1</method>
			<method name="public String toString()">1</method>
			<method name="public int hashCode()">1</method>
			<method name="public int compareTo(Object o)">1</method>
			<method name="public boolean isSemanticPredicate()">1</method>
			<method name="public boolean equals(Object o)">3</method>
			<method name="public void _init_(int label, org.antlr.analysis.State target)">1</method>
			<method name="public boolean isEpsilon()">1</method>
			<method name="public boolean isAction()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.FASerializer</name>
		<wmc>6</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>27</cbo>
		<rfc>43</rfc>
		<lcom>3</lcom>
		<ca>2</ca>
		<ce>27</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>381</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4166666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>61.833333333333336</amc>
		<cc>
			<method name="public String serialize(org.antlr.analysis.State s)">2</method>
			<method name="public void _init_(org.antlr.tool.Grammar grammar)">1</method>
			<method name="protected void walkSerializingFA(java.util.List lines, org.antlr.analysis.State s)">11</method>
			<method name="private String getStateString(int n, org.antlr.analysis.State s)">3</method>
			<method name="protected void walkFANormalizingStateNumbers(org.antlr.analysis.State s)">5</method>
			<method name="public String serialize(org.antlr.analysis.State s, boolean renumber)">4</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$rule_scope</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>5</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="protected void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Lexer</name>
		<wmc>66</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>20</cbo>
		<rfc>91</rfc>
		<lcom>0</lcom>
		<ca>5</ca>
		<ce>19</ce>
		<npm>65</npm>
		<lcom3>1.009602478058854</lcom3>
		<loc>4056</loc>
		<dam>0.026845637583892617</dam>
		<moa>4</moa>
		<mfa>0.0</mfa>
		<cam>0.3487179487179487</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>58.196969696969695</amc>
		<cc>
			<method name="public final void mBANG()">1</method>
			<method name="public final void mREWRITE()">1</method>
			<method name="public final void mCHAR_LITERAL()">1</method>
			<method name="public void _init_(org.antlr.runtime.CharStream input, org.antlr.runtime.RecognizerSharedState state)">1</method>
			<method name="public final void mT__81()">1</method>
			<method name="public final void mT__83()">1</method>
			<method name="public final void mT__85()">1</method>
			<method name="public final void mARG_ACTION()">1</method>
			<method name="public final void mT__87()">1</method>
			<method name="public final void mT__68()">1</method>
			<method name="public final void mT__89()">1</method>
			<method name="public void _init_(org.antlr.runtime.CharStream input)">1</method>
			<method name="public final void mXDIGIT()">1</method>
			<method name="public final void mACTION()">2</method>
			<method name="public final void mWS()">1</method>
			<method name="public final void mNESTED_ACTION()">1</method>
			<method name="public final void mT__90()">1</method>
			<method name="public final void mT__71()">1</method>
			<method name="public final void mSCOPE()">1</method>
			<method name="public final void mT__73()">1</method>
			<method name="public final void mOPTIONS()">1</method>
			<method name="public final void mT__75()">1</method>
			<method name="public final void mT__77()">1</method>
			<method name="public final void mINT()">1</method>
			<method name="public final void mT__79()">1</method>
			<method name="public final void mDOUBLE_ANGLE_STRING_LITERAL()">2</method>
			<method name="static void _clinit_()">5</method>
			<method name="public final void mLITERAL_CHAR()">1</method>
			<method name="public final void mACTION_CHAR_LITERAL()">1</method>
			<method name="public final void mSL_COMMENT()">2</method>
			<method name="public final void mSTRING_LITERAL()">2</method>
			<method name="public final void mDOUBLE_QUOTE_STRING_LITERAL()">1</method>
			<method name="public final void mSRC()">1</method>
			<method name="public final void mT__80()">1</method>
			<method name="public final void mT__82()">1</method>
			<method name="public final void mT__84()">1</method>
			<method name="public final void mT__86()">1</method>
			<method name="public final void mML_COMMENT()">2</method>
			<method name="public final void mT__88()">1</method>
			<method name="public final void mESC()">1</method>
			<method name="public final void mT__67()">1</method>
			<method name="public final void mTOKENS()">1</method>
			<method name="public final void mT__69()">1</method>
			<method name="public final void mACTION_STRING_LITERAL()">1</method>
			<method name="public final void mAT()">1</method>
			<method name="public String getGrammarFileName()">1</method>
			<method name="public final void mFRAGMENT()">1</method>
			<method name="public final void mNESTED_ARG_ACTION()">1</method>
			<method name="public final void mRULE_REF()">1</method>
			<method name="public final void mRANGE()">1</method>
			<method name="public final void mACTION_ESC()">1</method>
			<method name="public final void mT__91()">1</method>
			<method name="public final void mT__70()">1</method>
			<method name="public final void mROOT()">1</method>
			<method name="public final void mLABEL_ASSIGN()">1</method>
			<method name="public final void mT__72()">1</method>
			<method name="public final void mT__74()">1</method>
			<method name="public final void mT__76()">1</method>
			<method name="public final void mT__78()">1</method>
			<method name="public final void mTOKEN_REF()">1</method>
			<method name="public final void mTREE_BEGIN()">1</method>
			<method name="public final void mRET()">1</method>
			<method name="public final void mLIST_LABEL_ASSIGN()">1</method>
			<method name="public final void mWS_LOOP()">1</method>
			<method name="public void mTokens()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v2.TreeToNFAConverterTokenTypes</name>
		<wmc>0</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>3</cbo>
		<rfc>0</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>2</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>100</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
		</cc>
	</class>
	<class>
		<name>org.antlr.codegen.CPPTarget</name>
		<wmc>7</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>25</rfc>
		<lcom>21</lcom>
		<ca>0</ca>
		<ce>13</ce>
		<npm>6</npm>
		<lcom3>2.0</lcom3>
		<loc>188</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3877551020408163</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>25.857142857142858</amc>
		<cc>
			<method name="protected void genRecognizerHeaderFile(org.antlr.Tool tool, org.antlr.codegen.CodeGenerator generator, org.antlr.tool.Grammar grammar, org.antlr.stringtemplate.StringTemplate headerFileST, String extName)">1</method>
			<method name="public String escapeString(String s)">2</method>
			<method name="public String getTargetCharLiteralFromANTLRCharLiteral(org.antlr.codegen.CodeGenerator codegen, String literal)">3</method>
			<method name="public int getMaxCharValue(org.antlr.codegen.CodeGenerator codegen)">2</method>
			<method name="public String escapeChar(int c)">12</method>
			<method name="public void _init_()">1</method>
			<method name="public String getTargetStringLiteralFromANTLRStringLiteral(org.antlr.codegen.CodeGenerator codegen, String literal)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$option_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Strip$4</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>6</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>27</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.0</amc>
		<cc>
			<method name="void _init_(org.antlr.runtime.TokenRewriteStream)">1</method>
			<method name="public void visit(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Strip$3</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>7</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>30</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.5</amc>
		<cc>
			<method name="void _init_(org.antlr.runtime.TokenRewriteStream)">1</method>
			<method name="public void visit(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Strip$6</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>10</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>38</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.5</amc>
		<cc>
			<method name="void _init_(org.antlr.runtime.TokenRewriteStream)">1</method>
			<method name="public void visit(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$rule_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Strip$5</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>9</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>30</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.5</amc>
		<cc>
			<method name="void _init_(org.antlr.runtime.TokenRewriteStream)">1</method>
			<method name="public void visit(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$DFA46</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>38</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.5</amc>
		<cc>
			<method name="public String getDescription()">1</method>
			<method name="public void _init_(org.antlr.grammar.v3.ANTLRv3Parser, org.antlr.runtime.BaseRecognizer recognizer)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.misc.BitSet</name>
		<wmc>49</wmc>
		<dit>1</dit>
		<noc>2</noc>
		<cbo>30</cbo>
		<rfc>83</rfc>
		<lcom>420</lcom>
		<ca>6</ca>
		<ce>24</ce>
		<npm>45</npm>
		<lcom3>0.7864583333333334</lcom3>
		<loc>1167</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.11773940345368916</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>22.73469387755102</amc>
		<cc>
			<method name="public void notInPlace(int minBit, int maxBit)">2</method>
			<method name="public void notInPlace()">2</method>
			<method name="public int size()">5</method>
			<method name="public org.antlr.misc.IntSet complement()">1</method>
			<method name="public void orInPlace(org.antlr.misc.BitSet a)">4</method>
			<method name="public void _init_(long[] bits_)">1</method>
			<method name="public void clear(int el)">2</method>
			<method name="public org.antlr.misc.IntSet complement(org.antlr.misc.IntSet set)">2</method>
			<method name="public static org.antlr.misc.BitSet of(java.util.Map elements)">1</method>
			<method name="public static org.antlr.misc.BitSet of(java.util.Collection elements)">2</method>
			<method name="public void _init_(int nbits)">1</method>
			<method name="public org.antlr.misc.IntSet or(org.antlr.misc.IntSet a)">2</method>
			<method name="public boolean equals(Object other)">10</method>
			<method name="public org.antlr.misc.IntSet subtract(org.antlr.misc.IntSet a)">3</method>
			<method name="public void addAll(Iterable elements)">4</method>
			<method name="public String toStringOfHalfWords()">3</method>
			<method name="private void setSize(int nwords)">1</method>
			<method name="public int numBits()">1</method>
			<method name="public void notInPlace(int maxBit)">1</method>
			<method name="public int[] toArray()">3</method>
			<method name="public String toString(org.antlr.tool.Grammar g)">6</method>
			<method name="public void add(int el)">2</method>
			<method name="public boolean isNil()">3</method>
			<method name="private final int numWordsToHold(int el)">1</method>
			<method name="public boolean member(int el)">3</method>
			<method name="public void remove(int el)">2</method>
			<method name="public void addAll(org.antlr.misc.IntSet set)">3</method>
			<method name="public long[] toPackedArray()">1</method>
			<method name="private static final int wordNumber(int bit)">1</method>
			<method name="public Object clone()">1</method>
			<method name="public void clear()">2</method>
			<method name="public static org.antlr.misc.BitSet of(org.antlr.misc.IntSet set)">4</method>
			<method name="public String toString()">1</method>
			<method name="public static org.antlr.misc.BitSet of(int el)">1</method>
			<method name="public org.antlr.misc.IntSet and(org.antlr.misc.IntSet a)">1</method>
			<method name="public void growToInclude(int bit)">1</method>
			<method name="public String toString(String separator, java.util.List vocabulary)">7</method>
			<method name="public String toStringOfWords()">3</method>
			<method name="public static org.antlr.misc.BitSet range(int a, int b)">2</method>
			<method name="public String toStringWithRanges()">1</method>
			<method name="public int lengthInLongWords()">1</method>
			<method name="public int getSingleElement()">3</method>
			<method name="public void subtractInPlace(org.antlr.misc.BitSet a)">4</method>
			<method name="public java.util.List toList()">1</method>
			<method name="public void andInPlace(org.antlr.misc.BitSet a)">3</method>
			<method name="private static final long bitMask(int bitNumber)">1</method>
			<method name="public void addAll(int[] elements)">3</method>
			<method name="public boolean subset(org.antlr.misc.BitSet a)">2</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Strip$2</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>10</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>50</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>23.5</amc>
		<cc>
			<method name="void _init_(org.antlr.runtime.TokenRewriteStream)">1</method>
			<method name="public void visit(Object t)">4</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Strip$1</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>4</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>15</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.0</amc>
		<cc>
			<method name="void _init_(org.antlr.runtime.TokenRewriteStream)">1</method>
			<method name="public void visit(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.misc.IntSet</name>
		<wmc>15</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>25</cbo>
		<rfc>15</rfc>
		<lcom>105</lcom>
		<ca>21</ca>
		<ce>5</ce>
		<npm>15</npm>
		<lcom3>2.0</lcom3>
		<loc>15</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void addAll(org.antlr.misc.IntSet)">1</method>
			<method name="public abstract boolean equals(Object)">1</method>
			<method name="public abstract String toString(org.antlr.tool.Grammar)">1</method>
			<method name="public abstract org.antlr.misc.IntSet and(org.antlr.misc.IntSet)">1</method>
			<method name="public abstract java.util.List toList()">1</method>
			<method name="public abstract org.antlr.misc.IntSet complement(org.antlr.misc.IntSet)">1</method>
			<method name="public abstract org.antlr.misc.IntSet subtract(org.antlr.misc.IntSet)">1</method>
			<method name="public abstract org.antlr.misc.IntSet or(org.antlr.misc.IntSet)">1</method>
			<method name="public abstract int size()">1</method>
			<method name="public abstract void add(int)">1</method>
			<method name="public abstract void remove(int)">1</method>
			<method name="public abstract boolean isNil()">1</method>
			<method name="public abstract boolean member(int)">1</method>
			<method name="public abstract String toString()">1</method>
			<method name="public abstract int getSingleElement()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Rule$1</name>
		<wmc>1</wmc>
		<dit>4</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>20</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>1.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>19.0</amc>
		<cc>
			<method name="void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Strip$12</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>4</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>15</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.0</amc>
		<cc>
			<method name="void _init_(org.antlr.runtime.TokenRewriteStream)">1</method>
			<method name="public void visit(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Strip$13</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>4</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>15</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.0</amc>
		<cc>
			<method name="void _init_(org.antlr.runtime.TokenRewriteStream)">1</method>
			<method name="public void visit(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$rewrite_tree_alternative_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.RandomPhrase</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>30</cbo>
		<rfc>67</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>30</ce>
		<npm>2</npm>
		<lcom3>0.8333333333333334</lcom3>
		<loc>418</loc>
		<dam>0.5</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.25</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>103.0</amc>
		<cc>
			<method name="public static void main(String[] args)">9</method>
			<method name="public void _init_()">1</method>
			<method name="protected static void randomPhrase(org.antlr.tool.Grammar g, java.util.List tokenTypes, String startRule)">10</method>
			<method name="protected static Integer getTokenType(org.antlr.analysis.Label label)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Strip$10</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>6</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>30</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.5</amc>
		<cc>
			<method name="void _init_(org.antlr.runtime.TokenRewriteStream)">1</method>
			<method name="public void visit(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Strip$11</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>9</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>44</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>20.5</amc>
		<cc>
			<method name="void _init_(org.antlr.runtime.TokenRewriteStream)">1</method>
			<method name="public void visit(Object t)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$block_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$rewrite_tree_ebnf_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$element_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.misc.Utils</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>27</cbo>
		<rfc>13</rfc>
		<lcom>4</lcom>
		<ca>22</ca>
		<ce>5</ce>
		<npm>3</npm>
		<lcom3>1.0</lcom3>
		<loc>90</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>21.0</amc>
		<cc>
			<method name="public static Integer integer(int x)">4</method>
			<method name="public static String replace(String src, String replacee, String replacer)">3</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Strip</name>
		<wmc>6</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>37</cbo>
		<rfc>52</rfc>
		<lcom>15</lcom>
		<ca>7</ca>
		<ce>37</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>287</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>46.833333333333336</amc>
		<cc>
			<method name="public static void AST_SUFFIX(org.antlr.runtime.TokenRewriteStream tokens, org.antlr.runtime.tree.CommonTree t)">1</method>
			<method name="private static void killTrailingNewline(org.antlr.runtime.TokenRewriteStream tokens, int index)">6</method>
			<method name="public static void main(String[] args)">1</method>
			<method name="public static void ACTION(org.antlr.runtime.TokenRewriteStream tokens, org.antlr.runtime.tree.CommonTree t)">5</method>
			<method name="static void access$000(org.antlr.runtime.TokenRewriteStream x0, int x1)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ActionTranslator$DFA28</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>37</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>334</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>110.0</amc>
		<cc>
			<method name="public String getDescription()">1</method>
			<method name="public void _init_(org.antlr.grammar.v3.ActionTranslator, org.antlr.runtime.BaseRecognizer recognizer)">1</method>
			<method name="public int specialStateTransition(int s, org.antlr.runtime.IntStream _input)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.PredicateLabel</name>
		<wmc>8</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>16</rfc>
		<lcom>0</lcom>
		<ca>3</ca>
		<ce>9</ce>
		<npm>8</npm>
		<lcom3>0.14285714285714285</lcom3>
		<loc>71</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.3</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.75</amc>
		<cc>
			<method name="public void _init_(org.antlr.analysis.SemanticContext semCtx)">1</method>
			<method name="public org.antlr.analysis.SemanticContext getSemanticContext()">1</method>
			<method name="public String toString()">1</method>
			<method name="public int hashCode()">1</method>
			<method name="public String toString(org.antlr.tool.Grammar g)">1</method>
			<method name="public boolean equals(Object o)">4</method>
			<method name="public boolean isSemanticPredicate()">1</method>
			<method name="public void _init_(org.antlr.tool.GrammarAST predicateASTNode)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.codegen.CSharp2Target</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>9</rfc>
		<lcom>3</lcom>
		<ca>0</ca>
		<ce>10</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>45</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4444444444444444</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.0</amc>
		<cc>
			<method name="protected org.antlr.stringtemplate.StringTemplate chooseWhereCyclicDFAsGo(org.antlr.Tool tool, org.antlr.codegen.CodeGenerator generator, org.antlr.tool.Grammar grammar, org.antlr.stringtemplate.StringTemplate recognizerST, org.antlr.stringtemplate.StringTemplate cyclicDFAST)">1</method>
			<method name="public String encodeIntAsCharEscape(int v)">2</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ActionTranslator$DFA22</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>38</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.5</amc>
		<cc>
			<method name="public String getDescription()">1</method>
			<method name="public void _init_(org.antlr.grammar.v3.ActionTranslator, org.antlr.runtime.BaseRecognizer recognizer)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$tokenSpec_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.NFAFactory</name>
		<wmc>28</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>23</cbo>
		<rfc>74</rfc>
		<lcom>296</lcom>
		<ca>3</ca>
		<ce>22</ce>
		<npm>25</npm>
		<lcom3>0.18518518518518517</lcom3>
		<loc>1048</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.18506493506493507</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>36.357142857142854</amc>
		<cc>
			<method name="public org.antlr.analysis.StateCluster build_AlternativeBlockFromSet(org.antlr.analysis.StateCluster set)">2</method>
			<method name="public org.antlr.analysis.StateCluster build_SemanticPredicate(org.antlr.tool.GrammarAST pred)">2</method>
			<method name="public org.antlr.analysis.StateCluster build_Atom(org.antlr.tool.GrammarAST atomAST)">1</method>
			<method name="public org.antlr.analysis.StateCluster build_AB(org.antlr.analysis.StateCluster A, org.antlr.analysis.StateCluster B)">3</method>
			<method name="public org.antlr.analysis.StateCluster build_Aplus(org.antlr.analysis.StateCluster A)">2</method>
			<method name="public void setCurrentRule(org.antlr.tool.Rule currentRule)">1</method>
			<method name="public org.antlr.analysis.StateCluster build_CharLiteralAtom(org.antlr.tool.GrammarAST charLiteralAST)">1</method>
			<method name="public void _init_(org.antlr.analysis.NFA nfa)">1</method>
			<method name="private void build_EOFState(org.antlr.analysis.NFAState endNFAState)">2</method>
			<method name="public org.antlr.analysis.StateCluster build_Action(org.antlr.tool.GrammarAST action)">1</method>
			<method name="public org.antlr.analysis.NFAState newState()">1</method>
			<method name="protected org.antlr.misc.IntSet getCollapsedBlockAsSet(org.antlr.analysis.State blk)">6</method>
			<method name="public org.antlr.analysis.StateCluster build_WildcardTree(org.antlr.tool.GrammarAST associatedAST)">1</method>
			<method name="public org.antlr.analysis.StateCluster build_StringLiteralAtom(org.antlr.tool.GrammarAST stringLiteralAST)">3</method>
			<method name="public org.antlr.analysis.StateCluster build_Astar(org.antlr.analysis.StateCluster A)">2</method>
			<method name="public org.antlr.analysis.StateCluster build_Epsilon()">1</method>
			<method name="public org.antlr.analysis.StateCluster build_Aoptional(org.antlr.analysis.StateCluster A)">2</method>
			<method name="private void transitionBetweenStates(org.antlr.analysis.NFAState a, org.antlr.analysis.NFAState b, int label)">1</method>
			<method name="public org.antlr.tool.Rule getCurrentRule()">1</method>
			<method name="public org.antlr.analysis.StateCluster build_Set(org.antlr.misc.IntSet set, org.antlr.tool.GrammarAST associatedAST)">1</method>
			<method name="public org.antlr.analysis.StateCluster build_Range(int a, int b)">1</method>
			<method name="public org.antlr.analysis.StateCluster build_AlternativeBlock(java.util.List alternativeStateClusters)">6</method>
			<method name="public org.antlr.analysis.StateCluster build_Atom(int label, org.antlr.tool.GrammarAST associatedAST)">1</method>
			<method name="public void optimizeAlternative(org.antlr.analysis.StateCluster alt)">9</method>
			<method name="public org.antlr.analysis.StateCluster build_CharRange(String a, String b)">1</method>
			<method name="public org.antlr.analysis.StateCluster build_RuleRef(org.antlr.tool.Rule refDef, org.antlr.analysis.NFAState ruleStart)">1</method>
			<method name="public int build_EOFStates(java.util.List rules)">2</method>
			<method name="public org.antlr.analysis.StateCluster build_Wildcard(org.antlr.tool.GrammarAST associatedAST)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Lexer$DFA13</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>7</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>3</npm>
		<lcom3>1.0</lcom3>
		<loc>346</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>114.0</amc>
		<cc>
			<method name="public String getDescription()">1</method>
			<method name="public void _init_(org.antlr.grammar.v3.ANTLRv3Lexer, org.antlr.runtime.BaseRecognizer recognizer)">1</method>
			<method name="public int specialStateTransition(int s, org.antlr.runtime.IntStream _input)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.GrammarNonDeterminismMessage</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>18</cbo>
		<rfc>28</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>17</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>205</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>100.5</amc>
		<cc>
			<method name="public String toString()">8</method>
			<method name="public void _init_(org.antlr.analysis.DecisionProbe probe, org.antlr.analysis.DFAState problemState)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$action_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.NFAContext</name>
		<wmc>9</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>14</rfc>
		<lcom>2</lcom>
		<ca>4</ca>
		<ce>5</ce>
		<npm>7</npm>
		<lcom3>0.59375</lcom3>
		<loc>178</loc>
		<dam>0.25</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.35</cam>
		<ic>1</ic>
		<cbm>1</cbm>
		<amc>18.333333333333332</amc>
		<cc>
			<method name="public String toString()">2</method>
			<method name="public void _init_(org.antlr.analysis.NFAContext parent, org.antlr.analysis.NFAState invokingState)">3</method>
			<method name="public int hashCode()">1</method>
			<method name="public boolean equals(Object o)">8</method>
			<method name="public int recursionDepthEmanatingFromState(int state)">3</method>
			<method name="static void _clinit_()">1</method>
			<method name="public boolean conflictsWith(org.antlr.analysis.NFAContext other)">1</method>
			<method name="public boolean isEmpty()">2</method>
			<method name="protected boolean suffix(org.antlr.analysis.NFAContext other)">4</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$ebnf_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v2.AssignTokenTypesWalker</name>
		<wmc>41</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>22</cbo>
		<rfc>62</rfc>
		<lcom>166</lcom>
		<ca>2</ca>
		<ce>20</ce>
		<npm>29</npm>
		<lcom3>0.8785714285714287</lcom3>
		<loc>3806</loc>
		<dam>0.8571428571428571</dam>
		<moa>5</moa>
		<mfa>0.0</mfa>
		<cam>0.32916666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>91.65853658536585</amc>
		<cc>
			<method name="protected void alias(org.antlr.tool.GrammarAST t, org.antlr.tool.GrammarAST s)">1</method>
			<method name="protected void defineStringLiteralsFromDelegates()">1</method>
			<method name="public final void charSetElement(antlr.collections.AST _t)">1</method>
			<method name="public final void ebnf(antlr.collections.AST _t)">1</method>
			<method name="public final void grammarSpec(antlr.collections.AST _t)">1</method>
			<method name="protected void initASTPatterns()">1</method>
			<method name="public final void charSet(antlr.collections.AST _t)">1</method>
			<method name="public final void block(antlr.collections.AST _t)">1</method>
			<method name="public final void atom(antlr.collections.AST _t)">1</method>
			<method name="public final void ast_suffix(antlr.collections.AST _t)">1</method>
			<method name="protected void assignStringTypes(org.antlr.tool.Grammar root)">1</method>
			<method name="protected void trackToken(org.antlr.tool.GrammarAST t)">1</method>
			<method name="protected void trackString(org.antlr.tool.GrammarAST t)">1</method>
			<method name="public final void rules(antlr.collections.AST _t)">1</method>
			<method name="public final void tree(antlr.collections.AST _t)">1</method>
			<method name="public void reportError(antlr.RecognitionException ex)">3</method>
			<method name="public final void modifier(antlr.collections.AST _t)">1</method>
			<method name="public final void exceptionHandler(antlr.collections.AST _t)">1</method>
			<method name="public final void element(antlr.collections.AST _t)">1</method>
			<method name="public final java.util.Map optionsSpec(antlr.collections.AST _t)">1</method>
			<method name="protected void assignTokenIDTypes(org.antlr.tool.Grammar root)">1</method>
			<method name="public final Object optionValue(antlr.collections.AST _t)">1</method>
			<method name="public final void exceptionGroup(antlr.collections.AST _t)">1</method>
			<method name="public final void delegateGrammars(antlr.collections.AST _t)">1</method>
			<method name="public final void rule(antlr.collections.AST _t)">1</method>
			<method name="public final void attrScope(antlr.collections.AST _t)">1</method>
			<method name="public final void finallyClause(antlr.collections.AST _t)">1</method>
			<method name="protected void init(org.antlr.tool.Grammar root)">1</method>
			<method name="public final void tokensSpec(antlr.collections.AST _t)">1</method>
			<method name="protected void defineTokenNamesAndLiteralsInGrammar(org.antlr.tool.Grammar root)">1</method>
			<method name="public final void grammar(antlr.collections.AST _t, org.antlr.tool.Grammar g)">1</method>
			<method name="public final void alternative(antlr.collections.AST _t)">1</method>
			<method name="public final void tokenSpec(antlr.collections.AST _t)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void defineTokens(org.antlr.tool.Grammar root)">1</method>
			<method name="public final void option(antlr.collections.AST _t, java.util.Map opts)">1</method>
			<method name="protected void aliasTokenIDsAndLiterals(org.antlr.tool.Grammar root)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public final void rewrite(antlr.collections.AST _t)">1</method>
			<method name="protected void trackTokenRule(org.antlr.tool.GrammarAST t, org.antlr.tool.GrammarAST modifier, org.antlr.tool.GrammarAST block)">1</method>
			<method name="public final void ruleScopeSpec(antlr.collections.AST _t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v2.DefineGrammarItemsWalkerTokenTypes</name>
		<wmc>0</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>3</cbo>
		<rfc>0</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>2</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>100</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
		</cc>
	</class>
	<class>
		<name>org.antlr.codegen.CSharpTarget</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>9</rfc>
		<lcom>3</lcom>
		<ca>0</ca>
		<ce>10</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>45</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4444444444444444</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.0</amc>
		<cc>
			<method name="protected org.antlr.stringtemplate.StringTemplate chooseWhereCyclicDFAsGo(org.antlr.Tool tool, org.antlr.codegen.CodeGenerator generator, org.antlr.tool.Grammar grammar, org.antlr.stringtemplate.StringTemplate recognizerST, org.antlr.stringtemplate.StringTemplate cyclicDFAST)">1</method>
			<method name="public String encodeIntAsCharEscape(int v)">2</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.codegen.Perl5Target</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>18</rfc>
		<lcom>1</lcom>
		<ca>0</ca>
		<ce>12</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>140</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>45.666666666666664</amc>
		<cc>
			<method name="public String encodeIntAsCharEscape(int v)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public String getTargetCharLiteralFromANTLRCharLiteral(org.antlr.codegen.CodeGenerator generator, String literal)">7</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$altList_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v2.CodeGenTreeWalker</name>
		<wmc>45</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>44</cbo>
		<rfc>152</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>44</ce>
		<npm>39</npm>
		<lcom3>0.768939393939394</lcom3>
		<loc>7275</loc>
		<dam>0.9444444444444444</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.2128099173553719</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>160.26666666666668</amc>
		<cc>
			<method name="public final void exceptionHandler(antlr.collections.AST _t, org.antlr.stringtemplate.StringTemplate ruleST)">1</method>
			<method name="public final void grammarSpec(antlr.collections.AST _t)">1</method>
			<method name="public void reportError(String s)">1</method>
			<method name="public final void grammar(antlr.collections.AST _t, org.antlr.tool.Grammar g, org.antlr.stringtemplate.StringTemplate recognizerST, org.antlr.stringtemplate.StringTemplate outputFileST, org.antlr.stringtemplate.StringTemplate headerFileST)">1</method>
			<method name="public final org.antlr.stringtemplate.StringTemplate atom(antlr.collections.AST _t, org.antlr.tool.GrammarAST scope, org.antlr.tool.GrammarAST label, org.antlr.tool.GrammarAST astSuffix)">1</method>
			<method name="public final org.antlr.stringtemplate.StringTemplate rewrite_alternative(antlr.collections.AST _t)">1</method>
			<method name="public void setCurrentRuleName(String currentRuleName)">1</method>
			<method name="public final org.antlr.stringtemplate.StringTemplate setBlock(antlr.collections.AST _t)">1</method>
			<method name="public final org.antlr.stringtemplate.StringTemplate ebnf(antlr.collections.AST _t)">1</method>
			<method name="public final org.antlr.stringtemplate.StringTemplate rewrite_block(antlr.collections.AST _t, String blockTemplateName)">1</method>
			<method name="public final void rules(antlr.collections.AST _t, org.antlr.stringtemplate.StringTemplate recognizerST)">1</method>
			<method name="public final org.antlr.stringtemplate.StringTemplate block(antlr.collections.AST _t, String blockTemplateName, org.antlr.analysis.DFA dfa)">1</method>
			<method name="public final void exceptionGroup(antlr.collections.AST _t, org.antlr.stringtemplate.StringTemplate ruleST)">1</method>
			<method name="protected org.antlr.stringtemplate.StringTemplate getWildcardST(org.antlr.tool.GrammarAST elementAST, org.antlr.tool.GrammarAST ast_suffix, String label)">2</method>
			<method name="public final void ast_suffix(antlr.collections.AST _t)">1</method>
			<method name="public final org.antlr.stringtemplate.StringTemplate rewrite_atom(antlr.collections.AST _t, boolean isRoot)">1</method>
			<method name="public final org.antlr.stringtemplate.StringTemplate tree(antlr.collections.AST _t)">1</method>
			<method name="protected String getSTSuffix(org.antlr.tool.GrammarAST elementAST, org.antlr.tool.GrammarAST ast_suffix, String label)">9</method>
			<method name="public final void finallyClause(antlr.collections.AST _t, org.antlr.stringtemplate.StringTemplate ruleST)">1</method>
			<method name="public final org.antlr.stringtemplate.StringTemplate element_action(antlr.collections.AST _t)">1</method>
			<method name="public final org.antlr.stringtemplate.StringTemplate rewrite_tree(antlr.collections.AST _t)">1</method>
			<method name="public final org.antlr.stringtemplate.StringTemplate element(antlr.collections.AST _t, org.antlr.tool.GrammarAST label, org.antlr.tool.GrammarAST astSuffix)">1</method>
			<method name="public final org.antlr.stringtemplate.StringTemplate rewrite_ebnf(antlr.collections.AST _t)">1</method>
			<method name="public boolean isListLabel(String label)">7</method>
			<method name="public void reportError(antlr.RecognitionException ex)">3</method>
			<method name="public final void modifier(antlr.collections.AST _t)">1</method>
			<method name="protected org.antlr.stringtemplate.StringTemplate getRuleElementST(String name, String ruleTargetName, org.antlr.tool.GrammarAST elementAST, org.antlr.tool.GrammarAST ast_suffix, String label)">7</method>
			<method name="protected java.util.List getTokenTypesAsTargetLabels(java.util.Set refs)">6</method>
			<method name="public final org.antlr.stringtemplate.StringTemplate rewrite_element(antlr.collections.AST _t)">1</method>
			<method name="public int getOuterAltNum()">1</method>
			<method name="public final void attrScope(antlr.collections.AST _t)">1</method>
			<method name="public void setOuterAltNum(int outerAltNum)">1</method>
			<method name="protected org.antlr.stringtemplate.StringTemplate getTokenElementST(String name, String elementName, org.antlr.tool.GrammarAST elementAST, org.antlr.tool.GrammarAST ast_suffix, String label)">7</method>
			<method name="public final org.antlr.stringtemplate.StringTemplate rewrite(antlr.collections.AST _t)">1</method>
			<method name="public final org.antlr.stringtemplate.StringTemplate alternative(antlr.collections.AST _t)">1</method>
			<method name="public final org.antlr.stringtemplate.StringTemplate notElement(antlr.collections.AST _t, org.antlr.tool.GrammarAST n, org.antlr.tool.GrammarAST label, org.antlr.tool.GrammarAST astSuffix)">1</method>
			<method name="public final org.antlr.stringtemplate.StringTemplate set(antlr.collections.AST _t, org.antlr.tool.GrammarAST label, org.antlr.tool.GrammarAST astSuffix)">1</method>
			<method name="public final org.antlr.stringtemplate.StringTemplate rewrite_template(antlr.collections.AST _t)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public final org.antlr.stringtemplate.StringTemplate rule(antlr.collections.AST _t)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public final void setElement(antlr.collections.AST _t)">1</method>
			<method name="public String getCurrentRuleName()">1</method>
			<method name="public void init(org.antlr.tool.Grammar g)">1</method>
			<method name="public final void ruleScopeSpec(antlr.collections.AST _t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Lexer$DFA22</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>7</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>3</npm>
		<lcom3>1.0</lcom3>
		<loc>806</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>267.3333333333333</amc>
		<cc>
			<method name="public String getDescription()">1</method>
			<method name="public void _init_(org.antlr.grammar.v3.ANTLRv3Lexer, org.antlr.runtime.BaseRecognizer recognizer)">1</method>
			<method name="public int specialStateTransition(int s, org.antlr.runtime.IntStream _input)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Grammar$10</name>
		<wmc>1</wmc>
		<dit>4</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>8</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>1.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.0</amc>
		<cc>
			<method name="void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$elementNoOptionSpec_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.misc.Barrier</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>6</rfc>
		<lcom>1</lcom>
		<ca>2</ca>
		<ce>3</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>40</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.666666666666666</amc>
		<cc>
			<method name="public void _init_(int t)">1</method>
			<method name="public void action()">1</method>
			<method name="public synchronized void waitForRelease()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.AnalysisRecursionOverflowException</name>
		<wmc>1</wmc>
		<dit>4</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>5</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>12</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>1.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.0</amc>
		<cc>
			<method name="public void _init_(org.antlr.analysis.DFAState ovfState, org.antlr.analysis.NFAConfiguration proposedNFAConfiguration)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.LL1DFA</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>24</cbo>
		<rfc>32</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>24</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>297</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5416666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>73.25</amc>
		<cc>
			<method name="public void _init_(int decisionNumber, org.antlr.analysis.NFAState decisionStartState, org.antlr.analysis.LookaheadSet[] altLook)">2</method>
			<method name="public void _init_(int decisionNumber, org.antlr.analysis.NFAState decisionStartState, org.antlr.misc.MultiMap edgeMap)">5</method>
			<method name="protected org.antlr.analysis.SemanticContext$Predicate getSynPredForAlt(org.antlr.analysis.NFAState decisionStartState, int alt)">5</method>
			<method name="protected org.antlr.analysis.Label getLabelForSet(org.antlr.misc.IntervalSet edgeSet)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.ErrorManager</name>
		<wmc>52</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>82</cbo>
		<rfc>126</rfc>
		<lcom>1234</lcom>
		<ca>30</ca>
		<ce>59</ce>
		<npm>45</npm>
		<lcom3>0.9970501474926254</lcom3>
		<loc>1419</loc>
		<dam>0.07079646017699115</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.08304498269896193</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>24.115384615384617</amc>
		<cc>
			<method name="public static void removeErrorListener()">1</method>
			<method name="public static void warning(int msgID, Object arg)">1</method>
			<method name="public static void setLocale(java.util.Locale locale)">11</method>
			<method name="public static void error(int msgID, Throwable e)">1</method>
			<method name="public static org.antlr.tool.ErrorManager$ErrorState getErrorState()">2</method>
			<method name="public static org.antlr.tool.ANTLRErrorListener getErrorListener()">2</method>
			<method name="protected static boolean verifyFormat()">4</method>
			<method name="public static void setErrorListener(org.antlr.tool.ANTLRErrorListener listener)">1</method>
			<method name="public static void analysisAborted(org.antlr.analysis.DecisionProbe probe)">1</method>
			<method name="public static org.antlr.stringtemplate.StringTemplate getMessage(int msgID)">1</method>
			<method name="public static boolean formatWantsSingleLineMessage()">1</method>
			<method name="public static org.antlr.stringtemplate.StringTemplate getLocationFormat()">1</method>
			<method name="public static void nondeterminism(org.antlr.analysis.DecisionProbe probe, org.antlr.analysis.DFAState d)">1</method>
			<method name="public static void error(int msgID, Object arg)">1</method>
			<method name="public static boolean doNotAttemptAnalysis()">2</method>
			<method name="public static void setTool(org.antlr.Tool tool)">1</method>
			<method name="static void rawError(String msg, Throwable e)">1</method>
			<method name="public static void grammarError(int msgID, org.antlr.tool.Grammar g, antlr.Token token, Object arg)">1</method>
			<method name="public static void info(String msg)">1</method>
			<method name="public static void grammarWarning(int msgID, org.antlr.tool.Grammar g, antlr.Token token)">1</method>
			<method name="public static void unreachableAlts(org.antlr.analysis.DecisionProbe probe, java.util.List alts)">1</method>
			<method name="public static org.antlr.stringtemplate.StringTemplate getReportFormat()">1</method>
			<method name="public static void grammarWarning(int msgID, org.antlr.tool.Grammar g, antlr.Token token, Object arg)">1</method>
			<method name="public static void recursionOverflow(org.antlr.analysis.DecisionProbe probe, org.antlr.analysis.DFAState sampleBadState, int alt, java.util.Collection targetRules, java.util.Collection callSiteStates)">1</method>
			<method name="public static org.antlr.stringtemplate.StringTemplateErrorListener getStringTemplateErrorListener()">1</method>
			<method name="public static void setFormat(String formatName)">8</method>
			<method name="public static void error(int msgID, Object arg, Throwable e)">1</method>
			<method name="public static void assertTrue(boolean condition, String message)">2</method>
			<method name="static void _clinit_()">1</method>
			<method name="public static void grammarError(int msgID, org.antlr.tool.Grammar g, antlr.Token token)">1</method>
			<method name="protected static boolean initIdToMessageNameMapping()">5</method>
			<method name="public static void nonLLStarDecision(org.antlr.analysis.DecisionProbe probe)">1</method>
			<method name="public static void leftRecursionCycles(java.util.Collection cycles)">1</method>
			<method name="public static void syntaxError(int msgID, org.antlr.tool.Grammar grammar, antlr.Token token, Object arg, antlr.RecognitionException re)">1</method>
			<method name="public static String getMessageType(int msgID)">3</method>
			<method name="private static StackTraceElement getLastNonErrorManagerCodeLocation(Throwable e)">3</method>
			<method name="public static void error(int msgID)">1</method>
			<method name="public static void panic()">2</method>
			<method name="public static int getNumErrors()">1</method>
			<method name="public static void insufficientPredicates(org.antlr.analysis.DecisionProbe probe, org.antlr.analysis.DFAState d, java.util.Map altToUncoveredLocations)">1</method>
			<method name="protected static boolean verifyMessages()">6</method>
			<method name="public static void internalError(Object error, Throwable e)">1</method>
			<method name="public static void grammarError(int msgID, org.antlr.tool.Grammar g, antlr.Token token, Object arg, Object arg2)">1</method>
			<method name="public static void danglingState(org.antlr.analysis.DecisionProbe probe, org.antlr.analysis.DFAState d)">2</method>
			<method name="public static void error(int msgID, Object arg, Object arg2)">1</method>
			<method name="public static org.antlr.stringtemplate.StringTemplate getMessageFormat()">1</method>
			<method name="public static boolean doNotAttemptCodeGen()">3</method>
			<method name="public static void grammarWarning(int msgID, org.antlr.tool.Grammar g, antlr.Token token, Object arg, Object arg2)">1</method>
			<method name="public static void resetErrorState()">1</method>
			<method name="static void rawError(String msg)">1</method>
			<method name="public static void internalError(Object error)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$actionScopeName_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$notSet_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$grammarDef_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>2</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.SemanticContext$AND</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>18</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>6</npm>
		<lcom3>0.0</lcom3>
		<loc>111</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.3055555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.166666666666668</amc>
		<cc>
			<method name="public boolean isSyntacticPredicate()">3</method>
			<method name="public String toString()">1</method>
			<method name="public void _init_(org.antlr.analysis.SemanticContext a, org.antlr.analysis.SemanticContext b)">1</method>
			<method name="public void trackUseOfSyntacticPredicates(org.antlr.tool.Grammar g)">1</method>
			<method name="public org.antlr.analysis.SemanticContext getGatedPredicateContext()">3</method>
			<method name="public org.antlr.stringtemplate.StringTemplate genExpr(org.antlr.codegen.CodeGenerator generator, org.antlr.stringtemplate.StringTemplateGroup templates, org.antlr.analysis.DFA dfa)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.LL1Analyzer</name>
		<wmc>9</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>24</cbo>
		<rfc>41</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>24</ce>
		<npm>6</npm>
		<lcom3>0.6964285714285714</lcom3>
		<loc>553</loc>
		<dam>0.14285714285714285</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>59.666666666666664</amc>
		<cc>
			<method name="public org.antlr.analysis.SemanticContext getPredicates(org.antlr.analysis.NFAState altStartState)">1</method>
			<method name="public org.antlr.analysis.LookaheadSet LOOK(org.antlr.analysis.NFAState s)">7</method>
			<method name="protected int _detectConfoundingPredicates(org.antlr.analysis.NFAState s, org.antlr.tool.Rule enclosingRule, boolean chaseFollowTransitions)">16</method>
			<method name="public void _init_(org.antlr.tool.Grammar grammar)">1</method>
			<method name="protected org.antlr.analysis.LookaheadSet _FIRST(org.antlr.analysis.NFAState s, boolean chaseFollowTransitions)">18</method>
			<method name="public org.antlr.analysis.LookaheadSet FIRST(org.antlr.analysis.NFAState s)">1</method>
			<method name="public org.antlr.analysis.LookaheadSet FOLLOW(org.antlr.tool.Rule r)">2</method>
			<method name="public boolean detectConfoundingPredicates(org.antlr.analysis.NFAState s)">2</method>
			<method name="protected org.antlr.analysis.SemanticContext _getPredicates(org.antlr.analysis.NFAState s, org.antlr.analysis.NFAState altStartState)">10</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.NFAConversionThread</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>8</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>54</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>24.0</amc>
		<cc>
			<method name="public void _init_(org.antlr.tool.Grammar grammar, org.antlr.misc.Barrier barrier, int i, int j)">1</method>
			<method name="public void run()">3</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.State</name>
		<wmc>6</wmc>
		<dit>1</dit>
		<noc>2</noc>
		<cbo>24</cbo>
		<rfc>7</rfc>
		<lcom>9</lcom>
		<ca>22</ca>
		<ce>3</ce>
		<npm>6</npm>
		<lcom3>0.9333333333333333</lcom3>
		<loc>25</loc>
		<dam>0.3333333333333333</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>2.6666666666666665</amc>
		<cc>
			<method name="public abstract org.antlr.analysis.Transition transition(int)">1</method>
			<method name="public abstract void addTransition(org.antlr.analysis.Transition)">1</method>
			<method name="public boolean isAcceptState()">1</method>
			<method name="public abstract int getNumberOfTransitions()">1</method>
			<method name="public void setAcceptState(boolean acceptState)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v2.ANTLRLexer</name>
		<wmc>66</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>29</cbo>
		<rfc>119</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>29</ce>
		<npm>42</npm>
		<lcom3>0.9507692307692307</lcom3>
		<loc>4681</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.28205128205128205</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>69.77272727272727</amc>
		<cc>
			<method name="public final void mCHAR_LITERAL(boolean _createToken)">1</method>
			<method name="public antlr.Token nextToken()">1</method>
			<method name="protected final void mXDIGIT(boolean _createToken)">1</method>
			<method name="protected final void mDIGIT(boolean _createToken)">1</method>
			<method name="private static final long[] mk_tokenSet_1()">2</method>
			<method name="public final void mRANGE(boolean _createToken)">1</method>
			<method name="private static final long[] mk_tokenSet_5()">2</method>
			<method name="public final void mINT(boolean _createToken)">1</method>
			<method name="public final void mRULE_REF(boolean _createToken)">1</method>
			<method name="private static final long[] mk_tokenSet_3()">2</method>
			<method name="protected final void mNESTED_ARG_ACTION(boolean _createToken)">1</method>
			<method name="protected final int mINTERNAL_RULE_REF(boolean _createToken)">1</method>
			<method name="protected final void mWS_OPT(boolean _createToken)">1</method>
			<method name="public final void mARG_ACTION(boolean _createToken)">1</method>
			<method name="public final void mQUESTION(boolean _createToken)">1</method>
			<method name="protected final void mACTION_CHAR_LITERAL(boolean _createToken)">1</method>
			<method name="public final void mDOLLAR(boolean _createToken)">1</method>
			<method name="protected final void mWS_LOOP(boolean _createToken)">1</method>
			<method name="public void _init_(java.io.Reader in)">1</method>
			<method name="public final void mBANG(boolean _createToken)">1</method>
			<method name="private static final long[] mk_tokenSet_7()">2</method>
			<method name="public final void mCOMMENT(boolean _createToken)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="protected final void mSL_COMMENT(boolean _createToken)">1</method>
			<method name="public final void mTOKEN_REF(boolean _createToken)">1</method>
			<method name="protected final void mACTION_ESC(boolean _createToken)">1</method>
			<method name="public final void mRPAREN(boolean _createToken)">1</method>
			<method name="private static final long[] mk_tokenSet_2()">1</method>
			<method name="public final void mOR(boolean _createToken)">1</method>
			<method name="private static final long[] mk_tokenSet_0()">2</method>
			<method name="public void _init_(java.io.InputStream in)">1</method>
			<method name="private static final long[] mk_tokenSet_6()">2</method>
			<method name="public void _init_(antlr.InputBuffer ib)">1</method>
			<method name="private static final long[] mk_tokenSet_4()">2</method>
			<method name="public final void mWS(boolean _createToken)">1</method>
			<method name="public void _init_(antlr.LexerSharedInputState state)">1</method>
			<method name="public final void mSTAR(boolean _createToken)">1</method>
			<method name="public final void mROOT(boolean _createToken)">1</method>
			<method name="public final void mCOMMA(boolean _createToken)">1</method>
			<method name="public final void mRCURLY(boolean _createToken)">1</method>
			<method name="public final void mWILDCARD(boolean _createToken)">1</method>
			<method name="protected final void mESC(boolean _createToken)">1</method>
			<method name="protected final void mML_COMMENT(boolean _createToken)">1</method>
			<method name="public final void mDOUBLE_QUOTE_STRING_LITERAL(boolean _createToken)">1</method>
			<method name="public final void mCLOSE_ELEMENT_OPTION(boolean _createToken)">1</method>
			<method name="public final void mACTION(boolean _createToken)">1</method>
			<method name="public final void mASSIGN(boolean _createToken)">1</method>
			<method name="public final void mTREE_BEGIN(boolean _createToken)">1</method>
			<method name="public final void mPLUS(boolean _createToken)">1</method>
			<method name="public final void mLPAREN(boolean _createToken)">1</method>
			<method name="public void tab()">1</method>
			<method name="public final void mETC(boolean _createToken)">1</method>
			<method name="public final void mOPEN_ELEMENT_OPTION(boolean _createToken)">1</method>
			<method name="public final void mPLUS_ASSIGN(boolean _createToken)">1</method>
			<method name="public final void mCOLON(boolean _createToken)">1</method>
			<method name="protected final void mSRC(boolean _createToken)">1</method>
			<method name="public final void mSEMI(boolean _createToken)">1</method>
			<method name="private static final long[] mk_tokenSet_8()">1</method>
			<method name="public final void mIMPLIES(boolean _createToken)">1</method>
			<method name="public final void mNOT(boolean _createToken)">1</method>
			<method name="public final void mDOUBLE_ANGLE_STRING_LITERAL(boolean _createToken)">1</method>
			<method name="public final void mAMPERSAND(boolean _createToken)">1</method>
			<method name="public final void mSTRAY_BRACKET(boolean _createToken)">1</method>
			<method name="public final void mREWRITE(boolean _createToken)">1</method>
			<method name="protected final void mACTION_STRING_LITERAL(boolean _createToken)">1</method>
			<method name="protected final void mNESTED_ACTION(boolean _createToken)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.GrammarDanglingStateMessage</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>17</cbo>
		<rfc>16</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>16</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>77</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>36.5</amc>
		<cc>
			<method name="public String toString()">2</method>
			<method name="public void _init_(org.antlr.analysis.DecisionProbe probe, org.antlr.analysis.DFAState problemState)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.misc.IntArrayList</name>
		<wmc>16</wmc>
		<dit>3</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>24</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>10</ce>
		<npm>15</npm>
		<lcom3>0.4444444444444444</lcom3>
		<loc>259</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.7083333333333334</mfa>
		<cam>0.5208333333333334</cam>
		<ic>2</ic>
		<cbm>6</cbm>
		<amc>15.0</amc>
		<cc>
			<method name="public Object get(int i)">1</method>
			<method name="public int element(int i)">1</method>
			<method name="public void _init_(int initialCapacity)">1</method>
			<method name="public boolean equals(Object o)">5</method>
			<method name="public int capacity()">1</method>
			<method name="public Object clone()">1</method>
			<method name="public boolean add(int o)">2</method>
			<method name="public int size()">1</method>
			<method name="protected void grow()">1</method>
			<method name="public int[] elements()">1</method>
			<method name="public String toString()">3</method>
			<method name="public void ensureCapacity(int newCapacity)">2</method>
			<method name="public int set(int i, int newValue)">2</method>
			<method name="public void setSize(int newSize)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public boolean contains(int v)">3</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v2.CodeGenTreeWalkerTokenTypes</name>
		<wmc>0</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>3</cbo>
		<rfc>0</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>2</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>100</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Tree</name>
		<wmc>48</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>16</cbo>
		<rfc>66</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>16</ce>
		<npm>47</npm>
		<lcom3>0.9738297872340426</lcom3>
		<loc>7810</loc>
		<dam>0.006666666666666667</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.3546099290780142</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>155.45833333333334</amc>
		<cc>
			<method name="public final void tokensSpec()">1</method>
			<method name="public final void rewrite_alternative()">1</method>
			<method name="public final void rewrite()">2</method>
			<method name="public final void optionValue()">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeNodeStream input, org.antlr.runtime.RecognizerSharedState state)">1</method>
			<method name="public final void rewrite_tree_alternative()">1</method>
			<method name="public final void rewrite_tree_ebnf()">1</method>
			<method name="public final void tokenSpec()">1</method>
			<method name="public final void altList()">1</method>
			<method name="public final void elementNoOptionSpec()">1</method>
			<method name="public final void rewrite_template()">1</method>
			<method name="public final void action()">3</method>
			<method name="public final void option()">1</method>
			<method name="public final void rewrite_indirect_template_head()">1</method>
			<method name="public final void attrScope()">1</method>
			<method name="public final void notSet()">3</method>
			<method name="public final void rewrite_template_arg()">1</method>
			<method name="public final void treeSpec()">1</method>
			<method name="public final void ebnfSuffix()">1</method>
			<method name="public String getGrammarFileName()">1</method>
			<method name="public final void notTerminal()">1</method>
			<method name="public final void grammarType()">1</method>
			<method name="public final void rewrite_tree()">2</method>
			<method name="public final void ruleAction()">1</method>
			<method name="public final void ruleScopeSpec()">1</method>
			<method name="public final void ebnf()">7</method>
			<method name="public final void rewrite_template_args()">1</method>
			<method name="public final void rewrite_tree_block()">1</method>
			<method name="public final void rewrite_tree_atom()">1</method>
			<method name="public final void exceptionGroup()">2</method>
			<method name="public final void throwsSpec()">1</method>
			<method name="public final void atom()">1</method>
			<method name="public final void rewrite_tree_element()">1</method>
			<method name="public final void range()">1</method>
			<method name="public final void alternative()">1</method>
			<method name="public final void finallyClause()">1</method>
			<method name="public final void block()">1</method>
			<method name="public final void modifier()">1</method>
			<method name="public final void element()">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeNodeStream input)">1</method>
			<method name="public final void rule()">2</method>
			<method name="public final void optionsSpec()">1</method>
			<method name="static void _clinit_()">3</method>
			<method name="public final void exceptionHandler()">1</method>
			<method name="public final void terminal()">1</method>
			<method name="public final void grammarDef()">1</method>
			<method name="public String[] getTokenNames()">1</method>
			<method name="public final void rewrite_template_ref()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.codegen.JavaScriptTarget</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>16</rfc>
		<lcom>6</lcom>
		<ca>0</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>80</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>19.0</amc>
		<cc>
			<method name="public String encodeIntAsCharEscape(int v)">1</method>
			<method name="public String getTarget64BitStringFromValue(long word)">1</method>
			<method name="public void _init_()">1</method>
			<method name="private void writeHexWithPadding(StringBuffer buf, String digits)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$tokensSpec_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$ruleScopeSpec_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v2.ANTLRTokenTypes</name>
		<wmc>0</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>0</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>2</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>100</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$exceptionGroup_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.GrammarSanity</name>
		<wmc>8</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>22</cbo>
		<rfc>33</rfc>
		<lcom>8</lcom>
		<ca>2</ca>
		<ce>22</ce>
		<npm>4</npm>
		<lcom3>0.5714285714285714</lcom3>
		<loc>426</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.2777777777777778</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>52.0</amc>
		<cc>
			<method name="public void checkRuleReference(org.antlr.tool.GrammarAST scopeAST, org.antlr.tool.GrammarAST refAST, org.antlr.tool.GrammarAST argsAST, String currentRuleName)">15</method>
			<method name="public java.util.List checkAllRulesForLeftRecursion()">4</method>
			<method name="protected boolean traceStatesLookingForLeftRecursion(org.antlr.analysis.NFAState s, java.util.Set visitedStates, java.util.List listOfRecursiveCycles)">8</method>
			<method name="public void _init_(org.antlr.tool.Grammar grammar)">1</method>
			<method name="public void ensureAltIsSimpleNodeOrTree(org.antlr.tool.GrammarAST altAST, org.antlr.tool.GrammarAST elementAST, int outerAltNum)">12</method>
			<method name="protected boolean isNextNonActionElementEOA(org.antlr.tool.GrammarAST t)">4</method>
			<method name="protected void addRulesToCycle(org.antlr.tool.Rule targetRule, org.antlr.tool.Rule enclosingRule, java.util.List listOfRecursiveCycles)">5</method>
			<method name="protected boolean isValidSimpleElementNode(org.antlr.tool.GrammarAST t)">7</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$optionsSpec_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.NameSpaceChecker</name>
		<wmc>9</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>20</cbo>
		<rfc>47</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>20</ce>
		<npm>4</npm>
		<lcom3>0.0</lcom3>
		<loc>543</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.31746031746031744</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>59.22222222222222</amc>
		<cc>
			<method name="protected void checkForRuleArgumentAndReturnValueConflicts(org.antlr.tool.Rule r)">4</method>
			<method name="protected void lookForReferencesToUndefinedSymbols()">8</method>
			<method name="public boolean checkForLabelTypeMismatch(org.antlr.tool.Rule r, antlr.Token label, int type)">3</method>
			<method name="public void _init_(org.antlr.tool.Grammar grammar)">1</method>
			<method name="public void checkForRuleScopeAttributeConflict(org.antlr.tool.Rule r, org.antlr.tool.Attribute attribute)">7</method>
			<method name="public void checkConflicts()">8</method>
			<method name="protected void checkForGlobalScopeTokenConflict(org.antlr.tool.AttributeScope scope)">2</method>
			<method name="protected void checkForLabelConflict(org.antlr.tool.Rule r, antlr.Token label)">11</method>
			<method name="protected void checkForRuleDefinitionProblems(org.antlr.tool.Rule r)">9</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$finallyClause_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Tree$DFA31</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>38</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.5</amc>
		<cc>
			<method name="public String getDescription()">1</method>
			<method name="public void _init_(org.antlr.grammar.v3.ANTLRv3Tree, org.antlr.runtime.BaseRecognizer recognizer)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.SemanticContext$Predicate</name>
		<wmc>10</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>17</cbo>
		<rfc>22</rfc>
		<lcom>0</lcom>
		<ca>5</ca>
		<ce>13</ce>
		<npm>10</npm>
		<lcom3>0.7777777777777778</lcom3>
		<loc>237</loc>
		<dam>0.42857142857142855</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.2125</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>22.0</amc>
		<cc>
			<method name="public boolean isSyntacticPredicate()">4</method>
			<method name="public String toString()">2</method>
			<method name="public int hashCode()">2</method>
			<method name="public void _init_(org.antlr.analysis.SemanticContext$Predicate p)">1</method>
			<method name="public boolean equals(Object o)">2</method>
			<method name="public void _init_(org.antlr.tool.GrammarAST predicate)">5</method>
			<method name="public void trackUseOfSyntacticPredicates(org.antlr.tool.Grammar g)">2</method>
			<method name="public org.antlr.analysis.SemanticContext getGatedPredicateContext()">2</method>
			<method name="public void _init_()">1</method>
			<method name="public org.antlr.stringtemplate.StringTemplate genExpr(org.antlr.codegen.CodeGenerator generator, org.antlr.stringtemplate.StringTemplateGroup templates, org.antlr.analysis.DFA dfa)">4</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.BuildDependencyGenerator</name>
		<wmc>6</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>27</cbo>
		<rfc>53</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>27</ce>
		<npm>6</npm>
		<lcom3>0.5599999999999999</lcom3>
		<loc>509</loc>
		<dam>1.0</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>83.0</amc>
		<cc>
			<method name="public void _init_(org.antlr.Tool tool, String grammarFileName)">1</method>
			<method name="public java.util.List getDependenciesFileList()">4</method>
			<method name="public org.antlr.stringtemplate.StringTemplate getDependencies()">1</method>
			<method name="public java.util.List getGeneratedFileList()">8</method>
			<method name="public String groomQualifiedFileName(String outputDir, String fileName)">3</method>
			<method name="public void loadDependencyTemplates()">7</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.LeftRecursionCyclesMessage</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>6</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>22</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.5</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_(java.util.Collection cycles)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$ruleAction_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.RuleLabelScope</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>11</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>12</ce>
		<npm>2</npm>
		<lcom3>0.8</lcom3>
		<loc>92</loc>
		<dam>0.0</dam>
		<moa>5</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>28.0</amc>
		<cc>
			<method name="static void _clinit_()">1</method>
			<method name="public org.antlr.tool.Attribute getAttribute(String name)">3</method>
			<method name="public void _init_(org.antlr.tool.Rule referencedRule, antlr.Token actionToken)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.analysis.NFAToDFAConverter</name>
		<wmc>25</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>48</cbo>
		<rfc>136</rfc>
		<lcom>50</lcom>
		<ca>5</ca>
		<ce>46</ce>
		<npm>8</npm>
		<lcom3>0.7708333333333334</lcom3>
		<loc>1946</loc>
		<dam>0.6666666666666666</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.19791666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>76.6</amc>
		<cc>
			<method name="public void convert()">7</method>
			<method name="public static int max(java.util.Set s)">4</method>
			<method name="public void closure(org.antlr.analysis.DFAState d)">4</method>
			<method name="protected org.antlr.analysis.DFAState convertToAcceptState(org.antlr.analysis.DFAState d, int alt)">11</method>
			<method name="public void _init_(org.antlr.analysis.DFA dfa)">1</method>
			<method name="protected static int addTransition(org.antlr.analysis.DFAState d, org.antlr.analysis.Label label, org.antlr.analysis.DFAState targetState, java.util.Map targetToLabelMap)">4</method>
			<method name="protected static int getMinAlt(java.util.Set nondeterministicAlts)">2</method>
			<method name="protected void addPredicateTransitions(org.antlr.analysis.DFAState d)">6</method>
			<method name="protected void initContextTrees(int numberOfAlts)">2</method>
			<method name="public void closure(org.antlr.analysis.NFAState p, int alt, org.antlr.analysis.NFAContext context, org.antlr.analysis.SemanticContext semanticContext, org.antlr.analysis.DFAState d, boolean collectPredicates)">27</method>
			<method name="protected void convertToEOTAcceptState(org.antlr.analysis.DFAState d)">5</method>
			<method name="protected static void turnOffOtherAlts(org.antlr.analysis.DFAState d, int min, java.util.Set nondeterministicAlts)">5</method>
			<method name="public static boolean closureIsBusy(org.antlr.analysis.DFAState d, org.antlr.analysis.NFAConfiguration proposedNFAConfiguration)">1</method>
			<method name="protected int resolveByPickingMinAlt(org.antlr.analysis.DFAState d, java.util.Set nondeterministicAlts)">2</method>
			<method name="public org.antlr.analysis.DFAState reach(org.antlr.analysis.DFAState d, org.antlr.analysis.Label label)">10</method>
			<method name="protected static org.antlr.analysis.SemanticContext getUnionOfPredicates(java.util.Map altToPredMap)">3</method>
			<method name="public void resolveNonDeterminisms(org.antlr.analysis.DFAState d)">14</method>
			<method name="protected int resolveByChoosingFirstAlt(org.antlr.analysis.DFAState d, java.util.Set nondeterministicAlts)">3</method>
			<method name="protected void findNewDFAStatesAndAddDFATransitions(org.antlr.analysis.DFAState d)">13</method>
			<method name="protected int resolveByPickingExitAlt(org.antlr.analysis.DFAState d, java.util.Set nondeterministicAlts)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="protected org.antlr.analysis.DFAState addDFAStateToWorkList(org.antlr.analysis.DFAState d)">3</method>
			<method name="protected boolean tryToResolveWithSemanticPredicates(org.antlr.analysis.DFAState d, java.util.Set nondeterministicAlts)">14</method>
			<method name="protected org.antlr.analysis.DFAState computeStartState()">5</method>
			<method name="protected java.util.Map getPredicatesPerNonDeterministicAlt(org.antlr.analysis.DFAState d, java.util.Set nondeterministicAlts)">18</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$rewrite_tree_atom_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Lexer$DFA2</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>7</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>3</npm>
		<lcom3>1.0</lcom3>
		<loc>985</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>327.0</amc>
		<cc>
			<method name="public String getDescription()">1</method>
			<method name="public void _init_(org.antlr.grammar.v3.ANTLRv3Lexer, org.antlr.runtime.BaseRecognizer recognizer)">1</method>
			<method name="public int specialStateTransition(int s, org.antlr.runtime.IntStream _input)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.codegen.CodeGenerator</name>
		<wmc>37</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>87</cbo>
		<rfc>199</rfc>
		<lcom>308</lcom>
		<ca>29</ca>
		<ce>68</ce>
		<npm>27</npm>
		<lcom3>0.9251207729468598</lcom3>
		<loc>2399</loc>
		<dam>0.5652173913043478</dam>
		<moa>4</moa>
		<mfa>0.0</mfa>
		<cam>0.15359477124183007</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>63.21621621621622</amc>
		<cc>
			<method name="public java.util.List translateAction(String ruleName, org.antlr.tool.GrammarAST actionTree)">2</method>
			<method name="protected org.antlr.stringtemplate.StringTemplate genSemanticPredicateExpr(org.antlr.stringtemplate.StringTemplateGroup templates, org.antlr.analysis.Transition edge)">1</method>
			<method name="protected void verifyActionScopesOkForTarget(java.util.Map actions)">2</method>
			<method name="public void translateActionAttributeReferencesForSingleScope(org.antlr.tool.Rule r, java.util.Map scopeActions)">3</method>
			<method name="public String getVocabFileName()">2</method>
			<method name="public void setProfile(boolean profile)">2</method>
			<method name="public org.antlr.stringtemplate.StringTemplateGroup getBaseTemplates()">1</method>
			<method name="protected boolean canGenerateSwitch(org.antlr.analysis.DFAState s)">9</method>
			<method name="public org.antlr.stringtemplate.StringTemplate getRecognizerST()">1</method>
			<method name="public void generateLocalFOLLOW(org.antlr.tool.GrammarAST referencedElementNode, String referencedElementName, String enclosingRuleName, int elementIndex)">6</method>
			<method name="protected void genTokenTypeConstants(org.antlr.stringtemplate.StringTemplate code)">3</method>
			<method name="protected org.antlr.stringtemplate.StringTemplate genTokenVocabOutput()">3</method>
			<method name="public org.antlr.stringtemplate.StringTemplate genLookaheadDecision(org.antlr.stringtemplate.StringTemplate recognizerST, org.antlr.analysis.DFA dfa)">3</method>
			<method name="protected org.antlr.stringtemplate.StringTemplate genLabelExpr(org.antlr.stringtemplate.StringTemplateGroup templates, org.antlr.analysis.Transition edge, int k)">3</method>
			<method name="public String createUniqueLabel(String name)">1</method>
			<method name="protected void loadLanguageTarget(String language)">1</method>
			<method name="public void issueInvalidAttributeError(String x, org.antlr.tool.Rule enclosingRule, antlr.Token actionToken, int outerAltNum)">7</method>
			<method name="protected void genTokenTypeNames(org.antlr.stringtemplate.StringTemplate code)">3</method>
			<method name="public static java.util.List getListOfArgumentsFromAction(String actionText, int separatorChar)">1</method>
			<method name="public org.antlr.stringtemplate.StringTemplate genRecognizer()">30</method>
			<method name="public void issueInvalidScopeError(String x, String y, org.antlr.tool.Rule enclosingRule, antlr.Token actionToken, int outerAltNum)">5</method>
			<method name="public org.antlr.stringtemplate.StringTemplateGroup getTemplates()">1</method>
			<method name="public static int getListOfArgumentsFromAction(String actionText, int start, int targetChar, int separatorChar, java.util.List args)">27</method>
			<method name="public void setTrace(boolean trace)">1</method>
			<method name="public org.antlr.stringtemplate.StringTemplate translateTemplateConstructor(String ruleName, int outerAltNum, antlr.Token actionToken, String templateActionText)">1</method>
			<method name="public org.antlr.stringtemplate.StringTemplate genSetExpr(org.antlr.stringtemplate.StringTemplateGroup templates, org.antlr.misc.IntSet set, int k, boolean partOfDFA)">7</method>
			<method name="public void issueInvalidAttributeError(String x, String y, org.antlr.tool.Rule enclosingRule, antlr.Token actionToken, int outerAltNum)">8</method>
			<method name="public void write(org.antlr.stringtemplate.StringTemplate code, String fileName)">1</method>
			<method name="public org.antlr.stringtemplate.StringTemplate generateSpecialState(org.antlr.analysis.DFAState s)">8</method>
			<method name="public void loadTemplates(String language)">15</method>
			<method name="public void setDebug(boolean debug)">1</method>
			<method name="protected void translateActionAttributeReferences(java.util.Map actions)">2</method>
			<method name="static void _clinit_()">1</method>
			<method name="public String getTokenTypeAsTargetLabel(int ttype)">2</method>
			<method name="public String getRecognizerFileName(String name, int type)">1</method>
			<method name="public void _init_(org.antlr.Tool tool, org.antlr.tool.Grammar grammar, String language)">1</method>
			<method name="public java.util.List translateArgAction(String ruleName, org.antlr.tool.GrammarAST actionTree)">3</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Lexer$DFA9</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>7</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>3</npm>
		<lcom3>1.0</lcom3>
		<loc>187</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>61.0</amc>
		<cc>
			<method name="public String getDescription()">1</method>
			<method name="public void _init_(org.antlr.grammar.v3.ANTLRv3Lexer, org.antlr.runtime.BaseRecognizer recognizer)">1</method>
			<method name="public int specialStateTransition(int s, org.antlr.runtime.IntStream _input)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.ErrorManager$ErrorState</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>19</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.0</amc>
		<cc>
			<method name="void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Grammar$2</name>
		<wmc>1</wmc>
		<dit>4</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>36</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>1.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>35.0</amc>
		<cc>
			<method name="void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Grammar$3</name>
		<wmc>1</wmc>
		<dit>4</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>44</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>1.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>43.0</amc>
		<cc>
			<method name="void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v2.ANTLRTreePrinter</name>
		<wmc>36</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>17</cbo>
		<rfc>58</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>17</ce>
		<npm>35</npm>
		<lcom3>0.5428571428571428</lcom3>
		<loc>4648</loc>
		<dam>0.75</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.34285714285714286</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>128.0</amc>
		<cc>
			<method name="public final void single_rewrite(antlr.collections.AST _t)">1</method>
			<method name="public final void ebnf(antlr.collections.AST _t)">1</method>
			<method name="public static String normalize(String g)">2</method>
			<method name="public final void block(antlr.collections.AST _t, boolean forceParens)">1</method>
			<method name="public final void action(antlr.collections.AST _t)">1</method>
			<method name="public final void ruleAction(antlr.collections.AST _t)">1</method>
			<method name="public final void atom(antlr.collections.AST _t)">1</method>
			<method name="public final void ast_suffix(antlr.collections.AST _t)">1</method>
			<method name="public final void actions(antlr.collections.AST _t)">1</method>
			<method name="public void out(String s)">1</method>
			<method name="public final void rewrite_template(antlr.collections.AST _t)">1</method>
			<method name="public final void grammarSpec(antlr.collections.AST _t, String gtype)">1</method>
			<method name="public final void rules(antlr.collections.AST _t)">1</method>
			<method name="public final void tree(antlr.collections.AST _t)">1</method>
			<method name="public void reportError(antlr.RecognitionException ex)">3</method>
			<method name="public final void grammar(antlr.collections.AST _t)">1</method>
			<method name="public final void modifier(antlr.collections.AST _t)">1</method>
			<method name="public final void exceptionHandler(antlr.collections.AST _t)">1</method>
			<method name="public final int countAltsForBlock(antlr.collections.AST _t)">1</method>
			<method name="public final void element(antlr.collections.AST _t)">1</method>
			<method name="public final void option(antlr.collections.AST _t)">1</method>
			<method name="public final void exceptionGroup(antlr.collections.AST _t)">1</method>
			<method name="public final void rule(antlr.collections.AST _t)">1</method>
			<method name="public final void delegateGrammars(antlr.collections.AST _t)">1</method>
			<method name="public final void attrScope(antlr.collections.AST _t)">1</method>
			<method name="public final void finallyClause(antlr.collections.AST _t)">1</method>
			<method name="public final void tokensSpec(antlr.collections.AST _t)">1</method>
			<method name="public final void alternative(antlr.collections.AST _t)">1</method>
			<method name="public final void optionValue(antlr.collections.AST _t)">1</method>
			<method name="public final String toString(antlr.collections.AST _t, org.antlr.tool.Grammar g, boolean showActions)">1</method>
			<method name="public final void optionsSpec(antlr.collections.AST _t)">1</method>
			<method name="public final void tokenSpec(antlr.collections.AST _t)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public final void rewrite(antlr.collections.AST _t)">1</method>
			<method name="public final void ruleScopeSpec(antlr.collections.AST _t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$ebnfSuffix_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.RecursionOverflowMessage</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>13</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>13</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>88</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.6</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>40.5</amc>
		<cc>
			<method name="public String toString()">2</method>
			<method name="public void _init_(org.antlr.analysis.DecisionProbe probe, org.antlr.analysis.DFAState sampleBadState, int alt, java.util.Collection targetRules, java.util.Collection callSiteStates)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Grammar$1</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>4</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>40</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>39.0</amc>
		<cc>
			<method name="void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Grammar$6</name>
		<wmc>1</wmc>
		<dit>3</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>1.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.0</amc>
		<cc>
			<method name="void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Grammar$7</name>
		<wmc>1</wmc>
		<dit>4</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>20</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>1.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>19.0</amc>
		<cc>
			<method name="void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Grammar$4</name>
		<wmc>1</wmc>
		<dit>4</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>48</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>1.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>47.0</amc>
		<cc>
			<method name="void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Grammar$5</name>
		<wmc>1</wmc>
		<dit>4</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>32</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>1.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>31.0</amc>
		<cc>
			<method name="void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Grammar</name>
		<wmc>156</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>134</cbo>
		<rfc>412</rfc>
		<lcom>10102</lcom>
		<ca>74</ca>
		<ce>93</ce>
		<npm>146</npm>
		<lcom3>0.9740452354467928</lcom3>
		<loc>5341</loc>
		<dam>0.26436781609195403</dam>
		<moa>12</moa>
		<mfa>0.0</mfa>
		<cam>0.08360215053763441</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>32.67948717948718</amc>
		<cc>
			<method name="public boolean validImport(org.antlr.tool.Grammar delegate)">3</method>
			<method name="public String setOption(String key, Object value, antlr.Token optionsStartToken)">6</method>
			<method name="public boolean optionIsValid(String key, Object value)">1</method>
			<method name="public java.util.List getDelegateNames()">3</method>
			<method name="public void setDecisionBlockAST(int decision, org.antlr.tool.GrammarAST blockAST)">1</method>
			<method name="public void buildNFA()">4</method>
			<method name="public java.util.Map getLineColumnToLookaheadDFAMap()">1</method>
			<method name="public int getTokenType(String tokenName)">3</method>
			<method name="public org.antlr.misc.IntSet complement(int atom)">1</method>
			<method name="public org.antlr.analysis.NFAState getNFAStateForAltOfDecision(org.antlr.analysis.NFAState decisionState, int alt)">5</method>
			<method name="public org.antlr.misc.IntSet getTokenTypes()">2</method>
			<method name="public org.antlr.analysis.NFAState getDecisionNFAStartState(int decision)">2</method>
			<method name="public java.util.List getLookaheadDFAColumnsForLineInFile(int line)">2</method>
			<method name="public void createLookaheadDFAs()">1</method>
			<method name="public int getNewTokenType()">1</method>
			<method name="public org.antlr.analysis.LookaheadSet LOOK(org.antlr.analysis.NFAState s)">1</method>
			<method name="public void checkRuleReference(org.antlr.tool.GrammarAST scopeAST, org.antlr.tool.GrammarAST refAST, org.antlr.tool.GrammarAST argsAST, String currentRuleName)">1</method>
			<method name="public void defineWildcardTreeLabel(String ruleName, antlr.Token label, org.antlr.tool.GrammarAST tokenRef)">2</method>
			<method name="public java.util.List getDelegates()">1</method>
			<method name="public void printGrammar(java.io.PrintStream output)">1</method>
			<method name="public void parseAndBuildAST(java.io.Reader r)">7</method>
			<method name="public void defineLexerRuleForAliasedStringLiteral(String tokenID, String literal, int tokenType)">2</method>
			<method name="public void setOptions(java.util.Map options, antlr.Token optionsStartToken)">3</method>
			<method name="public void setRuleAST(String ruleName, org.antlr.tool.GrammarAST t)">2</method>
			<method name="public String getRuleModifier(String ruleName)">2</method>
			<method name="public int assignDecisionNumber(org.antlr.analysis.NFAState state)">1</method>
			<method name="public void setTool(org.antlr.Tool tool)">1</method>
			<method name="protected org.antlr.tool.Grammar$Decision getDecision(int decision)">2</method>
			<method name="public org.antlr.misc.IntSet complement(org.antlr.misc.IntSet set)">1</method>
			<method name="public int getNumberOfCyclicDecisions()">4</method>
			<method name="public org.antlr.analysis.LookaheadSet FIRST(org.antlr.analysis.NFAState s)">1</method>
			<method name="public boolean isBuiltFromString()">1</method>
			<method name="public void defineNamedAction(org.antlr.tool.GrammarAST ampersandAST, String scope, org.antlr.tool.GrammarAST nameAST, org.antlr.tool.GrammarAST actionAST)">7</method>
			<method name="public org.antlr.Tool getTool()">1</method>
			<method name="protected void defineLabel(org.antlr.tool.Rule r, antlr.Token label, org.antlr.tool.GrammarAST element, int type)">2</method>
			<method name="public static StringBuffer getUnescapedStringFromGrammarStringLiteral(String literal)">5</method>
			<method name="public int getMaxTokenType()">1</method>
			<method name="public boolean buildTemplate()">2</method>
			<method name="public java.util.Map getGlobalScopes()">1</method>
			<method name="public org.antlr.tool.GrammarAST addArtificialMatchTokensRule(org.antlr.tool.GrammarAST grammarAST, java.util.List ruleNames, java.util.List delegateNames, boolean filterMode)">6</method>
			<method name="public void _init_(org.antlr.Tool tool, String grammarString)">1</method>
			<method name="public org.antlr.tool.GrammarAST getSyntacticPredicate(String name)">2</method>
			<method name="public boolean allDecisionDFAHaveBeenCreated()">1</method>
			<method name="public String getFileName()">1</method>
			<method name="public org.antlr.misc.IntSet getSetFromRule(org.antlr.grammar.v2.TreeToNFAConverter nfabuilder, String ruleName)">1</method>
			<method name="public boolean NFAToDFAConversionExternallyAborted()">1</method>
			<method name="public String getRuleName(int ruleIndex)">2</method>
			<method name="public java.util.Collection getRules()">1</method>
			<method name="public boolean buildAST()">2</method>
			<method name="public boolean rewriteMode()">2</method>
			<method name="public org.antlr.tool.Rule getLocallyDefinedRule(String ruleName)">1</method>
			<method name="public int getNumberOfDecisions()">1</method>
			<method name="public boolean isValidSet(org.antlr.grammar.v2.TreeToNFAConverter nfabuilder, org.antlr.tool.GrammarAST t)">1</method>
			<method name="public void defineWildcardTreeListLabel(String ruleName, antlr.Token label, org.antlr.tool.GrammarAST tokenRef)">2</method>
			<method name="public void setName(String name)">5</method>
			<method name="public void synPredUsedInDFA(org.antlr.analysis.DFA dfa, org.antlr.analysis.SemanticContext semCtx)">1</method>
			<method name="public String computeTokenNameFromLiteral(int tokenType, String literal)">1</method>
			<method name="public org.antlr.analysis.DFA createLookaheadDFA(int decision, boolean wackTempStructures)">12</method>
			<method name="public void checkNameSpaceAndActions()">1</method>
			<method name="public void setCodeGenerator(org.antlr.codegen.CodeGenerator generator)">1</method>
			<method name="public int getGrammarMaxLookahead()">5</method>
			<method name="public String toString()">1</method>
			<method name="public java.util.List checkAllRulesForLeftRecursion()">1</method>
			<method name="public void defineToken(String text, int tokenType)">7</method>
			<method name="public java.util.LinkedHashMap getSyntacticPredicates()">1</method>
			<method name="public void parseAndBuildAST()">1</method>
			<method name="public org.antlr.tool.GrammarAST getDecisionBlockAST(int decision)">2</method>
			<method name="public void createRuleStartAndStopNFAStates()">3</method>
			<method name="public org.antlr.tool.AttributeScope getGlobalScope(String name)">1</method>
			<method name="public Object getOption(String key)">1</method>
			<method name="public Object getBlockOption(org.antlr.tool.GrammarAST blockAST, String key)">3</method>
			<method name="public boolean getGrammarIsRoot()">2</method>
			<method name="protected java.util.List getArtificialRulesForSyntacticPredicates(org.antlr.grammar.v2.ANTLRParser parser, java.util.LinkedHashMap nameToSynpredASTMap)">4</method>
			<method name="public String grammarTreeToString(org.antlr.tool.GrammarAST t, boolean showActions)">1</method>
			<method name="public java.util.Set getDelegatedRuleReferences()">1</method>
			<method name="public java.util.List getDelegators()">1</method>
			<method name="public String getTokenDisplayName(int ttype)">8</method>
			<method name="public org.antlr.analysis.NFAState getRuleStartState(String scopeName, String ruleName)">2</method>
			<method name="protected org.antlr.tool.Grammar$Decision createDecision(int decision)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public java.util.Set getTokenIDs()">1</method>
			<method name="public org.antlr.misc.IntSet getAllCharValues()">2</method>
			<method name="public org.antlr.analysis.DFA getLookaheadDFA(int decision)">2</method>
			<method name="public org.antlr.tool.AttributeScope createParameterScope(String ruleName, antlr.Token argAction)">1</method>
			<method name="public String getRecognizerName()">6</method>
			<method name="public org.antlr.tool.AttributeScope createRuleScope(String ruleName, antlr.Token scopeAction)">1</method>
			<method name="public String getGrammarTypeString()">1</method>
			<method name="public void defineRuleRefLabel(String ruleName, antlr.Token label, org.antlr.tool.GrammarAST ruleRef)">2</method>
			<method name="public Object getLocallyDefinedOption(String key)">3</method>
			<method name="protected void examineAllExecutableActions()">3</method>
			<method name="public java.util.Set getLabels(java.util.Set rewriteElements, int labelType)">2</method>
			<method name="public boolean isAtomTokenType(int ttype)">8</method>
			<method name="public org.antlr.analysis.NFAState getRuleStopState(String ruleName)">2</method>
			<method name="public void importGrammar(org.antlr.tool.GrammarAST grammarNameAST, String label)">13</method>
			<method name="public String getImplicitlyGeneratedLexerFileName()">1</method>
			<method name="public org.antlr.analysis.DFA getLookaheadDFAFromPositionInFile(int line, int col)">1</method>
			<method name="public java.util.List getIndirectDelegates()">1</method>
			<method name="public java.util.Set getTokenDisplayNames()">2</method>
			<method name="public void setGrammarContent(String grammarString)">1</method>
			<method name="public void defineRuleListLabel(String ruleName, antlr.Token label, org.antlr.tool.GrammarAST element)">3</method>
			<method name="public void externallyAbortNFAToDFAConversion()">1</method>
			<method name="public void defineRule(antlr.Token ruleToken, String modifier, java.util.Map options, org.antlr.tool.GrammarAST tree, org.antlr.tool.GrammarAST argActionAST, int numAlts)">6</method>
			<method name="public static String getANTLRCharLiteralForChar(int c)">8</method>
			<method name="public org.antlr.analysis.NFAState getRuleStartState(String ruleName)">1</method>
			<method name="public void setLookaheadDFA(int decision, org.antlr.analysis.DFA lookaheadDFA)">1</method>
			<method name="public java.util.List getDirectDelegates()">1</method>
			<method name="public void altReferencesRule(String enclosingRuleName, org.antlr.tool.GrammarAST refScopeAST, org.antlr.tool.GrammarAST refAST, int outerAltNum)">3</method>
			<method name="public int getMaxCharValue()">2</method>
			<method name="public org.antlr.tool.AttributeScope createReturnScope(String ruleName, antlr.Token retAction)">1</method>
			<method name="public String getDefaultActionScope(int grammarType)">2</method>
			<method name="public org.antlr.tool.AttributeScope defineGlobalScope(String name, antlr.Token scopeAction)">1</method>
			<method name="public void checkAllRulesForUselessLabels()">3</method>
			<method name="public void referenceRuleLabelPredefinedAttribute(String ruleName)">3</method>
			<method name="public boolean isEmptyRule(org.antlr.tool.GrammarAST block)">6</method>
			<method name="public org.antlr.tool.Rule getRule(String scopeName, String ruleName)">3</method>
			<method name="public org.antlr.tool.Grammar getDelegator()">1</method>
			<method name="public void _init_(String grammarString)">1</method>
			<method name="public void defineTokenListLabel(String ruleName, antlr.Token label, org.antlr.tool.GrammarAST element)">2</method>
			<method name="public static int getCharValueFromGrammarCharLiteral(String literal)">7</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void defineLexerRuleFoundInParser(antlr.Token ruleToken, org.antlr.tool.GrammarAST ruleAST)">11</method>
			<method name="public void altReferencesTokenID(String ruleName, org.antlr.tool.GrammarAST refAST, int outerAltNum)">3</method>
			<method name="public org.antlr.analysis.DFA createLL_1_LookaheadDFA(int decision)">18</method>
			<method name="public java.util.List getDecisionNFAStartStateList()">2</method>
			<method name="public int getUserMaxLookahead(int decision)">4</method>
			<method name="public void defineTokenRefLabel(String ruleName, antlr.Token label, org.antlr.tool.GrammarAST tokenRef)">8</method>
			<method name="public java.util.Set getAllImportedRules()">1</method>
			<method name="public boolean getAutoBacktrackMode(int decision)">4</method>
			<method name="public java.util.Set getStringLiterals()">1</method>
			<method name="public void setDecisionNFA(int decision, org.antlr.analysis.NFAState state)">1</method>
			<method name="public boolean generateMethodForRule(String ruleName)">6</method>
			<method name="public void createLookaheadDFAs(boolean wackTempStructures)">16</method>
			<method name="private void updateLineColumnToLookaheadDFAMap(org.antlr.analysis.DFA lookaheadDFA)">1</method>
			<method name="public java.util.Collection getTokenTypesWithoutID()">3</method>
			<method name="public void setFileName(String fileName)">1</method>
			<method name="public int getRuleIndex(String scopeName, String ruleName)">2</method>
			<method name="public int importTokenVocabulary(org.antlr.tool.Grammar importFromGr)">2</method>
			<method name="protected java.util.List makeEdgeSetsDisjoint(java.util.List edges)">8</method>
			<method name="public org.antlr.tool.Rule getRule(String ruleName)">1</method>
			<method name="public java.util.Set getDelegatedRules()">1</method>
			<method name="public org.antlr.tool.GrammarAST getGrammarTree()">1</method>
			<method name="protected void removeUselessLabels(java.util.Map ruleToElementLabelPairMap)">4</method>
			<method name="public int getNumberOfAltsForDecisionNFA(org.antlr.analysis.NFAState decisionState)">3</method>
			<method name="public void defineGrammarSymbols()">2</method>
			<method name="public String defineSyntacticPredicate(org.antlr.tool.GrammarAST blockAST, String currentRuleName)">2</method>
			<method name="public org.antlr.codegen.CodeGenerator getCodeGenerator()">1</method>
			<method name="public int importTokenVocabulary(org.antlr.tool.GrammarAST tokenVocabOptionAST, String vocabName)">12</method>
			<method name="public void _init_(org.antlr.Tool tool, String fileName, org.antlr.tool.CompositeGrammar composite)">2</method>
			<method name="public java.util.Map getActions()">1</method>
			<method name="public void defineLexerRuleForStringLiteral(String literal, int tokenType)">2</method>
			<method name="public String getLexerGrammar()">6</method>
			<method name="public String grammarTreeToString(org.antlr.tool.GrammarAST t)">1</method>
			<method name="public java.util.Set getLeftRecursiveRules()">3</method>
			<method name="protected void addDelegateGrammar(org.antlr.tool.Grammar delegateGrammar)">1</method>
			<method name="public boolean legalOption(String key)">6</method>
			<method name="public int getRuleIndex(String ruleName)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v2.AssignTokenTypesWalkerTokenTypes</name>
		<wmc>0</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>3</cbo>
		<rfc>0</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>2</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>101</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v2.TreeToNFAConverter</name>
		<wmc>32</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>32</cbo>
		<rfc>117</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>32</ce>
		<npm>28</npm>
		<lcom3>0.6653225806451613</lcom3>
		<loc>5449</loc>
		<dam>0.75</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.22580645161290322</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>169.03125</amc>
		<cc>
			<method name="public final org.antlr.misc.IntSet setRule(antlr.collections.AST _t)">4</method>
			<method name="public final void grammarSpec(antlr.collections.AST _t)">1</method>
			<method name="public final void testSetRule(antlr.collections.AST _t)">4</method>
			<method name="private static final long[] mk_tokenSet_0()">1</method>
			<method name="protected void addFollowTransition(String ruleName, org.antlr.analysis.NFAState following)">3</method>
			<method name="public final org.antlr.analysis.StateCluster atom(antlr.collections.AST _t, String scopeName)">1</method>
			<method name="public final void ast_suffix(antlr.collections.AST _t)">1</method>
			<method name="public final org.antlr.analysis.StateCluster tree(antlr.collections.AST _t)">1</method>
			<method name="public final org.antlr.analysis.StateCluster atom_or_notatom(antlr.collections.AST _t)">1</method>
			<method name="public final org.antlr.analysis.StateCluster ebnf(antlr.collections.AST _t)">1</method>
			<method name="public final org.antlr.analysis.StateCluster block(antlr.collections.AST _t)">1</method>
			<method name="public final void rules(antlr.collections.AST _t)">1</method>
			<method name="protected void finish()">2</method>
			<method name="public void reportError(antlr.RecognitionException ex)">3</method>
			<method name="public final void grammar(antlr.collections.AST _t)">1</method>
			<method name="public final void modifier(antlr.collections.AST _t)">1</method>
			<method name="public final void exceptionHandler(antlr.collections.AST _t)">1</method>
			<method name="public final void testBlockAsSet(antlr.collections.AST _t)">1</method>
			<method name="public final void exceptionGroup(antlr.collections.AST _t)">1</method>
			<method name="public final void rule(antlr.collections.AST _t)">1</method>
			<method name="public final void attrScope(antlr.collections.AST _t)">1</method>
			<method name="public final void finallyClause(antlr.collections.AST _t)">1</method>
			<method name="public final void setElement(antlr.collections.AST _t, org.antlr.misc.IntSet elements)">1</method>
			<method name="public final void testSetElement(antlr.collections.AST _t)">1</method>
			<method name="public final org.antlr.analysis.StateCluster alternative(antlr.collections.AST _t)">1</method>
			<method name="public final org.antlr.analysis.StateCluster set(antlr.collections.AST _t)">1</method>
			<method name="public final org.antlr.analysis.StateCluster element(antlr.collections.AST _t)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public final void rewrite(antlr.collections.AST _t)">1</method>
			<method name="public void _init_(org.antlr.tool.Grammar g, org.antlr.analysis.NFA nfa, org.antlr.tool.NFAFactory factory)">1</method>
			<method name="public final void ruleScopeSpec(antlr.collections.AST _t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$rewrite_template_ref_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$rewrite_template_args_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.CompositeGrammarTree</name>
		<wmc>11</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>20</rfc>
		<lcom>0</lcom>
		<ca>3</ca>
		<ce>7</ce>
		<npm>9</npm>
		<lcom3>0.3666666666666667</lcom3>
		<loc>283</loc>
		<dam>0.3333333333333333</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.34545454545454546</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>24.454545454545453</amc>
		<cc>
			<method name="public org.antlr.tool.CompositeGrammarTree findNode(org.antlr.tool.Grammar g)">6</method>
			<method name="public java.util.List getPostOrderedGrammarList()">1</method>
			<method name="public org.antlr.tool.Rule getRule(String ruleName)">4</method>
			<method name="public void _init_(org.antlr.tool.Grammar g)">1</method>
			<method name="public void trimLexerImportsIntoCombined()">6</method>
			<method name="public java.util.List getPreOrderedGrammarList()">1</method>
			<method name="protected void _getPreOrderedGrammarList(java.util.List grammars)">3</method>
			<method name="public void addChild(org.antlr.tool.CompositeGrammarTree t)">3</method>
			<method name="public org.antlr.tool.CompositeGrammarTree findNode(String grammarName)">6</method>
			<method name="protected void _getPostOrderedGrammarList(java.util.List grammars)">3</method>
			<method name="public Object getOption(String key)">3</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Grammar$8</name>
		<wmc>1</wmc>
		<dit>3</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>1.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.0</amc>
		<cc>
			<method name="void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.Grammar$9</name>
		<wmc>1</wmc>
		<dit>3</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>1.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.0</amc>
		<cc>
			<method name="void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$rewrite_alternative_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.ToolMessage</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>12</rfc>
		<lcom>9</lcom>
		<ca>3</ca>
		<ce>7</ce>
		<npm>6</npm>
		<lcom3>2.0</lcom3>
		<loc>77</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.833333333333334</amc>
		<cc>
			<method name="public void _init_(int msgID, Object arg)">1</method>
			<method name="public void _init_(int msgID, Object arg, Throwable e)">1</method>
			<method name="public String toString()">4</method>
			<method name="public void _init_(int msgID, Throwable e)">1</method>
			<method name="public void _init_(int msgID, Object arg, Object arg2)">1</method>
			<method name="public void _init_(int msgID)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser</name>
		<wmc>57</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>79</cbo>
		<rfc>217</rfc>
		<lcom>0</lcom>
		<ca>5</ca>
		<ce>78</ce>
		<npm>54</npm>
		<lcom3>0.971466870930678</lcom3>
		<loc>22787</loc>
		<dam>0.0160857908847185</dam>
		<moa>4</moa>
		<mfa>0.0</mfa>
		<cam>0.21428571428571427</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>392.2280701754386</amc>
		<cc>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$notTerminal_return notTerminal()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$ebnf_return ebnf()">1</method>
			<method name="public final void synpred1_ANTLRv3_fragment()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$rewrite_return rewrite()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$action_return action()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$actionScopeName_return actionScopeName()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$ruleScopeSpec_return ruleScopeSpec()">1</method>
			<method name="public final boolean synpred2_ANTLRv3()">2</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$finallyClause_return finallyClause()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$elementNoOptionSpec_return elementNoOptionSpec()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$rewrite_template_arg_return rewrite_template_arg()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$rewrite_indirect_template_head_return rewrite_indirect_template_head()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$grammarDef_return grammarDef()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$ebnfSuffix_return ebnfSuffix()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$option_return option()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$throwsSpec_return throwsSpec()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$tokenSpec_return tokenSpec()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$treeSpec_return treeSpec()">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream input)">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$element_return element()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$rewrite_tree_alternative_return rewrite_tree_alternative()">1</method>
			<method name="static org.antlr.runtime.RecognizerSharedState access$000(org.antlr.grammar.v3.ANTLRv3Parser x0)">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$atom_return atom()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$rewrite_template_args_return rewrite_template_args()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$rewrite_tree_ebnf_return rewrite_tree_ebnf()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$altpair_return altpair()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$id_return id()">1</method>
			<method name="static void _clinit_()">5</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream input, org.antlr.runtime.RecognizerSharedState state)">1</method>
			<method name="public final boolean synpred1_ANTLRv3()">2</method>
			<method name="static org.antlr.runtime.RecognizerSharedState access$100(org.antlr.grammar.v3.ANTLRv3Parser x0)">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$rewrite_template_return rewrite_template()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$attrScope_return attrScope()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$rewrite_alternative_return rewrite_alternative()">1</method>
			<method name="public final void synpred2_ANTLRv3_fragment()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$exceptionHandler_return exceptionHandler()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$range_return range()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$optionValue_return optionValue()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$alternative_return alternative()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$exceptionGroup_return exceptionGroup()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$terminal_return terminal()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$altList_return altList()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$rewrite_tree_element_return rewrite_tree_element()">1</method>
			<method name="public String getGrammarFileName()">1</method>
			<method name="public org.antlr.runtime.tree.TreeAdaptor getTreeAdaptor()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$ruleAction_return ruleAction()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$tokensSpec_return tokensSpec()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$rewrite_template_ref_return rewrite_template_ref()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$rewrite_tree_return rewrite_tree()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$optionsSpec_return optionsSpec()">1</method>
			<method name="public void setTreeAdaptor(org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$rule_return rule()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$block_return block()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$rewrite_tree_block_return rewrite_tree_block()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$rewrite_tree_atom_return rewrite_tree_atom()">1</method>
			<method name="public final org.antlr.grammar.v3.ANTLRv3Parser$notSet_return notSet()">1</method>
			<method name="public String[] getTokenNames()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.GrammarUnreachableAltsMessage</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>17</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>13</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>107</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>51.5</amc>
		<cc>
			<method name="public String toString()">3</method>
			<method name="public void _init_(org.antlr.analysis.DecisionProbe probe, java.util.List alts)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.misc.Interval</name>
		<wmc>16</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>23</rfc>
		<lcom>0</lcom>
		<ca>3</ca>
		<ce>5</ce>
		<npm>15</npm>
		<lcom3>0.75</lcom3>
		<loc>269</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>15.3125</amc>
		<cc>
			<method name="public void _init_(int a, int b)">1</method>
			<method name="public boolean startsAfter(org.antlr.misc.Interval other)">2</method>
			<method name="public boolean startsAfterNonDisjoint(org.antlr.misc.Interval other)">3</method>
			<method name="public boolean equals(Object o)">4</method>
			<method name="public boolean startsAfterDisjoint(org.antlr.misc.Interval other)">2</method>
			<method name="public org.antlr.misc.Interval differenceNotProperlyContained(org.antlr.misc.Interval other)">3</method>
			<method name="public boolean disjoint(org.antlr.misc.Interval other)">3</method>
			<method name="public boolean startsBeforeNonDisjoint(org.antlr.misc.Interval other)">3</method>
			<method name="public String toString()">1</method>
			<method name="public org.antlr.misc.Interval intersection(org.antlr.misc.Interval other)">1</method>
			<method name="public boolean startsBeforeDisjoint(org.antlr.misc.Interval other)">3</method>
			<method name="public boolean properlyContains(org.antlr.misc.Interval other)">3</method>
			<method name="public org.antlr.misc.Interval union(org.antlr.misc.Interval other)">1</method>
			<method name="public static org.antlr.misc.Interval create(int a, int b)">5</method>
			<method name="static void _clinit_()">1</method>
			<method name="public boolean adjacent(org.antlr.misc.Interval other)">3</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.RuleLabelScope$1</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>29</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>28.0</amc>
		<cc>
			<method name="void _init_(String x0, antlr.Token x1)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.codegen.ObjCTarget</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>23</rfc>
		<lcom>15</lcom>
		<ca>0</ca>
		<ce>13</ce>
		<npm>5</npm>
		<lcom3>2.0</lcom3>
		<loc>177</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.47619047619047616</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>28.5</amc>
		<cc>
			<method name="public String getTokenTypeAsTargetLabel(org.antlr.codegen.CodeGenerator generator, int ttype)">2</method>
			<method name="protected void genRecognizerHeaderFile(org.antlr.Tool tool, org.antlr.codegen.CodeGenerator generator, org.antlr.tool.Grammar grammar, org.antlr.stringtemplate.StringTemplate headerFileST, String extName)">1</method>
			<method name="public String getTargetStringLiteralFromANTLRStringLiteral(org.antlr.codegen.CodeGenerator generator, String literal)">1</method>
			<method name="public String getTokenTextAndTypeAsTargetLabel(org.antlr.codegen.CodeGenerator generator, String text, int tokenType)">5</method>
			<method name="public void _init_()">1</method>
			<method name="public String getTargetCharLiteralFromANTLRCharLiteral(org.antlr.codegen.CodeGenerator generator, String literal)">4</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.RuleLabelScope$2</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>25</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>24.0</amc>
		<cc>
			<method name="void _init_(String x0, antlr.Token x1)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.codegen.PythonTarget</name>
		<wmc>5</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>30</rfc>
		<lcom>10</lcom>
		<ca>0</ca>
		<ce>13</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>356</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>70.2</amc>
		<cc>
			<method name="public String getTokenTypeAsTargetLabel(org.antlr.codegen.CodeGenerator generator, int ttype)">4</method>
			<method name="public java.util.List postProcessAction(java.util.List chunks, antlr.Token actionToken)">27</method>
			<method name="public void _init_()">1</method>
			<method name="public String getTargetCharLiteralFromANTLRCharLiteral(org.antlr.codegen.CodeGenerator generator, String literal)">1</method>
			<method name="private java.util.List splitLines(String text)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Parser$rewrite_template_return</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.tool.RuleLabelScope$3</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>45</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>44.0</amc>
		<cc>
			<method name="void _init_(String x0, antlr.Token x1)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.grammar.v3.ANTLRv3Tree$DFA44</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>38</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.5</amc>
		<cc>
			<method name="public String getDescription()">1</method>
			<method name="public void _init_(org.antlr.grammar.v3.ANTLRv3Tree, org.antlr.runtime.BaseRecognizer recognizer)">1</method>
		</cc>
	</class>


	<class>
		<name>org.antlr.runtime.tree.RewriteEmptyStreamException</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>5</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public void _init_(String elementDescription)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$Visitor</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>5</cbo>
		<rfc>4</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>10</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5833333333333334</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>2.3333333333333335</amc>
		<cc>
			<method name="public abstract void visit(Object)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void visit(Object t, Object parent, int childIndex, java.util.Map labels)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.MismatchedRangeException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>10</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>40</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.666666666666666</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_(int a, int b, org.antlr.runtime.IntStream input)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenRewriteStream$InsertBeforeOp</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>7</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>33</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.6</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>15.0</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.TokenRewriteStream, int index, Object text)">1</method>
			<method name="public int execute(StringBuffer buf)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$WildcardTreePattern</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>5</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.Token payload)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.UnBufferedTreeNodeStream</name>
		<wmc>33</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>18</cbo>
		<rfc>67</rfc>
		<lcom>312</lcom>
		<ca>1</ca>
		<ce>18</ce>
		<npm>25</npm>
		<lcom3>0.7640625</lcom3>
		<loc>918</loc>
		<dam>0.9</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.22943722943722944</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>26.21212121212121</amc>
		<cc>
			<method name="public Object get(int i)">1</method>
			<method name="public int LA(int i)">2</method>
			<method name="public int mark()">4</method>
			<method name="public void reset()">1</method>
			<method name="protected void addLookahead(Object node)">2</method>
			<method name="public void setTokenStream(org.antlr.runtime.TokenStream tokens)">1</method>
			<method name="public int size()">1</method>
			<method name="protected Object handleRootNode()">3</method>
			<method name="public String toString()">1</method>
			<method name="protected Object visitChild(int child)">3</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, Object tree)">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public Object getTreeSource()">1</method>
			<method name="public void rewind(int marker)">3</method>
			<method name="public org.antlr.runtime.tree.TreeAdaptor getTreeAdaptor()">1</method>
			<method name="public void seek(int index)">3</method>
			<method name="public void rewind()">1</method>
			<method name="public org.antlr.runtime.TokenStream getTokenStream()">1</method>
			<method name="public void release(int marker)">1</method>
			<method name="public int index()">1</method>
			<method name="protected void addNavigationNode(int ttype)">4</method>
			<method name="public Object next()">5</method>
			<method name="protected void walkBackToMostRecentNodeWithUnvisitedChildren()">7</method>
			<method name="public String toString(Object start, Object stop)">5</method>
			<method name="public boolean hasUniqueNavigationNodes()">1</method>
			<method name="public Object LT(int k)">4</method>
			<method name="protected int getLookaheadSize()">2</method>
			<method name="public void consume()">1</method>
			<method name="protected void fill(int k)">2</method>
			<method name="public void _init_(Object tree)">1</method>
			<method name="protected void toStringWork(Object p, Object stop, StringBuffer buf)">9</method>
			<method name="public void replaceChildren(Object parent, int startChildIndex, int stopChildIndex, Object t)">1</method>
			<method name="public void setUniqueNavigationNodes(boolean uniqueNavigationNodes)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.CommonTreeAdaptor</name>
		<wmc>18</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>13</cbo>
		<rfc>38</rfc>
		<lcom>153</lcom>
		<ca>5</ca>
		<ce>8</ce>
		<npm>18</npm>
		<lcom3>2.0</lcom3>
		<loc>169</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4444444444444444</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.38888888888889</amc>
		<cc>
			<method name="public org.antlr.runtime.Token createToken(int tokenType, String text)">1</method>
			<method name="public Object getParent(Object t)">2</method>
			<method name="public void setParent(Object t, Object parent)">2</method>
			<method name="public void setTokenBoundaries(Object t, org.antlr.runtime.Token startToken, org.antlr.runtime.Token stopToken)">4</method>
			<method name="public org.antlr.runtime.Token createToken(org.antlr.runtime.Token fromToken)">1</method>
			<method name="public int getChildCount(Object t)">2</method>
			<method name="public void setChildIndex(Object t, int index)">2</method>
			<method name="public int getChildIndex(Object t)">2</method>
			<method name="public org.antlr.runtime.Token getToken(Object t)">2</method>
			<method name="public int getTokenStartIndex(Object t)">2</method>
			<method name="public Object create(org.antlr.runtime.Token payload)">1</method>
			<method name="public int getType(Object t)">2</method>
			<method name="public Object getChild(Object t, int i)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public Object dupNode(Object t)">2</method>
			<method name="public String getText(Object t)">2</method>
			<method name="public void replaceChildren(Object parent, int startChildIndex, int stopChildIndex, Object t)">2</method>
			<method name="public int getTokenStopIndex(Object t)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreePatternLexer</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>9</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>0.9285714285714286</lcom3>
		<loc>255</loc>
		<dam>0.2857142857142857</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>79.33333333333333</amc>
		<cc>
			<method name="protected void consume()">2</method>
			<method name="public void _init_(String pattern)">1</method>
			<method name="public int nextToken()">27</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.UnwantedTokenException</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>12</rfc>
		<lcom>4</lcom>
		<ca>2</ca>
		<ce>7</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>61</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.25</amc>
		<cc>
			<method name="public void _init_(int expecting, org.antlr.runtime.IntStream input)">1</method>
			<method name="public String toString()">3</method>
			<method name="public org.antlr.runtime.Token getUnexpectedToken()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.ANTLRInputStream</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>10</rfc>
		<lcom>15</lcom>
		<ca>0</ca>
		<ce>8</ce>
		<npm>6</npm>
		<lcom3>2.0</lcom3>
		<loc>55</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.7083333333333334</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.166666666666666</amc>
		<cc>
			<method name="public void _init_(java.io.InputStream input, int size)">1</method>
			<method name="public void _init_(java.io.InputStream input, String encoding)">1</method>
			<method name="public void _init_(java.io.InputStream input, int size, String encoding)">1</method>
			<method name="public void _init_(java.io.InputStream input)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(java.io.InputStream input, int size, int readBufferSize, String encoding)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeAdaptor</name>
		<wmc>31</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>23</cbo>
		<rfc>31</rfc>
		<lcom>465</lcom>
		<ca>18</ca>
		<ce>6</ce>
		<npm>31</npm>
		<lcom3>2.0</lcom3>
		<loc>31</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.35023041474654376</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void setTokenBoundaries(Object, org.antlr.runtime.Token, org.antlr.runtime.Token)">1</method>
			<method name="public abstract Object becomeRoot(org.antlr.runtime.Token, Object)">1</method>
			<method name="public abstract int getUniqueID(Object)">1</method>
			<method name="public abstract void setParent(Object, Object)">1</method>
			<method name="public abstract Object nil()">1</method>
			<method name="public abstract Object errorNode(org.antlr.runtime.TokenStream, org.antlr.runtime.Token, org.antlr.runtime.Token, org.antlr.runtime.RecognitionException)">1</method>
			<method name="public abstract Object getParent(Object)">1</method>
			<method name="public abstract int getChildCount(Object)">1</method>
			<method name="public abstract void replaceChildren(Object, int, int, Object)">1</method>
			<method name="public abstract void setText(Object, String)">1</method>
			<method name="public abstract Object create(org.antlr.runtime.Token)">1</method>
			<method name="public abstract Object dupTree(Object)">1</method>
			<method name="public abstract Object dupNode(Object)">1</method>
			<method name="public abstract Object create(int, String)">1</method>
			<method name="public abstract Object getChild(Object, int)">1</method>
			<method name="public abstract int getTokenStartIndex(Object)">1</method>
			<method name="public abstract String getText(Object)">1</method>
			<method name="public abstract int getChildIndex(Object)">1</method>
			<method name="public abstract int getTokenStopIndex(Object)">1</method>
			<method name="public abstract Object create(int, org.antlr.runtime.Token)">1</method>
			<method name="public abstract int getType(Object)">1</method>
			<method name="public abstract Object deleteChild(Object, int)">1</method>
			<method name="public abstract void setType(Object, int)">1</method>
			<method name="public abstract void addChild(Object, Object)">1</method>
			<method name="public abstract Object create(int, org.antlr.runtime.Token, String)">1</method>
			<method name="public abstract Object rulePostProcessing(Object)">1</method>
			<method name="public abstract void setChild(Object, int, Object)">1</method>
			<method name="public abstract Object becomeRoot(Object, Object)">1</method>
			<method name="public abstract org.antlr.runtime.Token getToken(Object)">1</method>
			<method name="public abstract void setChildIndex(Object, int)">1</method>
			<method name="public abstract boolean isNil(Object)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.RewriteEarlyExitException</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>0</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>10</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(String elementDescription)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugTreeAdaptor</name>
		<wmc>37</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>77</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>8</ce>
		<npm>36</npm>
		<lcom3>0.3194444444444444</lcom3>
		<loc>376</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.26426426426426425</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.108108108108109</amc>
		<cc>
			<method name="public void setDebugListener(org.antlr.runtime.debug.DebugEventListener dbg)">1</method>
			<method name="public void addChild(Object t, org.antlr.runtime.Token child)">1</method>
			<method name="public Object errorNode(org.antlr.runtime.TokenStream input, org.antlr.runtime.Token start, org.antlr.runtime.Token stop, org.antlr.runtime.RecognitionException e)">2</method>
			<method name="public Object create(int tokenType, String text)">1</method>
			<method name="public void setTokenBoundaries(Object t, org.antlr.runtime.Token startToken, org.antlr.runtime.Token stopToken)">4</method>
			<method name="public void setText(Object t, String text)">1</method>
			<method name="public void setType(Object t, int type)">1</method>
			<method name="public int getChildCount(Object t)">1</method>
			<method name="public int getChildIndex(Object t)">1</method>
			<method name="public org.antlr.runtime.Token getToken(Object t)">1</method>
			<method name="public int getType(Object t)">1</method>
			<method name="public void _init_(org.antlr.runtime.debug.DebugEventListener dbg, org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="public Object getChild(Object t, int i)">1</method>
			<method name="protected void simulateTreeConstruction(Object t)">2</method>
			<method name="public Object nil()">1</method>
			<method name="public void setChild(Object t, int i, Object child)">1</method>
			<method name="public org.antlr.runtime.tree.TreeAdaptor getTreeAdaptor()">1</method>
			<method name="public Object create(int tokenType, org.antlr.runtime.Token fromToken)">1</method>
			<method name="public Object create(int tokenType, org.antlr.runtime.Token fromToken, String text)">1</method>
			<method name="public Object rulePostProcessing(Object root)">1</method>
			<method name="public Object getParent(Object t)">1</method>
			<method name="public Object deleteChild(Object t, int i)">1</method>
			<method name="public void setParent(Object t, Object parent)">1</method>
			<method name="public Object becomeRoot(Object newRoot, Object oldRoot)">1</method>
			<method name="public void addChild(Object t, Object child)">3</method>
			<method name="public Object dupNode(Object treeNode)">1</method>
			<method name="public void setChildIndex(Object t, int index)">1</method>
			<method name="public boolean isNil(Object tree)">1</method>
			<method name="public int getTokenStartIndex(Object t)">1</method>
			<method name="public org.antlr.runtime.debug.DebugEventListener getDebugListener()">1</method>
			<method name="public Object create(org.antlr.runtime.Token payload)">2</method>
			<method name="public int getUniqueID(Object node)">1</method>
			<method name="public Object becomeRoot(org.antlr.runtime.Token newRoot, Object oldRoot)">1</method>
			<method name="public Object dupTree(Object tree)">1</method>
			<method name="public String getText(Object t)">1</method>
			<method name="public void replaceChildren(Object parent, int startChildIndex, int stopChildIndex, Object t)">1</method>
			<method name="public int getTokenStopIndex(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeParser</name>
		<wmc>18</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>20</cbo>
		<rfc>51</rfc>
		<lcom>95</lcom>
		<ca>1</ca>
		<ce>19</ce>
		<npm>13</npm>
		<lcom3>0.907563025210084</lcom3>
		<loc>391</loc>
		<dam>0.14285714285714285</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.23529411764705882</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>20.333333333333332</amc>
		<cc>
			<method name="protected void mismatch(org.antlr.runtime.IntStream input, int ttype, org.antlr.runtime.BitSet follow)">1</method>
			<method name="protected Object getMissingSymbol(org.antlr.runtime.IntStream input, org.antlr.runtime.RecognitionException e, int expectedTokenType, org.antlr.runtime.BitSet follow)">1</method>
			<method name="public void traceOut(String ruleName, int ruleIndex)">1</method>
			<method name="public org.antlr.runtime.tree.TreeNodeStream getTreeNodeStream()">1</method>
			<method name="public void reset()">2</method>
			<method name="public String getErrorHeader(org.antlr.runtime.RecognitionException e)">2</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeNodeStream input, org.antlr.runtime.RecognizerSharedState state)">1</method>
			<method name="public void matchAny(org.antlr.runtime.IntStream ignore)">7</method>
			<method name="public boolean inContext(String context)">1</method>
			<method name="protected static Object getAncestor(org.antlr.runtime.tree.TreeAdaptor adaptor, String[] tokenNames, Object t, String goal)">3</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeNodeStream input)">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="protected Object getCurrentInputSymbol(org.antlr.runtime.IntStream input)">1</method>
			<method name="public static boolean inContext(org.antlr.runtime.tree.TreeAdaptor adaptor, String[] tokenNames, Object t, String context)">11</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void traceIn(String ruleName, int ruleIndex)">1</method>
			<method name="public void setTreeNodeStream(org.antlr.runtime.tree.TreeNodeStream input)">1</method>
			<method name="public String getErrorMessage(org.antlr.runtime.RecognitionException e, String[] tokenNames)">3</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.CharStreamState</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>3</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>2</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>7</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenRewriteStream</name>
		<wmc>46</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>24</cbo>
		<rfc>85</rfc>
		<lcom>949</lcom>
		<ca>4</ca>
		<ce>23</ce>
		<npm>36</npm>
		<lcom3>0.9333333333333333</lcom3>
		<loc>1024</loc>
		<dam>0.2857142857142857</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3070652173913043</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>21.108695652173914</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.TokenSource tokenSource)">1</method>
			<method name="public void deleteProgram()">1</method>
			<method name="public int getLastRewriteTokenIndex()">1</method>
			<method name="public void delete(org.antlr.runtime.Token indexT)">1</method>
			<method name="public void insertAfter(String programName, org.antlr.runtime.Token t, Object text)">1</method>
			<method name="public void replace(String programName, int from, int to, Object text)">5</method>
			<method name="public void delete(String programName, int from, int to)">1</method>
			<method name="public void delete(int index)">1</method>
			<method name="static Class class$(String x0)">1</method>
			<method name="public String toString()">1</method>
			<method name="public void replace(int from, int to, Object text)">1</method>
			<method name="public void delete(org.antlr.runtime.Token from, org.antlr.runtime.Token to)">1</method>
			<method name="public void insertAfter(int index, Object text)">1</method>
			<method name="public void insertBefore(String programName, org.antlr.runtime.Token t, Object text)">1</method>
			<method name="public void delete(int from, int to)">1</method>
			<method name="protected java.util.List getKindOfOps(java.util.List rewrites, Class kind, int before)">5</method>
			<method name="public void replace(String programName, org.antlr.runtime.Token from, org.antlr.runtime.Token to, Object text)">1</method>
			<method name="public String toDebugString()">1</method>
			<method name="protected void init()">1</method>
			<method name="public void insertAfter(String programName, int index, Object text)">1</method>
			<method name="public void insertBefore(int index, Object text)">1</method>
			<method name="public void replace(org.antlr.runtime.Token from, org.antlr.runtime.Token to, Object text)">1</method>
			<method name="public void insertBefore(String programName, int index, Object text)">1</method>
			<method name="public void deleteProgram(String programName)">1</method>
			<method name="public void replace(int index, Object text)">1</method>
			<method name="public String toString(String programName, int start, int end)">10</method>
			<method name="protected String catOpText(Object a, Object b)">3</method>
			<method name="public void replace(org.antlr.runtime.Token indexT, Object text)">1</method>
			<method name="public void insertBefore(org.antlr.runtime.Token t, Object text)">1</method>
			<method name="protected java.util.List getKindOfOps(java.util.List rewrites, Class kind)">1</method>
			<method name="protected java.util.Map reduceToSingleOperationPerIndex(java.util.List rewrites)">32</method>
			<method name="public String toOriginalString()">1</method>
			<method name="public void rollback(String programName, int instructionIndex)">2</method>
			<method name="public void insertAfter(org.antlr.runtime.Token t, Object text)">1</method>
			<method name="public void delete(String programName, org.antlr.runtime.Token from, org.antlr.runtime.Token to)">1</method>
			<method name="protected void setLastRewriteTokenIndex(String programName, int i)">1</method>
			<method name="public String toString(int start, int end)">1</method>
			<method name="private java.util.List initializeProgram(String name)">1</method>
			<method name="public String toOriginalString(int start, int end)">4</method>
			<method name="public void rollback(int instructionIndex)">1</method>
			<method name="public String toDebugString(int start, int end)">4</method>
			<method name="protected int getLastRewriteTokenIndex(String programName)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenSource tokenSource, int channel)">1</method>
			<method name="protected java.util.List getProgram(String name)">2</method>
			<method name="public String toString(String programName)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$ContextVisitor</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>4</ca>
		<ce>3</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void visit(Object, Object, int, java.util.Map)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.RewriteRuleNodeStream</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>12</rfc>
		<lcom>15</lcom>
		<ca>0</ca>
		<ce>7</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>36</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.0</amc>
		<cc>
			<method name="protected Object dup(Object el)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription, Object oneElement)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription, java.util.List elements)">1</method>
			<method name="public Object nextNode()">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription)">1</method>
			<method name="protected Object toTree(Object el)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.ClassicToken</name>
		<wmc>19</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>30</rfc>
		<lcom>75</lcom>
		<ca>0</ca>
		<ce>6</ce>
		<npm>19</npm>
		<lcom3>0.7685185185185185</lcom3>
		<loc>205</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3368421052631579</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.473684210526315</amc>
		<cc>
			<method name="public int getTokenIndex()">1</method>
			<method name="public void _init_(org.antlr.runtime.Token oldToken)">1</method>
			<method name="public void setLine(int line)">1</method>
			<method name="public int getChannel()">1</method>
			<method name="public void setChannel(int channel)">1</method>
			<method name="public void setInputStream(org.antlr.runtime.CharStream input)">1</method>
			<method name="public void setType(int type)">1</method>
			<method name="public void _init_(int type)">1</method>
			<method name="public org.antlr.runtime.CharStream getInputStream()">1</method>
			<method name="public String toString()">3</method>
			<method name="public String getText()">1</method>
			<method name="public void setTokenIndex(int index)">1</method>
			<method name="public int getLine()">1</method>
			<method name="public int getCharPositionInLine()">1</method>
			<method name="public int getType()">1</method>
			<method name="public void setText(String text)">1</method>
			<method name="public void _init_(int type, String text, int channel)">1</method>
			<method name="public void setCharPositionInLine(int charPositionInLine)">1</method>
			<method name="public void _init_(int type, String text)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.CommonTree</name>
		<wmc>20</wmc>
		<dit>0</dit>
		<noc>2</noc>
		<cbo>13</cbo>
		<rfc>33</rfc>
		<lcom>12</lcom>
		<ca>8</ca>
		<ce>7</ce>
		<npm>20</npm>
		<lcom3>0.6842105263157895</lcom3>
		<loc>292</loc>
		<dam>0.4</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.26</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.35</amc>
		<cc>
			<method name="public org.antlr.runtime.Token getToken()">1</method>
			<method name="public void _init_(org.antlr.runtime.Token t)">1</method>
			<method name="public void setTokenStopIndex(int index)">1</method>
			<method name="public void setTokenStartIndex(int index)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.CommonTree node)">1</method>
			<method name="public int getTokenStartIndex()">3</method>
			<method name="public org.antlr.runtime.tree.Tree getParent()">1</method>
			<method name="public String toString()">4</method>
			<method name="public org.antlr.runtime.tree.Tree dupNode()">1</method>
			<method name="public String getText()">2</method>
			<method name="public boolean isNil()">2</method>
			<method name="public int getLine()">4</method>
			<method name="public int getCharPositionInLine()">4</method>
			<method name="public int getType()">2</method>
			<method name="public int getChildIndex()">1</method>
			<method name="public void setUnknownTokenBoundaries()">8</method>
			<method name="public void _init_()">1</method>
			<method name="public void setParent(org.antlr.runtime.tree.Tree t)">1</method>
			<method name="public void setChildIndex(int index)">1</method>
			<method name="public int getTokenStopIndex()">3</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.MismatchedNotSetException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>11</rfc>
		<lcom>3</lcom>
		<ca>2</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>28</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.333333333333334</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(org.antlr.runtime.BitSet expecting, org.antlr.runtime.IntStream input)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.BaseTree</name>
		<wmc>28</wmc>
		<dit>1</dit>
		<noc>3</noc>
		<cbo>13</cbo>
		<rfc>53</rfc>
		<lcom>306</lcom>
		<ca>3</ca>
		<ce>11</ce>
		<npm>27</npm>
		<lcom3>0.5925925925925926</lcom3>
		<loc>629</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.32142857142857145</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>21.428571428571427</amc>
		<cc>
			<method name="public Object deleteChild(int i)">2</method>
			<method name="public void addChildren(java.util.List kids)">2</method>
			<method name="public void sanityCheckParentAndChildIndexes()">1</method>
			<method name="public String toStringTree()">8</method>
			<method name="public int getLine()">1</method>
			<method name="public void sanityCheckParentAndChildIndexes(org.antlr.runtime.tree.Tree parent, int i)">4</method>
			<method name="public int getChildIndex()">1</method>
			<method name="public void setChild(int i, org.antlr.runtime.tree.Tree t)">4</method>
			<method name="public org.antlr.runtime.tree.Tree getChild(int i)">3</method>
			<method name="public int getChildCount()">2</method>
			<method name="public void setChildIndex(int index)">1</method>
			<method name="public void replaceChildren(int startChildIndex, int stopChildIndex, Object t)">9</method>
			<method name="public boolean hasAncestor(int ttype)">2</method>
			<method name="public java.util.List getChildren()">1</method>
			<method name="protected java.util.List createChildrenList()">1</method>
			<method name="public org.antlr.runtime.tree.Tree getFirstChildWithType(int type)">4</method>
			<method name="public org.antlr.runtime.tree.Tree getParent()">1</method>
			<method name="public void addChild(org.antlr.runtime.tree.Tree t)">8</method>
			<method name="public java.util.List getAncestors()">3</method>
			<method name="public void _init_(org.antlr.runtime.tree.Tree node)">1</method>
			<method name="public boolean isNil()">1</method>
			<method name="public int getCharPositionInLine()">1</method>
			<method name="public abstract String toString()">1</method>
			<method name="public void freshenParentAndChildIndexes()">1</method>
			<method name="public org.antlr.runtime.tree.Tree getAncestor(int ttype)">3</method>
			<method name="public void _init_()">1</method>
			<method name="public void setParent(org.antlr.runtime.tree.Tree t)">1</method>
			<method name="public void freshenParentAndChildIndexes(int offset)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenRewriteStream$ReplaceOp</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>7</cbo>
		<rfc>9</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>6</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>52</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>15.666666666666666</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public int execute(StringBuffer buf)">2</method>
			<method name="public void _init_(org.antlr.runtime.TokenRewriteStream, int from, int to, Object text)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$TreePattern</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>12</cbo>
		<rfc>7</rfc>
		<lcom>1</lcom>
		<ca>6</ca>
		<ce>6</ce>
		<npm>2</npm>
		<lcom3>1.5</lcom3>
		<loc>29</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.5</amc>
		<cc>
			<method name="public String toString()">2</method>
			<method name="public void _init_(org.antlr.runtime.Token payload)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.ParseTree</name>
		<wmc>12</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>22</rfc>
		<lcom>60</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>12</npm>
		<lcom3>0.7272727272727273</lcom3>
		<loc>137</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.25</amc>
		<cc>
			<method name="public String toString()">3</method>
			<method name="public org.antlr.runtime.tree.Tree dupNode()">1</method>
			<method name="public String getText()">1</method>
			<method name="public void _init_(Object label)">1</method>
			<method name="public int getType()">1</method>
			<method name="public void setTokenStopIndex(int index)">1</method>
			<method name="public String toStringWithHiddenTokens()">4</method>
			<method name="public void setTokenStartIndex(int index)">1</method>
			<method name="public void _toStringLeaves(StringBuffer buf)">4</method>
			<method name="public int getTokenStartIndex()">1</method>
			<method name="public String toInputString()">1</method>
			<method name="public int getTokenStopIndex()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.Profiler</name>
		<wmc>25</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>20</cbo>
		<rfc>64</rfc>
		<lcom>160</lcom>
		<ca>0</ca>
		<ce>20</ce>
		<npm>22</npm>
		<lcom3>0.8256172839506174</lcom3>
		<loc>1404</loc>
		<dam>0.2222222222222222</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.204</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>54.08</amc>
		<cc>
			<method name="public void LT(int i, org.antlr.runtime.Token t)">3</method>
			<method name="public void recognitionException(org.antlr.runtime.RecognitionException e)">1</method>
			<method name="public void exitRule(String grammarFileName, String ruleName)">1</method>
			<method name="public void semanticPredicate(boolean result, String predicate)">2</method>
			<method name="public void enterRule(String grammarFileName, String ruleName)">2</method>
			<method name="public void endBacktrack(int level, boolean successful)">1</method>
			<method name="public void consumeToken(org.antlr.runtime.Token token)">1</method>
			<method name="protected int[] trim(int[] X, int n)">2</method>
			<method name="public String toString()">1</method>
			<method name="public void exitDecision(int decisionNumber)">5</method>
			<method name="public void consumeHiddenToken(org.antlr.runtime.Token token)">1</method>
			<method name="public void memoize(org.antlr.runtime.IntStream input, int ruleIndex, int ruleStartIndex, String ruleName)">1</method>
			<method name="public void beginBacktrack(int level)">1</method>
			<method name="public String toNotifyString()">5</method>
			<method name="public void terminate()">1</method>
			<method name="public boolean inDecision()">2</method>
			<method name="public void setParser(org.antlr.runtime.debug.DebugParser parser)">1</method>
			<method name="public void enterDecision(int decisionNumber)">1</method>
			<method name="public static String toString(String notifyDataLine)">2</method>
			<method name="public void _init_(org.antlr.runtime.debug.DebugParser parser)">1</method>
			<method name="public int getNumberOfHiddenTokens(int i, int j)">4</method>
			<method name="protected static String[] decodeReportData(String data)">3</method>
			<method name="public void _init_()">1</method>
			<method name="protected int[] toArray(java.util.List a)">2</method>
			<method name="public void examineRuleMemoization(org.antlr.runtime.IntStream input, int ruleIndex, String ruleName)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.ANTLRFileStream</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>12</rfc>
		<lcom>4</lcom>
		<ca>0</ca>
		<ce>9</ce>
		<npm>4</npm>
		<lcom3>0.3333333333333333</lcom3>
		<loc>73</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.875</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.0</amc>
		<cc>
			<method name="public String getSourceName()">1</method>
			<method name="public void _init_(String fileName)">1</method>
			<method name="public void load(String fileName, String encoding)">1</method>
			<method name="public void _init_(String fileName, String encoding)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.BitSet</name>
		<wmc>28</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>20</cbo>
		<rfc>42</rfc>
		<lcom>106</lcom>
		<ca>9</ca>
		<ce>11</ce>
		<npm>24</npm>
		<lcom3>0.8055555555555556</lcom3>
		<loc>605</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.20918367346938777</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>20.464285714285715</amc>
		<cc>
			<method name="public boolean member(int el)">4</method>
			<method name="public void remove(int el)">2</method>
			<method name="public org.antlr.runtime.BitSet or(org.antlr.runtime.BitSet a)">2</method>
			<method name="public static org.antlr.runtime.BitSet of(int el)">1</method>
			<method name="public long[] toPackedArray()">1</method>
			<method name="private static final int wordNumber(int bit)">1</method>
			<method name="public Object clone()">1</method>
			<method name="public int size()">5</method>
			<method name="public String toString(String[] tokenNames)">6</method>
			<method name="public void _init_(long[] bits_)">1</method>
			<method name="public String toString()">1</method>
			<method name="public void _init_(java.util.List items)">2</method>
			<method name="public void _init_(int nbits)">1</method>
			<method name="public boolean equals(Object other)">10</method>
			<method name="public void growToInclude(int bit)">1</method>
			<method name="public int lengthInLongWords()">1</method>
			<method name="public void orInPlace(org.antlr.runtime.BitSet a)">4</method>
			<method name="private void setSize(int nwords)">1</method>
			<method name="public int numBits()">1</method>
			<method name="public int[] toArray()">3</method>
			<method name="public static org.antlr.runtime.BitSet of(int a, int b, int c, int d)">1</method>
			<method name="public void add(int el)">2</method>
			<method name="public boolean isNil()">3</method>
			<method name="private final int numWordsToHold(int el)">1</method>
			<method name="public static org.antlr.runtime.BitSet of(int a, int b)">1</method>
			<method name="private static final long bitMask(int bitNumber)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public static org.antlr.runtime.BitSet of(int a, int b, int c)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenRewriteStream$DeleteOp</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>7</rfc>
		<lcom>1</lcom>
		<ca>0</ca>
		<ce>6</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>30</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.5</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenRewriteStream, int from, int to)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.CharStream</name>
		<wmc>6</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>6</rfc>
		<lcom>15</lcom>
		<ca>8</ca>
		<ce>4</ce>
		<npm>6</npm>
		<lcom3>1.2</lcom3>
		<loc>7</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.8333333333333334</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract int getLine()">1</method>
			<method name="public abstract void setLine(int)">1</method>
			<method name="public abstract void setCharPositionInLine(int)">1</method>
			<method name="public abstract int getCharPositionInLine()">1</method>
			<method name="public abstract int LT(int)">1</method>
			<method name="public abstract String substring(int, int)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugParser</name>
		<wmc>11</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>21</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>11</ce>
		<npm>11</npm>
		<lcom3>0.45</lcom3>
		<loc>118</loc>
		<dam>0.5</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.2727272727272727</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.545454545454545</amc>
		<cc>
			<method name="public void reportError(org.antlr.runtime.RecognitionException e)">1</method>
			<method name="public void setDebugListener(org.antlr.runtime.debug.DebugEventListener dbg)">2</method>
			<method name="public org.antlr.runtime.debug.DebugEventListener getDebugListener()">1</method>
			<method name="public void endResync()">1</method>
			<method name="public void beginBacktrack(int level)">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream input, org.antlr.runtime.RecognizerSharedState state)">2</method>
			<method name="public void endBacktrack(int level, boolean successful)">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream input, org.antlr.runtime.debug.DebugEventListener dbg)">2</method>
			<method name="public void beginResync()">1</method>
			<method name="public void reportError(java.io.IOException e)">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream input, org.antlr.runtime.debug.DebugEventListener dbg, org.antlr.runtime.RecognizerSharedState state)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.CommonErrorNode</name>
		<wmc>5</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>16</cbo>
		<rfc>18</rfc>
		<lcom>6</lcom>
		<ca>1</ca>
		<ce>15</ce>
		<npm>5</npm>
		<lcom3>0.5625</lcom3>
		<loc>188</loc>
		<dam>0.0</dam>
		<moa>4</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>35.8</amc>
		<cc>
			<method name="public String toString()">5</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream input, org.antlr.runtime.Token start, org.antlr.runtime.Token stop, org.antlr.runtime.RecognitionException e)">4</method>
			<method name="public String getText()">4</method>
			<method name="public boolean isNil()">1</method>
			<method name="public int getType()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeNodeStream</name>
		<wmc>8</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>8</rfc>
		<lcom>28</lcom>
		<ca>8</ca>
		<ce>6</ce>
		<npm>8</npm>
		<lcom3>2.0</lcom3>
		<loc>8</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract String toString(Object, Object)">1</method>
			<method name="public abstract Object LT(int)">1</method>
			<method name="public abstract void replaceChildren(Object, int, int, Object)">1</method>
			<method name="public abstract Object get(int)">1</method>
			<method name="public abstract void setUniqueNavigationNodes(boolean)">1</method>
			<method name="public abstract Object getTreeSource()">1</method>
			<method name="public abstract org.antlr.runtime.tree.TreeAdaptor getTreeAdaptor()">1</method>
			<method name="public abstract org.antlr.runtime.TokenStream getTokenStream()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$TreePatternTreeAdaptor</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>4</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>10</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public Object create(org.antlr.runtime.Token payload)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeRuleReturnScope</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>3</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>0</ca>
		<ce>3</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public void _init_()">1</method>
			<method name="public Object getStart()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.BaseTreeAdaptor</name>
		<wmc>24</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>15</cbo>
		<rfc>50</rfc>
		<lcom>274</lcom>
		<ca>1</ca>
		<ce>14</ce>
		<npm>24</npm>
		<lcom3>0.9782608695652174</lcom3>
		<loc>305</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.35119047619047616</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.625</amc>
		<cc>
			<method name="public Object create(int tokenType, org.antlr.runtime.Token fromToken)">1</method>
			<method name="public abstract org.antlr.runtime.Token createToken(org.antlr.runtime.Token)">1</method>
			<method name="public Object create(int tokenType, org.antlr.runtime.Token fromToken, String text)">1</method>
			<method name="public Object rulePostProcessing(Object root)">5</method>
			<method name="public Object errorNode(org.antlr.runtime.TokenStream input, org.antlr.runtime.Token start, org.antlr.runtime.Token stop, org.antlr.runtime.RecognitionException e)">1</method>
			<method name="public Object deleteChild(Object t, int i)">1</method>
			<method name="public Object create(int tokenType, String text)">1</method>
			<method name="public Object becomeRoot(Object newRoot, Object oldRoot)">5</method>
			<method name="public void addChild(Object t, Object child)">3</method>
			<method name="public void setText(Object t, String text)">1</method>
			<method name="public void setType(Object t, int type)">1</method>
			<method name="public int getChildCount(Object t)">1</method>
			<method name="public boolean isNil(Object tree)">1</method>
			<method name="public Object dupTree(Object t, Object parent)">3</method>
			<method name="public abstract org.antlr.runtime.Token createToken(int, String)">1</method>
			<method name="public int getType(Object t)">1</method>
			<method name="public int getUniqueID(Object node)">3</method>
			<method name="public Object becomeRoot(org.antlr.runtime.Token newRoot, Object oldRoot)">1</method>
			<method name="public Object getChild(Object t, int i)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object nil()">1</method>
			<method name="public Object dupTree(Object tree)">1</method>
			<method name="public void setChild(Object t, int i, Object child)">1</method>
			<method name="public String getText(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugTreeNodeStream</name>
		<wmc>20</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>43</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>20</npm>
		<lcom3>0.7157894736842105</lcom3>
		<loc>199</loc>
		<dam>1.0</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.275</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.7</amc>
		<cc>
			<method name="public void seek(int index)">1</method>
			<method name="public Object get(int i)">1</method>
			<method name="public int LA(int i)">1</method>
			<method name="public void setDebugListener(org.antlr.runtime.debug.DebugEventListener dbg)">1</method>
			<method name="public int mark()">1</method>
			<method name="public void rewind()">1</method>
			<method name="public int index()">1</method>
			<method name="public void release(int marker)">1</method>
			<method name="public org.antlr.runtime.TokenStream getTokenStream()">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeNodeStream input, org.antlr.runtime.debug.DebugEventListener dbg)">1</method>
			<method name="public int size()">1</method>
			<method name="public String toString(Object start, Object stop)">1</method>
			<method name="public Object LT(int i)">1</method>
			<method name="public void consume()">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public void rewind(int marker)">1</method>
			<method name="public Object getTreeSource()">1</method>
			<method name="public void replaceChildren(Object parent, int startChildIndex, int stopChildIndex, Object t)">1</method>
			<method name="public void setUniqueNavigationNodes(boolean uniqueNavigationNodes)">1</method>
			<method name="public org.antlr.runtime.tree.TreeAdaptor getTreeAdaptor()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.RewriteRuleTokenStream</name>
		<wmc>7</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>13</rfc>
		<lcom>21</lcom>
		<ca>0</ca>
		<ce>8</ce>
		<npm>5</npm>
		<lcom3>2.0</lcom3>
		<loc>44</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4857142857142857</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.285714285714286</amc>
		<cc>
			<method name="protected Object dup(Object el)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription, Object oneElement)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription, java.util.List elements)">1</method>
			<method name="public Object nextNode()">1</method>
			<method name="public org.antlr.runtime.Token nextToken()">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription)">1</method>
			<method name="protected Object toTree(Object el)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.BlankDebugEventListener</name>
		<wmc>32</wmc>
		<dit>1</dit>
		<noc>5</noc>
		<cbo>11</cbo>
		<rfc>33</rfc>
		<lcom>496</lcom>
		<ca>5</ca>
		<ce>6</ce>
		<npm>32</npm>
		<lcom3>2.0</lcom3>
		<loc>66</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2857142857142857</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>1.0625</amc>
		<cc>
			<method name="public void LT(int i, org.antlr.runtime.Token t)">1</method>
			<method name="public void recognitionException(org.antlr.runtime.RecognitionException e)">1</method>
			<method name="public void exitRule(String grammarFileName, String ruleName)">1</method>
			<method name="public void createNode(Object node, org.antlr.runtime.Token token)">1</method>
			<method name="public void semanticPredicate(boolean result, String predicate)">1</method>
			<method name="public void enterRule(String grammarFileName, String ruleName)">1</method>
			<method name="public void enterSubRule(int decisionNumber)">1</method>
			<method name="public void endBacktrack(int level, boolean successful)">1</method>
			<method name="public void consumeToken(org.antlr.runtime.Token token)">1</method>
			<method name="public void location(int line, int pos)">1</method>
			<method name="public void exitDecision(int decisionNumber)">1</method>
			<method name="public void consumeHiddenToken(org.antlr.runtime.Token token)">1</method>
			<method name="public void nilNode(Object t)">1</method>
			<method name="public void beginBacktrack(int level)">1</method>
			<method name="public void terminate()">1</method>
			<method name="public void exitSubRule(int decisionNumber)">1</method>
			<method name="public void setTokenBoundaries(Object t, int tokenStartIndex, int tokenStopIndex)">1</method>
			<method name="public void rewind(int i)">1</method>
			<method name="public void rewind()">1</method>
			<method name="public void endResync()">1</method>
			<method name="public void consumeNode(Object t)">1</method>
			<method name="public void mark(int i)">1</method>
			<method name="public void enterDecision(int decisionNumber)">1</method>
			<method name="public void LT(int i, Object t)">1</method>
			<method name="public void errorNode(Object t)">1</method>
			<method name="public void enterAlt(int alt)">1</method>
			<method name="public void addChild(Object root, Object child)">1</method>
			<method name="public void becomeRoot(Object newRoot, Object oldRoot)">1</method>
			<method name="public void commence()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void beginResync()">1</method>
			<method name="public void createNode(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard</name>
		<wmc>23</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>25</cbo>
		<rfc>57</rfc>
		<lcom>187</lcom>
		<ca>4</ca>
		<ce>25</ce>
		<npm>18</npm>
		<lcom3>0.6969696969696969</lcom3>
		<loc>585</loc>
		<dam>0.6666666666666666</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.30434782608695654</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>24.304347826086957</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="public java.util.List find(Object t, int ttype)">1</method>
			<method name="protected void _visit(Object t, Object parent, int childIndex, int ttype, org.antlr.runtime.tree.TreeWizard$ContextVisitor visitor)">4</method>
			<method name="public java.util.List find(Object t, String pattern)">5</method>
			<method name="public int getTokenType(String tokenName)">3</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, java.util.Map tokenNameToTypeMap)">1</method>
			<method name="public void _init_(String[] tokenNames)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String[] tokenNames)">1</method>
			<method name="static Class class$(String x0)">1</method>
			<method name="public void visit(Object t, String pattern, org.antlr.runtime.tree.TreeWizard$ContextVisitor visitor)">5</method>
			<method name="public java.util.Map computeTokenTypes(String[] tokenNames)">3</method>
			<method name="public java.util.Map index(Object t)">1</method>
			<method name="public Object findFirst(Object t, String pattern)">1</method>
			<method name="protected static boolean _equals(Object t1, Object t2, org.antlr.runtime.tree.TreeAdaptor adaptor)">8</method>
			<method name="public void visit(Object t, int ttype, org.antlr.runtime.tree.TreeWizard$ContextVisitor visitor)">1</method>
			<method name="public boolean parse(Object t, String pattern, java.util.Map labels)">1</method>
			<method name="public boolean parse(Object t, String pattern)">1</method>
			<method name="protected boolean _parse(Object t1, org.antlr.runtime.tree.TreeWizard$TreePattern tpattern, java.util.Map labels)">13</method>
			<method name="public static boolean equals(Object t1, Object t2, org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="public Object create(String pattern)">1</method>
			<method name="public Object findFirst(Object t, int ttype)">1</method>
			<method name="public boolean equals(Object t1, Object t2)">1</method>
			<method name="protected void _index(Object t, java.util.Map m)">4</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.CommonToken</name>
		<wmc>23</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>36</rfc>
		<lcom>83</lcom>
		<ca>8</ca>
		<ce>7</ce>
		<npm>23</npm>
		<lcom3>0.7727272727272727</lcom3>
		<loc>310</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.33043478260869563</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.08695652173913</amc>
		<cc>
			<method name="public int getTokenIndex()">1</method>
			<method name="public void _init_(org.antlr.runtime.Token oldToken)">2</method>
			<method name="public void setLine(int line)">1</method>
			<method name="public int getChannel()">1</method>
			<method name="public void setChannel(int channel)">1</method>
			<method name="public void setInputStream(org.antlr.runtime.CharStream input)">1</method>
			<method name="public void setType(int type)">1</method>
			<method name="public void setStartIndex(int start)">1</method>
			<method name="public void _init_(int type)">1</method>
			<method name="public int getStartIndex()">1</method>
			<method name="public int getStopIndex()">1</method>
			<method name="public org.antlr.runtime.CharStream getInputStream()">1</method>
			<method name="public String toString()">3</method>
			<method name="public String getText()">3</method>
			<method name="public void setTokenIndex(int index)">1</method>
			<method name="public int getLine()">1</method>
			<method name="public int getCharPositionInLine()">1</method>
			<method name="public int getType()">1</method>
			<method name="public void _init_(org.antlr.runtime.CharStream input, int type, int channel, int start, int stop)">1</method>
			<method name="public void setText(String text)">1</method>
			<method name="public void setStopIndex(int stop)">1</method>
			<method name="public void setCharPositionInLine(int charPositionInLine)">1</method>
			<method name="public void _init_(int type, String text)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugEventSocketProxy</name>
		<wmc>42</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>24</cbo>
		<rfc>82</rfc>
		<lcom>719</lcom>
		<ca>0</ca>
		<ce>24</ce>
		<npm>36</npm>
		<lcom3>0.7886178861788619</lcom3>
		<loc>895</loc>
		<dam>0.8888888888888888</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.20714285714285716</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>20.095238095238095</amc>
		<cc>
			<method name="public void LT(int i, org.antlr.runtime.Token t)">2</method>
			<method name="public void recognitionException(org.antlr.runtime.RecognitionException e)">1</method>
			<method name="protected void serializeText(StringBuffer buf, String text)">2</method>
			<method name="public void exitRule(String grammarFileName, String ruleName)">1</method>
			<method name="public void consumeHiddenToken(org.antlr.runtime.Token t)">1</method>
			<method name="public void consumeToken(org.antlr.runtime.Token t)">1</method>
			<method name="public void createNode(Object node, org.antlr.runtime.Token token)">1</method>
			<method name="public void semanticPredicate(boolean result, String predicate)">1</method>
			<method name="public void enterRule(String grammarFileName, String ruleName)">1</method>
			<method name="protected void serializeNode(StringBuffer buf, Object t)">2</method>
			<method name="public void enterSubRule(int decisionNumber)">1</method>
			<method name="public void endBacktrack(int level, boolean successful)">2</method>
			<method name="public void location(int line, int pos)">1</method>
			<method name="public void exitDecision(int decisionNumber)">1</method>
			<method name="public void nilNode(Object t)">1</method>
			<method name="public void _init_(org.antlr.runtime.BaseRecognizer recognizer, org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="public void beginBacktrack(int level)">1</method>
			<method name="protected void ack()">1</method>
			<method name="public org.antlr.runtime.tree.TreeAdaptor getTreeAdaptor()">1</method>
			<method name="protected String escapeNewlines(String txt)">1</method>
			<method name="public void terminate()">1</method>
			<method name="public void exitSubRule(int decisionNumber)">1</method>
			<method name="public void setTokenBoundaries(Object t, int tokenStartIndex, int tokenStopIndex)">1</method>
			<method name="public void rewind(int i)">1</method>
			<method name="protected void transmit(String event)">1</method>
			<method name="public void rewind()">1</method>
			<method name="public void endResync()">1</method>
			<method name="protected String serializeToken(org.antlr.runtime.Token t)">1</method>
			<method name="public void consumeNode(Object t)">1</method>
			<method name="public void mark(int i)">1</method>
			<method name="public void handshake()">1</method>
			<method name="public void _init_(org.antlr.runtime.BaseRecognizer recognizer, int port, org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="public void enterDecision(int decisionNumber)">1</method>
			<method name="public void LT(int i, Object t)">1</method>
			<method name="public void setTreeAdaptor(org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="public void errorNode(Object t)">1</method>
			<method name="public void enterAlt(int alt)">1</method>
			<method name="public void addChild(Object root, Object child)">1</method>
			<method name="public void becomeRoot(Object newRoot, Object oldRoot)">1</method>
			<method name="public void commence()">1</method>
			<method name="public void beginResync()">1</method>
			<method name="public void createNode(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.Lexer</name>
		<wmc>27</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>19</cbo>
		<rfc>59</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>19</ce>
		<npm>27</npm>
		<lcom3>0.3076923076923077</lcom3>
		<loc>632</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.20833333333333334</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>22.37037037037037</amc>
		<cc>
			<method name="public org.antlr.runtime.CharStream getCharStream()">1</method>
			<method name="public void match(int c)">1</method>
			<method name="public void recover(org.antlr.runtime.RecognitionException re)">1</method>
			<method name="public void traceOut(String ruleName, int ruleIndex)">1</method>
			<method name="public void reset()">3</method>
			<method name="public void _init_(org.antlr.runtime.CharStream input, org.antlr.runtime.RecognizerSharedState state)">1</method>
			<method name="public void skip()">1</method>
			<method name="public void setCharStream(org.antlr.runtime.CharStream input)">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public int getLine()">1</method>
			<method name="public void _init_(org.antlr.runtime.CharStream input)">1</method>
			<method name="public void emit(org.antlr.runtime.Token token)">1</method>
			<method name="public int getCharIndex()">1</method>
			<method name="public void match(String s)">1</method>
			<method name="public void reportError(org.antlr.runtime.RecognitionException e)">1</method>
			<method name="public String getCharErrorDisplay(int c)">6</method>
			<method name="public abstract void mTokens()">1</method>
			<method name="public String getText()">2</method>
			<method name="public org.antlr.runtime.Token nextToken()">4</method>
			<method name="public void matchAny()">1</method>
			<method name="public int getCharPositionInLine()">1</method>
			<method name="public void setText(String text)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void matchRange(int a, int b)">1</method>
			<method name="public void traceIn(String ruleName, int ruleIndex)">1</method>
			<method name="public org.antlr.runtime.Token emit()">1</method>
			<method name="public String getErrorMessage(org.antlr.runtime.RecognitionException e, String[] tokenNames)">7</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.misc.Stats</name>
		<wmc>8</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>24</rfc>
		<lcom>28</lcom>
		<ca>1</ca>
		<ce>12</ce>
		<npm>8</npm>
		<lcom3>1.1428571428571428</lcom3>
		<loc>226</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>27.125</amc>
		<cc>
			<method name="public static int sum(int[] X)">3</method>
			<method name="public static double avg(int[] X)">4</method>
			<method name="public static void writeReport(String filename, String data)">1</method>
			<method name="public static int min(int[] X)">4</method>
			<method name="public static int max(int[] X)">4</method>
			<method name="public static String getAbsoluteFileName(String filename)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public static double stddev(int[] X)">3</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.RemoteDebugEventSocketListener$ProxyTree</name>
		<wmc>10</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>11</rfc>
		<lcom>35</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>10</npm>
		<lcom3>0.8703703703703705</lcom3>
		<loc>78</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.2</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public org.antlr.runtime.tree.Tree dupNode()">1</method>
			<method name="public String getText()">1</method>
			<method name="public int getType()">1</method>
			<method name="public void setTokenStopIndex(int index)">1</method>
			<method name="public void _init_(int ID, int type, int line, int charPos, int tokenIndex, String text)">1</method>
			<method name="public void setTokenStartIndex(int index)">1</method>
			<method name="public void _init_(int ID)">1</method>
			<method name="public int getTokenStartIndex()">1</method>
			<method name="public int getTokenStopIndex()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.MissingTokenException</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>11</rfc>
		<lcom>4</lcom>
		<ca>2</ca>
		<ce>7</ce>
		<npm>4</npm>
		<lcom3>0.6666666666666666</lcom3>
		<loc>61</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.0</amc>
		<cc>
			<method name="public String toString()">4</method>
			<method name="public int getMissingType()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(int expecting, org.antlr.runtime.IntStream input, Object inserted)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.EarlyExitException</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>4</rfc>
		<lcom>1</lcom>
		<ca>2</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>13</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.0</amc>
		<cc>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(int decisionNumber, org.antlr.runtime.IntStream input)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenRewriteStream$RewriteOperation</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>2</noc>
		<cbo>8</cbo>
		<rfc>14</rfc>
		<lcom>0</lcom>
		<ca>3</ca>
		<ce>6</ce>
		<npm>2</npm>
		<lcom3>0.75</lcom3>
		<loc>59</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.333333333333332</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public int execute(StringBuffer buf)">1</method>
			<method name="protected void _init_(org.antlr.runtime.TokenRewriteStream, int index, Object text)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.RecognitionException</name>
		<wmc>4</wmc>
		<dit>3</dit>
		<noc>7</noc>
		<cbo>38</cbo>
		<rfc>21</rfc>
		<lcom>0</lcom>
		<ca>26</ca>
		<ce>13</ce>
		<npm>3</npm>
		<lcom3>0.625</lcom3>
		<loc>216</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.9130434782608695</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>51.0</amc>
		<cc>
			<method name="public int getUnexpectedType()">3</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(org.antlr.runtime.IntStream input)">4</method>
			<method name="protected void extractInformationFromTreeNodeStream(org.antlr.runtime.IntStream input)">7</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.Token</name>
		<wmc>15</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>46</cbo>
		<rfc>16</rfc>
		<lcom>105</lcom>
		<ca>42</ca>
		<ce>5</ce>
		<npm>14</npm>
		<lcom3>1.051948051948052</lcom3>
		<loc>42</loc>
		<dam>0.0</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>1.0666666666666667</amc>
		<cc>
			<method name="public abstract int getLine()">1</method>
			<method name="public abstract void setCharPositionInLine(int)">1</method>
			<method name="public abstract int getChannel()">1</method>
			<method name="public abstract int getCharPositionInLine()">1</method>
			<method name="public abstract void setText(String)">1</method>
			<method name="public abstract int getType()">1</method>
			<method name="public abstract void setTokenIndex(int)">1</method>
			<method name="public abstract void setChannel(int)">1</method>
			<method name="public abstract org.antlr.runtime.CharStream getInputStream()">1</method>
			<method name="public abstract void setType(int)">1</method>
			<method name="public abstract void setLine(int)">1</method>
			<method name="public abstract String getText()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public abstract int getTokenIndex()">1</method>
			<method name="public abstract void setInputStream(org.antlr.runtime.CharStream)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugTokenStream</name>
		<wmc>19</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>40</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>18</npm>
		<lcom3>0.5972222222222222</lcom3>
		<loc>222</loc>
		<dam>0.75</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.3157894736842105</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.473684210526315</amc>
		<cc>
			<method name="public org.antlr.runtime.Token get(int i)">1</method>
			<method name="public void seek(int index)">1</method>
			<method name="public int LA(int i)">2</method>
			<method name="public void setDebugListener(org.antlr.runtime.debug.DebugEventListener dbg)">1</method>
			<method name="public int mark()">1</method>
			<method name="public void rewind()">1</method>
			<method name="public int index()">1</method>
			<method name="public void release(int marker)">1</method>
			<method name="public org.antlr.runtime.TokenSource getTokenSource()">1</method>
			<method name="public int size()">1</method>
			<method name="protected void consumeInitialHiddenTokens()">2</method>
			<method name="public org.antlr.runtime.Token LT(int i)">2</method>
			<method name="public String toString()">1</method>
			<method name="public void consume()">4</method>
			<method name="public String getSourceName()">1</method>
			<method name="public String toString(int start, int stop)">1</method>
			<method name="public void rewind(int marker)">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream input, org.antlr.runtime.debug.DebugEventListener dbg)">1</method>
			<method name="public String toString(org.antlr.runtime.Token start, org.antlr.runtime.Token stop)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.TraceDebugEventListener</name>
		<wmc>14</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>24</rfc>
		<lcom>19</lcom>
		<ca>0</ca>
		<ce>9</ce>
		<npm>14</npm>
		<lcom3>0.38461538461538464</lcom3>
		<loc>278</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.36904761904761907</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>18.785714285714285</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="public void exitSubRule(int decisionNumber)">1</method>
			<method name="public void setTokenBoundaries(Object t, int tokenStartIndex, int tokenStopIndex)">1</method>
			<method name="public void createNode(Object node, org.antlr.runtime.Token token)">1</method>
			<method name="public void enterSubRule(int decisionNumber)">1</method>
			<method name="public void consumeNode(Object t)">1</method>
			<method name="public void location(int line, int pos)">1</method>
			<method name="public void LT(int i, Object t)">1</method>
			<method name="public void nilNode(Object t)">1</method>
			<method name="public void enterRule(String ruleName)">1</method>
			<method name="public void exitRule(String ruleName)">1</method>
			<method name="public void addChild(Object root, Object child)">1</method>
			<method name="public void becomeRoot(Object newRoot, Object oldRoot)">1</method>
			<method name="public void createNode(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugTreeParser</name>
		<wmc>12</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>24</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>13</ce>
		<npm>11</npm>
		<lcom3>0.45454545454545453</lcom3>
		<loc>132</loc>
		<dam>0.5</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.24166666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.833333333333334</amc>
		<cc>
			<method name="public void reportError(org.antlr.runtime.RecognitionException e)">1</method>
			<method name="protected Object getMissingSymbol(org.antlr.runtime.IntStream input, org.antlr.runtime.RecognitionException e, int expectedTokenType, org.antlr.runtime.BitSet follow)">1</method>
			<method name="public void setDebugListener(org.antlr.runtime.debug.DebugEventListener dbg)">2</method>
			<method name="public org.antlr.runtime.debug.DebugEventListener getDebugListener()">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeNodeStream input, org.antlr.runtime.RecognizerSharedState state)">2</method>
			<method name="public void endResync()">1</method>
			<method name="public void beginBacktrack(int level)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeNodeStream input, org.antlr.runtime.debug.DebugEventListener dbg, org.antlr.runtime.RecognizerSharedState state)">2</method>
			<method name="public void endBacktrack(int level, boolean successful)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeNodeStream input, org.antlr.runtime.debug.DebugEventListener dbg)">2</method>
			<method name="public void beginResync()">1</method>
			<method name="public void reportError(java.io.IOException e)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreePatternParser</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>17</cbo>
		<rfc>20</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>17</ce>
		<npm>4</npm>
		<lcom3>0.30000000000000004</lcom3>
		<loc>299</loc>
		<dam>0.8</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.32</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>57.8</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.tree.TreePatternLexer tokenizer, org.antlr.runtime.tree.TreeWizard wizard, org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="static Class class$(String x0)">1</method>
			<method name="public Object pattern()">4</method>
			<method name="public Object parseTree()">10</method>
			<method name="public Object parseNode()">16</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.Parser</name>
		<wmc>10</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>13</cbo>
		<rfc>26</rfc>
		<lcom>15</lcom>
		<ca>1</ca>
		<ce>12</ce>
		<npm>8</npm>
		<lcom3>0.2222222222222222</lcom3>
		<loc>128</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.2875</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.7</amc>
		<cc>
			<method name="public void setTokenStream(org.antlr.runtime.TokenStream input)">1</method>
			<method name="protected Object getMissingSymbol(org.antlr.runtime.IntStream input, org.antlr.runtime.RecognitionException e, int expectedTokenType, org.antlr.runtime.BitSet follow)">3</method>
			<method name="public void traceOut(String ruleName, int ruleIndex)">1</method>
			<method name="protected Object getCurrentInputSymbol(org.antlr.runtime.IntStream input)">1</method>
			<method name="public org.antlr.runtime.TokenStream getTokenStream()">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public void reset()">2</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream input, org.antlr.runtime.RecognizerSharedState state)">1</method>
			<method name="public void traceIn(String ruleName, int ruleIndex)">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream input)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.Tracer</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>14</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>11</ce>
		<npm>4</npm>
		<lcom3>0.16666666666666666</lcom3>
		<loc>102</loc>
		<dam>0.5</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>24.0</amc>
		<cc>
			<method name="public Object getInputSymbol(int k)">2</method>
			<method name="public void enterRule(String ruleName)">2</method>
			<method name="public void exitRule(String ruleName)">2</method>
			<method name="public void _init_(org.antlr.runtime.IntStream input)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeVisitor</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>10</rfc>
		<lcom>1</lcom>
		<ca>0</ca>
		<ce>5</ce>
		<npm>3</npm>
		<lcom3>0.0</lcom3>
		<loc>62</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>19.333333333333332</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object visit(Object t, org.antlr.runtime.tree.TreeVisitorAction action)">6</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenSource</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>2</rfc>
		<lcom>1</lcom>
		<ca>5</ca>
		<ce>3</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>2</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract String getSourceName()">1</method>
			<method name="public abstract org.antlr.runtime.Token nextToken()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.CommonTreeNodeStream</name>
		<wmc>37</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>18</cbo>
		<rfc>71</rfc>
		<lcom>220</lcom>
		<ca>2</ca>
		<ce>17</ce>
		<npm>33</npm>
		<lcom3>0.767094017094017</lcom3>
		<loc>746</loc>
		<dam>0.7692307692307693</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.24324324324324326</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>18.81081081081081</amc>
		<cc>
			<method name="protected void fillBuffer()">1</method>
			<method name="public Object get(int i)">2</method>
			<method name="public int LA(int i)">1</method>
			<method name="public int mark()">2</method>
			<method name="public void reset()">2</method>
			<method name="public void setTokenStream(org.antlr.runtime.TokenStream tokens)">1</method>
			<method name="public int pop()">1</method>
			<method name="public int size()">2</method>
			<method name="public Object getCurrentSymbol()">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.CommonTreeNodeStream parent, int start, int stop)">1</method>
			<method name="public String toString()">3</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, Object tree)">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public Object getTreeSource()">1</method>
			<method name="public void rewind(int marker)">1</method>
			<method name="public org.antlr.runtime.tree.TreeAdaptor getTreeAdaptor()">1</method>
			<method name="public void seek(int index)">2</method>
			<method name="public void push(int index)">2</method>
			<method name="public void rewind()">1</method>
			<method name="public org.antlr.runtime.TokenStream getTokenStream()">1</method>
			<method name="public void release(int marker)">1</method>
			<method name="public int index()">1</method>
			<method name="protected int getNodeIndex(Object node)">4</method>
			<method name="protected void addNavigationNode(int ttype)">4</method>
			<method name="public String toString(Object start, Object stop)">14</method>
			<method name="protected Object LB(int k)">3</method>
			<method name="public void fillBuffer(Object t)">7</method>
			<method name="public java.util.Iterator iterator()">2</method>
			<method name="public boolean hasUniqueNavigationNodes()">1</method>
			<method name="public Object LT(int k)">5</method>
			<method name="public void consume()">2</method>
			<method name="public void setTreeAdaptor(org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="public void _init_(Object tree)">1</method>
			<method name="public String toTokenString(int start, int stop)">4</method>
			<method name="public void replaceChildren(Object parent, int startChildIndex, int stopChildIndex, Object t)">2</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, Object tree, int initialBufferSize)">1</method>
			<method name="public void setUniqueNavigationNodes(boolean uniqueNavigationNodes)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.ParseTreeBuilder</name>
		<wmc>11</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>25</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>12</ce>
		<npm>11</npm>
		<lcom3>0.675</lcom3>
		<loc>174</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.30303030303030304</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.454545454545455</amc>
		<cc>
			<method name="public org.antlr.runtime.tree.ParseTree getTree()">1</method>
			<method name="public void exitDecision(int i)">1</method>
			<method name="public void exitRule(String filename, String ruleName)">3</method>
			<method name="public void consumeHiddenToken(org.antlr.runtime.Token token)">2</method>
			<method name="public void recognitionException(org.antlr.runtime.RecognitionException e)">2</method>
			<method name="public void enterRule(String filename, String ruleName)">2</method>
			<method name="public org.antlr.runtime.tree.ParseTree epsilonNode()">1</method>
			<method name="public void enterDecision(int d)">1</method>
			<method name="public void _init_(String grammarName)">1</method>
			<method name="public org.antlr.runtime.tree.ParseTree create(Object payload)">1</method>
			<method name="public void consumeToken(org.antlr.runtime.Token token)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.RemoteDebugEventSocketListener$ProxyToken</name>
		<wmc>17</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>22</rfc>
		<lcom>74</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>17</npm>
		<lcom3>0.8020833333333333</lcom3>
		<loc>146</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.39705882352941174</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.235294117647059</amc>
		<cc>
			<method name="public void _init_(int index, int type, int channel, int line, int charPos, String text)">1</method>
			<method name="public int getTokenIndex()">1</method>
			<method name="public void setLine(int line)">1</method>
			<method name="public void setCharPositionInLine(int pos)">1</method>
			<method name="public int getChannel()">1</method>
			<method name="public void setChannel(int channel)">1</method>
			<method name="public void setType(int ttype)">1</method>
			<method name="public void setInputStream(org.antlr.runtime.CharStream input)">1</method>
			<method name="public org.antlr.runtime.CharStream getInputStream()">1</method>
			<method name="public String toString()">2</method>
			<method name="public String getText()">1</method>
			<method name="public void setTokenIndex(int index)">1</method>
			<method name="public int getLine()">1</method>
			<method name="public int getCharPositionInLine()">1</method>
			<method name="public int getType()">1</method>
			<method name="public void setText(String text)">1</method>
			<method name="public void _init_(int index)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.RewriteRuleElementStream</name>
		<wmc>12</wmc>
		<dit>1</dit>
		<noc>3</noc>
		<cbo>11</cbo>
		<rfc>19</rfc>
		<lcom>24</lcom>
		<ca>3</ca>
		<ce>8</ce>
		<npm>9</npm>
		<lcom3>0.5606060606060607</lcom3>
		<loc>224</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.38333333333333336</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.166666666666668</amc>
		<cc>
			<method name="public Object nextTree()">4</method>
			<method name="public boolean hasNext()">5</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription, Object oneElement)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription, java.util.List elements)">1</method>
			<method name="public void add(Object el)">4</method>
			<method name="public String getDescription()">1</method>
			<method name="protected Object _next()">5</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription)">1</method>
			<method name="public void reset()">1</method>
			<method name="protected Object toTree(Object el)">1</method>
			<method name="public int size()">3</method>
			<method name="protected abstract Object dup(Object)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.DOTTreeGenerator</name>
		<wmc>10</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>31</rfc>
		<lcom>31</lcom>
		<ca>0</ca>
		<ce>10</ce>
		<npm>4</npm>
		<lcom3>0.6222222222222222</lcom3>
		<loc>319</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.46296296296296297</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>30.4</amc>
		<cc>
			<method name="protected org.antlr.stringtemplate.StringTemplate getNodeST(org.antlr.runtime.tree.TreeAdaptor adaptor, Object t)">1</method>
			<method name="protected void toDOTDefineEdges(Object tree, org.antlr.runtime.tree.TreeAdaptor adaptor, org.antlr.stringtemplate.StringTemplate treeST)">4</method>
			<method name="public org.antlr.stringtemplate.StringTemplate toDOT(org.antlr.runtime.tree.Tree tree)">1</method>
			<method name="public org.antlr.stringtemplate.StringTemplate toDOT(Object tree, org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="protected int getNodeNumber(Object t)">2</method>
			<method name="protected String fixString(String in)">3</method>
			<method name="public void _init_()">1</method>
			<method name="protected void toDOTDefineNodes(Object tree, org.antlr.runtime.tree.TreeAdaptor adaptor, org.antlr.stringtemplate.StringTemplate treeST)">4</method>
			<method name="public org.antlr.stringtemplate.StringTemplate toDOT(Object tree, org.antlr.runtime.tree.TreeAdaptor adaptor, org.antlr.stringtemplate.StringTemplate _treeST, org.antlr.stringtemplate.StringTemplate _edgeST)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugEventRepeater</name>
		<wmc>32</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>64</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>6</ce>
		<npm>32</npm>
		<lcom3>0.0</lcom3>
		<loc>201</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.25390625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.25</amc>
		<cc>
			<method name="public void LT(int i, org.antlr.runtime.Token t)">1</method>
			<method name="public void recognitionException(org.antlr.runtime.RecognitionException e)">1</method>
			<method name="public void exitRule(String grammarFileName, String ruleName)">1</method>
			<method name="public void createNode(Object node, org.antlr.runtime.Token token)">1</method>
			<method name="public void semanticPredicate(boolean result, String predicate)">1</method>
			<method name="public void enterRule(String grammarFileName, String ruleName)">1</method>
			<method name="public void enterSubRule(int decisionNumber)">1</method>
			<method name="public void endBacktrack(int level, boolean successful)">1</method>
			<method name="public void consumeToken(org.antlr.runtime.Token token)">1</method>
			<method name="public void location(int line, int pos)">1</method>
			<method name="public void exitDecision(int decisionNumber)">1</method>
			<method name="public void consumeHiddenToken(org.antlr.runtime.Token token)">1</method>
			<method name="public void nilNode(Object t)">1</method>
			<method name="public void _init_(org.antlr.runtime.debug.DebugEventListener listener)">1</method>
			<method name="public void beginBacktrack(int level)">1</method>
			<method name="public void terminate()">1</method>
			<method name="public void exitSubRule(int decisionNumber)">1</method>
			<method name="public void setTokenBoundaries(Object t, int tokenStartIndex, int tokenStopIndex)">1</method>
			<method name="public void rewind(int i)">1</method>
			<method name="public void rewind()">1</method>
			<method name="public void endResync()">1</method>
			<method name="public void consumeNode(Object t)">1</method>
			<method name="public void mark(int i)">1</method>
			<method name="public void enterDecision(int decisionNumber)">1</method>
			<method name="public void LT(int i, Object t)">1</method>
			<method name="public void errorNode(Object t)">1</method>
			<method name="public void enterAlt(int alt)">1</method>
			<method name="public void addChild(Object root, Object child)">1</method>
			<method name="public void becomeRoot(Object newRoot, Object oldRoot)">1</method>
			<method name="public void commence()">1</method>
			<method name="public void beginResync()">1</method>
			<method name="public void createNode(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.CommonTreeNodeStream$StreamIterator</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>8</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>0.3333333333333333</lcom3>
		<loc>56</loc>
		<dam>0.5</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.5</amc>
		<cc>
			<method name="public boolean hasNext()">2</method>
			<method name="public void remove()">1</method>
			<method name="public Object next()">2</method>
			<method name="protected void _init_(org.antlr.runtime.tree.CommonTreeNodeStream)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.RecognizerSharedState</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>7</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>44</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>28.0</amc>
		<cc>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.NoViableAltException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>11</rfc>
		<lcom>1</lcom>
		<ca>4</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>0.8333333333333334</lcom3>
		<loc>61</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>18.333333333333332</amc>
		<cc>
			<method name="public String toString()">2</method>
			<method name="public void _init_(String grammarDecisionDescription, int decisionNumber, int stateNumber, org.antlr.runtime.IntStream input)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.misc.IntArray</name>
		<wmc>7</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>9</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>7</npm>
		<lcom3>0.611111111111111</lcom3>
		<loc>103</loc>
		<dam>0.3333333333333333</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.7142857142857143</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.285714285714286</amc>
		<cc>
			<method name="public void clear()">1</method>
			<method name="public void add(int v)">1</method>
			<method name="public void push(int v)">1</method>
			<method name="public void ensureCapacity(int index)">4</method>
			<method name="public int pop()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public int size()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.FailedPredicateException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>8</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>35</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.0</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.IntStream input, String ruleName, String predicateText)">1</method>
			<method name="public String toString()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.CommonTokenStream</name>
		<wmc>33</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>16</cbo>
		<rfc>62</rfc>
		<lcom>222</lcom>
		<ca>1</ca>
		<ce>15</ce>
		<npm>29</npm>
		<lcom3>0.5390625</lcom3>
		<loc>594</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.24675324675324675</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>16.757575757575758</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.TokenSource tokenSource)">1</method>
			<method name="public org.antlr.runtime.Token get(int i)">1</method>
			<method name="protected void fillBuffer()">10</method>
			<method name="public int LA(int i)">1</method>
			<method name="public void discardTokenType(int ttype)">2</method>
			<method name="public int mark()">2</method>
			<method name="public java.util.List getTokens(int start, int stop, int ttype)">1</method>
			<method name="public void reset()">1</method>
			<method name="public org.antlr.runtime.TokenSource getTokenSource()">1</method>
			<method name="public int size()">1</method>
			<method name="public java.util.List getTokens()">2</method>
			<method name="public String toString()">2</method>
			<method name="public void setTokenTypeChannel(int ttype, int channel)">2</method>
			<method name="public String getSourceName()">1</method>
			<method name="public String toString(int start, int stop)">6</method>
			<method name="public void rewind(int marker)">1</method>
			<method name="public java.util.List getTokens(int start, int stop, org.antlr.runtime.BitSet types)">9</method>
			<method name="public String toString(org.antlr.runtime.Token start, org.antlr.runtime.Token stop)">3</method>
			<method name="protected org.antlr.runtime.Token LB(int k)">6</method>
			<method name="public void seek(int index)">1</method>
			<method name="public java.util.List getTokens(int start, int stop, java.util.List types)">1</method>
			<method name="public void rewind()">1</method>
			<method name="public void setTokenSource(org.antlr.runtime.TokenSource tokenSource)">1</method>
			<method name="public void release(int marker)">1</method>
			<method name="public int index()">1</method>
			<method name="protected int skipOffTokenChannels(int i)">3</method>
			<method name="protected int skipOffTokenChannelsReverse(int i)">3</method>
			<method name="public void discardOffChannelTokens(boolean discardOffChannelTokens)">1</method>
			<method name="public java.util.List getTokens(int start, int stop)">1</method>
			<method name="public org.antlr.runtime.Token LT(int k)">7</method>
			<method name="public void consume()">2</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenSource tokenSource, int channel)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.MismatchedTreeNodeException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>10</rfc>
		<lcom>1</lcom>
		<ca>2</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>31</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.0</amc>
		<cc>
			<method name="public void _init_(int expecting, org.antlr.runtime.tree.TreeNodeStream input)">1</method>
			<method name="public String toString()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenStream</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>21</cbo>
		<rfc>5</rfc>
		<lcom>10</lcom>
		<ca>15</ca>
		<ce>6</ce>
		<npm>5</npm>
		<lcom3>2.0</lcom3>
		<loc>5</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract org.antlr.runtime.Token LT(int)">1</method>
			<method name="public abstract org.antlr.runtime.Token get(int)">1</method>
			<method name="public abstract org.antlr.runtime.TokenSource getTokenSource()">1</method>
			<method name="public abstract String toString(int, int)">1</method>
			<method name="public abstract String toString(org.antlr.runtime.Token, org.antlr.runtime.Token)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.ParserRuleReturnScope</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>4</rfc>
		<lcom>3</lcom>
		<ca>0</ca>
		<ce>4</ce>
		<npm>3</npm>
		<lcom3>1.0</lcom3>
		<loc>14</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getStop()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object getStart()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.RuleReturnScope</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>2</noc>
		<cbo>4</cbo>
		<rfc>6</rfc>
		<lcom>10</lcom>
		<ca>2</ca>
		<ce>2</ce>
		<npm>5</npm>
		<lcom3>2.0</lcom3>
		<loc>16</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>2.2</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public Object getTemplate()">1</method>
			<method name="public Object getStop()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object getStart()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.ANTLRStringStream</name>
		<wmc>20</wmc>
		<dit>1</dit>
		<noc>2</noc>
		<cbo>9</cbo>
		<rfc>29</rfc>
		<lcom>62</lcom>
		<ca>2</ca>
		<ce>7</ce>
		<npm>20</npm>
		<lcom3>0.6900584795321637</lcom3>
		<loc>303</loc>
		<dam>0.8888888888888888</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3875</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.7</amc>
		<cc>
			<method name="public void _init_(char[] data, int numberOfActualCharsInArray)">1</method>
			<method name="public void seek(int index)">3</method>
			<method name="public void setLine(int line)">1</method>
			<method name="public void setCharPositionInLine(int pos)">1</method>
			<method name="public int LA(int i)">5</method>
			<method name="public int mark()">3</method>
			<method name="public void _init_(String input)">1</method>
			<method name="public String substring(int start, int stop)">1</method>
			<method name="public void rewind()">1</method>
			<method name="public int index()">1</method>
			<method name="public void release(int marker)">1</method>
			<method name="public void reset()">1</method>
			<method name="public int size()">1</method>
			<method name="public void rewind(int m)">1</method>
			<method name="public void consume()">3</method>
			<method name="public int getLine()">1</method>
			<method name="public int getCharPositionInLine()">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public int LT(int i)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.ANTLRReaderStream</name>
		<wmc>5</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>7</cbo>
		<rfc>9</rfc>
		<lcom>10</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>5</npm>
		<lcom3>1.25</lcom3>
		<loc>103</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.8</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>19.2</amc>
		<cc>
			<method name="public void _init_(java.io.Reader r, int size, int readChunkSize)">1</method>
			<method name="public void load(java.io.Reader r, int size, int readChunkSize)">1</method>
			<method name="public void _init_(java.io.Reader r, int size)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(java.io.Reader r)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.IntStream</name>
		<wmc>10</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>26</cbo>
		<rfc>10</rfc>
		<lcom>45</lcom>
		<ca>23</ca>
		<ce>3</ce>
		<npm>10</npm>
		<lcom3>2.0</lcom3>
		<loc>10</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.7</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract int size()">1</method>
			<method name="public abstract void rewind()">1</method>
			<method name="public abstract int index()">1</method>
			<method name="public abstract void rewind(int)">1</method>
			<method name="public abstract void release(int)">1</method>
			<method name="public abstract void consume()">1</method>
			<method name="public abstract String getSourceName()">1</method>
			<method name="public abstract void seek(int)">1</method>
			<method name="public abstract int LA(int)">1</method>
			<method name="public abstract int mark()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugEventListener</name>
		<wmc>31</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>31</rfc>
		<lcom>465</lcom>
		<ca>9</ca>
		<ce>5</ce>
		<npm>31</npm>
		<lcom3>1.0333333333333334</lcom3>
		<loc>34</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2903225806451613</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void mark(int)">1</method>
			<method name="public abstract void terminate()">1</method>
			<method name="public abstract void enterRule(String, String)">1</method>
			<method name="public abstract void consumeToken(org.antlr.runtime.Token)">1</method>
			<method name="public abstract void rewind(int)">1</method>
			<method name="public abstract void exitDecision(int)">1</method>
			<method name="public abstract void endResync()">1</method>
			<method name="public abstract void createNode(Object)">1</method>
			<method name="public abstract void rewind()">1</method>
			<method name="public abstract void errorNode(Object)">1</method>
			<method name="public abstract void LT(int, org.antlr.runtime.Token)">1</method>
			<method name="public abstract void beginBacktrack(int)">1</method>
			<method name="public abstract void semanticPredicate(boolean, String)">1</method>
			<method name="public abstract void commence()">1</method>
			<method name="public abstract void LT(int, Object)">1</method>
			<method name="public abstract void endBacktrack(int, boolean)">1</method>
			<method name="public abstract void nilNode(Object)">1</method>
			<method name="public abstract void enterAlt(int)">1</method>
			<method name="public abstract void enterSubRule(int)">1</method>
			<method name="public abstract void exitSubRule(int)">1</method>
			<method name="public abstract void exitRule(String, String)">1</method>
			<method name="public abstract void enterDecision(int)">1</method>
			<method name="public abstract void becomeRoot(Object, Object)">1</method>
			<method name="public abstract void location(int, int)">1</method>
			<method name="public abstract void addChild(Object, Object)">1</method>
			<method name="public abstract void beginResync()">1</method>
			<method name="public abstract void setTokenBoundaries(Object, int, int)">1</method>
			<method name="public abstract void consumeNode(Object)">1</method>
			<method name="public abstract void recognitionException(org.antlr.runtime.RecognitionException)">1</method>
			<method name="public abstract void createNode(Object, org.antlr.runtime.Token)">1</method>
			<method name="public abstract void consumeHiddenToken(org.antlr.runtime.Token)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.RewriteCardinalityException</name>
		<wmc>2</wmc>
		<dit>4</dit>
		<noc>2</noc>
		<cbo>7</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>3</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>17</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.9545454545454546</mfa>
		<cam>0.75</cam>
		<ic>1</ic>
		<cbm>1</cbm>
		<amc>7.0</amc>
		<cc>
			<method name="public String getMessage()">2</method>
			<method name="public void _init_(String elementDescription)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.UnBufferedTreeNodeStream$TreeWalkState</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>3</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>15</loc>
		<dam>0.125</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.0</amc>
		<cc>
			<method name="protected void _init_(org.antlr.runtime.tree.UnBufferedTreeNodeStream)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$1</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>4</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>1</npm>
		<lcom3>0.5</lcom3>
		<loc>19</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.5</amc>
		<cc>
			<method name="void _init_(org.antlr.runtime.tree.TreeWizard, java.util.List)">1</method>
			<method name="public void visit(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$3</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>6</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>42</loc>
		<dam>1.0</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.6428571428571429</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>18.0</amc>
		<cc>
			<method name="public void visit(Object t, Object parent, int childIndex, java.util.Map unusedlabels)">2</method>
			<method name="void _init_(org.antlr.runtime.tree.TreeWizard, java.util.Map, org.antlr.runtime.tree.TreeWizard$TreePattern, org.antlr.runtime.tree.TreeWizard$ContextVisitor)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugEventHub</name>
		<wmc>34</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>70</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>8</ce>
		<npm>34</npm>
		<lcom3>0.0</lcom3>
		<loc>668</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2536764705882353</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>18.61764705882353</amc>
		<cc>
			<method name="public void recognitionException(org.antlr.runtime.RecognitionException e)">2</method>
			<method name="public void exitRule(String grammarFileName, String ruleName)">2</method>
			<method name="public void createNode(Object node, org.antlr.runtime.Token token)">2</method>
			<method name="public void semanticPredicate(boolean result, String predicate)">2</method>
			<method name="public void enterRule(String grammarFileName, String ruleName)">2</method>
			<method name="public void rewind(int index)">2</method>
			<method name="public void enterSubRule(int decisionNumber)">2</method>
			<method name="public void endBacktrack(int level, boolean successful)">2</method>
			<method name="public void consumeToken(org.antlr.runtime.Token token)">2</method>
			<method name="public void LT(int index, Object t)">2</method>
			<method name="public void location(int line, int pos)">2</method>
			<method name="public void exitDecision(int decisionNumber)">2</method>
			<method name="public void consumeHiddenToken(org.antlr.runtime.Token token)">2</method>
			<method name="public void nilNode(Object t)">2</method>
			<method name="public void _init_(org.antlr.runtime.debug.DebugEventListener a, org.antlr.runtime.debug.DebugEventListener b)">1</method>
			<method name="public void _init_(org.antlr.runtime.debug.DebugEventListener listener)">1</method>
			<method name="public void beginBacktrack(int level)">2</method>
			<method name="public void mark(int index)">2</method>
			<method name="public void terminate()">2</method>
			<method name="public void exitSubRule(int decisionNumber)">2</method>
			<method name="public void setTokenBoundaries(Object t, int tokenStartIndex, int tokenStopIndex)">2</method>
			<method name="public void addListener(org.antlr.runtime.debug.DebugEventListener listener)">1</method>
			<method name="public void rewind()">2</method>
			<method name="public void LT(int index, org.antlr.runtime.Token t)">2</method>
			<method name="public void endResync()">2</method>
			<method name="public void consumeNode(Object t)">2</method>
			<method name="public void enterDecision(int decisionNumber)">2</method>
			<method name="public void errorNode(Object t)">2</method>
			<method name="public void enterAlt(int alt)">2</method>
			<method name="public void addChild(Object root, Object child)">2</method>
			<method name="public void becomeRoot(Object newRoot, Object oldRoot)">2</method>
			<method name="public void commence()">2</method>
			<method name="public void beginResync()">2</method>
			<method name="public void createNode(Object t)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$2</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>5</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>31</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.5714285714285714</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.0</amc>
		<cc>
			<method name="void _init_(org.antlr.runtime.tree.TreeWizard, org.antlr.runtime.tree.TreeWizard$TreePattern, java.util.List)">1</method>
			<method name="public void visit(Object t, Object parent, int childIndex, java.util.Map labels)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.RewriteRuleSubtreeStream</name>
		<wmc>5</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>12</rfc>
		<lcom>8</lcom>
		<ca>0</ca>
		<ce>6</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>53</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.56</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.6</amc>
		<cc>
			<method name="protected Object dup(Object el)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription, Object oneElement)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription, java.util.List elements)">1</method>
			<method name="public Object nextNode()">4</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeVisitorAction</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>2</cbo>
		<rfc>2</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>1</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>2</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract Object post(Object)">1</method>
			<method name="public abstract Object pre(Object)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.MismatchedSetException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>10</cbo>
		<rfc>11</rfc>
		<lcom>1</lcom>
		<ca>3</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>31</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.0</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(org.antlr.runtime.BitSet expecting, org.antlr.runtime.IntStream input)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.MismatchedTokenException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>2</noc>
		<cbo>11</cbo>
		<rfc>10</rfc>
		<lcom>0</lcom>
		<ca>5</ca>
		<ce>6</ce>
		<npm>3</npm>
		<lcom3>0.0</lcom3>
		<loc>37</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.0</amc>
		<cc>
			<method name="public void _init_(int expecting, org.antlr.runtime.IntStream input)">1</method>
			<method name="public String toString()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.Tree</name>
		<wmc>27</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>17</cbo>
		<rfc>28</rfc>
		<lcom>351</lcom>
		<ca>12</ca>
		<ce>6</ce>
		<npm>26</npm>
		<lcom3>1.0</lcom3>
		<loc>34</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.2222222222222222</amc>
		<cc>
			<method name="public abstract java.util.List getAncestors()">1</method>
			<method name="public abstract void freshenParentAndChildIndexes()">1</method>
			<method name="public abstract int getLine()">1</method>
			<method name="public abstract int getCharPositionInLine()">1</method>
			<method name="public abstract void addChild(org.antlr.runtime.tree.Tree)">1</method>
			<method name="public abstract int getType()">1</method>
			<method name="public abstract org.antlr.runtime.tree.Tree getAncestor(int)">1</method>
			<method name="public abstract void setChild(int, org.antlr.runtime.tree.Tree)">1</method>
			<method name="public abstract boolean hasAncestor(int)">1</method>
			<method name="public abstract void setTokenStopIndex(int)">1</method>
			<method name="public abstract org.antlr.runtime.tree.Tree dupNode()">1</method>
			<method name="public abstract void setParent(org.antlr.runtime.tree.Tree)">1</method>
			<method name="public abstract boolean isNil()">1</method>
			<method name="public abstract int getTokenStartIndex()">1</method>
			<method name="public abstract void setChildIndex(int)">1</method>
			<method name="public abstract int getChildCount()">1</method>
			<method name="public abstract int getChildIndex()">1</method>
			<method name="public abstract String getText()">1</method>
			<method name="public abstract org.antlr.runtime.tree.Tree getChild(int)">1</method>
			<method name="public abstract int getTokenStopIndex()">1</method>
			<method name="public abstract void setTokenStartIndex(int)">1</method>
			<method name="public abstract org.antlr.runtime.tree.Tree getParent()">1</method>
			<method name="public abstract String toString()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public abstract Object deleteChild(int)">1</method>
			<method name="public abstract void replaceChildren(int, int, Object)">1</method>
			<method name="public abstract String toStringTree()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.BaseRecognizer</name>
		<wmc>42</wmc>
		<dit>1</dit>
		<noc>3</noc>
		<cbo>33</cbo>
		<rfc>89</rfc>
		<lcom>481</lcom>
		<ca>5</ca>
		<ce>28</ce>
		<npm>35</npm>
		<lcom3>0.940766550522648</lcom3>
		<loc>1162</loc>
		<dam>0.14285714285714285</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.1684981684981685</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>26.5</amc>
		<cc>
			<method name="public void recover(org.antlr.runtime.IntStream input, org.antlr.runtime.RecognitionException re)">2</method>
			<method name="public int getRuleMemoizationCacheSize()">4</method>
			<method name="public Object match(org.antlr.runtime.IntStream input, int ttype, org.antlr.runtime.BitSet follow)">1</method>
			<method name="protected Object getMissingSymbol(org.antlr.runtime.IntStream input, org.antlr.runtime.RecognitionException e, int expectedTokenType, org.antlr.runtime.BitSet follow)">1</method>
			<method name="public void consumeUntil(org.antlr.runtime.IntStream input, int tokenType)">3</method>
			<method name="public java.util.List toStrings(java.util.List tokens)">3</method>
			<method name="public java.util.List getRuleInvocationStack()">1</method>
			<method name="public void reset()">4</method>
			<method name="public String getErrorHeader(org.antlr.runtime.RecognitionException e)">1</method>
			<method name="public boolean mismatchIsUnwantedToken(org.antlr.runtime.IntStream input, int ttype)">2</method>
			<method name="public void _init_(org.antlr.runtime.RecognizerSharedState state)">2</method>
			<method name="public int getRuleMemoization(int ruleIndex, int ruleStartIndex)">3</method>
			<method name="protected Object recoverFromMismatchedToken(org.antlr.runtime.IntStream input, int ttype, org.antlr.runtime.BitSet follow)">1</method>
			<method name="public void matchAny(org.antlr.runtime.IntStream input)">1</method>
			<method name="protected void pushFollow(org.antlr.runtime.BitSet fset)">2</method>
			<method name="protected Object getCurrentInputSymbol(org.antlr.runtime.IntStream input)">1</method>
			<method name="public abstract String getSourceName()">1</method>
			<method name="public void displayRecognitionError(String[] tokenNames, org.antlr.runtime.RecognitionException e)">1</method>
			<method name="public String getGrammarFileName()">1</method>
			<method name="public void traceOut(String ruleName, int ruleIndex, Object inputSymbol)">3</method>
			<method name="public void emitErrorMessage(String msg)">1</method>
			<method name="protected org.antlr.runtime.BitSet combineFollows(boolean exact)">5</method>
			<method name="public int getBacktrackingLevel()">1</method>
			<method name="public int getNumberOfSyntaxErrors()">1</method>
			<method name="public Object recoverFromMismatchedSet(org.antlr.runtime.IntStream input, org.antlr.runtime.RecognitionException e, org.antlr.runtime.BitSet follow)">1</method>
			<method name="public void traceIn(String ruleName, int ruleIndex, Object inputSymbol)">2</method>
			<method name="public void reportError(org.antlr.runtime.RecognitionException e)">2</method>
			<method name="protected org.antlr.runtime.BitSet computeContextSensitiveRuleFOLLOW()">1</method>
			<method name="public boolean mismatchIsMissingToken(org.antlr.runtime.IntStream input, org.antlr.runtime.BitSet follow)">6</method>
			<method name="protected org.antlr.runtime.BitSet computeErrorRecoverySet()">1</method>
			<method name="public void endResync()">1</method>
			<method name="public static java.util.List getRuleInvocationStack(Throwable e, String recognizerClassName)">5</method>
			<method name="public void setBacktrackingLevel(int n)">1</method>
			<method name="public boolean alreadyParsedRule(org.antlr.runtime.IntStream input, int ruleIndex)">3</method>
			<method name="public String getTokenErrorDisplay(org.antlr.runtime.Token t)">3</method>
			<method name="public void memoize(org.antlr.runtime.IntStream input, int ruleIndex, int ruleStartIndex)">5</method>
			<method name="public boolean failed()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void beginResync()">1</method>
			<method name="public String[] getTokenNames()">1</method>
			<method name="public String getErrorMessage(org.antlr.runtime.RecognitionException e, String[] tokenNames)">14</method>
			<method name="public void consumeUntil(org.antlr.runtime.IntStream input, org.antlr.runtime.BitSet set)">3</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.RemoteDebugEventSocketListener</name>
		<wmc>14</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>33</cbo>
		<rfc>92</rfc>
		<lcom>65</lcom>
		<ca>0</ca>
		<ce>33</ce>
		<npm>5</npm>
		<lcom3>0.8012820512820512</lcom3>
		<loc>1236</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.34285714285714286</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>86.42857142857143</amc>
		<cc>
			<method name="protected void closeConnection()">10</method>
			<method name="protected org.antlr.runtime.debug.RemoteDebugEventSocketListener$ProxyTree deserializeNode(String[] elements, int offset)">1</method>
			<method name="public void _init_(org.antlr.runtime.debug.DebugEventListener listener, String machine, int port)">1</method>
			<method name="public void run()">1</method>
			<method name="public void start()">1</method>
			<method name="protected void handshake()">1</method>
			<method name="protected String unEscapeNewlines(String txt)">1</method>
			<method name="protected org.antlr.runtime.debug.RemoteDebugEventSocketListener$ProxyToken deserializeToken(String[] elements, int offset)">1</method>
			<method name="protected void dispatch(String line)">36</method>
			<method name="public boolean tokenIndexesAreInvalid()">1</method>
			<method name="protected void eventHandler()">2</method>
			<method name="protected boolean openConnection()">1</method>
			<method name="protected void ack()">1</method>
			<method name="public String[] getEventElements(String event)">5</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.DFA</name>
		<wmc>8</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>16</rfc>
		<lcom>28</lcom>
		<ca>0</ca>
		<ce>8</ce>
		<npm>6</npm>
		<lcom3>0.9857142857142858</lcom3>
		<loc>320</loc>
		<dam>0.9</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.35</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>37.75</amc>
		<cc>
			<method name="public int specialStateTransition(int s, org.antlr.runtime.IntStream input)">1</method>
			<method name="public int predict(org.antlr.runtime.IntStream input)">1</method>
			<method name="public String getDescription()">1</method>
			<method name="public static char[] unpackEncodedStringToUnsignedChars(String encodedString)">4</method>
			<method name="public static short[] unpackEncodedString(String encodedString)">4</method>
			<method name="protected void error(org.antlr.runtime.NoViableAltException nvae)">1</method>
			<method name="public void _init_()">1</method>
			<method name="protected void noViableAlt(int s, org.antlr.runtime.IntStream input)">1</method>
		</cc>
	</class>

	<class>
		<name>org.antlr.runtime.tree.RewriteEmptyStreamException</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>5</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public void _init_(String elementDescription)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$Visitor</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>5</cbo>
		<rfc>4</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>10</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5833333333333334</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>2.3333333333333335</amc>
		<cc>
			<method name="public abstract void visit(Object)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void visit(Object t, Object parent, int childIndex, java.util.Map labels)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.MismatchedRangeException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>10</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>40</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.666666666666666</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_(int a, int b, org.antlr.runtime.IntStream input)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenRewriteStream$InsertBeforeOp</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>7</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>33</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.6</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>15.0</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.TokenRewriteStream, int index, Object text)">1</method>
			<method name="public int execute(StringBuffer buf)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$WildcardTreePattern</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>5</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.Token payload)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.UnBufferedTreeNodeStream</name>
		<wmc>33</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>18</cbo>
		<rfc>67</rfc>
		<lcom>312</lcom>
		<ca>1</ca>
		<ce>18</ce>
		<npm>25</npm>
		<lcom3>0.7640625</lcom3>
		<loc>918</loc>
		<dam>0.9</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.22943722943722944</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>26.21212121212121</amc>
		<cc>
			<method name="public Object get(int i)">1</method>
			<method name="public int LA(int i)">2</method>
			<method name="public int mark()">4</method>
			<method name="public void reset()">1</method>
			<method name="protected void addLookahead(Object node)">2</method>
			<method name="public void setTokenStream(org.antlr.runtime.TokenStream tokens)">1</method>
			<method name="public int size()">1</method>
			<method name="protected Object handleRootNode()">3</method>
			<method name="public String toString()">1</method>
			<method name="protected Object visitChild(int child)">3</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, Object tree)">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public Object getTreeSource()">1</method>
			<method name="public void rewind(int marker)">3</method>
			<method name="public org.antlr.runtime.tree.TreeAdaptor getTreeAdaptor()">1</method>
			<method name="public void seek(int index)">3</method>
			<method name="public void rewind()">1</method>
			<method name="public org.antlr.runtime.TokenStream getTokenStream()">1</method>
			<method name="public void release(int marker)">1</method>
			<method name="public int index()">1</method>
			<method name="protected void addNavigationNode(int ttype)">4</method>
			<method name="public Object next()">5</method>
			<method name="protected void walkBackToMostRecentNodeWithUnvisitedChildren()">7</method>
			<method name="public String toString(Object start, Object stop)">5</method>
			<method name="public boolean hasUniqueNavigationNodes()">1</method>
			<method name="public Object LT(int k)">4</method>
			<method name="protected int getLookaheadSize()">2</method>
			<method name="public void consume()">1</method>
			<method name="protected void fill(int k)">2</method>
			<method name="public void _init_(Object tree)">1</method>
			<method name="protected void toStringWork(Object p, Object stop, StringBuffer buf)">9</method>
			<method name="public void replaceChildren(Object parent, int startChildIndex, int stopChildIndex, Object t)">1</method>
			<method name="public void setUniqueNavigationNodes(boolean uniqueNavigationNodes)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.CommonTreeAdaptor</name>
		<wmc>18</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>13</cbo>
		<rfc>38</rfc>
		<lcom>153</lcom>
		<ca>5</ca>
		<ce>8</ce>
		<npm>18</npm>
		<lcom3>2.0</lcom3>
		<loc>169</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4444444444444444</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.38888888888889</amc>
		<cc>
			<method name="public org.antlr.runtime.Token createToken(int tokenType, String text)">1</method>
			<method name="public Object getParent(Object t)">2</method>
			<method name="public void setParent(Object t, Object parent)">2</method>
			<method name="public void setTokenBoundaries(Object t, org.antlr.runtime.Token startToken, org.antlr.runtime.Token stopToken)">4</method>
			<method name="public org.antlr.runtime.Token createToken(org.antlr.runtime.Token fromToken)">1</method>
			<method name="public int getChildCount(Object t)">2</method>
			<method name="public void setChildIndex(Object t, int index)">2</method>
			<method name="public int getChildIndex(Object t)">2</method>
			<method name="public org.antlr.runtime.Token getToken(Object t)">2</method>
			<method name="public int getTokenStartIndex(Object t)">2</method>
			<method name="public Object create(org.antlr.runtime.Token payload)">1</method>
			<method name="public int getType(Object t)">2</method>
			<method name="public Object getChild(Object t, int i)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public Object dupNode(Object t)">2</method>
			<method name="public String getText(Object t)">2</method>
			<method name="public void replaceChildren(Object parent, int startChildIndex, int stopChildIndex, Object t)">2</method>
			<method name="public int getTokenStopIndex(Object t)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreePatternLexer</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>9</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>0.9285714285714286</lcom3>
		<loc>255</loc>
		<dam>0.2857142857142857</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>79.33333333333333</amc>
		<cc>
			<method name="protected void consume()">2</method>
			<method name="public void _init_(String pattern)">1</method>
			<method name="public int nextToken()">27</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.UnwantedTokenException</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>12</rfc>
		<lcom>4</lcom>
		<ca>2</ca>
		<ce>7</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>61</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.25</amc>
		<cc>
			<method name="public void _init_(int expecting, org.antlr.runtime.IntStream input)">1</method>
			<method name="public String toString()">3</method>
			<method name="public org.antlr.runtime.Token getUnexpectedToken()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.ANTLRInputStream</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>10</rfc>
		<lcom>15</lcom>
		<ca>0</ca>
		<ce>8</ce>
		<npm>6</npm>
		<lcom3>2.0</lcom3>
		<loc>55</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.7083333333333334</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.166666666666666</amc>
		<cc>
			<method name="public void _init_(java.io.InputStream input, int size)">1</method>
			<method name="public void _init_(java.io.InputStream input, String encoding)">1</method>
			<method name="public void _init_(java.io.InputStream input, int size, String encoding)">1</method>
			<method name="public void _init_(java.io.InputStream input)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(java.io.InputStream input, int size, int readBufferSize, String encoding)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeAdaptor</name>
		<wmc>31</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>23</cbo>
		<rfc>31</rfc>
		<lcom>465</lcom>
		<ca>18</ca>
		<ce>6</ce>
		<npm>31</npm>
		<lcom3>2.0</lcom3>
		<loc>31</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.35023041474654376</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void setTokenBoundaries(Object, org.antlr.runtime.Token, org.antlr.runtime.Token)">1</method>
			<method name="public abstract Object becomeRoot(org.antlr.runtime.Token, Object)">1</method>
			<method name="public abstract int getUniqueID(Object)">1</method>
			<method name="public abstract void setParent(Object, Object)">1</method>
			<method name="public abstract Object nil()">1</method>
			<method name="public abstract Object errorNode(org.antlr.runtime.TokenStream, org.antlr.runtime.Token, org.antlr.runtime.Token, org.antlr.runtime.RecognitionException)">1</method>
			<method name="public abstract Object getParent(Object)">1</method>
			<method name="public abstract int getChildCount(Object)">1</method>
			<method name="public abstract void replaceChildren(Object, int, int, Object)">1</method>
			<method name="public abstract void setText(Object, String)">1</method>
			<method name="public abstract Object create(org.antlr.runtime.Token)">1</method>
			<method name="public abstract Object dupTree(Object)">1</method>
			<method name="public abstract Object dupNode(Object)">1</method>
			<method name="public abstract Object create(int, String)">1</method>
			<method name="public abstract Object getChild(Object, int)">1</method>
			<method name="public abstract int getTokenStartIndex(Object)">1</method>
			<method name="public abstract String getText(Object)">1</method>
			<method name="public abstract int getChildIndex(Object)">1</method>
			<method name="public abstract int getTokenStopIndex(Object)">1</method>
			<method name="public abstract Object create(int, org.antlr.runtime.Token)">1</method>
			<method name="public abstract int getType(Object)">1</method>
			<method name="public abstract Object deleteChild(Object, int)">1</method>
			<method name="public abstract void setType(Object, int)">1</method>
			<method name="public abstract void addChild(Object, Object)">1</method>
			<method name="public abstract Object create(int, org.antlr.runtime.Token, String)">1</method>
			<method name="public abstract Object rulePostProcessing(Object)">1</method>
			<method name="public abstract void setChild(Object, int, Object)">1</method>
			<method name="public abstract Object becomeRoot(Object, Object)">1</method>
			<method name="public abstract org.antlr.runtime.Token getToken(Object)">1</method>
			<method name="public abstract void setChildIndex(Object, int)">1</method>
			<method name="public abstract boolean isNil(Object)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.RewriteEarlyExitException</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>0</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>10</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(String elementDescription)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugTreeAdaptor</name>
		<wmc>37</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>77</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>8</ce>
		<npm>36</npm>
		<lcom3>0.3194444444444444</lcom3>
		<loc>376</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.26426426426426425</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.108108108108109</amc>
		<cc>
			<method name="public void setDebugListener(org.antlr.runtime.debug.DebugEventListener dbg)">1</method>
			<method name="public void addChild(Object t, org.antlr.runtime.Token child)">1</method>
			<method name="public Object errorNode(org.antlr.runtime.TokenStream input, org.antlr.runtime.Token start, org.antlr.runtime.Token stop, org.antlr.runtime.RecognitionException e)">2</method>
			<method name="public Object create(int tokenType, String text)">1</method>
			<method name="public void setTokenBoundaries(Object t, org.antlr.runtime.Token startToken, org.antlr.runtime.Token stopToken)">4</method>
			<method name="public void setText(Object t, String text)">1</method>
			<method name="public void setType(Object t, int type)">1</method>
			<method name="public int getChildCount(Object t)">1</method>
			<method name="public int getChildIndex(Object t)">1</method>
			<method name="public org.antlr.runtime.Token getToken(Object t)">1</method>
			<method name="public int getType(Object t)">1</method>
			<method name="public void _init_(org.antlr.runtime.debug.DebugEventListener dbg, org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="public Object getChild(Object t, int i)">1</method>
			<method name="protected void simulateTreeConstruction(Object t)">2</method>
			<method name="public Object nil()">1</method>
			<method name="public void setChild(Object t, int i, Object child)">1</method>
			<method name="public org.antlr.runtime.tree.TreeAdaptor getTreeAdaptor()">1</method>
			<method name="public Object create(int tokenType, org.antlr.runtime.Token fromToken)">1</method>
			<method name="public Object create(int tokenType, org.antlr.runtime.Token fromToken, String text)">1</method>
			<method name="public Object rulePostProcessing(Object root)">1</method>
			<method name="public Object getParent(Object t)">1</method>
			<method name="public Object deleteChild(Object t, int i)">1</method>
			<method name="public void setParent(Object t, Object parent)">1</method>
			<method name="public Object becomeRoot(Object newRoot, Object oldRoot)">1</method>
			<method name="public void addChild(Object t, Object child)">3</method>
			<method name="public Object dupNode(Object treeNode)">1</method>
			<method name="public void setChildIndex(Object t, int index)">1</method>
			<method name="public boolean isNil(Object tree)">1</method>
			<method name="public int getTokenStartIndex(Object t)">1</method>
			<method name="public org.antlr.runtime.debug.DebugEventListener getDebugListener()">1</method>
			<method name="public Object create(org.antlr.runtime.Token payload)">2</method>
			<method name="public int getUniqueID(Object node)">1</method>
			<method name="public Object becomeRoot(org.antlr.runtime.Token newRoot, Object oldRoot)">1</method>
			<method name="public Object dupTree(Object tree)">1</method>
			<method name="public String getText(Object t)">1</method>
			<method name="public void replaceChildren(Object parent, int startChildIndex, int stopChildIndex, Object t)">1</method>
			<method name="public int getTokenStopIndex(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeParser</name>
		<wmc>18</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>20</cbo>
		<rfc>51</rfc>
		<lcom>95</lcom>
		<ca>1</ca>
		<ce>19</ce>
		<npm>13</npm>
		<lcom3>0.907563025210084</lcom3>
		<loc>391</loc>
		<dam>0.14285714285714285</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.23529411764705882</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>20.333333333333332</amc>
		<cc>
			<method name="protected void mismatch(org.antlr.runtime.IntStream input, int ttype, org.antlr.runtime.BitSet follow)">1</method>
			<method name="protected Object getMissingSymbol(org.antlr.runtime.IntStream input, org.antlr.runtime.RecognitionException e, int expectedTokenType, org.antlr.runtime.BitSet follow)">1</method>
			<method name="public void traceOut(String ruleName, int ruleIndex)">1</method>
			<method name="public org.antlr.runtime.tree.TreeNodeStream getTreeNodeStream()">1</method>
			<method name="public void reset()">2</method>
			<method name="public String getErrorHeader(org.antlr.runtime.RecognitionException e)">2</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeNodeStream input, org.antlr.runtime.RecognizerSharedState state)">1</method>
			<method name="public void matchAny(org.antlr.runtime.IntStream ignore)">7</method>
			<method name="public boolean inContext(String context)">1</method>
			<method name="protected static Object getAncestor(org.antlr.runtime.tree.TreeAdaptor adaptor, String[] tokenNames, Object t, String goal)">3</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeNodeStream input)">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="protected Object getCurrentInputSymbol(org.antlr.runtime.IntStream input)">1</method>
			<method name="public static boolean inContext(org.antlr.runtime.tree.TreeAdaptor adaptor, String[] tokenNames, Object t, String context)">11</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void traceIn(String ruleName, int ruleIndex)">1</method>
			<method name="public void setTreeNodeStream(org.antlr.runtime.tree.TreeNodeStream input)">1</method>
			<method name="public String getErrorMessage(org.antlr.runtime.RecognitionException e, String[] tokenNames)">3</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.CharStreamState</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>3</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>2</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>7</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenRewriteStream</name>
		<wmc>46</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>24</cbo>
		<rfc>85</rfc>
		<lcom>949</lcom>
		<ca>4</ca>
		<ce>23</ce>
		<npm>36</npm>
		<lcom3>0.9333333333333333</lcom3>
		<loc>1024</loc>
		<dam>0.2857142857142857</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3070652173913043</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>21.108695652173914</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.TokenSource tokenSource)">1</method>
			<method name="public void deleteProgram()">1</method>
			<method name="public int getLastRewriteTokenIndex()">1</method>
			<method name="public void delete(org.antlr.runtime.Token indexT)">1</method>
			<method name="public void insertAfter(String programName, org.antlr.runtime.Token t, Object text)">1</method>
			<method name="public void replace(String programName, int from, int to, Object text)">5</method>
			<method name="public void delete(String programName, int from, int to)">1</method>
			<method name="public void delete(int index)">1</method>
			<method name="static Class class$(String x0)">1</method>
			<method name="public String toString()">1</method>
			<method name="public void replace(int from, int to, Object text)">1</method>
			<method name="public void delete(org.antlr.runtime.Token from, org.antlr.runtime.Token to)">1</method>
			<method name="public void insertAfter(int index, Object text)">1</method>
			<method name="public void insertBefore(String programName, org.antlr.runtime.Token t, Object text)">1</method>
			<method name="public void delete(int from, int to)">1</method>
			<method name="protected java.util.List getKindOfOps(java.util.List rewrites, Class kind, int before)">5</method>
			<method name="public void replace(String programName, org.antlr.runtime.Token from, org.antlr.runtime.Token to, Object text)">1</method>
			<method name="public String toDebugString()">1</method>
			<method name="protected void init()">1</method>
			<method name="public void insertAfter(String programName, int index, Object text)">1</method>
			<method name="public void insertBefore(int index, Object text)">1</method>
			<method name="public void replace(org.antlr.runtime.Token from, org.antlr.runtime.Token to, Object text)">1</method>
			<method name="public void insertBefore(String programName, int index, Object text)">1</method>
			<method name="public void deleteProgram(String programName)">1</method>
			<method name="public void replace(int index, Object text)">1</method>
			<method name="public String toString(String programName, int start, int end)">10</method>
			<method name="protected String catOpText(Object a, Object b)">3</method>
			<method name="public void replace(org.antlr.runtime.Token indexT, Object text)">1</method>
			<method name="public void insertBefore(org.antlr.runtime.Token t, Object text)">1</method>
			<method name="protected java.util.List getKindOfOps(java.util.List rewrites, Class kind)">1</method>
			<method name="protected java.util.Map reduceToSingleOperationPerIndex(java.util.List rewrites)">32</method>
			<method name="public String toOriginalString()">1</method>
			<method name="public void rollback(String programName, int instructionIndex)">2</method>
			<method name="public void insertAfter(org.antlr.runtime.Token t, Object text)">1</method>
			<method name="public void delete(String programName, org.antlr.runtime.Token from, org.antlr.runtime.Token to)">1</method>
			<method name="protected void setLastRewriteTokenIndex(String programName, int i)">1</method>
			<method name="public String toString(int start, int end)">1</method>
			<method name="private java.util.List initializeProgram(String name)">1</method>
			<method name="public String toOriginalString(int start, int end)">4</method>
			<method name="public void rollback(int instructionIndex)">1</method>
			<method name="public String toDebugString(int start, int end)">4</method>
			<method name="protected int getLastRewriteTokenIndex(String programName)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenSource tokenSource, int channel)">1</method>
			<method name="protected java.util.List getProgram(String name)">2</method>
			<method name="public String toString(String programName)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$ContextVisitor</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>4</ca>
		<ce>3</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void visit(Object, Object, int, java.util.Map)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.RewriteRuleNodeStream</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>12</rfc>
		<lcom>15</lcom>
		<ca>0</ca>
		<ce>7</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>36</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.0</amc>
		<cc>
			<method name="protected Object dup(Object el)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription, Object oneElement)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription, java.util.List elements)">1</method>
			<method name="public Object nextNode()">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription)">1</method>
			<method name="protected Object toTree(Object el)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.ClassicToken</name>
		<wmc>19</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>30</rfc>
		<lcom>75</lcom>
		<ca>0</ca>
		<ce>6</ce>
		<npm>19</npm>
		<lcom3>0.7685185185185185</lcom3>
		<loc>205</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3368421052631579</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.473684210526315</amc>
		<cc>
			<method name="public int getTokenIndex()">1</method>
			<method name="public void _init_(org.antlr.runtime.Token oldToken)">1</method>
			<method name="public void setLine(int line)">1</method>
			<method name="public int getChannel()">1</method>
			<method name="public void setChannel(int channel)">1</method>
			<method name="public void setInputStream(org.antlr.runtime.CharStream input)">1</method>
			<method name="public void setType(int type)">1</method>
			<method name="public void _init_(int type)">1</method>
			<method name="public org.antlr.runtime.CharStream getInputStream()">1</method>
			<method name="public String toString()">3</method>
			<method name="public String getText()">1</method>
			<method name="public void setTokenIndex(int index)">1</method>
			<method name="public int getLine()">1</method>
			<method name="public int getCharPositionInLine()">1</method>
			<method name="public int getType()">1</method>
			<method name="public void setText(String text)">1</method>
			<method name="public void _init_(int type, String text, int channel)">1</method>
			<method name="public void setCharPositionInLine(int charPositionInLine)">1</method>
			<method name="public void _init_(int type, String text)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.CommonTree</name>
		<wmc>20</wmc>
		<dit>0</dit>
		<noc>2</noc>
		<cbo>13</cbo>
		<rfc>33</rfc>
		<lcom>12</lcom>
		<ca>8</ca>
		<ce>7</ce>
		<npm>20</npm>
		<lcom3>0.6842105263157895</lcom3>
		<loc>292</loc>
		<dam>0.4</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.26</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.35</amc>
		<cc>
			<method name="public org.antlr.runtime.Token getToken()">1</method>
			<method name="public void _init_(org.antlr.runtime.Token t)">1</method>
			<method name="public void setTokenStopIndex(int index)">1</method>
			<method name="public void setTokenStartIndex(int index)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.CommonTree node)">1</method>
			<method name="public int getTokenStartIndex()">3</method>
			<method name="public org.antlr.runtime.tree.Tree getParent()">1</method>
			<method name="public String toString()">4</method>
			<method name="public org.antlr.runtime.tree.Tree dupNode()">1</method>
			<method name="public String getText()">2</method>
			<method name="public boolean isNil()">2</method>
			<method name="public int getLine()">4</method>
			<method name="public int getCharPositionInLine()">4</method>
			<method name="public int getType()">2</method>
			<method name="public int getChildIndex()">1</method>
			<method name="public void setUnknownTokenBoundaries()">8</method>
			<method name="public void _init_()">1</method>
			<method name="public void setParent(org.antlr.runtime.tree.Tree t)">1</method>
			<method name="public void setChildIndex(int index)">1</method>
			<method name="public int getTokenStopIndex()">3</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.MismatchedNotSetException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>11</rfc>
		<lcom>3</lcom>
		<ca>2</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>28</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.333333333333334</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(org.antlr.runtime.BitSet expecting, org.antlr.runtime.IntStream input)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.BaseTree</name>
		<wmc>28</wmc>
		<dit>1</dit>
		<noc>3</noc>
		<cbo>13</cbo>
		<rfc>53</rfc>
		<lcom>306</lcom>
		<ca>3</ca>
		<ce>11</ce>
		<npm>27</npm>
		<lcom3>0.5925925925925926</lcom3>
		<loc>629</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.32142857142857145</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>21.428571428571427</amc>
		<cc>
			<method name="public Object deleteChild(int i)">2</method>
			<method name="public void addChildren(java.util.List kids)">2</method>
			<method name="public void sanityCheckParentAndChildIndexes()">1</method>
			<method name="public String toStringTree()">8</method>
			<method name="public int getLine()">1</method>
			<method name="public void sanityCheckParentAndChildIndexes(org.antlr.runtime.tree.Tree parent, int i)">4</method>
			<method name="public int getChildIndex()">1</method>
			<method name="public void setChild(int i, org.antlr.runtime.tree.Tree t)">4</method>
			<method name="public org.antlr.runtime.tree.Tree getChild(int i)">3</method>
			<method name="public int getChildCount()">2</method>
			<method name="public void setChildIndex(int index)">1</method>
			<method name="public void replaceChildren(int startChildIndex, int stopChildIndex, Object t)">9</method>
			<method name="public boolean hasAncestor(int ttype)">2</method>
			<method name="public java.util.List getChildren()">1</method>
			<method name="protected java.util.List createChildrenList()">1</method>
			<method name="public org.antlr.runtime.tree.Tree getFirstChildWithType(int type)">4</method>
			<method name="public org.antlr.runtime.tree.Tree getParent()">1</method>
			<method name="public void addChild(org.antlr.runtime.tree.Tree t)">8</method>
			<method name="public java.util.List getAncestors()">3</method>
			<method name="public void _init_(org.antlr.runtime.tree.Tree node)">1</method>
			<method name="public boolean isNil()">1</method>
			<method name="public int getCharPositionInLine()">1</method>
			<method name="public abstract String toString()">1</method>
			<method name="public void freshenParentAndChildIndexes()">1</method>
			<method name="public org.antlr.runtime.tree.Tree getAncestor(int ttype)">3</method>
			<method name="public void _init_()">1</method>
			<method name="public void setParent(org.antlr.runtime.tree.Tree t)">1</method>
			<method name="public void freshenParentAndChildIndexes(int offset)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenRewriteStream$ReplaceOp</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>7</cbo>
		<rfc>9</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>6</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>52</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>15.666666666666666</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public int execute(StringBuffer buf)">2</method>
			<method name="public void _init_(org.antlr.runtime.TokenRewriteStream, int from, int to, Object text)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$TreePattern</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>12</cbo>
		<rfc>7</rfc>
		<lcom>1</lcom>
		<ca>6</ca>
		<ce>6</ce>
		<npm>2</npm>
		<lcom3>1.5</lcom3>
		<loc>29</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.5</amc>
		<cc>
			<method name="public String toString()">2</method>
			<method name="public void _init_(org.antlr.runtime.Token payload)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.ParseTree</name>
		<wmc>12</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>22</rfc>
		<lcom>60</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>12</npm>
		<lcom3>0.7272727272727273</lcom3>
		<loc>137</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.25</amc>
		<cc>
			<method name="public String toString()">3</method>
			<method name="public org.antlr.runtime.tree.Tree dupNode()">1</method>
			<method name="public String getText()">1</method>
			<method name="public void _init_(Object label)">1</method>
			<method name="public int getType()">1</method>
			<method name="public void setTokenStopIndex(int index)">1</method>
			<method name="public String toStringWithHiddenTokens()">4</method>
			<method name="public void setTokenStartIndex(int index)">1</method>
			<method name="public void _toStringLeaves(StringBuffer buf)">4</method>
			<method name="public int getTokenStartIndex()">1</method>
			<method name="public String toInputString()">1</method>
			<method name="public int getTokenStopIndex()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.Profiler</name>
		<wmc>25</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>20</cbo>
		<rfc>64</rfc>
		<lcom>160</lcom>
		<ca>0</ca>
		<ce>20</ce>
		<npm>22</npm>
		<lcom3>0.8256172839506174</lcom3>
		<loc>1404</loc>
		<dam>0.2222222222222222</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.204</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>54.08</amc>
		<cc>
			<method name="public void LT(int i, org.antlr.runtime.Token t)">3</method>
			<method name="public void recognitionException(org.antlr.runtime.RecognitionException e)">1</method>
			<method name="public void exitRule(String grammarFileName, String ruleName)">1</method>
			<method name="public void semanticPredicate(boolean result, String predicate)">2</method>
			<method name="public void enterRule(String grammarFileName, String ruleName)">2</method>
			<method name="public void endBacktrack(int level, boolean successful)">1</method>
			<method name="public void consumeToken(org.antlr.runtime.Token token)">1</method>
			<method name="protected int[] trim(int[] X, int n)">2</method>
			<method name="public String toString()">1</method>
			<method name="public void exitDecision(int decisionNumber)">5</method>
			<method name="public void consumeHiddenToken(org.antlr.runtime.Token token)">1</method>
			<method name="public void memoize(org.antlr.runtime.IntStream input, int ruleIndex, int ruleStartIndex, String ruleName)">1</method>
			<method name="public void beginBacktrack(int level)">1</method>
			<method name="public String toNotifyString()">5</method>
			<method name="public void terminate()">1</method>
			<method name="public boolean inDecision()">2</method>
			<method name="public void setParser(org.antlr.runtime.debug.DebugParser parser)">1</method>
			<method name="public void enterDecision(int decisionNumber)">1</method>
			<method name="public static String toString(String notifyDataLine)">2</method>
			<method name="public void _init_(org.antlr.runtime.debug.DebugParser parser)">1</method>
			<method name="public int getNumberOfHiddenTokens(int i, int j)">4</method>
			<method name="protected static String[] decodeReportData(String data)">3</method>
			<method name="public void _init_()">1</method>
			<method name="protected int[] toArray(java.util.List a)">2</method>
			<method name="public void examineRuleMemoization(org.antlr.runtime.IntStream input, int ruleIndex, String ruleName)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.ANTLRFileStream</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>12</rfc>
		<lcom>4</lcom>
		<ca>0</ca>
		<ce>9</ce>
		<npm>4</npm>
		<lcom3>0.3333333333333333</lcom3>
		<loc>73</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.875</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.0</amc>
		<cc>
			<method name="public String getSourceName()">1</method>
			<method name="public void _init_(String fileName)">1</method>
			<method name="public void load(String fileName, String encoding)">1</method>
			<method name="public void _init_(String fileName, String encoding)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.BitSet</name>
		<wmc>28</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>20</cbo>
		<rfc>42</rfc>
		<lcom>106</lcom>
		<ca>9</ca>
		<ce>11</ce>
		<npm>24</npm>
		<lcom3>0.8055555555555556</lcom3>
		<loc>605</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.20918367346938777</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>20.464285714285715</amc>
		<cc>
			<method name="public boolean member(int el)">4</method>
			<method name="public void remove(int el)">2</method>
			<method name="public org.antlr.runtime.BitSet or(org.antlr.runtime.BitSet a)">2</method>
			<method name="public static org.antlr.runtime.BitSet of(int el)">1</method>
			<method name="public long[] toPackedArray()">1</method>
			<method name="private static final int wordNumber(int bit)">1</method>
			<method name="public Object clone()">1</method>
			<method name="public int size()">5</method>
			<method name="public String toString(String[] tokenNames)">6</method>
			<method name="public void _init_(long[] bits_)">1</method>
			<method name="public String toString()">1</method>
			<method name="public void _init_(java.util.List items)">2</method>
			<method name="public void _init_(int nbits)">1</method>
			<method name="public boolean equals(Object other)">10</method>
			<method name="public void growToInclude(int bit)">1</method>
			<method name="public int lengthInLongWords()">1</method>
			<method name="public void orInPlace(org.antlr.runtime.BitSet a)">4</method>
			<method name="private void setSize(int nwords)">1</method>
			<method name="public int numBits()">1</method>
			<method name="public int[] toArray()">3</method>
			<method name="public static org.antlr.runtime.BitSet of(int a, int b, int c, int d)">1</method>
			<method name="public void add(int el)">2</method>
			<method name="public boolean isNil()">3</method>
			<method name="private final int numWordsToHold(int el)">1</method>
			<method name="public static org.antlr.runtime.BitSet of(int a, int b)">1</method>
			<method name="private static final long bitMask(int bitNumber)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public static org.antlr.runtime.BitSet of(int a, int b, int c)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenRewriteStream$DeleteOp</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>7</rfc>
		<lcom>1</lcom>
		<ca>0</ca>
		<ce>6</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>30</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.5</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenRewriteStream, int from, int to)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.CharStream</name>
		<wmc>6</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>6</rfc>
		<lcom>15</lcom>
		<ca>8</ca>
		<ce>4</ce>
		<npm>6</npm>
		<lcom3>1.2</lcom3>
		<loc>7</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.8333333333333334</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract int getLine()">1</method>
			<method name="public abstract void setLine(int)">1</method>
			<method name="public abstract void setCharPositionInLine(int)">1</method>
			<method name="public abstract int getCharPositionInLine()">1</method>
			<method name="public abstract int LT(int)">1</method>
			<method name="public abstract String substring(int, int)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugParser</name>
		<wmc>11</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>21</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>11</ce>
		<npm>11</npm>
		<lcom3>0.45</lcom3>
		<loc>118</loc>
		<dam>0.5</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.2727272727272727</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.545454545454545</amc>
		<cc>
			<method name="public void reportError(org.antlr.runtime.RecognitionException e)">1</method>
			<method name="public void setDebugListener(org.antlr.runtime.debug.DebugEventListener dbg)">2</method>
			<method name="public org.antlr.runtime.debug.DebugEventListener getDebugListener()">1</method>
			<method name="public void endResync()">1</method>
			<method name="public void beginBacktrack(int level)">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream input, org.antlr.runtime.RecognizerSharedState state)">2</method>
			<method name="public void endBacktrack(int level, boolean successful)">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream input, org.antlr.runtime.debug.DebugEventListener dbg)">2</method>
			<method name="public void beginResync()">1</method>
			<method name="public void reportError(java.io.IOException e)">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream input, org.antlr.runtime.debug.DebugEventListener dbg, org.antlr.runtime.RecognizerSharedState state)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.CommonErrorNode</name>
		<wmc>5</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>16</cbo>
		<rfc>18</rfc>
		<lcom>6</lcom>
		<ca>1</ca>
		<ce>15</ce>
		<npm>5</npm>
		<lcom3>0.5625</lcom3>
		<loc>188</loc>
		<dam>0.0</dam>
		<moa>4</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>35.8</amc>
		<cc>
			<method name="public String toString()">5</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream input, org.antlr.runtime.Token start, org.antlr.runtime.Token stop, org.antlr.runtime.RecognitionException e)">4</method>
			<method name="public String getText()">4</method>
			<method name="public boolean isNil()">1</method>
			<method name="public int getType()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeNodeStream</name>
		<wmc>8</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>8</rfc>
		<lcom>28</lcom>
		<ca>8</ca>
		<ce>6</ce>
		<npm>8</npm>
		<lcom3>2.0</lcom3>
		<loc>8</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract String toString(Object, Object)">1</method>
			<method name="public abstract Object LT(int)">1</method>
			<method name="public abstract void replaceChildren(Object, int, int, Object)">1</method>
			<method name="public abstract Object get(int)">1</method>
			<method name="public abstract void setUniqueNavigationNodes(boolean)">1</method>
			<method name="public abstract Object getTreeSource()">1</method>
			<method name="public abstract org.antlr.runtime.tree.TreeAdaptor getTreeAdaptor()">1</method>
			<method name="public abstract org.antlr.runtime.TokenStream getTokenStream()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$TreePatternTreeAdaptor</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>4</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>10</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public Object create(org.antlr.runtime.Token payload)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeRuleReturnScope</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>3</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>0</ca>
		<ce>3</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public void _init_()">1</method>
			<method name="public Object getStart()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.BaseTreeAdaptor</name>
		<wmc>24</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>15</cbo>
		<rfc>50</rfc>
		<lcom>274</lcom>
		<ca>1</ca>
		<ce>14</ce>
		<npm>24</npm>
		<lcom3>0.9782608695652174</lcom3>
		<loc>305</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.35119047619047616</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.625</amc>
		<cc>
			<method name="public Object create(int tokenType, org.antlr.runtime.Token fromToken)">1</method>
			<method name="public abstract org.antlr.runtime.Token createToken(org.antlr.runtime.Token)">1</method>
			<method name="public Object create(int tokenType, org.antlr.runtime.Token fromToken, String text)">1</method>
			<method name="public Object rulePostProcessing(Object root)">5</method>
			<method name="public Object errorNode(org.antlr.runtime.TokenStream input, org.antlr.runtime.Token start, org.antlr.runtime.Token stop, org.antlr.runtime.RecognitionException e)">1</method>
			<method name="public Object deleteChild(Object t, int i)">1</method>
			<method name="public Object create(int tokenType, String text)">1</method>
			<method name="public Object becomeRoot(Object newRoot, Object oldRoot)">5</method>
			<method name="public void addChild(Object t, Object child)">3</method>
			<method name="public void setText(Object t, String text)">1</method>
			<method name="public void setType(Object t, int type)">1</method>
			<method name="public int getChildCount(Object t)">1</method>
			<method name="public boolean isNil(Object tree)">1</method>
			<method name="public Object dupTree(Object t, Object parent)">3</method>
			<method name="public abstract org.antlr.runtime.Token createToken(int, String)">1</method>
			<method name="public int getType(Object t)">1</method>
			<method name="public int getUniqueID(Object node)">3</method>
			<method name="public Object becomeRoot(org.antlr.runtime.Token newRoot, Object oldRoot)">1</method>
			<method name="public Object getChild(Object t, int i)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object nil()">1</method>
			<method name="public Object dupTree(Object tree)">1</method>
			<method name="public void setChild(Object t, int i, Object child)">1</method>
			<method name="public String getText(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugTreeNodeStream</name>
		<wmc>20</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>43</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>20</npm>
		<lcom3>0.7157894736842105</lcom3>
		<loc>199</loc>
		<dam>1.0</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.275</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.7</amc>
		<cc>
			<method name="public void seek(int index)">1</method>
			<method name="public Object get(int i)">1</method>
			<method name="public int LA(int i)">1</method>
			<method name="public void setDebugListener(org.antlr.runtime.debug.DebugEventListener dbg)">1</method>
			<method name="public int mark()">1</method>
			<method name="public void rewind()">1</method>
			<method name="public int index()">1</method>
			<method name="public void release(int marker)">1</method>
			<method name="public org.antlr.runtime.TokenStream getTokenStream()">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeNodeStream input, org.antlr.runtime.debug.DebugEventListener dbg)">1</method>
			<method name="public int size()">1</method>
			<method name="public String toString(Object start, Object stop)">1</method>
			<method name="public Object LT(int i)">1</method>
			<method name="public void consume()">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public void rewind(int marker)">1</method>
			<method name="public Object getTreeSource()">1</method>
			<method name="public void replaceChildren(Object parent, int startChildIndex, int stopChildIndex, Object t)">1</method>
			<method name="public void setUniqueNavigationNodes(boolean uniqueNavigationNodes)">1</method>
			<method name="public org.antlr.runtime.tree.TreeAdaptor getTreeAdaptor()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.RewriteRuleTokenStream</name>
		<wmc>7</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>13</rfc>
		<lcom>21</lcom>
		<ca>0</ca>
		<ce>8</ce>
		<npm>5</npm>
		<lcom3>2.0</lcom3>
		<loc>44</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4857142857142857</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.285714285714286</amc>
		<cc>
			<method name="protected Object dup(Object el)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription, Object oneElement)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription, java.util.List elements)">1</method>
			<method name="public Object nextNode()">1</method>
			<method name="public org.antlr.runtime.Token nextToken()">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription)">1</method>
			<method name="protected Object toTree(Object el)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.BlankDebugEventListener</name>
		<wmc>32</wmc>
		<dit>1</dit>
		<noc>5</noc>
		<cbo>11</cbo>
		<rfc>33</rfc>
		<lcom>496</lcom>
		<ca>5</ca>
		<ce>6</ce>
		<npm>32</npm>
		<lcom3>2.0</lcom3>
		<loc>66</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2857142857142857</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>1.0625</amc>
		<cc>
			<method name="public void LT(int i, org.antlr.runtime.Token t)">1</method>
			<method name="public void recognitionException(org.antlr.runtime.RecognitionException e)">1</method>
			<method name="public void exitRule(String grammarFileName, String ruleName)">1</method>
			<method name="public void createNode(Object node, org.antlr.runtime.Token token)">1</method>
			<method name="public void semanticPredicate(boolean result, String predicate)">1</method>
			<method name="public void enterRule(String grammarFileName, String ruleName)">1</method>
			<method name="public void enterSubRule(int decisionNumber)">1</method>
			<method name="public void endBacktrack(int level, boolean successful)">1</method>
			<method name="public void consumeToken(org.antlr.runtime.Token token)">1</method>
			<method name="public void location(int line, int pos)">1</method>
			<method name="public void exitDecision(int decisionNumber)">1</method>
			<method name="public void consumeHiddenToken(org.antlr.runtime.Token token)">1</method>
			<method name="public void nilNode(Object t)">1</method>
			<method name="public void beginBacktrack(int level)">1</method>
			<method name="public void terminate()">1</method>
			<method name="public void exitSubRule(int decisionNumber)">1</method>
			<method name="public void setTokenBoundaries(Object t, int tokenStartIndex, int tokenStopIndex)">1</method>
			<method name="public void rewind(int i)">1</method>
			<method name="public void rewind()">1</method>
			<method name="public void endResync()">1</method>
			<method name="public void consumeNode(Object t)">1</method>
			<method name="public void mark(int i)">1</method>
			<method name="public void enterDecision(int decisionNumber)">1</method>
			<method name="public void LT(int i, Object t)">1</method>
			<method name="public void errorNode(Object t)">1</method>
			<method name="public void enterAlt(int alt)">1</method>
			<method name="public void addChild(Object root, Object child)">1</method>
			<method name="public void becomeRoot(Object newRoot, Object oldRoot)">1</method>
			<method name="public void commence()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void beginResync()">1</method>
			<method name="public void createNode(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard</name>
		<wmc>23</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>25</cbo>
		<rfc>57</rfc>
		<lcom>187</lcom>
		<ca>4</ca>
		<ce>25</ce>
		<npm>18</npm>
		<lcom3>0.6969696969696969</lcom3>
		<loc>585</loc>
		<dam>0.6666666666666666</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.30434782608695654</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>24.304347826086957</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="public java.util.List find(Object t, int ttype)">1</method>
			<method name="protected void _visit(Object t, Object parent, int childIndex, int ttype, org.antlr.runtime.tree.TreeWizard$ContextVisitor visitor)">4</method>
			<method name="public java.util.List find(Object t, String pattern)">5</method>
			<method name="public int getTokenType(String tokenName)">3</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, java.util.Map tokenNameToTypeMap)">1</method>
			<method name="public void _init_(String[] tokenNames)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String[] tokenNames)">1</method>
			<method name="static Class class$(String x0)">1</method>
			<method name="public void visit(Object t, String pattern, org.antlr.runtime.tree.TreeWizard$ContextVisitor visitor)">5</method>
			<method name="public java.util.Map computeTokenTypes(String[] tokenNames)">3</method>
			<method name="public java.util.Map index(Object t)">1</method>
			<method name="public Object findFirst(Object t, String pattern)">1</method>
			<method name="protected static boolean _equals(Object t1, Object t2, org.antlr.runtime.tree.TreeAdaptor adaptor)">8</method>
			<method name="public void visit(Object t, int ttype, org.antlr.runtime.tree.TreeWizard$ContextVisitor visitor)">1</method>
			<method name="public boolean parse(Object t, String pattern, java.util.Map labels)">1</method>
			<method name="public boolean parse(Object t, String pattern)">1</method>
			<method name="protected boolean _parse(Object t1, org.antlr.runtime.tree.TreeWizard$TreePattern tpattern, java.util.Map labels)">13</method>
			<method name="public static boolean equals(Object t1, Object t2, org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="public Object create(String pattern)">1</method>
			<method name="public Object findFirst(Object t, int ttype)">1</method>
			<method name="public boolean equals(Object t1, Object t2)">1</method>
			<method name="protected void _index(Object t, java.util.Map m)">4</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.CommonToken</name>
		<wmc>23</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>36</rfc>
		<lcom>83</lcom>
		<ca>8</ca>
		<ce>7</ce>
		<npm>23</npm>
		<lcom3>0.7727272727272727</lcom3>
		<loc>310</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.33043478260869563</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.08695652173913</amc>
		<cc>
			<method name="public int getTokenIndex()">1</method>
			<method name="public void _init_(org.antlr.runtime.Token oldToken)">2</method>
			<method name="public void setLine(int line)">1</method>
			<method name="public int getChannel()">1</method>
			<method name="public void setChannel(int channel)">1</method>
			<method name="public void setInputStream(org.antlr.runtime.CharStream input)">1</method>
			<method name="public void setType(int type)">1</method>
			<method name="public void setStartIndex(int start)">1</method>
			<method name="public void _init_(int type)">1</method>
			<method name="public int getStartIndex()">1</method>
			<method name="public int getStopIndex()">1</method>
			<method name="public org.antlr.runtime.CharStream getInputStream()">1</method>
			<method name="public String toString()">3</method>
			<method name="public String getText()">3</method>
			<method name="public void setTokenIndex(int index)">1</method>
			<method name="public int getLine()">1</method>
			<method name="public int getCharPositionInLine()">1</method>
			<method name="public int getType()">1</method>
			<method name="public void _init_(org.antlr.runtime.CharStream input, int type, int channel, int start, int stop)">1</method>
			<method name="public void setText(String text)">1</method>
			<method name="public void setStopIndex(int stop)">1</method>
			<method name="public void setCharPositionInLine(int charPositionInLine)">1</method>
			<method name="public void _init_(int type, String text)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugEventSocketProxy</name>
		<wmc>42</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>24</cbo>
		<rfc>82</rfc>
		<lcom>719</lcom>
		<ca>0</ca>
		<ce>24</ce>
		<npm>36</npm>
		<lcom3>0.7886178861788619</lcom3>
		<loc>895</loc>
		<dam>0.8888888888888888</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.20714285714285716</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>20.095238095238095</amc>
		<cc>
			<method name="public void LT(int i, org.antlr.runtime.Token t)">2</method>
			<method name="public void recognitionException(org.antlr.runtime.RecognitionException e)">1</method>
			<method name="protected void serializeText(StringBuffer buf, String text)">2</method>
			<method name="public void exitRule(String grammarFileName, String ruleName)">1</method>
			<method name="public void consumeHiddenToken(org.antlr.runtime.Token t)">1</method>
			<method name="public void consumeToken(org.antlr.runtime.Token t)">1</method>
			<method name="public void createNode(Object node, org.antlr.runtime.Token token)">1</method>
			<method name="public void semanticPredicate(boolean result, String predicate)">1</method>
			<method name="public void enterRule(String grammarFileName, String ruleName)">1</method>
			<method name="protected void serializeNode(StringBuffer buf, Object t)">2</method>
			<method name="public void enterSubRule(int decisionNumber)">1</method>
			<method name="public void endBacktrack(int level, boolean successful)">2</method>
			<method name="public void location(int line, int pos)">1</method>
			<method name="public void exitDecision(int decisionNumber)">1</method>
			<method name="public void nilNode(Object t)">1</method>
			<method name="public void _init_(org.antlr.runtime.BaseRecognizer recognizer, org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="public void beginBacktrack(int level)">1</method>
			<method name="protected void ack()">1</method>
			<method name="public org.antlr.runtime.tree.TreeAdaptor getTreeAdaptor()">1</method>
			<method name="protected String escapeNewlines(String txt)">1</method>
			<method name="public void terminate()">1</method>
			<method name="public void exitSubRule(int decisionNumber)">1</method>
			<method name="public void setTokenBoundaries(Object t, int tokenStartIndex, int tokenStopIndex)">1</method>
			<method name="public void rewind(int i)">1</method>
			<method name="protected void transmit(String event)">1</method>
			<method name="public void rewind()">1</method>
			<method name="public void endResync()">1</method>
			<method name="protected String serializeToken(org.antlr.runtime.Token t)">1</method>
			<method name="public void consumeNode(Object t)">1</method>
			<method name="public void mark(int i)">1</method>
			<method name="public void handshake()">1</method>
			<method name="public void _init_(org.antlr.runtime.BaseRecognizer recognizer, int port, org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="public void enterDecision(int decisionNumber)">1</method>
			<method name="public void LT(int i, Object t)">1</method>
			<method name="public void setTreeAdaptor(org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="public void errorNode(Object t)">1</method>
			<method name="public void enterAlt(int alt)">1</method>
			<method name="public void addChild(Object root, Object child)">1</method>
			<method name="public void becomeRoot(Object newRoot, Object oldRoot)">1</method>
			<method name="public void commence()">1</method>
			<method name="public void beginResync()">1</method>
			<method name="public void createNode(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.Lexer</name>
		<wmc>27</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>19</cbo>
		<rfc>59</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>19</ce>
		<npm>27</npm>
		<lcom3>0.3076923076923077</lcom3>
		<loc>632</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.20833333333333334</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>22.37037037037037</amc>
		<cc>
			<method name="public org.antlr.runtime.CharStream getCharStream()">1</method>
			<method name="public void match(int c)">1</method>
			<method name="public void recover(org.antlr.runtime.RecognitionException re)">1</method>
			<method name="public void traceOut(String ruleName, int ruleIndex)">1</method>
			<method name="public void reset()">3</method>
			<method name="public void _init_(org.antlr.runtime.CharStream input, org.antlr.runtime.RecognizerSharedState state)">1</method>
			<method name="public void skip()">1</method>
			<method name="public void setCharStream(org.antlr.runtime.CharStream input)">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public int getLine()">1</method>
			<method name="public void _init_(org.antlr.runtime.CharStream input)">1</method>
			<method name="public void emit(org.antlr.runtime.Token token)">1</method>
			<method name="public int getCharIndex()">1</method>
			<method name="public void match(String s)">1</method>
			<method name="public void reportError(org.antlr.runtime.RecognitionException e)">1</method>
			<method name="public String getCharErrorDisplay(int c)">6</method>
			<method name="public abstract void mTokens()">1</method>
			<method name="public String getText()">2</method>
			<method name="public org.antlr.runtime.Token nextToken()">4</method>
			<method name="public void matchAny()">1</method>
			<method name="public int getCharPositionInLine()">1</method>
			<method name="public void setText(String text)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void matchRange(int a, int b)">1</method>
			<method name="public void traceIn(String ruleName, int ruleIndex)">1</method>
			<method name="public org.antlr.runtime.Token emit()">1</method>
			<method name="public String getErrorMessage(org.antlr.runtime.RecognitionException e, String[] tokenNames)">7</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.misc.Stats</name>
		<wmc>8</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>24</rfc>
		<lcom>28</lcom>
		<ca>1</ca>
		<ce>12</ce>
		<npm>8</npm>
		<lcom3>1.1428571428571428</lcom3>
		<loc>226</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>27.125</amc>
		<cc>
			<method name="public static int sum(int[] X)">3</method>
			<method name="public static double avg(int[] X)">4</method>
			<method name="public static void writeReport(String filename, String data)">1</method>
			<method name="public static int min(int[] X)">4</method>
			<method name="public static int max(int[] X)">4</method>
			<method name="public static String getAbsoluteFileName(String filename)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public static double stddev(int[] X)">3</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.RemoteDebugEventSocketListener$ProxyTree</name>
		<wmc>10</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>11</rfc>
		<lcom>35</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>10</npm>
		<lcom3>0.8703703703703705</lcom3>
		<loc>78</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.2</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public org.antlr.runtime.tree.Tree dupNode()">1</method>
			<method name="public String getText()">1</method>
			<method name="public int getType()">1</method>
			<method name="public void setTokenStopIndex(int index)">1</method>
			<method name="public void _init_(int ID, int type, int line, int charPos, int tokenIndex, String text)">1</method>
			<method name="public void setTokenStartIndex(int index)">1</method>
			<method name="public void _init_(int ID)">1</method>
			<method name="public int getTokenStartIndex()">1</method>
			<method name="public int getTokenStopIndex()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.MissingTokenException</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>11</rfc>
		<lcom>4</lcom>
		<ca>2</ca>
		<ce>7</ce>
		<npm>4</npm>
		<lcom3>0.6666666666666666</lcom3>
		<loc>61</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.0</amc>
		<cc>
			<method name="public String toString()">4</method>
			<method name="public int getMissingType()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(int expecting, org.antlr.runtime.IntStream input, Object inserted)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.EarlyExitException</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>4</rfc>
		<lcom>1</lcom>
		<ca>2</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>13</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.0</amc>
		<cc>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(int decisionNumber, org.antlr.runtime.IntStream input)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenRewriteStream$RewriteOperation</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>2</noc>
		<cbo>8</cbo>
		<rfc>14</rfc>
		<lcom>0</lcom>
		<ca>3</ca>
		<ce>6</ce>
		<npm>2</npm>
		<lcom3>0.75</lcom3>
		<loc>59</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.333333333333332</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public int execute(StringBuffer buf)">1</method>
			<method name="protected void _init_(org.antlr.runtime.TokenRewriteStream, int index, Object text)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.RecognitionException</name>
		<wmc>4</wmc>
		<dit>3</dit>
		<noc>7</noc>
		<cbo>38</cbo>
		<rfc>21</rfc>
		<lcom>0</lcom>
		<ca>26</ca>
		<ce>13</ce>
		<npm>3</npm>
		<lcom3>0.625</lcom3>
		<loc>216</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.9130434782608695</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>51.0</amc>
		<cc>
			<method name="public int getUnexpectedType()">3</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(org.antlr.runtime.IntStream input)">4</method>
			<method name="protected void extractInformationFromTreeNodeStream(org.antlr.runtime.IntStream input)">7</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.Token</name>
		<wmc>15</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>46</cbo>
		<rfc>16</rfc>
		<lcom>105</lcom>
		<ca>42</ca>
		<ce>5</ce>
		<npm>14</npm>
		<lcom3>1.051948051948052</lcom3>
		<loc>42</loc>
		<dam>0.0</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>1.0666666666666667</amc>
		<cc>
			<method name="public abstract int getLine()">1</method>
			<method name="public abstract void setCharPositionInLine(int)">1</method>
			<method name="public abstract int getChannel()">1</method>
			<method name="public abstract int getCharPositionInLine()">1</method>
			<method name="public abstract void setText(String)">1</method>
			<method name="public abstract int getType()">1</method>
			<method name="public abstract void setTokenIndex(int)">1</method>
			<method name="public abstract void setChannel(int)">1</method>
			<method name="public abstract org.antlr.runtime.CharStream getInputStream()">1</method>
			<method name="public abstract void setType(int)">1</method>
			<method name="public abstract void setLine(int)">1</method>
			<method name="public abstract String getText()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public abstract int getTokenIndex()">1</method>
			<method name="public abstract void setInputStream(org.antlr.runtime.CharStream)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugTokenStream</name>
		<wmc>19</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>40</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>18</npm>
		<lcom3>0.5972222222222222</lcom3>
		<loc>222</loc>
		<dam>0.75</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.3157894736842105</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.473684210526315</amc>
		<cc>
			<method name="public org.antlr.runtime.Token get(int i)">1</method>
			<method name="public void seek(int index)">1</method>
			<method name="public int LA(int i)">2</method>
			<method name="public void setDebugListener(org.antlr.runtime.debug.DebugEventListener dbg)">1</method>
			<method name="public int mark()">1</method>
			<method name="public void rewind()">1</method>
			<method name="public int index()">1</method>
			<method name="public void release(int marker)">1</method>
			<method name="public org.antlr.runtime.TokenSource getTokenSource()">1</method>
			<method name="public int size()">1</method>
			<method name="protected void consumeInitialHiddenTokens()">2</method>
			<method name="public org.antlr.runtime.Token LT(int i)">2</method>
			<method name="public String toString()">1</method>
			<method name="public void consume()">4</method>
			<method name="public String getSourceName()">1</method>
			<method name="public String toString(int start, int stop)">1</method>
			<method name="public void rewind(int marker)">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream input, org.antlr.runtime.debug.DebugEventListener dbg)">1</method>
			<method name="public String toString(org.antlr.runtime.Token start, org.antlr.runtime.Token stop)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.TraceDebugEventListener</name>
		<wmc>14</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>24</rfc>
		<lcom>19</lcom>
		<ca>0</ca>
		<ce>9</ce>
		<npm>14</npm>
		<lcom3>0.38461538461538464</lcom3>
		<loc>278</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.36904761904761907</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>18.785714285714285</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="public void exitSubRule(int decisionNumber)">1</method>
			<method name="public void setTokenBoundaries(Object t, int tokenStartIndex, int tokenStopIndex)">1</method>
			<method name="public void createNode(Object node, org.antlr.runtime.Token token)">1</method>
			<method name="public void enterSubRule(int decisionNumber)">1</method>
			<method name="public void consumeNode(Object t)">1</method>
			<method name="public void location(int line, int pos)">1</method>
			<method name="public void LT(int i, Object t)">1</method>
			<method name="public void nilNode(Object t)">1</method>
			<method name="public void enterRule(String ruleName)">1</method>
			<method name="public void exitRule(String ruleName)">1</method>
			<method name="public void addChild(Object root, Object child)">1</method>
			<method name="public void becomeRoot(Object newRoot, Object oldRoot)">1</method>
			<method name="public void createNode(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugTreeParser</name>
		<wmc>12</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>24</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>13</ce>
		<npm>11</npm>
		<lcom3>0.45454545454545453</lcom3>
		<loc>132</loc>
		<dam>0.5</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.24166666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.833333333333334</amc>
		<cc>
			<method name="public void reportError(org.antlr.runtime.RecognitionException e)">1</method>
			<method name="protected Object getMissingSymbol(org.antlr.runtime.IntStream input, org.antlr.runtime.RecognitionException e, int expectedTokenType, org.antlr.runtime.BitSet follow)">1</method>
			<method name="public void setDebugListener(org.antlr.runtime.debug.DebugEventListener dbg)">2</method>
			<method name="public org.antlr.runtime.debug.DebugEventListener getDebugListener()">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeNodeStream input, org.antlr.runtime.RecognizerSharedState state)">2</method>
			<method name="public void endResync()">1</method>
			<method name="public void beginBacktrack(int level)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeNodeStream input, org.antlr.runtime.debug.DebugEventListener dbg, org.antlr.runtime.RecognizerSharedState state)">2</method>
			<method name="public void endBacktrack(int level, boolean successful)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeNodeStream input, org.antlr.runtime.debug.DebugEventListener dbg)">2</method>
			<method name="public void beginResync()">1</method>
			<method name="public void reportError(java.io.IOException e)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreePatternParser</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>17</cbo>
		<rfc>20</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>17</ce>
		<npm>4</npm>
		<lcom3>0.30000000000000004</lcom3>
		<loc>299</loc>
		<dam>0.8</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.32</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>57.8</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.tree.TreePatternLexer tokenizer, org.antlr.runtime.tree.TreeWizard wizard, org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="static Class class$(String x0)">1</method>
			<method name="public Object pattern()">4</method>
			<method name="public Object parseTree()">10</method>
			<method name="public Object parseNode()">16</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.Parser</name>
		<wmc>10</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>13</cbo>
		<rfc>26</rfc>
		<lcom>15</lcom>
		<ca>1</ca>
		<ce>12</ce>
		<npm>8</npm>
		<lcom3>0.2222222222222222</lcom3>
		<loc>128</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.2875</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.7</amc>
		<cc>
			<method name="public void setTokenStream(org.antlr.runtime.TokenStream input)">1</method>
			<method name="protected Object getMissingSymbol(org.antlr.runtime.IntStream input, org.antlr.runtime.RecognitionException e, int expectedTokenType, org.antlr.runtime.BitSet follow)">3</method>
			<method name="public void traceOut(String ruleName, int ruleIndex)">1</method>
			<method name="protected Object getCurrentInputSymbol(org.antlr.runtime.IntStream input)">1</method>
			<method name="public org.antlr.runtime.TokenStream getTokenStream()">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public void reset()">2</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream input, org.antlr.runtime.RecognizerSharedState state)">1</method>
			<method name="public void traceIn(String ruleName, int ruleIndex)">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenStream input)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.Tracer</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>14</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>11</ce>
		<npm>4</npm>
		<lcom3>0.16666666666666666</lcom3>
		<loc>102</loc>
		<dam>0.5</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>24.0</amc>
		<cc>
			<method name="public Object getInputSymbol(int k)">2</method>
			<method name="public void enterRule(String ruleName)">2</method>
			<method name="public void exitRule(String ruleName)">2</method>
			<method name="public void _init_(org.antlr.runtime.IntStream input)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeVisitor</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>10</rfc>
		<lcom>1</lcom>
		<ca>0</ca>
		<ce>5</ce>
		<npm>3</npm>
		<lcom3>0.0</lcom3>
		<loc>62</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>19.333333333333332</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object visit(Object t, org.antlr.runtime.tree.TreeVisitorAction action)">6</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenSource</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>2</rfc>
		<lcom>1</lcom>
		<ca>5</ca>
		<ce>3</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>2</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract String getSourceName()">1</method>
			<method name="public abstract org.antlr.runtime.Token nextToken()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.CommonTreeNodeStream</name>
		<wmc>37</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>18</cbo>
		<rfc>71</rfc>
		<lcom>220</lcom>
		<ca>2</ca>
		<ce>17</ce>
		<npm>33</npm>
		<lcom3>0.767094017094017</lcom3>
		<loc>746</loc>
		<dam>0.7692307692307693</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.24324324324324326</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>18.81081081081081</amc>
		<cc>
			<method name="protected void fillBuffer()">1</method>
			<method name="public Object get(int i)">2</method>
			<method name="public int LA(int i)">1</method>
			<method name="public int mark()">2</method>
			<method name="public void reset()">2</method>
			<method name="public void setTokenStream(org.antlr.runtime.TokenStream tokens)">1</method>
			<method name="public int pop()">1</method>
			<method name="public int size()">2</method>
			<method name="public Object getCurrentSymbol()">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.CommonTreeNodeStream parent, int start, int stop)">1</method>
			<method name="public String toString()">3</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, Object tree)">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public Object getTreeSource()">1</method>
			<method name="public void rewind(int marker)">1</method>
			<method name="public org.antlr.runtime.tree.TreeAdaptor getTreeAdaptor()">1</method>
			<method name="public void seek(int index)">2</method>
			<method name="public void push(int index)">2</method>
			<method name="public void rewind()">1</method>
			<method name="public org.antlr.runtime.TokenStream getTokenStream()">1</method>
			<method name="public void release(int marker)">1</method>
			<method name="public int index()">1</method>
			<method name="protected int getNodeIndex(Object node)">4</method>
			<method name="protected void addNavigationNode(int ttype)">4</method>
			<method name="public String toString(Object start, Object stop)">14</method>
			<method name="protected Object LB(int k)">3</method>
			<method name="public void fillBuffer(Object t)">7</method>
			<method name="public java.util.Iterator iterator()">2</method>
			<method name="public boolean hasUniqueNavigationNodes()">1</method>
			<method name="public Object LT(int k)">5</method>
			<method name="public void consume()">2</method>
			<method name="public void setTreeAdaptor(org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="public void _init_(Object tree)">1</method>
			<method name="public String toTokenString(int start, int stop)">4</method>
			<method name="public void replaceChildren(Object parent, int startChildIndex, int stopChildIndex, Object t)">2</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, Object tree, int initialBufferSize)">1</method>
			<method name="public void setUniqueNavigationNodes(boolean uniqueNavigationNodes)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.ParseTreeBuilder</name>
		<wmc>11</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>25</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>12</ce>
		<npm>11</npm>
		<lcom3>0.675</lcom3>
		<loc>174</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.30303030303030304</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.454545454545455</amc>
		<cc>
			<method name="public org.antlr.runtime.tree.ParseTree getTree()">1</method>
			<method name="public void exitDecision(int i)">1</method>
			<method name="public void exitRule(String filename, String ruleName)">3</method>
			<method name="public void consumeHiddenToken(org.antlr.runtime.Token token)">2</method>
			<method name="public void recognitionException(org.antlr.runtime.RecognitionException e)">2</method>
			<method name="public void enterRule(String filename, String ruleName)">2</method>
			<method name="public org.antlr.runtime.tree.ParseTree epsilonNode()">1</method>
			<method name="public void enterDecision(int d)">1</method>
			<method name="public void _init_(String grammarName)">1</method>
			<method name="public org.antlr.runtime.tree.ParseTree create(Object payload)">1</method>
			<method name="public void consumeToken(org.antlr.runtime.Token token)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.RemoteDebugEventSocketListener$ProxyToken</name>
		<wmc>17</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>22</rfc>
		<lcom>74</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>17</npm>
		<lcom3>0.8020833333333333</lcom3>
		<loc>146</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.39705882352941174</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.235294117647059</amc>
		<cc>
			<method name="public void _init_(int index, int type, int channel, int line, int charPos, String text)">1</method>
			<method name="public int getTokenIndex()">1</method>
			<method name="public void setLine(int line)">1</method>
			<method name="public void setCharPositionInLine(int pos)">1</method>
			<method name="public int getChannel()">1</method>
			<method name="public void setChannel(int channel)">1</method>
			<method name="public void setType(int ttype)">1</method>
			<method name="public void setInputStream(org.antlr.runtime.CharStream input)">1</method>
			<method name="public org.antlr.runtime.CharStream getInputStream()">1</method>
			<method name="public String toString()">2</method>
			<method name="public String getText()">1</method>
			<method name="public void setTokenIndex(int index)">1</method>
			<method name="public int getLine()">1</method>
			<method name="public int getCharPositionInLine()">1</method>
			<method name="public int getType()">1</method>
			<method name="public void setText(String text)">1</method>
			<method name="public void _init_(int index)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.RewriteRuleElementStream</name>
		<wmc>12</wmc>
		<dit>1</dit>
		<noc>3</noc>
		<cbo>11</cbo>
		<rfc>19</rfc>
		<lcom>24</lcom>
		<ca>3</ca>
		<ce>8</ce>
		<npm>9</npm>
		<lcom3>0.5606060606060607</lcom3>
		<loc>224</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.38333333333333336</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.166666666666668</amc>
		<cc>
			<method name="public Object nextTree()">4</method>
			<method name="public boolean hasNext()">5</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription, Object oneElement)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription, java.util.List elements)">1</method>
			<method name="public void add(Object el)">4</method>
			<method name="public String getDescription()">1</method>
			<method name="protected Object _next()">5</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription)">1</method>
			<method name="public void reset()">1</method>
			<method name="protected Object toTree(Object el)">1</method>
			<method name="public int size()">3</method>
			<method name="protected abstract Object dup(Object)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.DOTTreeGenerator</name>
		<wmc>10</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>31</rfc>
		<lcom>31</lcom>
		<ca>0</ca>
		<ce>10</ce>
		<npm>4</npm>
		<lcom3>0.6222222222222222</lcom3>
		<loc>319</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.46296296296296297</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>30.4</amc>
		<cc>
			<method name="protected org.antlr.stringtemplate.StringTemplate getNodeST(org.antlr.runtime.tree.TreeAdaptor adaptor, Object t)">1</method>
			<method name="protected void toDOTDefineEdges(Object tree, org.antlr.runtime.tree.TreeAdaptor adaptor, org.antlr.stringtemplate.StringTemplate treeST)">4</method>
			<method name="public org.antlr.stringtemplate.StringTemplate toDOT(org.antlr.runtime.tree.Tree tree)">1</method>
			<method name="public org.antlr.stringtemplate.StringTemplate toDOT(Object tree, org.antlr.runtime.tree.TreeAdaptor adaptor)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="protected int getNodeNumber(Object t)">2</method>
			<method name="protected String fixString(String in)">3</method>
			<method name="public void _init_()">1</method>
			<method name="protected void toDOTDefineNodes(Object tree, org.antlr.runtime.tree.TreeAdaptor adaptor, org.antlr.stringtemplate.StringTemplate treeST)">4</method>
			<method name="public org.antlr.stringtemplate.StringTemplate toDOT(Object tree, org.antlr.runtime.tree.TreeAdaptor adaptor, org.antlr.stringtemplate.StringTemplate _treeST, org.antlr.stringtemplate.StringTemplate _edgeST)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugEventRepeater</name>
		<wmc>32</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>64</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>6</ce>
		<npm>32</npm>
		<lcom3>0.0</lcom3>
		<loc>201</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.25390625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.25</amc>
		<cc>
			<method name="public void LT(int i, org.antlr.runtime.Token t)">1</method>
			<method name="public void recognitionException(org.antlr.runtime.RecognitionException e)">1</method>
			<method name="public void exitRule(String grammarFileName, String ruleName)">1</method>
			<method name="public void createNode(Object node, org.antlr.runtime.Token token)">1</method>
			<method name="public void semanticPredicate(boolean result, String predicate)">1</method>
			<method name="public void enterRule(String grammarFileName, String ruleName)">1</method>
			<method name="public void enterSubRule(int decisionNumber)">1</method>
			<method name="public void endBacktrack(int level, boolean successful)">1</method>
			<method name="public void consumeToken(org.antlr.runtime.Token token)">1</method>
			<method name="public void location(int line, int pos)">1</method>
			<method name="public void exitDecision(int decisionNumber)">1</method>
			<method name="public void consumeHiddenToken(org.antlr.runtime.Token token)">1</method>
			<method name="public void nilNode(Object t)">1</method>
			<method name="public void _init_(org.antlr.runtime.debug.DebugEventListener listener)">1</method>
			<method name="public void beginBacktrack(int level)">1</method>
			<method name="public void terminate()">1</method>
			<method name="public void exitSubRule(int decisionNumber)">1</method>
			<method name="public void setTokenBoundaries(Object t, int tokenStartIndex, int tokenStopIndex)">1</method>
			<method name="public void rewind(int i)">1</method>
			<method name="public void rewind()">1</method>
			<method name="public void endResync()">1</method>
			<method name="public void consumeNode(Object t)">1</method>
			<method name="public void mark(int i)">1</method>
			<method name="public void enterDecision(int decisionNumber)">1</method>
			<method name="public void LT(int i, Object t)">1</method>
			<method name="public void errorNode(Object t)">1</method>
			<method name="public void enterAlt(int alt)">1</method>
			<method name="public void addChild(Object root, Object child)">1</method>
			<method name="public void becomeRoot(Object newRoot, Object oldRoot)">1</method>
			<method name="public void commence()">1</method>
			<method name="public void beginResync()">1</method>
			<method name="public void createNode(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.CommonTreeNodeStream$StreamIterator</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>8</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>0.3333333333333333</lcom3>
		<loc>56</loc>
		<dam>0.5</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.5</amc>
		<cc>
			<method name="public boolean hasNext()">2</method>
			<method name="public void remove()">1</method>
			<method name="public Object next()">2</method>
			<method name="protected void _init_(org.antlr.runtime.tree.CommonTreeNodeStream)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.RecognizerSharedState</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>7</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>44</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>28.0</amc>
		<cc>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.NoViableAltException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>11</rfc>
		<lcom>1</lcom>
		<ca>4</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>0.8333333333333334</lcom3>
		<loc>61</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>18.333333333333332</amc>
		<cc>
			<method name="public String toString()">2</method>
			<method name="public void _init_(String grammarDecisionDescription, int decisionNumber, int stateNumber, org.antlr.runtime.IntStream input)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.misc.IntArray</name>
		<wmc>7</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>9</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>7</npm>
		<lcom3>0.611111111111111</lcom3>
		<loc>103</loc>
		<dam>0.3333333333333333</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.7142857142857143</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.285714285714286</amc>
		<cc>
			<method name="public void clear()">1</method>
			<method name="public void add(int v)">1</method>
			<method name="public void push(int v)">1</method>
			<method name="public void ensureCapacity(int index)">4</method>
			<method name="public int pop()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public int size()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.FailedPredicateException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>8</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>35</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.0</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.IntStream input, String ruleName, String predicateText)">1</method>
			<method name="public String toString()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.CommonTokenStream</name>
		<wmc>33</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>16</cbo>
		<rfc>62</rfc>
		<lcom>222</lcom>
		<ca>1</ca>
		<ce>15</ce>
		<npm>29</npm>
		<lcom3>0.5390625</lcom3>
		<loc>594</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.24675324675324675</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>16.757575757575758</amc>
		<cc>
			<method name="public void _init_(org.antlr.runtime.TokenSource tokenSource)">1</method>
			<method name="public org.antlr.runtime.Token get(int i)">1</method>
			<method name="protected void fillBuffer()">10</method>
			<method name="public int LA(int i)">1</method>
			<method name="public void discardTokenType(int ttype)">2</method>
			<method name="public int mark()">2</method>
			<method name="public java.util.List getTokens(int start, int stop, int ttype)">1</method>
			<method name="public void reset()">1</method>
			<method name="public org.antlr.runtime.TokenSource getTokenSource()">1</method>
			<method name="public int size()">1</method>
			<method name="public java.util.List getTokens()">2</method>
			<method name="public String toString()">2</method>
			<method name="public void setTokenTypeChannel(int ttype, int channel)">2</method>
			<method name="public String getSourceName()">1</method>
			<method name="public String toString(int start, int stop)">6</method>
			<method name="public void rewind(int marker)">1</method>
			<method name="public java.util.List getTokens(int start, int stop, org.antlr.runtime.BitSet types)">9</method>
			<method name="public String toString(org.antlr.runtime.Token start, org.antlr.runtime.Token stop)">3</method>
			<method name="protected org.antlr.runtime.Token LB(int k)">6</method>
			<method name="public void seek(int index)">1</method>
			<method name="public java.util.List getTokens(int start, int stop, java.util.List types)">1</method>
			<method name="public void rewind()">1</method>
			<method name="public void setTokenSource(org.antlr.runtime.TokenSource tokenSource)">1</method>
			<method name="public void release(int marker)">1</method>
			<method name="public int index()">1</method>
			<method name="protected int skipOffTokenChannels(int i)">3</method>
			<method name="protected int skipOffTokenChannelsReverse(int i)">3</method>
			<method name="public void discardOffChannelTokens(boolean discardOffChannelTokens)">1</method>
			<method name="public java.util.List getTokens(int start, int stop)">1</method>
			<method name="public org.antlr.runtime.Token LT(int k)">7</method>
			<method name="public void consume()">2</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(org.antlr.runtime.TokenSource tokenSource, int channel)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.MismatchedTreeNodeException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>10</rfc>
		<lcom>1</lcom>
		<ca>2</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>31</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.0</amc>
		<cc>
			<method name="public void _init_(int expecting, org.antlr.runtime.tree.TreeNodeStream input)">1</method>
			<method name="public String toString()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.TokenStream</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>21</cbo>
		<rfc>5</rfc>
		<lcom>10</lcom>
		<ca>15</ca>
		<ce>6</ce>
		<npm>5</npm>
		<lcom3>2.0</lcom3>
		<loc>5</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract org.antlr.runtime.Token LT(int)">1</method>
			<method name="public abstract org.antlr.runtime.Token get(int)">1</method>
			<method name="public abstract org.antlr.runtime.TokenSource getTokenSource()">1</method>
			<method name="public abstract String toString(int, int)">1</method>
			<method name="public abstract String toString(org.antlr.runtime.Token, org.antlr.runtime.Token)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.ParserRuleReturnScope</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>4</rfc>
		<lcom>3</lcom>
		<ca>0</ca>
		<ce>4</ce>
		<npm>3</npm>
		<lcom3>1.0</lcom3>
		<loc>14</loc>
		<dam>0.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public Object getStop()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object getStart()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.RuleReturnScope</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>2</noc>
		<cbo>4</cbo>
		<rfc>6</rfc>
		<lcom>10</lcom>
		<ca>2</ca>
		<ce>2</ce>
		<npm>5</npm>
		<lcom3>2.0</lcom3>
		<loc>16</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>2.2</amc>
		<cc>
			<method name="public Object getTree()">1</method>
			<method name="public Object getTemplate()">1</method>
			<method name="public Object getStop()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object getStart()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.ANTLRStringStream</name>
		<wmc>20</wmc>
		<dit>1</dit>
		<noc>2</noc>
		<cbo>9</cbo>
		<rfc>29</rfc>
		<lcom>62</lcom>
		<ca>2</ca>
		<ce>7</ce>
		<npm>20</npm>
		<lcom3>0.6900584795321637</lcom3>
		<loc>303</loc>
		<dam>0.8888888888888888</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3875</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.7</amc>
		<cc>
			<method name="public void _init_(char[] data, int numberOfActualCharsInArray)">1</method>
			<method name="public void seek(int index)">3</method>
			<method name="public void setLine(int line)">1</method>
			<method name="public void setCharPositionInLine(int pos)">1</method>
			<method name="public int LA(int i)">5</method>
			<method name="public int mark()">3</method>
			<method name="public void _init_(String input)">1</method>
			<method name="public String substring(int start, int stop)">1</method>
			<method name="public void rewind()">1</method>
			<method name="public int index()">1</method>
			<method name="public void release(int marker)">1</method>
			<method name="public void reset()">1</method>
			<method name="public int size()">1</method>
			<method name="public void rewind(int m)">1</method>
			<method name="public void consume()">3</method>
			<method name="public int getLine()">1</method>
			<method name="public int getCharPositionInLine()">1</method>
			<method name="public String getSourceName()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public int LT(int i)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.ANTLRReaderStream</name>
		<wmc>5</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>7</cbo>
		<rfc>9</rfc>
		<lcom>10</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>5</npm>
		<lcom3>1.25</lcom3>
		<loc>103</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.8</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>19.2</amc>
		<cc>
			<method name="public void _init_(java.io.Reader r, int size, int readChunkSize)">1</method>
			<method name="public void load(java.io.Reader r, int size, int readChunkSize)">1</method>
			<method name="public void _init_(java.io.Reader r, int size)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(java.io.Reader r)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.IntStream</name>
		<wmc>10</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>26</cbo>
		<rfc>10</rfc>
		<lcom>45</lcom>
		<ca>23</ca>
		<ce>3</ce>
		<npm>10</npm>
		<lcom3>2.0</lcom3>
		<loc>10</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.7</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract int size()">1</method>
			<method name="public abstract void rewind()">1</method>
			<method name="public abstract int index()">1</method>
			<method name="public abstract void rewind(int)">1</method>
			<method name="public abstract void release(int)">1</method>
			<method name="public abstract void consume()">1</method>
			<method name="public abstract String getSourceName()">1</method>
			<method name="public abstract void seek(int)">1</method>
			<method name="public abstract int LA(int)">1</method>
			<method name="public abstract int mark()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugEventListener</name>
		<wmc>31</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>31</rfc>
		<lcom>465</lcom>
		<ca>9</ca>
		<ce>5</ce>
		<npm>31</npm>
		<lcom3>1.0333333333333334</lcom3>
		<loc>34</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2903225806451613</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void mark(int)">1</method>
			<method name="public abstract void terminate()">1</method>
			<method name="public abstract void enterRule(String, String)">1</method>
			<method name="public abstract void consumeToken(org.antlr.runtime.Token)">1</method>
			<method name="public abstract void rewind(int)">1</method>
			<method name="public abstract void exitDecision(int)">1</method>
			<method name="public abstract void endResync()">1</method>
			<method name="public abstract void createNode(Object)">1</method>
			<method name="public abstract void rewind()">1</method>
			<method name="public abstract void errorNode(Object)">1</method>
			<method name="public abstract void LT(int, org.antlr.runtime.Token)">1</method>
			<method name="public abstract void beginBacktrack(int)">1</method>
			<method name="public abstract void semanticPredicate(boolean, String)">1</method>
			<method name="public abstract void commence()">1</method>
			<method name="public abstract void LT(int, Object)">1</method>
			<method name="public abstract void endBacktrack(int, boolean)">1</method>
			<method name="public abstract void nilNode(Object)">1</method>
			<method name="public abstract void enterAlt(int)">1</method>
			<method name="public abstract void enterSubRule(int)">1</method>
			<method name="public abstract void exitSubRule(int)">1</method>
			<method name="public abstract void exitRule(String, String)">1</method>
			<method name="public abstract void enterDecision(int)">1</method>
			<method name="public abstract void becomeRoot(Object, Object)">1</method>
			<method name="public abstract void location(int, int)">1</method>
			<method name="public abstract void addChild(Object, Object)">1</method>
			<method name="public abstract void beginResync()">1</method>
			<method name="public abstract void setTokenBoundaries(Object, int, int)">1</method>
			<method name="public abstract void consumeNode(Object)">1</method>
			<method name="public abstract void recognitionException(org.antlr.runtime.RecognitionException)">1</method>
			<method name="public abstract void createNode(Object, org.antlr.runtime.Token)">1</method>
			<method name="public abstract void consumeHiddenToken(org.antlr.runtime.Token)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.RewriteCardinalityException</name>
		<wmc>2</wmc>
		<dit>4</dit>
		<noc>2</noc>
		<cbo>7</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>3</ca>
		<ce>4</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>17</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.9545454545454546</mfa>
		<cam>0.75</cam>
		<ic>1</ic>
		<cbm>1</cbm>
		<amc>7.0</amc>
		<cc>
			<method name="public String getMessage()">2</method>
			<method name="public void _init_(String elementDescription)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.UnBufferedTreeNodeStream$TreeWalkState</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>3</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>15</loc>
		<dam>0.125</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.0</amc>
		<cc>
			<method name="protected void _init_(org.antlr.runtime.tree.UnBufferedTreeNodeStream)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$1</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>4</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>1</npm>
		<lcom3>0.5</lcom3>
		<loc>19</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.5</amc>
		<cc>
			<method name="void _init_(org.antlr.runtime.tree.TreeWizard, java.util.List)">1</method>
			<method name="public void visit(Object t)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$3</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>6</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>42</loc>
		<dam>1.0</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.6428571428571429</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>18.0</amc>
		<cc>
			<method name="public void visit(Object t, Object parent, int childIndex, java.util.Map unusedlabels)">2</method>
			<method name="void _init_(org.antlr.runtime.tree.TreeWizard, java.util.Map, org.antlr.runtime.tree.TreeWizard$TreePattern, org.antlr.runtime.tree.TreeWizard$ContextVisitor)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.DebugEventHub</name>
		<wmc>34</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>70</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>8</ce>
		<npm>34</npm>
		<lcom3>0.0</lcom3>
		<loc>668</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2536764705882353</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>18.61764705882353</amc>
		<cc>
			<method name="public void recognitionException(org.antlr.runtime.RecognitionException e)">2</method>
			<method name="public void exitRule(String grammarFileName, String ruleName)">2</method>
			<method name="public void createNode(Object node, org.antlr.runtime.Token token)">2</method>
			<method name="public void semanticPredicate(boolean result, String predicate)">2</method>
			<method name="public void enterRule(String grammarFileName, String ruleName)">2</method>
			<method name="public void rewind(int index)">2</method>
			<method name="public void enterSubRule(int decisionNumber)">2</method>
			<method name="public void endBacktrack(int level, boolean successful)">2</method>
			<method name="public void consumeToken(org.antlr.runtime.Token token)">2</method>
			<method name="public void LT(int index, Object t)">2</method>
			<method name="public void location(int line, int pos)">2</method>
			<method name="public void exitDecision(int decisionNumber)">2</method>
			<method name="public void consumeHiddenToken(org.antlr.runtime.Token token)">2</method>
			<method name="public void nilNode(Object t)">2</method>
			<method name="public void _init_(org.antlr.runtime.debug.DebugEventListener a, org.antlr.runtime.debug.DebugEventListener b)">1</method>
			<method name="public void _init_(org.antlr.runtime.debug.DebugEventListener listener)">1</method>
			<method name="public void beginBacktrack(int level)">2</method>
			<method name="public void mark(int index)">2</method>
			<method name="public void terminate()">2</method>
			<method name="public void exitSubRule(int decisionNumber)">2</method>
			<method name="public void setTokenBoundaries(Object t, int tokenStartIndex, int tokenStopIndex)">2</method>
			<method name="public void addListener(org.antlr.runtime.debug.DebugEventListener listener)">1</method>
			<method name="public void rewind()">2</method>
			<method name="public void LT(int index, org.antlr.runtime.Token t)">2</method>
			<method name="public void endResync()">2</method>
			<method name="public void consumeNode(Object t)">2</method>
			<method name="public void enterDecision(int decisionNumber)">2</method>
			<method name="public void errorNode(Object t)">2</method>
			<method name="public void enterAlt(int alt)">2</method>
			<method name="public void addChild(Object root, Object child)">2</method>
			<method name="public void becomeRoot(Object newRoot, Object oldRoot)">2</method>
			<method name="public void commence()">2</method>
			<method name="public void beginResync()">2</method>
			<method name="public void createNode(Object t)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeWizard$2</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>5</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>31</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.5714285714285714</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.0</amc>
		<cc>
			<method name="void _init_(org.antlr.runtime.tree.TreeWizard, org.antlr.runtime.tree.TreeWizard$TreePattern, java.util.List)">1</method>
			<method name="public void visit(Object t, Object parent, int childIndex, java.util.Map labels)">2</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.RewriteRuleSubtreeStream</name>
		<wmc>5</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>12</rfc>
		<lcom>8</lcom>
		<ca>0</ca>
		<ce>6</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>53</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.56</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.6</amc>
		<cc>
			<method name="protected Object dup(Object el)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription, Object oneElement)">1</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription, java.util.List elements)">1</method>
			<method name="public Object nextNode()">4</method>
			<method name="public void _init_(org.antlr.runtime.tree.TreeAdaptor adaptor, String elementDescription)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.TreeVisitorAction</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>2</cbo>
		<rfc>2</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>1</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>2</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract Object post(Object)">1</method>
			<method name="public abstract Object pre(Object)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.MismatchedSetException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>10</cbo>
		<rfc>11</rfc>
		<lcom>1</lcom>
		<ca>3</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>31</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.0</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(org.antlr.runtime.BitSet expecting, org.antlr.runtime.IntStream input)">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.MismatchedTokenException</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>2</noc>
		<cbo>11</cbo>
		<rfc>10</rfc>
		<lcom>0</lcom>
		<ca>5</ca>
		<ce>6</ce>
		<npm>3</npm>
		<lcom3>0.0</lcom3>
		<loc>37</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.0</amc>
		<cc>
			<method name="public void _init_(int expecting, org.antlr.runtime.IntStream input)">1</method>
			<method name="public String toString()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.tree.Tree</name>
		<wmc>27</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>17</cbo>
		<rfc>28</rfc>
		<lcom>351</lcom>
		<ca>12</ca>
		<ce>6</ce>
		<npm>26</npm>
		<lcom3>1.0</lcom3>
		<loc>34</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.2222222222222222</amc>
		<cc>
			<method name="public abstract java.util.List getAncestors()">1</method>
			<method name="public abstract void freshenParentAndChildIndexes()">1</method>
			<method name="public abstract int getLine()">1</method>
			<method name="public abstract int getCharPositionInLine()">1</method>
			<method name="public abstract void addChild(org.antlr.runtime.tree.Tree)">1</method>
			<method name="public abstract int getType()">1</method>
			<method name="public abstract org.antlr.runtime.tree.Tree getAncestor(int)">1</method>
			<method name="public abstract void setChild(int, org.antlr.runtime.tree.Tree)">1</method>
			<method name="public abstract boolean hasAncestor(int)">1</method>
			<method name="public abstract void setTokenStopIndex(int)">1</method>
			<method name="public abstract org.antlr.runtime.tree.Tree dupNode()">1</method>
			<method name="public abstract void setParent(org.antlr.runtime.tree.Tree)">1</method>
			<method name="public abstract boolean isNil()">1</method>
			<method name="public abstract int getTokenStartIndex()">1</method>
			<method name="public abstract void setChildIndex(int)">1</method>
			<method name="public abstract int getChildCount()">1</method>
			<method name="public abstract int getChildIndex()">1</method>
			<method name="public abstract String getText()">1</method>
			<method name="public abstract org.antlr.runtime.tree.Tree getChild(int)">1</method>
			<method name="public abstract int getTokenStopIndex()">1</method>
			<method name="public abstract void setTokenStartIndex(int)">1</method>
			<method name="public abstract org.antlr.runtime.tree.Tree getParent()">1</method>
			<method name="public abstract String toString()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public abstract Object deleteChild(int)">1</method>
			<method name="public abstract void replaceChildren(int, int, Object)">1</method>
			<method name="public abstract String toStringTree()">1</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.BaseRecognizer</name>
		<wmc>42</wmc>
		<dit>1</dit>
		<noc>3</noc>
		<cbo>33</cbo>
		<rfc>89</rfc>
		<lcom>481</lcom>
		<ca>5</ca>
		<ce>28</ce>
		<npm>35</npm>
		<lcom3>0.940766550522648</lcom3>
		<loc>1162</loc>
		<dam>0.14285714285714285</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.1684981684981685</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>26.5</amc>
		<cc>
			<method name="public void recover(org.antlr.runtime.IntStream input, org.antlr.runtime.RecognitionException re)">2</method>
			<method name="public int getRuleMemoizationCacheSize()">4</method>
			<method name="public Object match(org.antlr.runtime.IntStream input, int ttype, org.antlr.runtime.BitSet follow)">1</method>
			<method name="protected Object getMissingSymbol(org.antlr.runtime.IntStream input, org.antlr.runtime.RecognitionException e, int expectedTokenType, org.antlr.runtime.BitSet follow)">1</method>
			<method name="public void consumeUntil(org.antlr.runtime.IntStream input, int tokenType)">3</method>
			<method name="public java.util.List toStrings(java.util.List tokens)">3</method>
			<method name="public java.util.List getRuleInvocationStack()">1</method>
			<method name="public void reset()">4</method>
			<method name="public String getErrorHeader(org.antlr.runtime.RecognitionException e)">1</method>
			<method name="public boolean mismatchIsUnwantedToken(org.antlr.runtime.IntStream input, int ttype)">2</method>
			<method name="public void _init_(org.antlr.runtime.RecognizerSharedState state)">2</method>
			<method name="public int getRuleMemoization(int ruleIndex, int ruleStartIndex)">3</method>
			<method name="protected Object recoverFromMismatchedToken(org.antlr.runtime.IntStream input, int ttype, org.antlr.runtime.BitSet follow)">1</method>
			<method name="public void matchAny(org.antlr.runtime.IntStream input)">1</method>
			<method name="protected void pushFollow(org.antlr.runtime.BitSet fset)">2</method>
			<method name="protected Object getCurrentInputSymbol(org.antlr.runtime.IntStream input)">1</method>
			<method name="public abstract String getSourceName()">1</method>
			<method name="public void displayRecognitionError(String[] tokenNames, org.antlr.runtime.RecognitionException e)">1</method>
			<method name="public String getGrammarFileName()">1</method>
			<method name="public void traceOut(String ruleName, int ruleIndex, Object inputSymbol)">3</method>
			<method name="public void emitErrorMessage(String msg)">1</method>
			<method name="protected org.antlr.runtime.BitSet combineFollows(boolean exact)">5</method>
			<method name="public int getBacktrackingLevel()">1</method>
			<method name="public int getNumberOfSyntaxErrors()">1</method>
			<method name="public Object recoverFromMismatchedSet(org.antlr.runtime.IntStream input, org.antlr.runtime.RecognitionException e, org.antlr.runtime.BitSet follow)">1</method>
			<method name="public void traceIn(String ruleName, int ruleIndex, Object inputSymbol)">2</method>
			<method name="public void reportError(org.antlr.runtime.RecognitionException e)">2</method>
			<method name="protected org.antlr.runtime.BitSet computeContextSensitiveRuleFOLLOW()">1</method>
			<method name="public boolean mismatchIsMissingToken(org.antlr.runtime.IntStream input, org.antlr.runtime.BitSet follow)">6</method>
			<method name="protected org.antlr.runtime.BitSet computeErrorRecoverySet()">1</method>
			<method name="public void endResync()">1</method>
			<method name="public static java.util.List getRuleInvocationStack(Throwable e, String recognizerClassName)">5</method>
			<method name="public void setBacktrackingLevel(int n)">1</method>
			<method name="public boolean alreadyParsedRule(org.antlr.runtime.IntStream input, int ruleIndex)">3</method>
			<method name="public String getTokenErrorDisplay(org.antlr.runtime.Token t)">3</method>
			<method name="public void memoize(org.antlr.runtime.IntStream input, int ruleIndex, int ruleStartIndex)">5</method>
			<method name="public boolean failed()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void beginResync()">1</method>
			<method name="public String[] getTokenNames()">1</method>
			<method name="public String getErrorMessage(org.antlr.runtime.RecognitionException e, String[] tokenNames)">14</method>
			<method name="public void consumeUntil(org.antlr.runtime.IntStream input, org.antlr.runtime.BitSet set)">3</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.debug.RemoteDebugEventSocketListener</name>
		<wmc>14</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>33</cbo>
		<rfc>92</rfc>
		<lcom>65</lcom>
		<ca>0</ca>
		<ce>33</ce>
		<npm>5</npm>
		<lcom3>0.8012820512820512</lcom3>
		<loc>1236</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.34285714285714286</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>86.42857142857143</amc>
		<cc>
			<method name="protected void closeConnection()">10</method>
			<method name="protected org.antlr.runtime.debug.RemoteDebugEventSocketListener$ProxyTree deserializeNode(String[] elements, int offset)">1</method>
			<method name="public void _init_(org.antlr.runtime.debug.DebugEventListener listener, String machine, int port)">1</method>
			<method name="public void run()">1</method>
			<method name="public void start()">1</method>
			<method name="protected void handshake()">1</method>
			<method name="protected String unEscapeNewlines(String txt)">1</method>
			<method name="protected org.antlr.runtime.debug.RemoteDebugEventSocketListener$ProxyToken deserializeToken(String[] elements, int offset)">1</method>
			<method name="protected void dispatch(String line)">36</method>
			<method name="public boolean tokenIndexesAreInvalid()">1</method>
			<method name="protected void eventHandler()">2</method>
			<method name="protected boolean openConnection()">1</method>
			<method name="protected void ack()">1</method>
			<method name="public String[] getEventElements(String event)">5</method>
		</cc>
	</class>
	<class>
		<name>org.antlr.runtime.DFA</name>
		<wmc>8</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>16</rfc>
		<lcom>28</lcom>
		<ca>0</ca>
		<ce>8</ce>
		<npm>6</npm>
		<lcom3>0.9857142857142858</lcom3>
		<loc>320</loc>
		<dam>0.9</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.35</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>37.75</amc>
		<cc>
			<method name="public int specialStateTransition(int s, org.antlr.runtime.IntStream input)">1</method>
			<method name="public int predict(org.antlr.runtime.IntStream input)">1</method>
			<method name="public String getDescription()">1</method>
			<method name="public static char[] unpackEncodedStringToUnsignedChars(String encodedString)">4</method>
			<method name="public static short[] unpackEncodedString(String encodedString)">4</method>
			<method name="protected void error(org.antlr.runtime.NoViableAltException nvae)">1</method>
			<method name="public void _init_()">1</method>
			<method name="protected void noViableAlt(int s, org.antlr.runtime.IntStream input)">1</method>
		</cc>
	</class>

	<class>
		<name>org.dom4j.io.SAXEventRecorder$SAXEvent</name>
		<wmc>6</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>15</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>3</npm>
		<lcom3>1.1363636363636362</lcom3>
		<loc>100</loc>
		<dam>0.09090909090909091</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3055555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.0</amc>
		<cc>
			<method name="void _init_(byte event)">1</method>
			<method name="Object getParm(int index)">3</method>
			<method name="void addParm(Object parm)">2</method>
			<method name="public void readExternal(java.io.ObjectInput in)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void writeExternal(java.io.ObjectOutput out)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.pattern.TextNodeTest</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>9</rfc>
		<lcom>15</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>5</npm>
		<lcom3>1.0</lcom3>
		<loc>26</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.1666666666666665</amc>
		<cc>
			<method name="public boolean matches(Object node, org.jaxen.Context context)">1</method>
			<method name="public String getText()">1</method>
			<method name="public short getMatchType()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public double getPriority()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.SimpleVariableContext</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>14</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>10</ce>
		<npm>4</npm>
		<lcom3>0.0</lcom3>
		<loc>71</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>16.5</amc>
		<cc>
			<method name="public void setVariableValue(String localName, Object value)">1</method>
			<method name="public Object getVariableValue(String namespaceURI, String prefix, String localName)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void setVariableValue(String namespaceURI, String localName, Object value)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultTruthExpr</name>
		<wmc>12</wmc>
		<dit>0</dit>
		<noc>3</noc>
		<cbo>12</cbo>
		<rfc>20</rfc>
		<lcom>66</lcom>
		<ca>3</ca>
		<ce>9</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>105</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4791666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.75</amc>
		<cc>
			<method name="protected boolean eitherIsBoolean(Object lhs, Object rhs)">3</method>
			<method name="protected boolean bothAreBoolean(Object lhs, Object rhs)">3</method>
			<method name="public String toString()">1</method>
			<method name="protected boolean isSet(Object obj)">1</method>
			<method name="protected boolean setIsEmpty(java.util.List set)">3</method>
			<method name="protected boolean eitherIsSet(Object lhs, Object rhs)">3</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="protected boolean isBoolean(Object obj)">1</method>
			<method name="protected boolean isString(Object obj)">1</method>
			<method name="protected boolean eitherIsNumber(Object lhs, Object rhs)">3</method>
			<method name="protected boolean isNumber(Object obj)">1</method>
			<method name="protected boolean bothAreSets(Object lhs, Object rhs)">3</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.datatype.DatatypeAttribute</name>
		<wmc>20</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>16</cbo>
		<rfc>43</rfc>
		<lcom>138</lcom>
		<ca>1</ca>
		<ce>15</ce>
		<npm>18</npm>
		<lcom3>0.7999999999999999</lcom3>
		<loc>209</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.2833333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.2</amc>
		<cc>
			<method name="public boolean supportsParent()">1</method>
			<method name="public boolean isNotation(String notationName)">1</method>
			<method name="public String getBaseUri()">1</method>
			<method name="public String getNamespacePrefix(String uri)">3</method>
			<method name="public void setValue(String value)">1</method>
			<method name="public com.sun.msv.datatype.xsd.XSDatatype getXSDatatype()">1</method>
			<method name="public boolean isUnparsedEntity(String entityName)">1</method>
			<method name="public void setData(Object data)">1</method>
			<method name="protected void validate(String txt)">1</method>
			<method name="protected Object convertToValue(String txt)">2</method>
			<method name="public void setParent(org.dom4j.Element parent)">1</method>
			<method name="public String toString()">1</method>
			<method name="public void _init_(org.dom4j.QName qname, com.sun.msv.datatype.xsd.XSDatatype datatype, String text)">1</method>
			<method name="public Object getData()">1</method>
			<method name="public boolean isReadOnly()">1</method>
			<method name="public String getValue()">1</method>
			<method name="public String resolveNamespacePrefix(String prefix)">4</method>
			<method name="public void _init_(org.dom4j.QName qname, com.sun.msv.datatype.xsd.XSDatatype datatype)">1</method>
			<method name="public org.dom4j.QName getQName()">1</method>
			<method name="public org.dom4j.Element getParent()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.NamespaceStack</name>
		<wmc>25</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>19</cbo>
		<rfc>54</rfc>
		<lcom>106</lcom>
		<ca>7</ca>
		<ce>12</ce>
		<npm>19</npm>
		<lcom3>0.5833333333333334</lcom3>
		<loc>553</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.344</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>20.88</amc>
		<cc>
			<method name="public org.dom4j.DocumentFactory getDocumentFactory()">1</method>
			<method name="public boolean contains(org.dom4j.Namespace namespace)">5</method>
			<method name="public void push(String prefix, String uri)">2</method>
			<method name="public org.dom4j.Namespace addNamespace(String prefix, String uri)">1</method>
			<method name="public org.dom4j.QName getQName(String namespaceURI, String localName, String qualifiedName)">7</method>
			<method name="protected org.dom4j.QName pushQName(String localName, String qualifiedName, org.dom4j.Namespace namespace, String prefix)">3</method>
			<method name="public int size()">1</method>
			<method name="public org.dom4j.Namespace pop(String prefix)">5</method>
			<method name="public void clear()">1</method>
			<method name="public String toString()">1</method>
			<method name="public void push(org.dom4j.Namespace namespace)">3</method>
			<method name="public org.dom4j.QName getAttributeQName(String namespaceURI, String localName, String qualifiedName)">8</method>
			<method name="public void setDocumentFactory(org.dom4j.DocumentFactory documentFactory)">1</method>
			<method name="protected org.dom4j.Namespace findDefaultNamespace()">5</method>
			<method name="protected org.dom4j.Namespace remove(int index)">1</method>
			<method name="protected org.dom4j.QName createQName(String localName, String qualifiedName, org.dom4j.Namespace namespace)">1</method>
			<method name="public void _init_(org.dom4j.DocumentFactory documentFactory)">1</method>
			<method name="public org.dom4j.Namespace getNamespaceForPrefix(String prefix)">4</method>
			<method name="protected java.util.Map getNamespaceCache()">4</method>
			<method name="public org.dom4j.Namespace pop()">1</method>
			<method name="public org.dom4j.Namespace getNamespace(int index)">1</method>
			<method name="public String getURI(String prefix)">2</method>
			<method name="protected org.dom4j.Namespace createNamespace(String prefix, String namespaceURI)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public org.dom4j.Namespace getDefaultNamespace()">2</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.DocumentResult</name>
		<wmc>5</wmc>
		<dit>2</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>10</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>7</ce>
		<npm>5</npm>
		<lcom3>0.0</lcom3>
		<loc>54</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.6666666666666666</mfa>
		<cam>0.4</cam>
		<ic>1</ic>
		<cbm>1</cbm>
		<amc>9.6</amc>
		<cc>
			<method name="public void setLexicalHandler(org.xml.sax.ext.LexicalHandler handler)">2</method>
			<method name="public void _init_(org.dom4j.io.SAXContentHandler contentHandler)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void setHandler(org.xml.sax.ContentHandler handler)">2</method>
			<method name="public org.dom4j.Document getDocument()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultFunctionCallExpr</name>
		<wmc>11</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>15</cbo>
		<rfc>32</rfc>
		<lcom>39</lcom>
		<ca>1</ca>
		<ce>14</ce>
		<npm>11</npm>
		<lcom3>0.5333333333333333</lcom3>
		<loc>239</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2909090909090909</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>20.454545454545453</amc>
		<cc>
			<method name="public void _init_(String prefix, String functionName)">1</method>
			<method name="public String toString()">2</method>
			<method name="public java.util.List getParameters()">1</method>
			<method name="public String getText()">4</method>
			<method name="public Object evaluate(org.jaxen.Context context)">1</method>
			<method name="public void addParameter(org.jaxen.expr.Expr parameter)">1</method>
			<method name="public org.jaxen.expr.Expr simplify()">2</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public String getFunctionName()">1</method>
			<method name="public String getPrefix()">1</method>
			<method name="public java.util.List evaluateParams(org.jaxen.Context context)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.swing.XMLTableDefinition</name>
		<wmc>27</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>21</cbo>
		<rfc>60</rfc>
		<lcom>301</lcom>
		<ca>1</ca>
		<ce>20</ce>
		<npm>23</npm>
		<lcom3>0.7884615384615384</lcom3>
		<loc>333</loc>
		<dam>1.0</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.205761316872428</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.11111111111111</amc>
		<cc>
			<method name="public String getColumnName(int columnIndex)">1</method>
			<method name="protected org.dom4j.XPath createXPath(String expression)">1</method>
			<method name="public org.dom4j.swing.XMLTableColumnDefinition getColumn(int index)">2</method>
			<method name="public void clear()">1</method>
			<method name="public int getColumnCount()">1</method>
			<method name="public synchronized Object getValueAt(Object row, int columnIndex)">1</method>
			<method name="public org.dom4j.XPath getColumnNameXPath(int columnIndex)">1</method>
			<method name="public void setRowXPath(org.dom4j.XPath rowXPath)">1</method>
			<method name="public void addNumberColumn(String name, String expression)">1</method>
			<method name="public void addColumn(String name, String expression, int type)">1</method>
			<method name="public void addColumn(org.dom4j.swing.XMLTableColumnDefinition column)">1</method>
			<method name="public void addColumn(String name, String expression)">1</method>
			<method name="public org.dom4j.XPath getRowXPath()">1</method>
			<method name="public Object getVariableValue(String namespaceURI, String prefix, String localName)">2</method>
			<method name="public org.dom4j.XPath getColumnXPath(int columnIndex)">1</method>
			<method name="public void addStringColumn(String name, String expression)">1</method>
			<method name="public Class getColumnClass(int columnIndex)">1</method>
			<method name="public org.dom4j.swing.XMLTableColumnDefinition getColumn(String columnName)">3</method>
			<method name="public void addColumnWithXPathName(String columnNameXPathExpression, String expression, int type)">1</method>
			<method name="public static org.dom4j.swing.XMLTableDefinition load(org.dom4j.Document definition)">1</method>
			<method name="protected org.dom4j.XPath createColumnXPath(String expression)">1</method>
			<method name="public static org.dom4j.swing.XMLTableDefinition load(org.dom4j.Element definition)">3</method>
			<method name="protected void clearCaches()">1</method>
			<method name="public void setRowExpression(String xpath)">1</method>
			<method name="public void removeColumn(org.dom4j.swing.XMLTableColumnDefinition column)">1</method>
			<method name="public void _init_()">1</method>
			<method name="protected void handleException(Exception e)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.AbstractBranch</name>
		<wmc>41</wmc>
		<dit>0</dit>
		<noc>2</noc>
		<cbo>24</cbo>
		<rfc>79</rfc>
		<lcom>820</lcom>
		<ca>5</ca>
		<ce>21</ce>
		<npm>25</npm>
		<lcom3>1.025</lcom3>
		<loc>498</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.15521064301552107</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.121951219512194</amc>
		<cc>
			<method name="protected abstract void childRemoved(org.dom4j.Node)">1</method>
			<method name="public org.dom4j.Element addElement(String name, String prefix, String uri)">1</method>
			<method name="protected abstract java.util.List contentList()">1</method>
			<method name="public java.util.List content()">1</method>
			<method name="protected abstract void childAdded(org.dom4j.Node)">1</method>
			<method name="protected void invalidNodeTypeAddException(org.dom4j.Node node)">1</method>
			<method name="public void add(org.dom4j.Element element)">1</method>
			<method name="protected String getContentAsStringValue(Object content)">3</method>
			<method name="public boolean remove(org.dom4j.Node node)">5</method>
			<method name="public void add(org.dom4j.Comment comment)">1</method>
			<method name="public boolean isReadOnly()">1</method>
			<method name="public boolean remove(org.dom4j.Comment comment)">1</method>
			<method name="public int nodeCount()">1</method>
			<method name="protected java.util.List createSingleResultList(Object result)">1</method>
			<method name="protected java.util.List createEmptyList()">1</method>
			<method name="public String getTextTrim()">2</method>
			<method name="protected abstract boolean removeNode(org.dom4j.Node)">1</method>
			<method name="public org.dom4j.Element elementByID(String elementID)">6</method>
			<method name="public int indexOf(org.dom4j.Node node)">1</method>
			<method name="public boolean remove(org.dom4j.Element element)">1</method>
			<method name="public boolean remove(org.dom4j.ProcessingInstruction pi)">1</method>
			<method name="public void add(org.dom4j.ProcessingInstruction pi)">1</method>
			<method name="public void appendContent(org.dom4j.Branch branch)">2</method>
			<method name="protected String elementID(org.dom4j.Element element)">1</method>
			<method name="protected org.dom4j.tree.BackedList createResultList()">1</method>
			<method name="public org.dom4j.Element addElement(org.dom4j.QName qname)">1</method>
			<method name="public String getText()">5</method>
			<method name="public org.dom4j.Element addElement(String name)">1</method>
			<method name="protected abstract void addNode(org.dom4j.Node)">1</method>
			<method name="public void add(org.dom4j.Node node)">5</method>
			<method name="protected java.util.List createContentList(int size)">1</method>
			<method name="public boolean hasContent()">2</method>
			<method name="public org.dom4j.Element addElement(String qualifiedName, String namespaceURI)">1</method>
			<method name="protected abstract void addNode(int, org.dom4j.Node)">1</method>
			<method name="protected String getContentAsText(Object content)">3</method>
			<method name="protected java.util.List createContentList()">1</method>
			<method name="protected void contentRemoved()">3</method>
			<method name="public void _init_()">1</method>
			<method name="public void setProcessingInstructions(java.util.List listOfPIs)">2</method>
			<method name="public org.dom4j.Node node(int index)">3</method>
			<method name="public java.util.Iterator nodeIterator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.Function</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>41</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>38</ca>
		<ce>4</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract Object call(org.jaxen.Context, java.util.List)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.Namespace</name>
		<wmc>19</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>45</cbo>
		<rfc>37</rfc>
		<lcom>121</lcom>
		<ca>39</ca>
		<ce>10</ce>
		<npm>16</npm>
		<lcom3>0.7962962962962963</lcom3>
		<loc>295</loc>
		<dam>0.6666666666666666</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.26666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.210526315789474</amc>
		<cc>
			<method name="protected int createHashCode()">2</method>
			<method name="public String getURI()">1</method>
			<method name="public String asXML()">3</method>
			<method name="public void _init_(String prefix, String uri)">3</method>
			<method name="public short getNodeType()">1</method>
			<method name="public boolean equals(Object object)">6</method>
			<method name="public String getPrefix()">1</method>
			<method name="public String getUniquePath(org.dom4j.Element context)">3</method>
			<method name="public void accept(org.dom4j.Visitor visitor)">1</method>
			<method name="public String toString()">1</method>
			<method name="public int hashCode()">2</method>
			<method name="public String getText()">1</method>
			<method name="public String getStringValue()">1</method>
			<method name="protected org.dom4j.Node createXPathResult(org.dom4j.Element parent)">1</method>
			<method name="public static org.dom4j.Namespace get(String uri)">1</method>
			<method name="public static org.dom4j.Namespace get(String prefix, String uri)">1</method>
			<method name="public String getXPathNameStep()">3</method>
			<method name="public String getPath(org.dom4j.Element context)">3</method>
			<method name="static void _clinit_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.rule.pattern.NodeTypePattern</name>
		<wmc>7</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>9</rfc>
		<lcom>15</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>6</npm>
		<lcom3>0.9285714285714285</lcom3>
		<loc>69</loc>
		<dam>0.14285714285714285</dam>
		<moa>6</moa>
		<mfa>0.0</mfa>
		<cam>0.4444444444444444</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.857142857142857</amc>
		<cc>
			<method name="public boolean matches(org.dom4j.Node node)">2</method>
			<method name="public org.dom4j.rule.Pattern[] getUnionPatterns()">1</method>
			<method name="public short getMatchType()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public String getMatchesNodeName()">1</method>
			<method name="public void _init_(short nodeType)">1</method>
			<method name="public double getPriority()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultLessThanExpr</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>7</rfc>
		<lcom>6</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>23</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.75</amc>
		<cc>
			<method name="protected boolean evaluateDoubleDouble(Double lhs, Double rhs)">2</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public String getOperator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.DefaultDocumentType</name>
		<wmc>13</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>7</cbo>
		<rfc>14</rfc>
		<lcom>46</lcom>
		<ca>2</ca>
		<ce>5</ce>
		<npm>13</npm>
		<lcom3>0.8333333333333334</lcom3>
		<loc>77</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5128205128205128</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.538461538461538</amc>
		<cc>
			<method name="public String getSystemID()">1</method>
			<method name="public void setExternalDeclarations(java.util.List externalDeclarations)">1</method>
			<method name="public void setSystemID(String systemID)">1</method>
			<method name="public java.util.List getInternalDeclarations()">1</method>
			<method name="public void setInternalDeclarations(java.util.List internalDeclarations)">1</method>
			<method name="public void _init_(String elementName, String systemID)">1</method>
			<method name="public void setPublicID(String publicID)">1</method>
			<method name="public String getElementName()">1</method>
			<method name="public String getPublicID()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public java.util.List getExternalDeclarations()">1</method>
			<method name="public void _init_(String elementName, String publicID, String systemID)">1</method>
			<method name="public void setElementName(String elementName)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.datatype.DatatypeElement</name>
		<wmc>16</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>18</cbo>
		<rfc>44</rfc>
		<lcom>80</lcom>
		<ca>1</ca>
		<ce>17</ce>
		<npm>13</npm>
		<lcom3>0.6</lcom3>
		<loc>186</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2767857142857143</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.5</amc>
		<cc>
			<method name="public boolean isNotation(String notationName)">1</method>
			<method name="public String getBaseUri()">1</method>
			<method name="public String getNamespacePrefix(String uri)">2</method>
			<method name="public com.sun.msv.datatype.xsd.XSDatatype getXSDatatype()">1</method>
			<method name="public boolean isUnparsedEntity(String entityName)">1</method>
			<method name="public void setData(Object data)">1</method>
			<method name="protected void validate(String text)">1</method>
			<method name="public String toString()">1</method>
			<method name="protected void childAdded(org.dom4j.Node node)">1</method>
			<method name="public Object getData()">5</method>
			<method name="protected void childRemoved(org.dom4j.Node node)">1</method>
			<method name="public void setText(String text)">1</method>
			<method name="public org.dom4j.Element addText(String text)">1</method>
			<method name="public String resolveNamespacePrefix(String prefix)">2</method>
			<method name="public void _init_(org.dom4j.QName qname, com.sun.msv.datatype.xsd.XSDatatype datatype)">1</method>
			<method name="public void _init_(org.dom4j.QName qname, int attributeCount, com.sun.msv.datatype.xsd.XSDatatype type)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.PredicateSet</name>
		<wmc>8</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>28</cbo>
		<rfc>33</rfc>
		<lcom>0</lcom>
		<ca>11</ca>
		<ce>17</ce>
		<npm>6</npm>
		<lcom3>0.14285714285714285</lcom3>
		<loc>198</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>23.625</amc>
		<cc>
			<method name="public void addPredicate(org.jaxen.expr.Predicate predicate)">2</method>
			<method name="public String getText()">2</method>
			<method name="protected boolean evaluateAsBoolean(java.util.List contextNodeSet, org.jaxen.ContextSupport support)">1</method>
			<method name="protected java.util.List evaluatePredicates(java.util.List contextNodeSet, org.jaxen.ContextSupport support)">1</method>
			<method name="public void simplify()">2</method>
			<method name="public void _init_()">1</method>
			<method name="public java.util.List applyPredicate(org.jaxen.expr.Predicate predicate, java.util.List nodes2Filter, org.jaxen.ContextSupport support)">1</method>
			<method name="public java.util.List getPredicates()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultCommentNodeStep</name>
		<wmc>5</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>15</rfc>
		<lcom>10</lcom>
		<ca>2</ca>
		<ce>11</ce>
		<npm>5</npm>
		<lcom3>2.0</lcom3>
		<loc>43</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.6</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public String getText()">1</method>
			<method name="public void _init_(org.jaxen.expr.iter.IterableAxis axis, org.jaxen.expr.PredicateSet predicateSet)">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public boolean matches(Object node, org.jaxen.ContextSupport contextSupport)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.AncestorAxisIterator</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.0</amc>
		<cc>
			<method name="public void _init_(Object contextNode, org.jaxen.Navigator navigator)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.saxpath.base.DefaultXPathHandler$Singleton</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>4</rfc>
		<lcom>1</lcom>
		<ca>0</ca>
		<ce>4</ce>
		<npm>0</npm>
		<lcom3>1.0</lcom3>
		<loc>12</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.5</amc>
		<cc>
			<method name="void _init_()">1</method>
			<method name="static void _clinit_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.rule.RuleManager$1</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>5</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>1</npm>
		<lcom3>0.5</lcom3>
		<loc>31</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.5</amc>
		<cc>
			<method name="void _init_(org.dom4j.rule.RuleManager this$0, org.dom4j.rule.Mode val$mode)">1</method>
			<method name="public void run(org.dom4j.Node node)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.IdentityHashMap$HashIterator</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>12</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>3</npm>
		<lcom3>0.38095238095238093</lcom3>
		<loc>220</loc>
		<dam>0.2857142857142857</dam>
		<moa>4</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>52.25</amc>
		<cc>
			<method name="public boolean hasNext()">4</method>
			<method name="public void remove()">6</method>
			<method name="public Object next()">7</method>
			<method name="void _init_(org.jaxen.util.IdentityHashMap this$0, int type)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.iter.IterableFollowingSiblingAxis</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>5</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>11</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.5</amc>
		<cc>
			<method name="public java.util.Iterator iterator(Object contextNode, org.jaxen.ContextSupport support)">1</method>
			<method name="public void _init_(int value)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.dom.DocumentNavigator$6</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>7</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>0</npm>
		<lcom3>1.0</lcom3>
		<loc>49</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.7777777777777778</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>15.0</amc>
		<cc>
			<method name="protected org.w3c.dom.Node getNextNode(org.w3c.dom.Node node)">4</method>
			<method name="protected org.w3c.dom.Node getFirstNode(org.w3c.dom.Node node)">3</method>
			<method name="void _init_(org.jaxen.dom.DocumentNavigator this$0, org.w3c.dom.Node x0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.iter.IterableSelfAxis</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>5</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>11</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.5</amc>
		<cc>
			<method name="public java.util.Iterator iterator(Object contextNode, org.jaxen.ContextSupport support)">1</method>
			<method name="public void _init_(int value)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.dom.DocumentNavigator$7</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>7</rfc>
		<lcom>3</lcom>
		<ca>0</ca>
		<ce>5</ce>
		<npm>0</npm>
		<lcom3>1.0</lcom3>
		<loc>57</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.7777777777777778</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.666666666666668</amc>
		<cc>
			<method name="protected org.w3c.dom.Node getNextNode(org.w3c.dom.Node node)">4</method>
			<method name="protected org.w3c.dom.Node getFirstNode(org.w3c.dom.Node node)">4</method>
			<method name="void _init_(org.jaxen.dom.DocumentNavigator this$0, org.w3c.dom.Node x0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.dom.DocumentNavigator$2</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>5</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>0</npm>
		<lcom3>1.0</lcom3>
		<loc>18</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.7777777777777778</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.666666666666667</amc>
		<cc>
			<method name="protected org.w3c.dom.Node getNextNode(org.w3c.dom.Node n)">1</method>
			<method name="void _init_(org.jaxen.dom.DocumentNavigator this$0, org.w3c.dom.Node x0)">1</method>
			<method name="protected org.w3c.dom.Node getFirstNode(org.w3c.dom.Node n)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.FlyweightComment</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>8</cbo>
		<rfc>5</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>20</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.333333333333333</amc>
		<cc>
			<method name="public String getText()">1</method>
			<method name="protected org.dom4j.Node createXPathResult(org.dom4j.Element parent)">1</method>
			<method name="public void _init_(String text)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.dom.DocumentNavigator$3</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>5</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>0</npm>
		<lcom3>1.0</lcom3>
		<loc>17</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.7777777777777778</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.333333333333333</amc>
		<cc>
			<method name="protected org.w3c.dom.Node getNextNode(org.w3c.dom.Node n)">1</method>
			<method name="void _init_(org.jaxen.dom.DocumentNavigator this$0, org.w3c.dom.Node x0)">1</method>
			<method name="protected org.w3c.dom.Node getFirstNode(org.w3c.dom.Node n)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultArithExpr</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>2</noc>
		<cbo>8</cbo>
		<rfc>9</rfc>
		<lcom>1</lcom>
		<ca>2</ca>
		<ce>6</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>24</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.0</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.dom.DocumentNavigator$4</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>5</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>0</npm>
		<lcom3>1.0</lcom3>
		<loc>19</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.7777777777777778</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.0</amc>
		<cc>
			<method name="protected org.w3c.dom.Node getNextNode(org.w3c.dom.Node node)">1</method>
			<method name="protected org.w3c.dom.Node getFirstNode(org.w3c.dom.Node node)">1</method>
			<method name="void _init_(org.jaxen.dom.DocumentNavigator this$0, org.w3c.dom.Node x0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.ElementModifier</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>4</ca>
		<ce>3</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract org.dom4j.Element modifyElement(org.dom4j.Element)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.dom.DocumentNavigator$5</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>5</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>0</npm>
		<lcom3>1.0</lcom3>
		<loc>19</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.7777777777777778</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.0</amc>
		<cc>
			<method name="protected org.w3c.dom.Node getNextNode(org.w3c.dom.Node node)">1</method>
			<method name="protected org.w3c.dom.Node getFirstNode(org.w3c.dom.Node node)">1</method>
			<method name="void _init_(org.jaxen.dom.DocumentNavigator this$0, org.w3c.dom.Node x0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultMinusExpr</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>13</rfc>
		<lcom>6</lcom>
		<ca>1</ca>
		<ce>13</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>42</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.5</amc>
		<cc>
			<method name="public Object evaluate(org.jaxen.Context context)">1</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public String getOperator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.dom.DocumentNavigator</name>
		<wmc>37</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>34</cbo>
		<rfc>88</rfc>
		<lcom>664</lcom>
		<ca>10</ca>
		<ce>31</ce>
		<npm>35</npm>
		<lcom3>0.9722222222222222</lcom3>
		<loc>527</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.216216216216216</amc>
		<cc>
			<method name="public java.util.Iterator getChildAxisIterator(Object contextNode)">1</method>
			<method name="public String getElementQName(Object object)">2</method>
			<method name="public String getAttributeQName(Object object)">2</method>
			<method name="public String getAttributeName(Object object)">2</method>
			<method name="public boolean isDocument(Object object)">3</method>
			<method name="public String getAttributeStringValue(Object object)">2</method>
			<method name="public Object getElementById(Object object, String elementId)">2</method>
			<method name="public String getNamespaceStringValue(Object object)">2</method>
			<method name="public java.util.Iterator getPrecedingSiblingAxisIterator(Object contextNode)">1</method>
			<method name="public java.util.Iterator getAttributeAxisIterator(Object contextNode)">2</method>
			<method name="public boolean isProcessingInstruction(Object object)">3</method>
			<method name="public String getAttributeNamespaceUri(Object object)">1</method>
			<method name="public java.util.Iterator getParentAxisIterator(Object contextNode)">2</method>
			<method name="public String translateNamespacePrefixToUri(String prefix, Object element)">2</method>
			<method name="public String getProcessingInstructionData(Object obj)">1</method>
			<method name="public boolean isText(Object object)">5</method>
			<method name="public String getNamespacePrefix(Object object)">2</method>
			<method name="public static org.jaxen.Navigator getInstance()">1</method>
			<method name="public boolean isAttribute(Object object)">4</method>
			<method name="public String getElementName(Object object)">2</method>
			<method name="public Object getDocument(String uri)">1</method>
			<method name="public boolean isElement(Object object)">3</method>
			<method name="public Object getDocumentNode(Object contextNode)">2</method>
			<method name="public String getElementStringValue(Object object)">2</method>
			<method name="public String getProcessingInstructionTarget(Object obj)">1</method>
			<method name="public String getElementNamespaceUri(Object object)">1</method>
			<method name="public boolean isNamespace(Object object)">1</method>
			<method name="public org.jaxen.XPath parseXPath(String xpath)">1</method>
			<method name="public java.util.Iterator getFollowingSiblingAxisIterator(Object contextNode)">1</method>
			<method name="public String getTextStringValue(Object object)">2</method>
			<method name="static void _clinit_()">1</method>
			<method name="public java.util.Iterator getNamespaceAxisIterator(Object contextNode)">9</method>
			<method name="public void _init_()">1</method>
			<method name="public boolean isComment(Object object)">3</method>
			<method name="public String getCommentStringValue(Object object)">2</method>
			<method name="public java.util.Iterator getFollowingAxisIterator(Object contextNode)">1</method>
			<method name="private StringBuffer getStringValue(org.w3c.dom.Node node, StringBuffer buffer)">3</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.XPath</name>
		<wmc>15</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>20</cbo>
		<rfc>15</rfc>
		<lcom>105</lcom>
		<ca>11</ca>
		<ce>10</ce>
		<npm>15</npm>
		<lcom3>2.0</lcom3>
		<loc>15</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.28888888888888886</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract Object selectSingleNode(Object)">1</method>
			<method name="public abstract void addNamespace(String, String)">1</method>
			<method name="public abstract org.jaxen.FunctionContext getFunctionContext()">1</method>
			<method name="public abstract boolean booleanValueOf(Object)">1</method>
			<method name="public abstract Object evaluate(Object)">1</method>
			<method name="public abstract Number numberValueOf(Object)">1</method>
			<method name="public abstract org.jaxen.Navigator getNavigator()">1</method>
			<method name="public abstract String valueOf(Object)">1</method>
			<method name="public abstract String stringValueOf(Object)">1</method>
			<method name="public abstract void setNamespaceContext(org.jaxen.NamespaceContext)">1</method>
			<method name="public abstract void setVariableContext(org.jaxen.VariableContext)">1</method>
			<method name="public abstract void setFunctionContext(org.jaxen.FunctionContext)">1</method>
			<method name="public abstract org.jaxen.NamespaceContext getNamespaceContext()">1</method>
			<method name="public abstract java.util.List selectNodes(Object)">1</method>
			<method name="public abstract org.jaxen.VariableContext getVariableContext()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.pattern.AnyChildNodeTest</name>
		<wmc>7</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>10</rfc>
		<lcom>19</lcom>
		<ca>0</ca>
		<ce>6</ce>
		<npm>6</npm>
		<lcom3>0.8333333333333334</lcom3>
		<loc>45</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.3888888888888889</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.285714285714286</amc>
		<cc>
			<method name="public boolean matches(Object node, org.jaxen.Context context)">5</method>
			<method name="public String getText()">1</method>
			<method name="public short getMatchType()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public static org.jaxen.pattern.AnyChildNodeTest getInstance()">1</method>
			<method name="public double getPriority()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.ConcurrentReaderHashMap$ValueIterator</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>2</ca>
		<ce>4</ce>
		<npm>0</npm>
		<lcom3>1.0</lcom3>
		<loc>13</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.0</amc>
		<cc>
			<method name="protected void _init_(org.dom4j.tree.ConcurrentReaderHashMap this$0)">1</method>
			<method name="protected Object returnValueOfNext()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.XPPReader</name>
		<wmc>22</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>24</cbo>
		<rfc>60</rfc>
		<lcom>217</lcom>
		<ca>0</ca>
		<ce>24</ce>
		<npm>18</npm>
		<lcom3>0.7976190476190477</lcom3>
		<loc>275</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.16942148760330578</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.318181818181818</amc>
		<cc>
			<method name="public org.dom4j.DocumentFactory getDocumentFactory()">2</method>
			<method name="public void setDefaultHandler(org.dom4j.ElementHandler handler)">1</method>
			<method name="public org.gjt.xpp.XmlPullParserFactory getXPPFactory()">1</method>
			<method name="public void setXPPFactory(org.gjt.xpp.XmlPullParserFactory xPPFactory)">1</method>
			<method name="public org.dom4j.Document read(char[] text)">1</method>
			<method name="public org.dom4j.Document read(java.io.File file)">1</method>
			<method name="public org.dom4j.Document read(java.io.InputStream in)">1</method>
			<method name="public org.dom4j.Document read(java.io.Reader reader, String systemID)">1</method>
			<method name="protected org.dom4j.io.DispatchHandler getDispatchHandler()">2</method>
			<method name="protected java.io.Reader createReader(java.io.InputStream in)">1</method>
			<method name="public org.dom4j.Document read(java.io.InputStream in, String systemID)">1</method>
			<method name="public org.dom4j.Document read(java.io.Reader reader)">1</method>
			<method name="public org.dom4j.Document read(java.net.URL url)">1</method>
			<method name="public void setDocumentFactory(org.dom4j.DocumentFactory documentFactory)">1</method>
			<method name="public void removeHandler(String path)">1</method>
			<method name="protected org.dom4j.Document parseDocument()">1</method>
			<method name="protected void setDispatchHandler(org.dom4j.io.DispatchHandler dispatchHandler)">1</method>
			<method name="public org.dom4j.Document read(String systemID)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public org.gjt.xpp.XmlPullParser getXPPParser()">1</method>
			<method name="public void _init_(org.dom4j.DocumentFactory factory)">1</method>
			<method name="public void addHandler(String path, org.dom4j.ElementHandler handler)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.dom.DOMProcessingInstruction</name>
		<wmc>31</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>15</cbo>
		<rfc>62</rfc>
		<lcom>465</lcom>
		<ca>1</ca>
		<ce>14</ce>
		<npm>30</npm>
		<lcom3>2.0</lcom3>
		<loc>165</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.25268817204301075</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.32258064516129</amc>
		<cc>
			<method name="public boolean isSupported(String feature, String version)">1</method>
			<method name="public org.w3c.dom.Node getFirstChild()">1</method>
			<method name="public String getNodeName()">1</method>
			<method name="public org.w3c.dom.NamedNodeMap getAttributes()">1</method>
			<method name="public org.w3c.dom.NodeList getChildNodes()">1</method>
			<method name="public org.w3c.dom.Node getNextSibling()">1</method>
			<method name="public void setPrefix(String prefix)">1</method>
			<method name="public String getNodeValue()">1</method>
			<method name="public void setData(String data)">1</method>
			<method name="public boolean supports(String feature, String version)">1</method>
			<method name="public org.w3c.dom.Document getOwnerDocument()">1</method>
			<method name="public String getNamespaceURI()">1</method>
			<method name="public org.w3c.dom.Node insertBefore(org.w3c.dom.Node newChild, org.w3c.dom.Node refChild)">1</method>
			<method name="public org.w3c.dom.Node replaceChild(org.w3c.dom.Node newChild, org.w3c.dom.Node oldChild)">1</method>
			<method name="public void _init_(String target, String values)">1</method>
			<method name="public org.w3c.dom.Node appendChild(org.w3c.dom.Node newChild)">1</method>
			<method name="public boolean hasAttributes()">1</method>
			<method name="public String getPrefix()">1</method>
			<method name="public org.w3c.dom.Node removeChild(org.w3c.dom.Node oldChild)">1</method>
			<method name="public org.w3c.dom.Node getParentNode()">1</method>
			<method name="public String getLocalName()">1</method>
			<method name="private void checkNewChildNode(org.w3c.dom.Node newChild)">1</method>
			<method name="public boolean hasChildNodes()">1</method>
			<method name="public org.w3c.dom.Node cloneNode(boolean deep)">1</method>
			<method name="public void setNodeValue(String nodeValue)">1</method>
			<method name="public org.w3c.dom.Node getPreviousSibling()">1</method>
			<method name="public org.w3c.dom.Node getLastChild()">1</method>
			<method name="public void _init_(String target, java.util.Map values)">1</method>
			<method name="public void _init_(org.dom4j.Element parent, String target, String val)">1</method>
			<method name="public void normalize()">1</method>
			<method name="public String getData()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.dom.DocumentNavigator$1</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>6</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>0</npm>
		<lcom3>1.0</lcom3>
		<loc>18</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.7777777777777778</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.666666666666667</amc>
		<cc>
			<method name="protected org.w3c.dom.Node getNextNode(org.w3c.dom.Node node)">1</method>
			<method name="protected org.w3c.dom.Node getFirstNode(org.w3c.dom.Node node)">1</method>
			<method name="void _init_(org.jaxen.dom.DocumentNavigator this$0, org.w3c.dom.Node x0)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.ContextSupport</name>
		<wmc>12</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>41</cbo>
		<rfc>18</rfc>
		<lcom>58</lcom>
		<ca>31</ca>
		<ce>10</ce>
		<npm>12</npm>
		<lcom3>0.7727272727272727</lcom3>
		<loc>107</loc>
		<dam>1.0</dam>
		<moa>4</moa>
		<mfa>0.0</mfa>
		<cam>0.3055555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.583333333333333</amc>
		<cc>
			<method name="public org.jaxen.NamespaceContext getNamespaceContext()">1</method>
			<method name="public void setFunctionContext(org.jaxen.FunctionContext functionContext)">1</method>
			<method name="public void setVariableContext(org.jaxen.VariableContext variableContext)">1</method>
			<method name="public org.jaxen.FunctionContext getFunctionContext()">1</method>
			<method name="public org.jaxen.Navigator getNavigator()">1</method>
			<method name="public Object getVariableValue(String namespaceURI, String prefix, String localName)">1</method>
			<method name="public String translateNamespacePrefixToUri(String prefix)">3</method>
			<method name="public void setNamespaceContext(org.jaxen.NamespaceContext namespaceContext)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public org.jaxen.Function getFunction(String namespaceURI, String prefix, String localName)">1</method>
			<method name="public void _init_(org.jaxen.NamespaceContext namespaceContext, org.jaxen.FunctionContext functionContext, org.jaxen.VariableContext variableContext, org.jaxen.Navigator navigator)">1</method>
			<method name="public org.jaxen.VariableContext getVariableContext()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.FollowingSiblingAxisIterator</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>13</rfc>
		<lcom>2</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>4</npm>
		<lcom3>0.5833333333333334</lcom3>
		<loc>65</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.4</amc>
		<cc>
			<method name="public boolean hasNext()">1</method>
			<method name="public void remove()">1</method>
			<method name="public Object next()">1</method>
			<method name="public void _init_(Object contextNode, org.jaxen.Navigator navigator)">1</method>
			<method name="private void init()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.dom.DOMDocumentFactory</name>
		<wmc>21</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>36</cbo>
		<rfc>53</rfc>
		<lcom>208</lcom>
		<ca>2</ca>
		<ce>36</ce>
		<npm>18</npm>
		<lcom3>0.975</lcom3>
		<loc>236</loc>
		<dam>0.5</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.2857142857142857</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.142857142857142</amc>
		<cc>
			<method name="public org.dom4j.Text createText(String text)">1</method>
			<method name="public org.dom4j.CDATA createCDATA(String text)">1</method>
			<method name="public org.dom4j.Element createElement(org.dom4j.QName qname)">1</method>
			<method name="public org.dom4j.Namespace createNamespace(String prefix, String uri)">1</method>
			<method name="public org.dom4j.ProcessingInstruction createProcessingInstruction(String target, String data)">1</method>
			<method name="public org.dom4j.Entity createEntity(String name, String text)">1</method>
			<method name="public org.w3c.dom.DocumentType createDocumentType(String qualifiedName, String publicId, String systemId)">1</method>
			<method name="public org.dom4j.Comment createComment(String text)">1</method>
			<method name="public org.dom4j.Attribute createAttribute(org.dom4j.Element owner, org.dom4j.QName qname, String value)">1</method>
			<method name="public org.dom4j.Entity createEntity(String name)">1</method>
			<method name="static Class class$(String x0)">1</method>
			<method name="public org.dom4j.Document createDocument()">1</method>
			<method name="public org.dom4j.Element createElement(org.dom4j.QName qname, int attributeCount)">1</method>
			<method name="public static org.dom4j.DocumentFactory getInstance()">1</method>
			<method name="public boolean hasFeature(String feat, String version)">7</method>
			<method name="public org.w3c.dom.Document createDocument(String namespaceURI, String qualifiedName, org.w3c.dom.DocumentType docType)">1</method>
			<method name="static void _clinit_()">2</method>
			<method name="protected org.dom4j.dom.DOMDocumentType asDocumentType(org.w3c.dom.DocumentType docType)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public org.dom4j.DocumentType createDocType(String name, String publicId, String systemId)">1</method>
			<method name="public org.dom4j.ProcessingInstruction createProcessingInstruction(String target, java.util.Map data)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultDivExpr</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>13</rfc>
		<lcom>6</lcom>
		<ca>1</ca>
		<ce>13</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>42</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.5</amc>
		<cc>
			<method name="public Object evaluate(org.jaxen.Context context)">1</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public String getOperator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.swing.BranchTreeNode$1</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>6</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>37</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.666666666666666</amc>
		<cc>
			<method name="public boolean hasMoreElements()">2</method>
			<method name="void _init_(org.dom4j.swing.BranchTreeNode this$0)">1</method>
			<method name="public Object nextElement()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.bean.BeanElement</name>
		<wmc>18</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>22</cbo>
		<rfc>42</rfc>
		<lcom>135</lcom>
		<ca>4</ca>
		<ce>20</ce>
		<npm>12</npm>
		<lcom3>0.8235294117647058</lcom3>
		<loc>183</loc>
		<dam>0.6666666666666666</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.21176470588235294</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.0</amc>
		<cc>
			<method name="protected org.dom4j.DocumentFactory getDocumentFactory()">1</method>
			<method name="public org.dom4j.Element addAttribute(String name, String value)">2</method>
			<method name="protected java.util.List createAttributeList(int size)">1</method>
			<method name="public void _init_(String name, Object bean)">1</method>
			<method name="public void _init_(String name, org.dom4j.Namespace namespace, Object bean)">1</method>
			<method name="public void _init_(org.dom4j.QName qname)">1</method>
			<method name="public void _init_(org.dom4j.QName qname, Object bean)">1</method>
			<method name="public void setAttributes(java.util.List attributes)">1</method>
			<method name="public org.dom4j.Attribute attribute(org.dom4j.QName qname)">1</method>
			<method name="public void setData(Object data)">1</method>
			<method name="protected java.util.List createAttributeList()">1</method>
			<method name="static Class class$(String x0)">1</method>
			<method name="public org.dom4j.Element addAttribute(org.dom4j.QName qName, String value)">2</method>
			<method name="public Object getData()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public org.dom4j.Attribute attribute(String name)">1</method>
			<method name="protected org.dom4j.bean.BeanAttributeList getBeanAttributeList()">1</method>
			<method name="public void setAttributes(org.xml.sax.Attributes attributes, org.dom4j.tree.NamespaceStack namespaceStack, boolean noNamespaceAttributes)">4</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultLogicalExpr</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>2</noc>
		<cbo>7</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>5</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>6</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.0</amc>
		<cc>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.SAXModifyReader</name>
		<wmc>13</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>25</rfc>
		<lcom>70</lcom>
		<ca>1</ca>
		<ce>12</ce>
		<npm>11</npm>
		<lcom3>0.875</lcom3>
		<loc>77</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.3333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.769230769230769</amc>
		<cc>
			<method name="protected org.dom4j.io.XMLWriter getXMLWriter()">1</method>
			<method name="public void _init_(org.xml.sax.XMLReader xmlReader, boolean validating)">1</method>
			<method name="public boolean isPruneElements()">1</method>
			<method name="public void setXMLWriter(org.dom4j.io.XMLWriter writer)">1</method>
			<method name="public void _init_(org.xml.sax.XMLReader xmlReader)">1</method>
			<method name="public void _init_(String xmlReaderClassName)">1</method>
			<method name="public void setPruneElements(boolean pruneElements)">1</method>
			<method name="public void _init_(String xmlReaderClassName, boolean validating)">1</method>
			<method name="public void _init_(boolean validating)">1</method>
			<method name="protected org.dom4j.io.SAXContentHandler createContentHandler(org.xml.sax.XMLReader reader)">1</method>
			<method name="public void _init_(org.dom4j.DocumentFactory factory, boolean validating)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(org.dom4j.DocumentFactory factory)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.dom.html.DocumentNavigator</name>
		<wmc>10</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>17</rfc>
		<lcom>37</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>7</npm>
		<lcom3>0.7037037037037037</lcom3>
		<loc>93</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.35555555555555557</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.0</amc>
		<cc>
			<method name="public String getElementQName(Object object)">1</method>
			<method name="private boolean isXMLNode(org.w3c.dom.Node node)">3</method>
			<method name="public String getElementName(Object object)">1</method>
			<method name="public org.jaxen.XPath parseXPath(String xpath)">1</method>
			<method name="public void _init_(boolean toLowerCase)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public static org.jaxen.Navigator getInstance(boolean toLowerCase)">2</method>
			<method name="protected String getHTMLNodeName(org.w3c.dom.Node node, String name)">4</method>
			<method name="public void _init_()">1</method>
			<method name="public boolean isToLowerCase()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultRelationalExpr</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>4</noc>
		<cbo>19</cbo>
		<rfc>25</rfc>
		<lcom>15</lcom>
		<ca>4</ca>
		<ce>15</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>156</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.30952380952380953</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>25.0</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public Object evaluate(org.jaxen.Context context)">1</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="private boolean evaluateObjectObject(Object lhs, Object rhs, org.jaxen.Navigator nav)">5</method>
			<method name="protected abstract boolean evaluateDoubleDouble(Double, Double)">1</method>
			<method name="private Object evaluateSetSet(java.util.List lhsSet, java.util.List rhsSet, org.jaxen.Navigator nav)">4</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.dom.DOMNodeHelper$EmptyNodeList</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>4</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>10</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>2.3333333333333335</amc>
		<cc>
			<method name="public int getLength()">1</method>
			<method name="public org.w3c.dom.Node item(int index)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.AbstractProcessingInstruction</name>
		<wmc>17</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>18</cbo>
		<rfc>47</rfc>
		<lcom>136</lcom>
		<ca>1</ca>
		<ce>17</ce>
		<npm>13</npm>
		<lcom3>2.0</lcom3>
		<loc>288</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.24369747899159663</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>15.941176470588236</amc>
		<cc>
			<method name="public void write(java.io.Writer writer)">1</method>
			<method name="private String getValue(java.util.StringTokenizer tokenizer)">6</method>
			<method name="public String asXML()">1</method>
			<method name="public void setName(String name)">1</method>
			<method name="protected java.util.Map parseValues(String text)">2</method>
			<method name="public String getName()">1</method>
			<method name="public short getNodeType()">1</method>
			<method name="public String getUniquePath(org.dom4j.Element context)">3</method>
			<method name="public void accept(org.dom4j.Visitor visitor)">1</method>
			<method name="public String toString()">1</method>
			<method name="private String getName(java.util.StringTokenizer tokenizer)">3</method>
			<method name="public void setValues(java.util.Map data)">1</method>
			<method name="public boolean removeValue(String name)">1</method>
			<method name="public String getPath(org.dom4j.Element context)">3</method>
			<method name="protected String toString(java.util.Map values)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public void setValue(String name, String value)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.STAXEventReader</name>
		<wmc>24</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>36</cbo>
		<rfc>91</rfc>
		<lcom>134</lcom>
		<ca>0</ca>
		<ce>36</ce>
		<npm>24</npm>
		<lcom3>0.43478260869565216</lcom3>
		<loc>592</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.1388888888888889</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>23.583333333333332</amc>
		<cc>
			<method name="public org.dom4j.Entity createEntity(javax.xml.stream.events.EntityReference entityRef)">1</method>
			<method name="public org.dom4j.Attribute createAttribute(org.dom4j.Element elem, javax.xml.stream.events.Attribute attr)">1</method>
			<method name="public org.dom4j.Namespace createNamespace(javax.xml.stream.events.Namespace ns)">1</method>
			<method name="public org.dom4j.Document readDocument(java.io.Reader reader, String systemId)">1</method>
			<method name="public org.dom4j.Attribute readAttribute(javax.xml.stream.XMLEventReader reader)">1</method>
			<method name="public org.dom4j.ProcessingInstruction createProcessingInstruction(javax.xml.stream.events.ProcessingInstruction pi)">1</method>
			<method name="public org.dom4j.QName createQName(javax.xml.namespace.QName qname)">1</method>
			<method name="public org.dom4j.Document readDocument(java.io.InputStream is)">1</method>
			<method name="public org.dom4j.Comment createComment(javax.xml.stream.events.Comment comment)">1</method>
			<method name="public org.dom4j.Document readDocument(java.io.InputStream is, String systemId)">1</method>
			<method name="public org.dom4j.Document readDocument(javax.xml.stream.XMLEventReader reader)">1</method>
			<method name="public org.dom4j.Node readNode(javax.xml.stream.XMLEventReader reader)">1</method>
			<method name="public org.dom4j.CharacterData createCharacterData(javax.xml.stream.events.Characters characters)">2</method>
			<method name="public org.dom4j.ProcessingInstruction readProcessingInstruction(javax.xml.stream.XMLEventReader reader)">1</method>
			<method name="public void setDocumentFactory(org.dom4j.DocumentFactory documentFactory)">2</method>
			<method name="public org.dom4j.Element readElement(javax.xml.stream.XMLEventReader eventReader)">1</method>
			<method name="public org.dom4j.Element createElement(javax.xml.stream.events.StartElement startEvent)">3</method>
			<method name="public org.dom4j.Entity readEntityReference(javax.xml.stream.XMLEventReader reader)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public org.dom4j.CharacterData readCharacters(javax.xml.stream.XMLEventReader reader)">1</method>
			<method name="public org.dom4j.Comment readComment(javax.xml.stream.XMLEventReader reader)">1</method>
			<method name="public org.dom4j.Document readDocument(java.io.Reader reader)">1</method>
			<method name="public void _init_(org.dom4j.DocumentFactory factory)">2</method>
			<method name="public org.dom4j.Namespace readNamespace(javax.xml.stream.XMLEventReader reader)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultAdditiveExpr</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>2</noc>
		<cbo>10</cbo>
		<rfc>11</rfc>
		<lcom>1</lcom>
		<ca>2</ca>
		<ce>8</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>30</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.0</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.ConcatFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>14</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>11</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>41</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.666666666666666</amc>
		<cc>
			<method name="public static String evaluate(java.util.List list, org.jaxen.Navigator nav)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.ext.MatrixConcatFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>19</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>13</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>121</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>39.333333333333336</amc>
		<cc>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">2</method>
			<method name="public static Object evaluate(java.util.List list, org.jaxen.Navigator nav)">6</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.ConcurrentReaderHashMap$HashIterator</name>
		<wmc>7</wmc>
		<dit>1</dit>
		<noc>2</noc>
		<cbo>11</cbo>
		<rfc>12</rfc>
		<lcom>5</lcom>
		<ca>3</ca>
		<ce>8</ce>
		<npm>5</npm>
		<lcom3>0.5</lcom3>
		<loc>148</loc>
		<dam>1.0</dam>
		<moa>4</moa>
		<mfa>0.0</mfa>
		<cam>0.5714285714285714</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>19.142857142857142</amc>
		<cc>
			<method name="public boolean hasNext()">6</method>
			<method name="public void remove()">2</method>
			<method name="public boolean hasMoreElements()">1</method>
			<method name="public Object nextElement()">1</method>
			<method name="public Object next()">3</method>
			<method name="protected void _init_(org.dom4j.tree.ConcurrentReaderHashMap this$0)">1</method>
			<method name="protected Object returnValueOfNext()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.util.NonLazyDocumentFactory</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>6</rfc>
		<lcom>4</lcom>
		<ca>0</ca>
		<ce>6</ce>
		<npm>3</npm>
		<lcom3>0.6666666666666666</lcom3>
		<loc>20</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.75</amc>
		<cc>
			<method name="public org.dom4j.Element createElement(org.dom4j.QName qname)">1</method>
			<method name="public static org.dom4j.DocumentFactory getInstance()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.LocalNameFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>21</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>101</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>32.666666666666664</amc>
		<cc>
			<method name="public static String evaluate(java.util.List list, org.jaxen.Navigator nav)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.util.SingletonStrategy</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>3</rfc>
		<lcom>3</lcom>
		<ca>5</ca>
		<ce>3</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>3</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void setSingletonClassName(String)">1</method>
			<method name="public abstract void reset()">1</method>
			<method name="public abstract Object instance()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.BooleanFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>18</cbo>
		<rfc>11</rfc>
		<lcom>3</lcom>
		<ca>7</ca>
		<ce>11</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>78</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>25.0</amc>
		<cc>
			<method name="public static Boolean evaluate(Object obj, org.jaxen.Navigator nav)">10</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.SingleObjectIterator</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>12</cbo>
		<rfc>7</rfc>
		<lcom>0</lcom>
		<ca>7</ca>
		<ce>5</ce>
		<npm>4</npm>
		<lcom3>0.5</lcom3>
		<loc>39</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.25</amc>
		<cc>
			<method name="public boolean hasNext()">2</method>
			<method name="public void remove()">1</method>
			<method name="public void _init_(Object object)">1</method>
			<method name="public Object next()">2</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.BackedList</name>
		<wmc>13</wmc>
		<dit>4</dit>
		<noc>0</noc>
		<cbo>16</cbo>
		<rfc>44</rfc>
		<lcom>22</lcom>
		<ca>5</ca>
		<ce>12</ce>
		<npm>12</npm>
		<lcom3>0.3333333333333333</lcom3>
		<loc>328</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.8876404494382022</mfa>
		<cam>0.41025641025641024</cam>
		<ic>3</ic>
		<cbm>5</cbm>
		<amc>24.076923076923077</amc>
		<cc>
			<method name="protected org.dom4j.Node asNode(Object object)">2</method>
			<method name="public boolean addAll(java.util.Collection collection)">3</method>
			<method name="public boolean add(Object object)">1</method>
			<method name="public boolean addAll(int index, java.util.Collection collection)">3</method>
			<method name="public Object set(int index, Object object)">4</method>
			<method name="public void clear()">2</method>
			<method name="public void _init_(org.dom4j.tree.AbstractBranch branch, java.util.List branchContent)">1</method>
			<method name="public void _init_(org.dom4j.tree.AbstractBranch branch, java.util.List branchContent, java.util.List initialContent)">1</method>
			<method name="public boolean remove(Object object)">1</method>
			<method name="public Object remove(int index)">2</method>
			<method name="public void _init_(org.dom4j.tree.AbstractBranch branch, java.util.List branchContent, int capacity)">1</method>
			<method name="public void add(int index, Object object)">5</method>
			<method name="public void addLocal(Object object)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.DescendantOrSelfAxisIterator</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.0</amc>
		<cc>
			<method name="public void _init_(Object contextNode, org.jaxen.Navigator navigator)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.ElementQNameIterator</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>5</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>24</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.5</amc>
		<cc>
			<method name="public void _init_(java.util.Iterator proxy, org.dom4j.QName qName)">1</method>
			<method name="protected boolean matches(Object object)">2</method>
		</cc>
	</class>
	<class>
		<name>com.adobe.ac.ant.tasks.MacSWFLauncher</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>9</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>23</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.0</amc>
		<cc>
			<method name="public void launch(String arg0)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.datatype.NamedTypeResolver</name>
		<wmc>8</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>21</rfc>
		<lcom>12</lcom>
		<ca>1</ca>
		<ce>12</ce>
		<npm>0</npm>
		<lcom3>0.6</lcom3>
		<loc>146</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>16.625</amc>
		<cc>
			<method name="void resolveElementTypes()">3</method>
			<method name="void registerComplexType(org.dom4j.QName type, org.dom4j.DocumentFactory factory)">1</method>
			<method name="void registerTypedElement(org.dom4j.Element element, org.dom4j.QName type, org.dom4j.DocumentFactory parentFactory)">1</method>
			<method name="void resolveNamedTypes()">1</method>
			<method name="private org.dom4j.QName getQNameOfSchemaElement(org.dom4j.Element element)">1</method>
			<method name="void _init_(org.dom4j.DocumentFactory documentFactory)">1</method>
			<method name="void registerSimpleType(org.dom4j.QName type, com.sun.msv.datatype.xsd.XSDatatype datatype)">1</method>
			<method name="private org.dom4j.QName getQName(String name)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.dom.DOMNodeHelper$1</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>7</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>27</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.666666666666667</amc>
		<cc>
			<method name="public int getLength()">1</method>
			<method name="void _init_(java.util.List val$list)">1</method>
			<method name="public org.w3c.dom.Node item(int index)">2</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.SimpleNamespaceContext</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>15</rfc>
		<lcom>0</lcom>
		<ca>3</ca>
		<ce>10</ce>
		<npm>5</npm>
		<lcom3>0.0</lcom3>
		<loc>68</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.4</amc>
		<cc>
			<method name="public void _init_(java.util.Map namespaces)">1</method>
			<method name="public void addElementNamespaces(org.jaxen.Navigator nav, Object element)">1</method>
			<method name="public void addNamespace(String prefix, String namespaceUri)">1</method>
			<method name="public String translateNamespacePrefixToUri(String prefix)">2</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.dom.DOMAttributeNodeMap</name>
		<wmc>10</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>25</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>12</ce>
		<npm>10</npm>
		<lcom3>0.1111111111111111</lcom3>
		<loc>124</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.36</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.3</amc>
		<cc>
			<method name="public int getLength()">1</method>
			<method name="public org.w3c.dom.Node setNamedItemNS(org.w3c.dom.Node arg)">1</method>
			<method name="public org.w3c.dom.Node getNamedItem(String name)">1</method>
			<method name="public org.w3c.dom.Node removeNamedItem(String name)">1</method>
			<method name="public void _init_(org.dom4j.dom.DOMElement element)">1</method>
			<method name="public org.w3c.dom.Node setNamedItem(org.w3c.dom.Node arg)">1</method>
			<method name="public org.w3c.dom.Node removeNamedItemNS(String namespaceURI, String localName)">1</method>
			<method name="public org.w3c.dom.Node item(int index)">1</method>
			<method name="public void foo()">1</method>
			<method name="public org.w3c.dom.Node getNamedItemNS(String namespaceURI, String localName)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultExpr</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>9</noc>
		<cbo>17</cbo>
		<rfc>8</rfc>
		<lcom>6</lcom>
		<ca>10</ca>
		<ce>7</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>38</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.5</amc>
		<cc>
			<method name="public org.jaxen.expr.Expr simplify()">1</method>
			<method name="public static java.util.List convertToList(Object obj)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public static java.util.Iterator convertToIterator(Object obj)">3</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultUnionExpr</name>
		<wmc>5</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>23</cbo>
		<rfc>30</rfc>
		<lcom>10</lcom>
		<ca>1</ca>
		<ce>22</ce>
		<npm>5</npm>
		<lcom3>2.0</lcom3>
		<loc>102</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>19.4</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public Object evaluate(org.jaxen.Context context)">1</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public String getOperator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.DescendantAxisIterator</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>12</cbo>
		<rfc>16</rfc>
		<lcom>4</lcom>
		<ca>2</ca>
		<ce>10</ce>
		<npm>5</npm>
		<lcom3>0.33333333333333337</lcom3>
		<loc>83</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.45</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>15.0</amc>
		<cc>
			<method name="public boolean hasNext()">3</method>
			<method name="public void remove()">1</method>
			<method name="public void _init_(org.jaxen.Navigator navigator, java.util.Iterator iterator)">1</method>
			<method name="public Object next()">2</method>
			<method name="public void _init_(Object contextNode, org.jaxen.Navigator navigator)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.NamespaceContext</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>9</ca>
		<ce>2</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract String translateNamespacePrefixToUri(String)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.util.ProxyDocumentFactory</name>
		<wmc>27</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>20</cbo>
		<rfc>52</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>20</ce>
		<npm>25</npm>
		<lcom3>0.0</lcom3>
		<loc>181</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.26851851851851855</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.666666666666667</amc>
		<cc>
			<method name="public org.dom4j.Text createText(String text)">1</method>
			<method name="public org.dom4j.CDATA createCDATA(String text)">1</method>
			<method name="public org.dom4j.Element createElement(org.dom4j.QName qname)">1</method>
			<method name="public org.dom4j.Namespace createNamespace(String prefix, String uri)">1</method>
			<method name="public org.dom4j.ProcessingInstruction createProcessingInstruction(String target, String data)">1</method>
			<method name="public org.dom4j.QName createQName(String qualifiedName, String uri)">1</method>
			<method name="protected void setProxy(org.dom4j.DocumentFactory proxy)">2</method>
			<method name="public org.dom4j.Element createElement(String name)">1</method>
			<method name="public org.dom4j.QName createQName(String name, String prefix, String uri)">1</method>
			<method name="public org.dom4j.Document createDocument()">1</method>
			<method name="public org.dom4j.rule.Pattern createPattern(String xpathPattern)">1</method>
			<method name="public org.dom4j.Document createDocument(org.dom4j.Element rootElement)">1</method>
			<method name="protected org.dom4j.DocumentFactory getProxy()">1</method>
			<method name="public org.dom4j.DocumentType createDocType(String name, String publicId, String systemId)">1</method>
			<method name="public org.dom4j.QName createQName(String localName)">1</method>
			<method name="public void _init_(org.dom4j.DocumentFactory proxy)">1</method>
			<method name="public org.dom4j.Entity createEntity(String name, String text)">1</method>
			<method name="public org.dom4j.Attribute createAttribute(org.dom4j.Element owner, String name, String value)">1</method>
			<method name="public org.dom4j.NodeFilter createXPathFilter(String xpathFilterExpression)">1</method>
			<method name="public org.dom4j.Comment createComment(String text)">1</method>
			<method name="public org.dom4j.Attribute createAttribute(org.dom4j.Element owner, org.dom4j.QName qname, String value)">1</method>
			<method name="public org.dom4j.NodeFilter createXPathFilter(String xpathFilterExpression, org.jaxen.VariableContext variableContext)">1</method>
			<method name="public org.dom4j.QName createQName(String localName, org.dom4j.Namespace namespace)">1</method>
			<method name="public org.dom4j.XPath createXPath(String xpathExpression)">1</method>
			<method name="public org.dom4j.XPath createXPath(String xpathExpression, org.jaxen.VariableContext variableContext)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public org.dom4j.ProcessingInstruction createProcessingInstruction(String target, java.util.Map data)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.dom.NamespaceNode</name>
		<wmc>32</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>42</rfc>
		<lcom>422</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>28</npm>
		<lcom3>0.8709677419354839</lcom3>
		<loc>239</loc>
		<dam>0.75</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2875</cam>
		<ic>1</ic>
		<cbm>1</cbm>
		<amc>6.34375</amc>
		<cc>
			<method name="public boolean isSupported(String feature, String version)">1</method>
			<method name="public org.w3c.dom.Node getFirstChild()">1</method>
			<method name="public String getNodeName()">1</method>
			<method name="public short getNodeType()">1</method>
			<method name="public org.w3c.dom.NamedNodeMap getAttributes()">1</method>
			<method name="public org.w3c.dom.NodeList getChildNodes()">1</method>
			<method name="public int hashCode()">1</method>
			<method name="public org.w3c.dom.Node getNextSibling()">1</method>
			<method name="public void setPrefix(String prefix)">1</method>
			<method name="public String getNodeValue()">1</method>
			<method name="public void setNodeValue(String value)">1</method>
			<method name="public org.w3c.dom.Document getOwnerDocument()">2</method>
			<method name="private void disallowModification()">1</method>
			<method name="public String getNamespaceURI()">1</method>
			<method name="private int hashCode(Object o)">2</method>
			<method name="public void _init_(org.w3c.dom.Node parent, String name, String value)">1</method>
			<method name="public boolean equals(Object o)">7</method>
			<method name="public org.w3c.dom.Node insertBefore(org.w3c.dom.Node newChild, org.w3c.dom.Node refChild)">1</method>
			<method name="public org.w3c.dom.Node replaceChild(org.w3c.dom.Node newChild, org.w3c.dom.Node oldChild)">1</method>
			<method name="public org.w3c.dom.Node appendChild(org.w3c.dom.Node newChild)">1</method>
			<method name="public boolean hasAttributes()">1</method>
			<method name="public String getPrefix()">1</method>
			<method name="void _init_(org.w3c.dom.Node parent, org.w3c.dom.Node attribute)">2</method>
			<method name="public org.w3c.dom.Node removeChild(org.w3c.dom.Node oldChild)">1</method>
			<method name="public org.w3c.dom.Node getParentNode()">1</method>
			<method name="public String getLocalName()">1</method>
			<method name="public boolean hasChildNodes()">1</method>
			<method name="public org.w3c.dom.Node cloneNode(boolean deep)">1</method>
			<method name="public org.w3c.dom.Node getPreviousSibling()">1</method>
			<method name="public org.w3c.dom.Node getLastChild()">1</method>
			<method name="private boolean equals(Object a, Object b)">5</method>
			<method name="public void normalize()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.Visitable</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>3</ca>
		<ce>3</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void accept(org.jaxen.expr.Visitor)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.pattern.AnyNodeTest</name>
		<wmc>7</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>8</rfc>
		<lcom>19</lcom>
		<ca>2</ca>
		<ce>5</ce>
		<npm>5</npm>
		<lcom3>0.8333333333333334</lcom3>
		<loc>26</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.3888888888888889</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>2.5714285714285716</amc>
		<cc>
			<method name="public static org.jaxen.pattern.AnyNodeTest getInstance()">1</method>
			<method name="public boolean matches(Object node, org.jaxen.Context context)">1</method>
			<method name="public String getText()">1</method>
			<method name="public short getMatchType()">1</method>
			<method name="private void _init_()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public double getPriority()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.rule.RuleSet</name>
		<wmc>7</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>21</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>6</npm>
		<lcom3>0.16666666666666666</lcom3>
		<loc>107</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.39285714285714285</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.0</amc>
		<cc>
			<method name="public void removeRule(org.dom4j.rule.Rule rule)">1</method>
			<method name="public String toString()">1</method>
			<method name="public void addAll(org.dom4j.rule.RuleSet that)">1</method>
			<method name="public void addRule(org.dom4j.rule.Rule rule)">1</method>
			<method name="protected org.dom4j.rule.Rule[] getRuleArray()">2</method>
			<method name="public void _init_()">1</method>
			<method name="public org.dom4j.rule.Rule getMatchingRule(org.dom4j.Node node)">3</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.Predicated</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>3</rfc>
		<lcom>3</lcom>
		<ca>4</ca>
		<ce>6</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>3</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract org.jaxen.expr.PredicateSet getPredicateSet()">1</method>
			<method name="public abstract void addPredicate(org.jaxen.expr.Predicate)">1</method>
			<method name="public abstract java.util.List getPredicates()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.saxpath.base.Token</name>
		<wmc>10</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>16</rfc>
		<lcom>33</lcom>
		<ca>2</ca>
		<ce>4</ce>
		<npm>4</npm>
		<lcom3>0.6111111111111112</lcom3>
		<loc>79</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.5</amc>
		<cc>
			<method name="private void setTokenBegin(int tokenBegin)">1</method>
			<method name="public String toString()">1</method>
			<method name="public void _init_(int tokenType, String parseText, int tokenBegin, int tokenEnd)">1</method>
			<method name="int getTokenEnd()">1</method>
			<method name="private void setTokenType(int tokenType)">1</method>
			<method name="int getTokenBegin()">1</method>
			<method name="private void setTokenEnd(int tokenEnd)">1</method>
			<method name="private void setParseText(String parseText)">1</method>
			<method name="public String getTokenText()">1</method>
			<method name="public int getTokenType()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.saxpath.XPathSyntaxException</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>14</rfc>
		<lcom>11</lcom>
		<ca>3</ca>
		<ce>6</ce>
		<npm>6</npm>
		<lcom3>0.4</lcom3>
		<loc>97</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4444444444444444</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.833333333333334</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_(String xpath, int position, String message)">1</method>
			<method name="public String getXPath()">1</method>
			<method name="public String getMultilineMessage()">1</method>
			<method name="public int getPosition()">1</method>
			<method name="public String getPositionMarker()">2</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.saxpath.base.DefaultXPathHandler</name>
		<wmc>47</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>48</rfc>
		<lcom>1079</lcom>
		<ca>2</ca>
		<ce>4</ce>
		<npm>45</npm>
		<lcom3>0.9782608695652174</lcom3>
		<loc>102</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.2826086956521739</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>1.148936170212766</amc>
		<cc>
			<method name="public void startTextNodeStep(int axis)">1</method>
			<method name="public void endOrExpr(boolean create)">1</method>
			<method name="public void startAbsoluteLocationPath()">1</method>
			<method name="public void endRelativeLocationPath()">1</method>
			<method name="public void startAllNodeStep(int axis)">1</method>
			<method name="public void endTextNodeStep()">1</method>
			<method name="public void endProcessingInstructionNodeStep()">1</method>
			<method name="public void startPredicate()">1</method>
			<method name="public void endAdditiveExpr(int operator)">1</method>
			<method name="public void startXPath()">1</method>
			<method name="public void startCommentNodeStep(int axis)">1</method>
			<method name="public void endFilterExpr()">1</method>
			<method name="public void endUnaryExpr(int operator)">1</method>
			<method name="public void startUnaryExpr()">1</method>
			<method name="public void startAndExpr()">1</method>
			<method name="public void endUnionExpr(boolean create)">1</method>
			<method name="public void startOrExpr()">1</method>
			<method name="public void startNameStep(int axis, String prefix, String localName)">1</method>
			<method name="public void number(double number)">1</method>
			<method name="private void _init_()">1</method>
			<method name="public void startRelationalExpr()">1</method>
			<method name="public void startUnionExpr()">1</method>
			<method name="public void endAndExpr(boolean create)">1</method>
			<method name="public void endEqualityExpr(int operator)">1</method>
			<method name="public void endPathExpr()">1</method>
			<method name="public void startMultiplicativeExpr()">1</method>
			<method name="public void endNameStep()">1</method>
			<method name="public void literal(String literal)">1</method>
			<method name="public void endAbsoluteLocationPath()">1</method>
			<method name="public void startFunction(String prefix, String functionName)">1</method>
			<method name="public void endCommentNodeStep()">1</method>
			<method name="public void endFunction()">1</method>
			<method name="public void number(int number)">1</method>
			<method name="public void endXPath()">1</method>
			<method name="public void startEqualityExpr()">1</method>
			<method name="public void startAdditiveExpr()">1</method>
			<method name="public void startRelativeLocationPath()">1</method>
			<method name="public void startProcessingInstructionNodeStep(int axis, String name)">1</method>
			<method name="public void startFilterExpr()">1</method>
			<method name="public void variableReference(String prefix, String variableName)">1</method>
			<method name="public void endPredicate()">1</method>
			<method name="public void endRelationalExpr(int operator)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void endMultiplicativeExpr(int operator)">1</method>
			<method name="public static org.jaxen.saxpath.XPathHandler getInstance()">1</method>
			<method name="public void startPathExpr()">1</method>
			<method name="public void endAllNodeStep()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.LinkedIterator</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>14</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>7</ce>
		<npm>5</npm>
		<lcom3>0.375</lcom3>
		<loc>81</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.8</amc>
		<cc>
			<method name="public boolean hasNext()">4</method>
			<method name="public void remove()">1</method>
			<method name="public Object next()">2</method>
			<method name="public void _init_()">1</method>
			<method name="public void addIterator(java.util.Iterator i)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.dom.DOMAttribute</name>
		<wmc>31</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>17</cbo>
		<rfc>62</rfc>
		<lcom>465</lcom>
		<ca>2</ca>
		<ce>15</ce>
		<npm>30</npm>
		<lcom3>2.0</lcom3>
		<loc>166</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.25268817204301075</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.354838709677419</amc>
		<cc>
			<method name="public boolean isSupported(String feature, String version)">1</method>
			<method name="public void _init_(org.dom4j.QName qname)">1</method>
			<method name="public org.w3c.dom.Node getFirstChild()">1</method>
			<method name="public String getNodeName()">1</method>
			<method name="public void _init_(org.dom4j.QName qname, String value)">1</method>
			<method name="public org.w3c.dom.NamedNodeMap getAttributes()">1</method>
			<method name="public void _init_(org.dom4j.Element parent, org.dom4j.QName qname, String value)">1</method>
			<method name="public org.w3c.dom.NodeList getChildNodes()">1</method>
			<method name="public org.w3c.dom.Node getNextSibling()">1</method>
			<method name="public void setPrefix(String prefix)">1</method>
			<method name="public String getNodeValue()">1</method>
			<method name="public boolean supports(String feature, String version)">1</method>
			<method name="public org.w3c.dom.Document getOwnerDocument()">1</method>
			<method name="public String getNamespaceURI()">1</method>
			<method name="public org.w3c.dom.Element getOwnerElement()">1</method>
			<method name="public org.w3c.dom.Node insertBefore(org.w3c.dom.Node newChild, org.w3c.dom.Node refChild)">1</method>
			<method name="public org.w3c.dom.Node replaceChild(org.w3c.dom.Node newChild, org.w3c.dom.Node oldChild)">1</method>
			<method name="public boolean getSpecified()">1</method>
			<method name="public org.w3c.dom.Node appendChild(org.w3c.dom.Node newChild)">1</method>
			<method name="public boolean hasAttributes()">1</method>
			<method name="public String getPrefix()">1</method>
			<method name="public org.w3c.dom.Node removeChild(org.w3c.dom.Node oldChild)">1</method>
			<method name="public org.w3c.dom.Node getParentNode()">1</method>
			<method name="public String getLocalName()">1</method>
			<method name="private void checkNewChildNode(org.w3c.dom.Node newChild)">1</method>
			<method name="public boolean hasChildNodes()">1</method>
			<method name="public org.w3c.dom.Node cloneNode(boolean deep)">1</method>
			<method name="public void setNodeValue(String nodeValue)">1</method>
			<method name="public org.w3c.dom.Node getPreviousSibling()">1</method>
			<method name="public org.w3c.dom.Node getLastChild()">1</method>
			<method name="public void normalize()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.util.IndexedElement</name>
		<wmc>28</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>15</cbo>
		<rfc>55</rfc>
		<lcom>340</lcom>
		<ca>1</ca>
		<ce>14</ce>
		<npm>9</npm>
		<lcom3>0.6666666666666666</lcom3>
		<loc>417</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.24553571428571427</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.821428571428571</amc>
		<cc>
			<method name="public void _init_(String name)">1</method>
			<method name="public void _init_(org.dom4j.QName qname)">1</method>
			<method name="protected org.dom4j.Element asElement(Object object)">4</method>
			<method name="protected java.util.Map createElementIndex()">1</method>
			<method name="protected java.util.Map createIndex()">1</method>
			<method name="public java.util.List elements(org.dom4j.QName qName)">1</method>
			<method name="protected java.util.Iterator asElementIterator(Object object)">1</method>
			<method name="public org.dom4j.Attribute attribute(org.dom4j.QName qName)">1</method>
			<method name="protected void removeFromAttributeIndex(org.dom4j.Attribute attribute)">1</method>
			<method name="public void _init_(org.dom4j.QName qname, int attributeCount)">1</method>
			<method name="protected java.util.Map elementIndex()">3</method>
			<method name="protected void removeFromAttributeIndex(Object key, org.dom4j.Attribute value)">3</method>
			<method name="public org.dom4j.Element element(org.dom4j.QName qName)">1</method>
			<method name="public org.dom4j.Attribute attribute(String name)">1</method>
			<method name="protected void removeFromElementIndex(Object key, org.dom4j.Element value)">2</method>
			<method name="protected java.util.Map createAttributeIndex()">1</method>
			<method name="protected void addToElementIndex(Object key, org.dom4j.Element value)">3</method>
			<method name="protected void addNode(org.dom4j.Node node)">5</method>
			<method name="public org.dom4j.Element element(String name)">1</method>
			<method name="protected void addToElementIndex(org.dom4j.Element element)">1</method>
			<method name="protected java.util.List createList()">1</method>
			<method name="protected void removeFromElementIndex(org.dom4j.Element element)">1</method>
			<method name="protected void addToAttributeIndex(org.dom4j.Attribute attribute)">1</method>
			<method name="protected java.util.Map attributeIndex()">3</method>
			<method name="protected boolean removeNode(org.dom4j.Node node)">6</method>
			<method name="protected java.util.List asElementList(Object object)">4</method>
			<method name="public java.util.List elements(String name)">1</method>
			<method name="protected void addToAttributeIndex(Object key, org.dom4j.Attribute value)">2</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.util.NonLazyElement</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>10</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>54</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.5</amc>
		<cc>
			<method name="public void _init_(String name)">1</method>
			<method name="public void _init_(org.dom4j.QName qname)">1</method>
			<method name="public void _init_(String name, org.dom4j.Namespace namespace)">1</method>
			<method name="public void _init_(org.dom4j.QName qname, int attributeCount)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.FlyweightEntity</name>
		<wmc>7</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>8</cbo>
		<rfc>10</rfc>
		<lcom>9</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>5</npm>
		<lcom3>0.5</lcom3>
		<loc>55</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5238095238095238</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.571428571428571</amc>
		<cc>
			<method name="protected void _init_()">1</method>
			<method name="public String getText()">1</method>
			<method name="protected org.dom4j.Node createXPathResult(org.dom4j.Element parent)">1</method>
			<method name="public void _init_(String name)">1</method>
			<method name="public void setText(String text)">2</method>
			<method name="public void _init_(String name, String text)">1</method>
			<method name="public String getName()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultRelativeLocationPath</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>9</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>22</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.333333333333333</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.jdom.DocumentNavigator$Singleton</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>3</cbo>
		<rfc>5</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>0.5</lcom3>
		<loc>14</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.3333333333333335</amc>
		<cc>
			<method name="private void _init_()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="static org.jaxen.jdom.DocumentNavigator access$000()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.pattern.NameTest</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>18</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>7</ce>
		<npm>6</npm>
		<lcom3>0.3</lcom3>
		<loc>124</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>19.333333333333332</amc>
		<cc>
			<method name="public boolean matches(Object node, org.jaxen.Context context)">9</method>
			<method name="public String toString()">1</method>
			<method name="public String getText()">2</method>
			<method name="public short getMatchType()">1</method>
			<method name="public void _init_(String name, short nodeType)">1</method>
			<method name="public double getPriority()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.swing.BranchTreeNode</name>
		<wmc>14</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>29</rfc>
		<lcom>89</lcom>
		<ca>2</ca>
		<ce>12</ce>
		<npm>10</npm>
		<lcom3>0.7692307692307693</lcom3>
		<loc>137</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2857142857142857</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.714285714285714</amc>
		<cc>
			<method name="protected java.util.List getChildList()">2</method>
			<method name="protected org.dom4j.Branch getXmlBranch()">1</method>
			<method name="public void _init_(org.dom4j.Branch xmlNode)">1</method>
			<method name="public void _init_(javax.swing.tree.TreeNode parent, org.dom4j.Branch xmlNode)">1</method>
			<method name="public boolean isLeaf()">2</method>
			<method name="public String toString()">1</method>
			<method name="public int getIndex(javax.swing.tree.TreeNode node)">1</method>
			<method name="protected java.util.List createChildList()">5</method>
			<method name="public java.util.Enumeration children()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public javax.swing.tree.TreeNode getChildAt(int childIndex)">1</method>
			<method name="public int getChildCount()">1</method>
			<method name="public boolean getAllowsChildren()">1</method>
			<method name="protected javax.swing.tree.TreeNode createChildTreeNode(org.dom4j.Node xmlNode)">2</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.dtd.InternalEntityDecl</name>
		<wmc>8</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>19</rfc>
		<lcom>6</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>7</npm>
		<lcom3>0.5714285714285714</lcom3>
		<loc>148</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.25</amc>
		<cc>
			<method name="public String toString()">2</method>
			<method name="public void _init_(String name, String value)">1</method>
			<method name="public void setName(String name)">1</method>
			<method name="private String escapeEntityValue(String text)">9</method>
			<method name="public String getValue()">1</method>
			<method name="public void setValue(String value)">1</method>
			<method name="public String getName()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.JaxenHandler</name>
		<wmc>62</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>26</cbo>
		<rfc>101</rfc>
		<lcom>1869</lcom>
		<ca>3</ca>
		<ce>23</ce>
		<npm>49</npm>
		<lcom3>0.7663934426229508</lcom3>
		<loc>606</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.13343108504398826</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.709677419354838</amc>
		<cc>
			<method name="public void endOrExpr(boolean create)">1</method>
			<method name="public void endTextNodeStep()">1</method>
			<method name="public void endProcessingInstructionNodeStep()">1</method>
			<method name="public void startPredicate()">1</method>
			<method name="public org.jaxen.expr.XPathFactory getXPathFactory()">1</method>
			<method name="protected void endStep()">1</method>
			<method name="protected void addPredicates(org.jaxen.expr.Predicated obj, java.util.Iterator predIter)">2</method>
			<method name="public void endUnionExpr(boolean create)">1</method>
			<method name="public void startNameStep(int axis, String prefix, String localName)">1</method>
			<method name="public void number(double number)">1</method>
			<method name="public org.jaxen.expr.XPathExpr getXPathExpr()">1</method>
			<method name="protected boolean canPop()">2</method>
			<method name="public void literal(String literal)">1</method>
			<method name="public void endAbsoluteLocationPath()">1</method>
			<method name="public void endCommentNodeStep()">1</method>
			<method name="public void startEqualityExpr()">1</method>
			<method name="protected java.util.LinkedList peekFrame()">1</method>
			<method name="public void startRelativeLocationPath()">1</method>
			<method name="protected int stackSize()">1</method>
			<method name="public void startProcessingInstructionNodeStep(int axis, String name)">1</method>
			<method name="public void startFilterExpr()">1</method>
			<method name="public void endRelationalExpr(int operator)">1</method>
			<method name="protected void push(Object obj)">1</method>
			<method name="public void setXPathFactory(org.jaxen.expr.XPathFactory xpathFactory)">1</method>
			<method name="public void startTextNodeStep(int axis)">1</method>
			<method name="public void startAbsoluteLocationPath()">1</method>
			<method name="public void endRelativeLocationPath()">1</method>
			<method name="public void startAllNodeStep(int axis)">1</method>
			<method name="public org.jaxen.expr.XPathExpr getXPathExpr(boolean shouldSimplify)">3</method>
			<method name="public void endAdditiveExpr(int operator)">1</method>
			<method name="public void startXPath()">1</method>
			<method name="public void startCommentNodeStep(int axis)">1</method>
			<method name="public void endFilterExpr()">1</method>
			<method name="public void endUnaryExpr(int operator)">1</method>
			<method name="public void startUnaryExpr()">1</method>
			<method name="protected Object pop()">1</method>
			<method name="public void startAndExpr()">1</method>
			<method name="public void startOrExpr()">1</method>
			<method name="protected void endLocationPath()">1</method>
			<method name="public void startRelationalExpr()">1</method>
			<method name="public void startUnionExpr()">1</method>
			<method name="public void endAndExpr(boolean create)">1</method>
			<method name="protected void pushFrame()">1</method>
			<method name="protected java.util.LinkedList popFrame()">1</method>
			<method name="protected void addParameters(org.jaxen.expr.FunctionCallExpr function, java.util.Iterator paramIter)">2</method>
			<method name="public void endEqualityExpr(int operator)">1</method>
			<method name="public void endPathExpr()">1</method>
			<method name="public void startMultiplicativeExpr()">1</method>
			<method name="public void endNameStep()">1</method>
			<method name="public void startFunction(String prefix, String functionName)">1</method>
			<method name="public void endFunction()">1</method>
			<method name="public void number(int number)">1</method>
			<method name="public void endXPath()">1</method>
			<method name="protected void addSteps(org.jaxen.expr.LocationPath locationPath, java.util.Iterator stepIter)">2</method>
			<method name="public void startAdditiveExpr()">1</method>
			<method name="protected void returnExpr()">1</method>
			<method name="public void variableReference(String prefix, String variableName)">1</method>
			<method name="public void endPredicate()">1</method>
			<method name="public void endMultiplicativeExpr(int operator)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void startPathExpr()">1</method>
			<method name="public void endAllNodeStep()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.VariableContext</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>15</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>12</ca>
		<ce>3</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract Object getVariableValue(String, String, String)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.dom4j.Dom4jXPath</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>7</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>6</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.0</amc>
		<cc>
			<method name="public void _init_(String xpathExpr)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultOrExpr</name>
		<wmc>5</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>17</rfc>
		<lcom>10</lcom>
		<ca>1</ca>
		<ce>13</ce>
		<npm>5</npm>
		<lcom3>2.0</lcom3>
		<loc>62</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.4</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public Object evaluate(org.jaxen.Context context)">1</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public String getOperator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.saxpath.SAXPathEventSource</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>2</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>2</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract org.jaxen.saxpath.XPathHandler getXPathHandler()">1</method>
			<method name="public abstract void setXPathHandler(org.jaxen.saxpath.XPathHandler)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.rule.RuleManager</name>
		<wmc>12</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>15</cbo>
		<rfc>32</rfc>
		<lcom>50</lcom>
		<ca>2</ca>
		<ce>14</ce>
		<npm>8</npm>
		<lcom3>0.7575757575757577</lcom3>
		<loc>210</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.2857142857142857</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>16.25</amc>
		<cc>
			<method name="public void removeRule(org.dom4j.rule.Rule rule)">2</method>
			<method name="public void clear()">1</method>
			<method name="public org.dom4j.rule.Action getValueOfAction()">1</method>
			<method name="protected void addDefaultRule(org.dom4j.rule.Mode mode, org.dom4j.rule.Pattern pattern, org.dom4j.rule.Action action)">1</method>
			<method name="public org.dom4j.rule.Mode getMode(String modeName)">2</method>
			<method name="protected org.dom4j.rule.Rule createDefaultRule(org.dom4j.rule.Pattern pattern, org.dom4j.rule.Action action)">1</method>
			<method name="public void setValueOfAction(org.dom4j.rule.Action valueOfAction)">1</method>
			<method name="public void addRule(org.dom4j.rule.Rule rule)">2</method>
			<method name="protected void addDefaultRules(org.dom4j.rule.Mode mode)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public org.dom4j.rule.Rule getMatchingRule(String modeName, org.dom4j.Node node)">2</method>
			<method name="protected org.dom4j.rule.Mode createMode()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.DefaultAttribute</name>
		<wmc>11</wmc>
		<dit>0</dit>
		<noc>2</noc>
		<cbo>12</cbo>
		<rfc>15</rfc>
		<lcom>43</lcom>
		<ca>5</ca>
		<ce>7</ce>
		<npm>11</npm>
		<lcom3>0.7</lcom3>
		<loc>64</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.45454545454545453</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.7272727272727275</amc>
		<cc>
			<method name="public void _init_(org.dom4j.Element parent, org.dom4j.QName qname, String value)">1</method>
			<method name="public void setParent(org.dom4j.Element parent)">1</method>
			<method name="public boolean supportsParent()">1</method>
			<method name="public void _init_(String name, String value)">1</method>
			<method name="public void _init_(String name, String value, org.dom4j.Namespace namespace)">1</method>
			<method name="public void _init_(org.dom4j.QName qname)">1</method>
			<method name="public boolean isReadOnly()">1</method>
			<method name="public void setValue(String value)">1</method>
			<method name="public void _init_(org.dom4j.QName qname, String value)">1</method>
			<method name="public void _init_(org.dom4j.Element parent, String name, String value, org.dom4j.Namespace namespace)">1</method>
			<method name="public org.dom4j.Element getParent()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.ElementHandler</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>17</cbo>
		<rfc>2</rfc>
		<lcom>1</lcom>
		<ca>15</ca>
		<ce>3</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>2</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void onStart(org.dom4j.ElementPath)">1</method>
			<method name="public abstract void onEnd(org.dom4j.ElementPath)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.rule.NullAction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>4</rfc>
		<lcom>3</lcom>
		<ca>0</ca>
		<ce>5</ce>
		<npm>2</npm>
		<lcom3>1.0</lcom3>
		<loc>13</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public void run(org.dom4j.Node node)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.JaxenRuntimeException</name>
		<wmc>3</wmc>
		<dit>4</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>5</rfc>
		<lcom>1</lcom>
		<ca>7</ca>
		<ce>6</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>18</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.9545454545454546</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.666666666666667</amc>
		<cc>
			<method name="public void _init_(org.jaxen.JaxenException jaxenException)">1</method>
			<method name="public void _init_(String message)">1</method>
			<method name="public org.jaxen.JaxenException getJaxenException()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.IdentityHashMap$2</name>
		<wmc>5</wmc>
		<dit>2</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>10</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>4</npm>
		<lcom3>0.0</lcom3>
		<loc>30</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.8</mfa>
		<cam>0.4666666666666667</cam>
		<ic>1</ic>
		<cbm>5</cbm>
		<amc>4.8</amc>
		<cc>
			<method name="public boolean contains(Object o)">1</method>
			<method name="public void clear()">1</method>
			<method name="void _init_(org.jaxen.util.IdentityHashMap this$0)">1</method>
			<method name="public int size()">1</method>
			<method name="public java.util.Iterator iterator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.IdentityHashMap$3</name>
		<wmc>6</wmc>
		<dit>3</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>16</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>5</npm>
		<lcom3>0.0</lcom3>
		<loc>155</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.7916666666666666</mfa>
		<cam>0.5</cam>
		<ic>3</ic>
		<cbm>11</cbm>
		<amc>24.666666666666668</amc>
		<cc>
			<method name="public boolean contains(Object o)">6</method>
			<method name="public void clear()">1</method>
			<method name="void _init_(org.jaxen.util.IdentityHashMap this$0)">1</method>
			<method name="public boolean remove(Object o)">7</method>
			<method name="public int size()">1</method>
			<method name="public java.util.Iterator iterator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.AdditiveExpr</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>6</ca>
		<ce>3</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract String getOperator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.rule.Pattern</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>5</rfc>
		<lcom>10</lcom>
		<ca>9</ca>
		<ce>5</ce>
		<npm>5</npm>
		<lcom3>1.25</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract boolean matches(org.dom4j.Node)">1</method>
			<method name="public abstract String getMatchesNodeName()">1</method>
			<method name="public abstract double getPriority()">1</method>
			<method name="public abstract org.dom4j.rule.Pattern[] getUnionPatterns()">1</method>
			<method name="public abstract short getMatchType()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.StartsWithFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>10</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>41</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.666666666666666</amc>
		<cc>
			<method name="public static Boolean evaluate(Object strArg, Object matchArg, org.jaxen.Navigator nav)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultFilterExpr</name>
		<wmc>12</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>20</cbo>
		<rfc>33</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>18</ce>
		<npm>12</npm>
		<lcom3>0.3181818181818182</lcom3>
		<loc>176</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.2638888888888889</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.5</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void addPredicate(org.jaxen.expr.Predicate predicate)">1</method>
			<method name="public String getText()">2</method>
			<method name="public Object evaluate(org.jaxen.Context context)">1</method>
			<method name="public org.jaxen.expr.PredicateSet getPredicateSet()">1</method>
			<method name="public org.jaxen.expr.Expr simplify()">3</method>
			<method name="public org.jaxen.expr.Expr getExpr()">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public void _init_(org.jaxen.expr.PredicateSet predicateSet)">1</method>
			<method name="public boolean asBoolean(org.jaxen.Context context)">1</method>
			<method name="public void _init_(org.jaxen.expr.Expr expr, org.jaxen.expr.PredicateSet predicateSet)">1</method>
			<method name="public java.util.List getPredicates()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.iter.IterableParentAxis</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>5</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>11</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.5</amc>
		<cc>
			<method name="public java.util.Iterator iterator(Object contextNode, org.jaxen.ContextSupport support)">1</method>
			<method name="public void _init_(int value)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.AbstractComment</name>
		<wmc>8</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>11</cbo>
		<rfc>19</rfc>
		<lcom>28</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>8</npm>
		<lcom3>2.0</lcom3>
		<loc>97</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.125</amc>
		<cc>
			<method name="public void write(java.io.Writer writer)">1</method>
			<method name="public String toString()">1</method>
			<method name="public String asXML()">1</method>
			<method name="public String getPath(org.dom4j.Element context)">3</method>
			<method name="public short getNodeType()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public String getUniquePath(org.dom4j.Element context)">3</method>
			<method name="public void accept(org.dom4j.Visitor visitor)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.Branch</name>
		<wmc>26</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>31</cbo>
		<rfc>26</rfc>
		<lcom>325</lcom>
		<ca>21</ca>
		<ce>11</ce>
		<npm>26</npm>
		<lcom3>2.0</lcom3>
		<loc>26</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.17692307692307693</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void setContent(java.util.List)">1</method>
			<method name="public abstract java.util.List processingInstructions(String)">1</method>
			<method name="public abstract java.util.Iterator nodeIterator()">1</method>
			<method name="public abstract void add(org.dom4j.Comment)">1</method>
			<method name="public abstract boolean remove(org.dom4j.ProcessingInstruction)">1</method>
			<method name="public abstract boolean remove(org.dom4j.Comment)">1</method>
			<method name="public abstract org.dom4j.Element addElement(String)">1</method>
			<method name="public abstract java.util.List processingInstructions()">1</method>
			<method name="public abstract org.dom4j.Element addElement(org.dom4j.QName)">1</method>
			<method name="public abstract boolean remove(org.dom4j.Node)">1</method>
			<method name="public abstract org.dom4j.Node node(int)">1</method>
			<method name="public abstract void appendContent(org.dom4j.Branch)">1</method>
			<method name="public abstract void setProcessingInstructions(java.util.List)">1</method>
			<method name="public abstract int indexOf(org.dom4j.Node)">1</method>
			<method name="public abstract void clearContent()">1</method>
			<method name="public abstract boolean removeProcessingInstruction(String)">1</method>
			<method name="public abstract void add(org.dom4j.Element)">1</method>
			<method name="public abstract org.dom4j.Element addElement(String, String)">1</method>
			<method name="public abstract org.dom4j.ProcessingInstruction processingInstruction(String)">1</method>
			<method name="public abstract int nodeCount()">1</method>
			<method name="public abstract boolean remove(org.dom4j.Element)">1</method>
			<method name="public abstract java.util.List content()">1</method>
			<method name="public abstract org.dom4j.Element elementByID(String)">1</method>
			<method name="public abstract void add(org.dom4j.Node)">1</method>
			<method name="public abstract void add(org.dom4j.ProcessingInstruction)">1</method>
			<method name="public abstract void normalize()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.jdom.XPathNamespace</name>
		<wmc>6</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>13</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>6</npm>
		<lcom3>0.4</lcom3>
		<loc>58</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.333333333333334</amc>
		<cc>
			<method name="public void setJDOMElement(org.jdom.Element jdomElement)">1</method>
			<method name="public String toString()">1</method>
			<method name="public org.jdom.Namespace getJDOMNamespace()">1</method>
			<method name="public void _init_(org.jdom.Element jdomElement, org.jdom.Namespace jdomNamespace)">1</method>
			<method name="public org.jdom.Element getJDOMElement()">1</method>
			<method name="public void _init_(org.jdom.Namespace jdomNamespace)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.LangFunction</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>27</rfc>
		<lcom>10</lcom>
		<ca>1</ca>
		<ce>13</ce>
		<npm>2</npm>
		<lcom3>1.25</lcom3>
		<loc>128</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.36666666666666664</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>24.2</amc>
		<cc>
			<method name="private static Boolean evaluate(java.util.List contextNodes, Object lang, org.jaxen.Navigator nav)">1</method>
			<method name="private static boolean evaluate(Object node, String lang, org.jaxen.Navigator nav)">1</method>
			<method name="private static boolean isSublang(String sublang, String lang)">5</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.LogicalExpr</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>6</ca>
		<ce>3</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract String getOperator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.XPath</name>
		<wmc>20</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>20</cbo>
		<rfc>20</rfc>
		<lcom>190</lcom>
		<ca>10</ca>
		<ce>11</ce>
		<npm>20</npm>
		<lcom3>2.0</lcom3>
		<loc>20</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract java.util.List selectNodes(Object, org.dom4j.XPath)">1</method>
			<method name="public abstract Object selectObject(Object)">1</method>
			<method name="public abstract org.jaxen.FunctionContext getFunctionContext()">1</method>
			<method name="public abstract boolean booleanValueOf(Object)">1</method>
			<method name="public abstract Object evaluate(Object)">1</method>
			<method name="public abstract Number numberValueOf(Object)">1</method>
			<method name="public abstract String getText()">1</method>
			<method name="public abstract boolean matches(org.dom4j.Node)">1</method>
			<method name="public abstract String valueOf(Object)">1</method>
			<method name="public abstract void setNamespaceContext(org.jaxen.NamespaceContext)">1</method>
			<method name="public abstract void setVariableContext(org.jaxen.VariableContext)">1</method>
			<method name="public abstract void setFunctionContext(org.jaxen.FunctionContext)">1</method>
			<method name="public abstract org.jaxen.NamespaceContext getNamespaceContext()">1</method>
			<method name="public abstract java.util.List selectNodes(Object)">1</method>
			<method name="public abstract void setNamespaceURIs(java.util.Map)">1</method>
			<method name="public abstract org.jaxen.VariableContext getVariableContext()">1</method>
			<method name="public abstract org.dom4j.Node selectSingleNode(Object)">1</method>
			<method name="public abstract java.util.List selectNodes(Object, org.dom4j.XPath, boolean)">1</method>
			<method name="public abstract void sort(java.util.List, boolean)">1</method>
			<method name="public abstract void sort(java.util.List)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.xpath.DefaultXPath</name>
		<wmc>28</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>32</cbo>
		<rfc>72</rfc>
		<lcom>158</lcom>
		<ca>2</ca>
		<ce>31</ce>
		<npm>22</npm>
		<lcom3>0.4320987654320988</lcom3>
		<loc>408</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.16666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.464285714285714</amc>
		<cc>
			<method name="protected Object getCompareValue(org.dom4j.Node node)">1</method>
			<method name="public org.dom4j.Node selectSingleNode(Object context)">3</method>
			<method name="protected void handleJaxenException(org.jaxen.JaxenException exception)">1</method>
			<method name="public void _init_(String text)">1</method>
			<method name="public org.jaxen.FunctionContext getFunctionContext()">1</method>
			<method name="protected void removeDuplicates(java.util.List list, java.util.Map sortValues)">3</method>
			<method name="public void setNamespaceURIs(java.util.Map map)">1</method>
			<method name="public org.jaxen.VariableContext getVariableContext()">1</method>
			<method name="public Object evaluate(Object context)">3</method>
			<method name="public boolean matches(org.dom4j.Node node)">4</method>
			<method name="public String toString()">1</method>
			<method name="public java.util.List selectNodes(Object context, org.dom4j.XPath sortXPath)">1</method>
			<method name="public void setFunctionContext(org.jaxen.FunctionContext functionContext)">1</method>
			<method name="public Object selectObject(Object context)">1</method>
			<method name="public void sort(java.util.List list, boolean distinct)">6</method>
			<method name="protected static org.jaxen.XPath parse(String text)">1</method>
			<method name="public java.util.List selectNodes(Object context, org.dom4j.XPath sortXPath, boolean distinct)">1</method>
			<method name="public boolean booleanValueOf(Object context)">1</method>
			<method name="public void setVariableContext(org.jaxen.VariableContext variableContext)">1</method>
			<method name="public void sort(java.util.List list)">1</method>
			<method name="protected void setNSContext(Object context)">2</method>
			<method name="public java.util.List selectNodes(Object context)">1</method>
			<method name="public Number numberValueOf(Object context)">1</method>
			<method name="public String getText()">1</method>
			<method name="public org.jaxen.NamespaceContext getNamespaceContext()">1</method>
			<method name="protected void sort(java.util.List list, java.util.Map sortValues)">1</method>
			<method name="public void setNamespaceContext(org.jaxen.NamespaceContext namespaceContext)">1</method>
			<method name="public String valueOf(Object context)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.StackedIterator</name>
		<wmc>11</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>24</rfc>
		<lcom>37</lcom>
		<ca>0</ca>
		<ce>9</ce>
		<npm>4</npm>
		<lcom3>0.6666666666666667</lcom3>
		<loc>129</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4090909090909091</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.454545454545455</amc>
		<cc>
			<method name="public boolean hasNext()">2</method>
			<method name="protected void _init_()">1</method>
			<method name="public void remove()">1</method>
			<method name="protected void init(Object contextNode, org.jaxen.Navigator navigator)">1</method>
			<method name="private java.util.Iterator currentIterator()">3</method>
			<method name="protected abstract java.util.Iterator createIterator(Object)">1</method>
			<method name="public Object next()">1</method>
			<method name="protected org.jaxen.Navigator getNavigator()">1</method>
			<method name="protected java.util.Iterator internalCreateIterator(Object contextNode)">2</method>
			<method name="public void _init_(Object contextNode, org.jaxen.Navigator navigator)">1</method>
			<method name="protected void pushIterator(java.util.Iterator iter)">2</method>
		</cc>
	</class>
	<class>
		<name>com.adobe.ac.ant.tasks.FlexUnitLauncher</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>10</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>2</npm>
		<lcom3>1.5</lcom3>
		<loc>44</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.0</amc>
		<cc>
			<method name="public void runTests(String arg0)">1</method>
			<method name="private com.adobe.ac.ant.tasks.SWFLauncher createSWFLauncher()">3</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.DOMWriter</name>
		<wmc>23</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>36</cbo>
		<rfc>78</rfc>
		<lcom>187</lcom>
		<ca>0</ca>
		<ce>36</ce>
		<npm>7</npm>
		<lcom3>0.8363636363636363</lcom3>
		<loc>623</loc>
		<dam>0.8</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.1696969696969697</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>25.869565217391305</amc>
		<cc>
			<method name="protected void appendDOMTree(org.w3c.dom.Document domDocument, org.w3c.dom.Node domCurrent, org.dom4j.Comment comment)">1</method>
			<method name="protected org.w3c.dom.Document createDomDocument(org.dom4j.Document document)">1</method>
			<method name="protected void appendDOMTree(org.w3c.dom.Document domDocument, org.w3c.dom.Node domCurrent, org.dom4j.Element element)">6</method>
			<method name="protected org.w3c.dom.Document createDomDocumentViaJAXP()">1</method>
			<method name="protected void appendDOMTree(org.w3c.dom.Document domDoc, org.w3c.dom.Node domCurrent, org.dom4j.ProcessingInstruction pi)">1</method>
			<method name="protected void appendDOMTree(org.w3c.dom.Document domDocument, org.w3c.dom.Node domCurrent, org.dom4j.Entity entity)">1</method>
			<method name="public Class getDomDocumentClass()">1</method>
			<method name="public void setDomDocumentClassName(String name)">1</method>
			<method name="protected org.w3c.dom.Document createDomDocument(org.dom4j.Document document, org.w3c.dom.DOMImplementation domImpl)">1</method>
			<method name="protected boolean isNamespaceDeclaration(org.dom4j.Namespace ns)">7</method>
			<method name="static Class class$(String x0)">1</method>
			<method name="protected void appendDOMTree(org.w3c.dom.Document domDocument, org.w3c.dom.Node domCurrent, org.dom4j.CDATA cdata)">1</method>
			<method name="public void setDomDocumentClass(Class domDocumentClass)">1</method>
			<method name="public org.w3c.dom.Document write(org.dom4j.Document document)">1</method>
			<method name="protected void appendDOMTree(org.w3c.dom.Document domDocument, org.w3c.dom.Node domCurrent, java.util.List content)">9</method>
			<method name="protected String attributeNameForNamespace(org.dom4j.Namespace namespace)">2</method>
			<method name="static void _clinit_()">1</method>
			<method name="protected void writeNamespace(org.w3c.dom.Element domElement, org.dom4j.Namespace namespace)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public org.w3c.dom.Document write(org.dom4j.Document document, org.w3c.dom.DOMImplementation domImpl)">1</method>
			<method name="protected void resetNamespaceStack()">1</method>
			<method name="public void _init_(Class domDocumentClass)">1</method>
			<method name="protected void appendDOMTree(org.w3c.dom.Document domDocument, org.w3c.dom.Node domCurrent, String text)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.FlyweightCDATA</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>8</cbo>
		<rfc>5</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>20</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.333333333333333</amc>
		<cc>
			<method name="public String getText()">1</method>
			<method name="protected org.dom4j.Node createXPathResult(org.dom4j.Element parent)">1</method>
			<method name="public void _init_(String text)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultBinaryExpr</name>
		<wmc>9</wmc>
		<dit>0</dit>
		<noc>3</noc>
		<cbo>11</cbo>
		<rfc>18</rfc>
		<lcom>24</lcom>
		<ca>3</ca>
		<ce>8</ce>
		<npm>9</npm>
		<lcom3>0.375</lcom3>
		<loc>93</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.11111111111111</amc>
		<cc>
			<method name="public void setLHS(org.jaxen.expr.Expr lhs)">1</method>
			<method name="public String toString()">1</method>
			<method name="public String getText()">1</method>
			<method name="public org.jaxen.expr.Expr getRHS()">1</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="public org.jaxen.expr.Expr simplify()">1</method>
			<method name="public abstract String getOperator()">1</method>
			<method name="public org.jaxen.expr.Expr getLHS()">1</method>
			<method name="public void setRHS(org.jaxen.expr.Expr rhs)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.JaxenException</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>4</noc>
		<cbo>59</cbo>
		<rfc>4</rfc>
		<lcom>1</lcom>
		<ca>54</ca>
		<ce>5</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>10</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public void _init_(Throwable rootCause)">1</method>
			<method name="public void _init_(String message)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultModExpr</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>13</rfc>
		<lcom>6</lcom>
		<ca>1</ca>
		<ce>13</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>42</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.5</amc>
		<cc>
			<method name="public Object evaluate(org.jaxen.Context context)">1</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public String getOperator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.xom.DocumentNavigator$IndexIterator</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>2</noc>
		<cbo>6</cbo>
		<rfc>7</rfc>
		<lcom>4</lcom>
		<ca>2</ca>
		<ce>4</ce>
		<npm>5</npm>
		<lcom3>0.6666666666666666</lcom3>
		<loc>54</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.2</amc>
		<cc>
			<method name="public boolean hasNext()">2</method>
			<method name="public void remove()">1</method>
			<method name="public abstract Object get(Object, int)">1</method>
			<method name="public void _init_(Object o, int pos, int end)">1</method>
			<method name="public Object next()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultGreaterThanEqualExpr</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>7</rfc>
		<lcom>6</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>23</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.75</amc>
		<cc>
			<method name="protected boolean evaluateDoubleDouble(Double lhs, Double rhs)">2</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public String getOperator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.javabean.DocumentNavigator</name>
		<wmc>37</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>23</cbo>
		<rfc>58</rfc>
		<lcom>662</lcom>
		<ca>2</ca>
		<ce>22</ce>
		<npm>35</npm>
		<lcom3>0.9722222222222222</lcom3>
		<loc>291</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.783783783783784</amc>
		<cc>
			<method name="public java.util.Iterator getChildAxisIterator(Object contextNode)">1</method>
			<method name="public String getCommentStringValue(Object obj)">1</method>
			<method name="public String getAttributeNamespaceUri(Object obj)">1</method>
			<method name="public String getNamespaceStringValue(Object obj)">1</method>
			<method name="public String getElementNamespaceUri(Object obj)">1</method>
			<method name="public java.util.Iterator getAttributeAxisIterator(Object contextNode)">1</method>
			<method name="public String getTextStringValue(Object obj)">2</method>
			<method name="protected String javacase(String name)">3</method>
			<method name="public java.util.Iterator getParentAxisIterator(Object contextNode)">2</method>
			<method name="public boolean isElement(Object obj)">1</method>
			<method name="public String getProcessingInstructionData(Object obj)">1</method>
			<method name="public String getAttributeQName(Object obj)">1</method>
			<method name="public String getAttributeStringValue(Object obj)">1</method>
			<method name="public boolean isProcessingInstruction(Object obj)">1</method>
			<method name="public java.util.Iterator getAttributeAxisIterator(Object contextNode, String localName, String namespacePrefix, String namespaceURI)">1</method>
			<method name="public String getElementStringValue(Object obj)">2</method>
			<method name="public Object getParentNode(Object contextNode)">2</method>
			<method name="public short getNodeType(Object node)">1</method>
			<method name="public static org.jaxen.Navigator getInstance()">1</method>
			<method name="public boolean isNamespace(Object obj)">1</method>
			<method name="public Object getDocument(String uri)">1</method>
			<method name="public Object getDocumentNode(Object contextNode)">1</method>
			<method name="public String getElementQName(Object obj)">1</method>
			<method name="public String getNamespacePrefix(Object obj)">1</method>
			<method name="public String getProcessingInstructionTarget(Object obj)">1</method>
			<method name="public boolean isDocument(Object obj)">1</method>
			<method name="public boolean isAttribute(Object obj)">1</method>
			<method name="public boolean isText(Object obj)">1</method>
			<method name="public org.jaxen.XPath parseXPath(String xpath)">1</method>
			<method name="public boolean isComment(Object obj)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public String getAttributeName(Object obj)">1</method>
			<method name="public java.util.Iterator getNamespaceAxisIterator(Object contextNode)">1</method>
			<method name="public String translateNamespacePrefixToUri(String prefix, Object context)">1</method>
			<method name="public String getElementName(Object obj)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public java.util.Iterator getChildAxisIterator(Object contextNode, String localName, String namespacePrefix, String namespaceURI)">5</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.XPathFunctionContext</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>42</cbo>
		<rfc>38</rfc>
		<lcom>1</lcom>
		<ca>3</ca>
		<ce>40</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>238</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>118.0</amc>
		<cc>
			<method name="public static org.jaxen.FunctionContext getInstance()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.iter.IterableDescendantOrSelfAxis</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>5</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>11</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.5</amc>
		<cc>
			<method name="public java.util.Iterator iterator(Object contextNode, org.jaxen.ContextSupport support)">1</method>
			<method name="public void _init_(int value)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.InvalidXPathException</name>
		<wmc>3</wmc>
		<dit>5</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>8</rfc>
		<lcom>3</lcom>
		<ca>5</ca>
		<ce>6</ce>
		<npm>3</npm>
		<lcom3>1.5</lcom3>
		<loc>46</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>1.0</mfa>
		<cam>0.7777777777777778</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.0</amc>
		<cc>
			<method name="public void _init_(String xpath, String reason)">1</method>
			<method name="public void _init_(String xpath, Throwable t)">1</method>
			<method name="public void _init_(String xpath)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.AllNodeStep</name>
		<wmc>0</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>0</rfc>
		<lcom>0</lcom>
		<ca>4</ca>
		<ce>2</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>0</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.DefaultText</name>
		<wmc>7</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>8</cbo>
		<rfc>8</rfc>
		<lcom>15</lcom>
		<ca>4</ca>
		<ce>5</ce>
		<npm>7</npm>
		<lcom3>0.6666666666666666</lcom3>
		<loc>34</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5714285714285714</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.7142857142857144</amc>
		<cc>
			<method name="public void setParent(org.dom4j.Element parent)">1</method>
			<method name="public boolean supportsParent()">1</method>
			<method name="public void _init_(String text)">1</method>
			<method name="public void _init_(org.dom4j.Element parent, String text)">1</method>
			<method name="public boolean isReadOnly()">1</method>
			<method name="public void setText(String text)">1</method>
			<method name="public org.dom4j.Element getParent()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.jaxb.JAXBWriter</name>
		<wmc>17</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>16</cbo>
		<rfc>31</rfc>
		<lcom>116</lcom>
		<ca>0</ca>
		<ce>16</ce>
		<npm>16</npm>
		<lcom3>0.1875</lcom3>
		<loc>135</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.2222222222222222</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.823529411764706</amc>
		<cc>
			<method name="public org.dom4j.io.OutputFormat getOutputFormat()">1</method>
			<method name="public void _init_(String contextPath, ClassLoader classloader)">1</method>
			<method name="public void setOutput(java.io.Writer writer)">1</method>
			<method name="public void endDocument()">1</method>
			<method name="public void _init_(String contextPath, ClassLoader classloader, org.dom4j.io.OutputFormat outputFormat)">1</method>
			<method name="public void writeClose(javax.xml.bind.Element jaxbObject)">1</method>
			<method name="public void writeCloseElement(org.dom4j.Element element)">1</method>
			<method name="public void _init_(String contextPath)">1</method>
			<method name="public void writeOpen(javax.xml.bind.Element jaxbObject)">1</method>
			<method name="public void writeElement(org.dom4j.Element element)">1</method>
			<method name="public void writeOpenElement(org.dom4j.Element element)">1</method>
			<method name="public void _init_(String contextPath, org.dom4j.io.OutputFormat outputFormat)">1</method>
			<method name="private org.dom4j.io.XMLWriter getWriter()">1</method>
			<method name="public void write(javax.xml.bind.Element jaxbObject)">1</method>
			<method name="public void setOutput(java.io.OutputStream outputStream)">1</method>
			<method name="public void setOutput(java.io.File file)">1</method>
			<method name="public void startDocument()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.Step</name>
		<wmc>6</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>24</cbo>
		<rfc>6</rfc>
		<lcom>15</lcom>
		<ca>13</ca>
		<ce>11</ce>
		<npm>6</npm>
		<lcom3>2.0</lcom3>
		<loc>6</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4583333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract boolean matches(Object, org.jaxen.ContextSupport)">1</method>
			<method name="public abstract String getText()">1</method>
			<method name="public abstract java.util.List evaluate(org.jaxen.Context)">1</method>
			<method name="public abstract java.util.Iterator axisIterator(Object, org.jaxen.ContextSupport)">1</method>
			<method name="public abstract void simplify()">1</method>
			<method name="public abstract int getAxis()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.EqualityExpr</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>6</ca>
		<ce>3</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract String getOperator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.ConcurrentReaderHashMap$KeyIterator</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>2</ca>
		<ce>4</ce>
		<npm>0</npm>
		<lcom3>1.0</lcom3>
		<loc>13</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.0</amc>
		<cc>
			<method name="protected void _init_(org.dom4j.tree.ConcurrentReaderHashMap this$0)">1</method>
			<method name="protected Object returnValueOfNext()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.StringFunction</name>
		<wmc>6</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>39</cbo>
		<rfc>38</rfc>
		<lcom>13</lcom>
		<ca>22</ca>
		<ce>17</ce>
		<npm>5</npm>
		<lcom3>0.6</lcom3>
		<loc>203</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.22857142857142856</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>32.666666666666664</amc>
		<cc>
			<method name="public static String stringValue(double value)">1</method>
			<method name="public static String stringValue(boolean bool)">2</method>
			<method name="static void _clinit_()">1</method>
			<method name="public static String evaluate(Object obj, org.jaxen.Navigator nav)">23</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.IdFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>15</cbo>
		<rfc>20</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>14</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>91</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>29.333333333333332</amc>
		<cc>
			<method name="public static java.util.List evaluate(java.util.List contextNodes, Object arg, org.jaxen.Navigator nav)">4</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.jaxb.JAXBReader$UnmarshalElementHandler</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>10</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>12</ce>
		<npm>3</npm>
		<lcom3>0.6666666666666666</lcom3>
		<loc>46</loc>
		<dam>1.0</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.5833333333333334</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.333333333333334</amc>
		<cc>
			<method name="public void _init_(org.dom4j.jaxb.JAXBReader this$0, org.dom4j.jaxb.JAXBReader documentReader, org.dom4j.jaxb.JAXBObjectHandler handler)">1</method>
			<method name="public void onStart(org.dom4j.ElementPath elementPath)">1</method>
			<method name="public void onEnd(org.dom4j.ElementPath elementPath)">2</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultProcessingInstructionNodeStep</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>11</rfc>
		<lcom>4</lcom>
		<ca>2</ca>
		<ce>10</ce>
		<npm>4</npm>
		<lcom3>0.3333333333333333</lcom3>
		<loc>47</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.35714285714285715</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.5</amc>
		<cc>
			<method name="public void _init_(org.jaxen.expr.iter.IterableAxis axis, String name, org.jaxen.expr.PredicateSet predicateSet)">1</method>
			<method name="public String getName()">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public boolean matches(Object node, org.jaxen.ContextSupport support)">4</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.XMLResult</name>
		<wmc>10</wmc>
		<dit>2</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>18</rfc>
		<lcom>25</lcom>
		<ca>0</ca>
		<ce>10</ce>
		<npm>10</npm>
		<lcom3>0.0</lcom3>
		<loc>78</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.6</mfa>
		<cam>0.36</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.7</amc>
		<cc>
			<method name="public void _init_(org.dom4j.io.XMLWriter xmlWriter)">1</method>
			<method name="public void _init_(java.io.OutputStream out, org.dom4j.io.OutputFormat format)">1</method>
			<method name="public org.dom4j.io.XMLWriter getXMLWriter()">1</method>
			<method name="public void _init_(java.io.OutputStream out)">1</method>
			<method name="public void _init_(java.io.Writer writer)">1</method>
			<method name="public void setXMLWriter(org.dom4j.io.XMLWriter writer)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public org.xml.sax.ext.LexicalHandler getLexicalHandler()">1</method>
			<method name="public void _init_(java.io.Writer writer, org.dom4j.io.OutputFormat format)">1</method>
			<method name="public org.xml.sax.ContentHandler getHandler()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.IdentityHashMap$1</name>
		<wmc>6</wmc>
		<dit>3</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>12</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>5</npm>
		<lcom3>0.0</lcom3>
		<loc>49</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.7916666666666666</mfa>
		<cam>0.5</cam>
		<ic>2</ic>
		<cbm>9</cbm>
		<amc>7.0</amc>
		<cc>
			<method name="public boolean contains(Object o)">1</method>
			<method name="public void clear()">1</method>
			<method name="void _init_(org.jaxen.util.IdentityHashMap this$0)">1</method>
			<method name="public boolean remove(Object o)">2</method>
			<method name="public int size()">1</method>
			<method name="public java.util.Iterator iterator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.AbstractDocument</name>
		<wmc>27</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>27</cbo>
		<rfc>71</rfc>
		<lcom>345</lcom>
		<ca>2</ca>
		<ce>26</ce>
		<npm>23</npm>
		<lcom3>0.9230769230769231</lcom3>
		<loc>320</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2175925925925926</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.814814814814815</amc>
		<cc>
			<method name="protected void checkAddElementAllowed(org.dom4j.Element element)">2</method>
			<method name="public org.dom4j.Node asXPathResult(org.dom4j.Element parent)">1</method>
			<method name="public short getNodeType()">1</method>
			<method name="public org.dom4j.Element addElement(org.dom4j.QName qName)">1</method>
			<method name="public String getUniquePath(org.dom4j.Element context)">1</method>
			<method name="public org.dom4j.Document getDocument()">1</method>
			<method name="public void setRootElement(org.dom4j.Element rootElement)">2</method>
			<method name="public String toString()">1</method>
			<method name="public String getStringValue()">2</method>
			<method name="public void add(org.dom4j.Element element)">1</method>
			<method name="protected void childRemoved(org.dom4j.Node node)">2</method>
			<method name="public String getPath(org.dom4j.Element context)">1</method>
			<method name="public void write(java.io.Writer out)">1</method>
			<method name="public String getXMLEncoding()">1</method>
			<method name="public void setXMLEncoding(String enc)">1</method>
			<method name="public org.dom4j.Document addComment(String comment)">1</method>
			<method name="public String asXML()">1</method>
			<method name="public boolean remove(org.dom4j.Element element)">3</method>
			<method name="public org.dom4j.Document addProcessingInstruction(String target, java.util.Map data)">1</method>
			<method name="public void accept(org.dom4j.Visitor visitor)">5</method>
			<method name="public org.dom4j.Element addElement(String name)">1</method>
			<method name="protected void childAdded(org.dom4j.Node node)">2</method>
			<method name="public org.dom4j.Element addElement(String qualifiedName, String namespaceURI)">1</method>
			<method name="public org.dom4j.Document addProcessingInstruction(String target, String data)">1</method>
			<method name="protected abstract void rootElementAdded(org.dom4j.Element)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void normalize()">2</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultLessThanEqualExpr</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>7</rfc>
		<lcom>6</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>23</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.75</amc>
		<cc>
			<method name="protected boolean evaluateDoubleDouble(Double lhs, Double rhs)">2</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public String getOperator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.Attribute</name>
		<wmc>10</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>38</cbo>
		<rfc>10</rfc>
		<lcom>45</lcom>
		<ca>32</ca>
		<ce>6</ce>
		<npm>10</npm>
		<lcom3>2.0</lcom3>
		<loc>10</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.325</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void setNamespace(org.dom4j.Namespace)">1</method>
			<method name="public abstract String getNamespaceURI()">1</method>
			<method name="public abstract Object getData()">1</method>
			<method name="public abstract org.dom4j.Namespace getNamespace()">1</method>
			<method name="public abstract String getValue()">1</method>
			<method name="public abstract String getQualifiedName()">1</method>
			<method name="public abstract org.dom4j.QName getQName()">1</method>
			<method name="public abstract void setValue(String)">1</method>
			<method name="public abstract void setData(Object)">1</method>
			<method name="public abstract String getNamespacePrefix()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.Document</name>
		<wmc>12</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>53</cbo>
		<rfc>12</rfc>
		<lcom>66</lcom>
		<ca>45</ca>
		<ce>8</ce>
		<npm>12</npm>
		<lcom3>2.0</lcom3>
		<loc>12</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2916666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract org.dom4j.Document addProcessingInstruction(String, java.util.Map)">1</method>
			<method name="public abstract org.xml.sax.EntityResolver getEntityResolver()">1</method>
			<method name="public abstract String getXMLEncoding()">1</method>
			<method name="public abstract void setRootElement(org.dom4j.Element)">1</method>
			<method name="public abstract org.dom4j.Document addDocType(String, String, String)">1</method>
			<method name="public abstract org.dom4j.Document addComment(String)">1</method>
			<method name="public abstract void setEntityResolver(org.xml.sax.EntityResolver)">1</method>
			<method name="public abstract void setDocType(org.dom4j.DocumentType)">1</method>
			<method name="public abstract org.dom4j.DocumentType getDocType()">1</method>
			<method name="public abstract org.dom4j.Element getRootElement()">1</method>
			<method name="public abstract org.dom4j.Document addProcessingInstruction(String, String)">1</method>
			<method name="public abstract void setXMLEncoding(String)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.Visitor</name>
		<wmc>20</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>54</cbo>
		<rfc>20</rfc>
		<lcom>190</lcom>
		<ca>32</ca>
		<ce>22</ce>
		<npm>20</npm>
		<lcom3>2.0</lcom3>
		<loc>20</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.09523809523809523</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void visit(org.jaxen.expr.MultiplicativeExpr)">1</method>
			<method name="public abstract void visit(org.jaxen.expr.LocationPath)">1</method>
			<method name="public abstract void visit(org.jaxen.expr.AllNodeStep)">1</method>
			<method name="public abstract void visit(org.jaxen.expr.Predicate)">1</method>
			<method name="public abstract void visit(org.jaxen.expr.UnionExpr)">1</method>
			<method name="public abstract void visit(org.jaxen.expr.NumberExpr)">1</method>
			<method name="public abstract void visit(org.jaxen.expr.ProcessingInstructionNodeStep)">1</method>
			<method name="public abstract void visit(org.jaxen.expr.EqualityExpr)">1</method>
			<method name="public abstract void visit(org.jaxen.expr.LiteralExpr)">1</method>
			<method name="public abstract void visit(org.jaxen.expr.RelationalExpr)">1</method>
			<method name="public abstract void visit(org.jaxen.expr.AdditiveExpr)">1</method>
			<method name="public abstract void visit(org.jaxen.expr.VariableReferenceExpr)">1</method>
			<method name="public abstract void visit(org.jaxen.expr.NameStep)">1</method>
			<method name="public abstract void visit(org.jaxen.expr.PathExpr)">1</method>
			<method name="public abstract void visit(org.jaxen.expr.FunctionCallExpr)">1</method>
			<method name="public abstract void visit(org.jaxen.expr.TextNodeStep)">1</method>
			<method name="public abstract void visit(org.jaxen.expr.FilterExpr)">1</method>
			<method name="public abstract void visit(org.jaxen.expr.LogicalExpr)">1</method>
			<method name="public abstract void visit(org.jaxen.expr.CommentNodeStep)">1</method>
			<method name="public abstract void visit(org.jaxen.expr.UnaryExpr)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.ConcurrentReaderHashMap</name>
		<wmc>34</wmc>
		<dit>2</dit>
		<noc>0</noc>
		<cbo>32</cbo>
		<rfc>66</rfc>
		<lcom>349</lcom>
		<ca>7</ca>
		<ce>30</ce>
		<npm>22</npm>
		<lcom3>0.7972027972027972</lcom3>
		<loc>1178</loc>
		<dam>0.8461538461538461</dam>
		<moa>2</moa>
		<mfa>0.3829787234042553</mfa>
		<cam>0.20454545454545456</cam>
		<ic>2</ic>
		<cbm>10</cbm>
		<amc>33.26470588235294</amc>
		<cc>
			<method name="public boolean containsKey(Object key)">2</method>
			<method name="public void _init_(int initialCapacity)">1</method>
			<method name="public Object remove(Object key)">10</method>
			<method name="protected boolean eq(Object x, Object y)">3</method>
			<method name="protected void rehash()">8</method>
			<method name="public java.util.Set entrySet()">2</method>
			<method name="public synchronized Object clone()">3</method>
			<method name="protected final org.dom4j.tree.ConcurrentReaderHashMap$Entry[] getTableForReading()">1</method>
			<method name="public synchronized void putAll(java.util.Map t)">4</method>
			<method name="public java.util.Enumeration keys()">1</method>
			<method name="private synchronized void readObject(java.io.ObjectInputStream s)">1</method>
			<method name="protected Object sput(Object key, Object value, int hash)">5</method>
			<method name="public void _init_(java.util.Map t)">1</method>
			<method name="private synchronized void writeObject(java.io.ObjectOutputStream s)">1</method>
			<method name="public float loadFactor()">1</method>
			<method name="public java.util.Collection values()">2</method>
			<method name="protected synchronized boolean findAndRemoveEntry(java.util.Map$Entry entry)">3</method>
			<method name="public synchronized int size()">1</method>
			<method name="public synchronized int capacity()">1</method>
			<method name="public java.util.Set keySet()">2</method>
			<method name="private int p2capacity(int initialCapacity)">4</method>
			<method name="public boolean contains(Object value)">1</method>
			<method name="public Object put(Object key, Object value)">11</method>
			<method name="public boolean containsValue(Object value)">5</method>
			<method name="private static int hash(Object x)">1</method>
			<method name="protected Object sremove(Object key, int hash)">5</method>
			<method name="public synchronized boolean isEmpty()">2</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object get(Object key)">7</method>
			<method name="public java.util.Enumeration elements()">1</method>
			<method name="protected final void recordModification(Object x)">1</method>
			<method name="public synchronized void clear()">3</method>
			<method name="public void _init_(int initialCapacity, float loadFactor)">2</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.jaxb.JAXBObjectHandler</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>4</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void handleObject(javax.xml.bind.Element)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.pattern.NodeTypeTest</name>
		<wmc>7</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>15</rfc>
		<lcom>1</lcom>
		<ca>2</ca>
		<ce>7</ce>
		<npm>6</npm>
		<lcom3>0.8958333333333334</lcom3>
		<loc>107</loc>
		<dam>0.125</dam>
		<moa>7</moa>
		<mfa>0.0</mfa>
		<cam>0.375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.142857142857142</amc>
		<cc>
			<method name="public boolean matches(Object node, org.jaxen.Context context)">2</method>
			<method name="public String toString()">1</method>
			<method name="public String getText()">2</method>
			<method name="public short getMatchType()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void _init_(short nodeType)">1</method>
			<method name="public double getPriority()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.dom.DOMText</name>
		<wmc>38</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>17</cbo>
		<rfc>86</rfc>
		<lcom>703</lcom>
		<ca>1</ca>
		<ce>16</ce>
		<npm>36</npm>
		<lcom3>2.0</lcom3>
		<loc>259</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2675438596491228</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.815789473684211</amc>
		<cc>
			<method name="public boolean isSupported(String feature, String version)">1</method>
			<method name="public void deleteData(int offset, int count)">1</method>
			<method name="public void _init_(String text)">1</method>
			<method name="public org.w3c.dom.Node getFirstChild()">1</method>
			<method name="public String getNodeName()">1</method>
			<method name="public org.w3c.dom.NamedNodeMap getAttributes()">1</method>
			<method name="public int getLength()">1</method>
			<method name="public org.w3c.dom.NodeList getChildNodes()">1</method>
			<method name="public org.w3c.dom.Node getNextSibling()">1</method>
			<method name="public void setPrefix(String prefix)">1</method>
			<method name="public String getNodeValue()">1</method>
			<method name="public void setData(String data)">1</method>
			<method name="public org.w3c.dom.Text splitText(int offset)">1</method>
			<method name="public boolean supports(String feature, String version)">1</method>
			<method name="public org.w3c.dom.Document getOwnerDocument()">1</method>
			<method name="protected org.dom4j.Text createText(String text)">1</method>
			<method name="public String getNamespaceURI()">1</method>
			<method name="public org.w3c.dom.Node insertBefore(org.w3c.dom.Node newChild, org.w3c.dom.Node refChild)">1</method>
			<method name="public org.w3c.dom.Node replaceChild(org.w3c.dom.Node newChild, org.w3c.dom.Node oldChild)">1</method>
			<method name="public org.w3c.dom.Node appendChild(org.w3c.dom.Node newChild)">1</method>
			<method name="public boolean hasAttributes()">1</method>
			<method name="public String getPrefix()">1</method>
			<method name="public org.w3c.dom.Node removeChild(org.w3c.dom.Node oldChild)">1</method>
			<method name="public void insertData(int offset, String arg)">1</method>
			<method name="public void replaceData(int offset, int count, String arg)">1</method>
			<method name="public org.w3c.dom.Node getParentNode()">1</method>
			<method name="public void _init_(org.dom4j.Element parent, String text)">1</method>
			<method name="public String substringData(int offset, int count)">1</method>
			<method name="public String getLocalName()">1</method>
			<method name="private void checkNewChildNode(org.w3c.dom.Node newChild)">1</method>
			<method name="public boolean hasChildNodes()">1</method>
			<method name="public org.w3c.dom.Node cloneNode(boolean deep)">1</method>
			<method name="public void setNodeValue(String nodeValue)">1</method>
			<method name="public org.w3c.dom.Node getPreviousSibling()">1</method>
			<method name="public org.w3c.dom.Node getLastChild()">1</method>
			<method name="public void appendData(String arg)">1</method>
			<method name="public void normalize()">1</method>
			<method name="public String getData()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.NumberFunction</name>
		<wmc>6</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>31</cbo>
		<rfc>19</rfc>
		<lcom>13</lcom>
		<ca>17</ca>
		<ce>14</ce>
		<npm>5</npm>
		<lcom3>0.8</lcom3>
		<loc>121</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.22857142857142856</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>19.0</amc>
		<cc>
			<method name="public static Double evaluate(Object obj, org.jaxen.Navigator nav)">10</method>
			<method name="public static boolean isNaN(double val)">1</method>
			<method name="public static boolean isNaN(Double val)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.DocumentInputSource$1</name>
		<wmc>3</wmc>
		<dit>2</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>4</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>2</npm>
		<lcom3>0.75</lcom3>
		<loc>18</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.8333333333333334</mfa>
		<cam>0.4666666666666667</cam>
		<ic>1</ic>
		<cbm>2</cbm>
		<amc>4.333333333333333</amc>
		<cc>
			<method name="public int read(char[] ch, int offset, int length)">1</method>
			<method name="void _init_(org.dom4j.io.DocumentInputSource this$0, java.io.IOException val$e)">1</method>
			<method name="public void close()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.AbstractDocumentType</name>
		<wmc>11</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>13</cbo>
		<rfc>29</rfc>
		<lcom>55</lcom>
		<ca>1</ca>
		<ce>12</ce>
		<npm>11</npm>
		<lcom3>2.0</lcom3>
		<loc>245</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2909090909090909</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>21.272727272727273</amc>
		<cc>
			<method name="public void write(java.io.Writer writer)">1</method>
			<method name="public String toString()">1</method>
			<method name="public void setName(String name)">1</method>
			<method name="public String getText()">5</method>
			<method name="public String asXML()">6</method>
			<method name="public String getName()">1</method>
			<method name="public String getPath(org.dom4j.Element context)">1</method>
			<method name="public short getNodeType()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public String getUniquePath(org.dom4j.Element context)">1</method>
			<method name="public void accept(org.dom4j.Visitor visitor)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.LiteralExpr</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>7</ca>
		<ce>3</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract String getLiteral()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultLocationPath</name>
		<wmc>8</wmc>
		<dit>0</dit>
		<noc>2</noc>
		<cbo>22</cbo>
		<rfc>33</rfc>
		<lcom>26</lcom>
		<ca>2</ca>
		<ce>20</ce>
		<npm>8</npm>
		<lcom3>0.14285714285714285</lcom3>
		<loc>174</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4166666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>20.625</amc>
		<cc>
			<method name="public void addStep(org.jaxen.expr.Step step)">1</method>
			<method name="public String toString()">3</method>
			<method name="public String getText()">3</method>
			<method name="public Object evaluate(org.jaxen.Context context)">1</method>
			<method name="public org.jaxen.expr.Expr simplify()">2</method>
			<method name="public java.util.List getSteps()">1</method>
			<method name="public boolean isAbsolute()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.UnaryExpr</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>4</ca>
		<ce>2</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract org.jaxen.expr.Expr getExpr()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.NotFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>10</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>31</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.333333333333334</amc>
		<cc>
			<method name="public static Boolean evaluate(Object obj, org.jaxen.Navigator nav)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.dtd.AttributeDecl</name>
		<wmc>13</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>18</rfc>
		<lcom>26</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>13</npm>
		<lcom3>0.75</lcom3>
		<loc>153</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.7307692307692307</cam>
		<ic>1</ic>
		<cbm>1</cbm>
		<amc>10.384615384615385</amc>
		<cc>
			<method name="public void _init_(String elementName, String attributeName, String type, String valueDefault, String value)">1</method>
			<method name="public String getAttributeName()">1</method>
			<method name="public void setValue(String value)">1</method>
			<method name="public String getValueDefault()">1</method>
			<method name="public String getType()">1</method>
			<method name="public String toString()">3</method>
			<method name="public void setType(String type)">1</method>
			<method name="public void setAttributeName(String attributeName)">1</method>
			<method name="public String getValue()">1</method>
			<method name="public String getElementName()">1</method>
			<method name="public void setValueDefault(String valueDefault)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void setElementName(String elementName)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.CDATA</name>
		<wmc>0</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>21</cbo>
		<rfc>0</rfc>
		<lcom>0</lcom>
		<ca>19</ca>
		<ce>2</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>0</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
		</cc>
	</class>
	<class>
		<name>org.jaxen.UnresolvableException</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>8</ca>
		<ce>4</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>5</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public void _init_(String message)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.FlyweightText</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>8</cbo>
		<rfc>5</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>20</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.333333333333333</amc>
		<cc>
			<method name="public String getText()">1</method>
			<method name="protected org.dom4j.Node createXPathResult(org.dom4j.Element parent)">1</method>
			<method name="public void _init_(String text)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.rule.Rule</name>
		<wmc>25</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>40</rfc>
		<lcom>166</lcom>
		<ca>4</ca>
		<ce>10</ce>
		<npm>25</npm>
		<lcom3>0.7222222222222222</lcom3>
		<loc>250</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.17777777777777778</cam>
		<ic>1</ic>
		<cbm>1</cbm>
		<amc>8.76</amc>
		<cc>
			<method name="public void setMode(String mode)">1</method>
			<method name="public int getAppearenceCount()">1</method>
			<method name="public org.dom4j.rule.Pattern getPattern()">1</method>
			<method name="public int compareTo(Object that)">2</method>
			<method name="public String toString()">1</method>
			<method name="public int hashCode()">1</method>
			<method name="public String getMode()">1</method>
			<method name="public void setAction(org.dom4j.rule.Action action)">1</method>
			<method name="public void _init_(org.dom4j.rule.Pattern pattern, org.dom4j.rule.Action action)">1</method>
			<method name="public final String getMatchesNodeName()">1</method>
			<method name="public boolean equals(Object that)">3</method>
			<method name="public void _init_(org.dom4j.rule.Pattern pattern)">1</method>
			<method name="public void setPattern(org.dom4j.rule.Pattern pattern)">1</method>
			<method name="public org.dom4j.rule.Action getAction()">1</method>
			<method name="public int getImportPrecedence()">1</method>
			<method name="public int compareTo(org.dom4j.rule.Rule that)">3</method>
			<method name="public void _init_(org.dom4j.rule.Rule that, org.dom4j.rule.Pattern pattern)">1</method>
			<method name="public void setPriority(double priority)">1</method>
			<method name="public double getPriority()">1</method>
			<method name="public org.dom4j.rule.Rule[] getUnionRules()">3</method>
			<method name="public final boolean matches(org.dom4j.Node node)">1</method>
			<method name="public final short getMatchType()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void setImportPrecedence(int importPrecedence)">1</method>
			<method name="public void setAppearenceCount(int appearenceCount)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.SAXValidator</name>
		<wmc>9</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>15</cbo>
		<rfc>23</rfc>
		<lcom>18</lcom>
		<ca>0</ca>
		<ce>15</ce>
		<npm>7</npm>
		<lcom3>0.625</lcom3>
		<loc>109</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3611111111111111</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.88888888888889</amc>
		<cc>
			<method name="protected org.xml.sax.XMLReader createXMLReader()">1</method>
			<method name="public void setXMLReader(org.xml.sax.XMLReader reader)">1</method>
			<method name="public org.xml.sax.ErrorHandler getErrorHandler()">1</method>
			<method name="protected void configureReader()">1</method>
			<method name="public void validate(org.dom4j.Document document)">1</method>
			<method name="public void setErrorHandler(org.xml.sax.ErrorHandler errorHandler)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(org.xml.sax.XMLReader xmlReader)">1</method>
			<method name="public org.xml.sax.XMLReader getXMLReader()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.SingleIterator</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>6</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>4</npm>
		<lcom3>0.5</lcom3>
		<loc>34</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.0</amc>
		<cc>
			<method name="public boolean hasNext()">1</method>
			<method name="public void remove()">1</method>
			<method name="public void _init_(Object object)">1</method>
			<method name="public Object next()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.ConcurrentReaderHashMap$BarrierLock</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>4</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="protected void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.xpath.XPathPattern</name>
		<wmc>12</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>27</cbo>
		<rfc>39</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>26</ce>
		<npm>10</npm>
		<lcom3>0.4848484848484848</lcom3>
		<loc>180</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.2361111111111111</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.75</amc>
		<cc>
			<method name="public boolean matches(org.dom4j.Node node)">1</method>
			<method name="public String toString()">1</method>
			<method name="protected void handleJaxenException(org.jaxen.JaxenException exception)">1</method>
			<method name="public String getText()">1</method>
			<method name="public void setVariableContext(org.jaxen.VariableContext variableContext)">1</method>
			<method name="public void _init_(String text)">1</method>
			<method name="public org.dom4j.rule.Pattern[] getUnionPatterns()">3</method>
			<method name="public short getMatchType()">1</method>
			<method name="public String getMatchesNodeName()">1</method>
			<method name="protected org.jaxen.ContextSupport getContextSupport()">1</method>
			<method name="public void _init_(org.jaxen.pattern.Pattern pattern)">1</method>
			<method name="public double getPriority()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultXPathFactory</name>
		<wmc>27</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>68</cbo>
		<rfc>78</rfc>
		<lcom>351</lcom>
		<ca>2</ca>
		<ce>66</ce>
		<npm>26</npm>
		<lcom3>2.0</lcom3>
		<loc>389</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.30687830687830686</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.407407407407407</amc>
		<cc>
			<method name="public org.jaxen.expr.BinaryExpr createEqualityExpr(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs, int equalityOperator)">3</method>
			<method name="public org.jaxen.expr.FunctionCallExpr createFunctionCallExpr(String prefix, String functionName)">1</method>
			<method name="public org.jaxen.expr.VariableReferenceExpr createVariableReferenceExpr(String prefix, String variable)">1</method>
			<method name="protected org.jaxen.expr.iter.IterableAxis getIterableAxis(int axis)">2</method>
			<method name="public org.jaxen.expr.UnionExpr createUnionExpr(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="public org.jaxen.expr.Step createCommentNodeStep(int axis)">1</method>
			<method name="public org.jaxen.expr.Step createTextNodeStep(int axis)">1</method>
			<method name="public org.jaxen.expr.Expr createUnaryExpr(org.jaxen.expr.Expr expr, int unaryOperator)">2</method>
			<method name="public org.jaxen.expr.FilterExpr createFilterExpr(org.jaxen.expr.Expr expr)">1</method>
			<method name="public org.jaxen.expr.Step createNameStep(int axis, String prefix, String localName)">1</method>
			<method name="public org.jaxen.expr.Predicate createPredicate(org.jaxen.expr.Expr predicateExpr)">1</method>
			<method name="public org.jaxen.expr.BinaryExpr createAndExpr(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="public org.jaxen.expr.Step createAllNodeStep(int axis)">1</method>
			<method name="public org.jaxen.expr.BinaryExpr createRelationalExpr(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs, int relationalOperator)">1</method>
			<method name="public org.jaxen.expr.BinaryExpr createOrExpr(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="public org.jaxen.expr.XPathExpr createXPath(org.jaxen.expr.Expr rootExpr)">1</method>
			<method name="public org.jaxen.expr.LocationPath createRelativeLocationPath()">1</method>
			<method name="public org.jaxen.expr.LiteralExpr createLiteralExpr(String literal)">1</method>
			<method name="public org.jaxen.expr.Step createProcessingInstructionNodeStep(int axis, String piName)">1</method>
			<method name="public org.jaxen.expr.BinaryExpr createAdditiveExpr(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs, int additiveOperator)">3</method>
			<method name="public org.jaxen.expr.NumberExpr createNumberExpr(double number)">1</method>
			<method name="public org.jaxen.expr.LocationPath createAbsoluteLocationPath()">1</method>
			<method name="public org.jaxen.expr.BinaryExpr createMultiplicativeExpr(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs, int multiplicativeOperator)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public org.jaxen.expr.PredicateSet createPredicateSet()">1</method>
			<method name="public org.jaxen.expr.NumberExpr createNumberExpr(int number)">1</method>
			<method name="public org.jaxen.expr.PathExpr createPathExpr(org.jaxen.expr.FilterExpr filterExpr, org.jaxen.expr.LocationPath locationPath)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultEqualityExpr</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>2</noc>
		<cbo>19</cbo>
		<rfc>28</rfc>
		<lcom>15</lcom>
		<ca>2</ca>
		<ce>17</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>172</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3611111111111111</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>27.666666666666668</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public Object evaluate(org.jaxen.Context context)">1</method>
			<method name="private Boolean evaluateSetSet(java.util.List lhsSet, java.util.List rhsSet, org.jaxen.Navigator nav)">4</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="protected abstract boolean evaluateObjectObject(Object, Object)">1</method>
			<method name="private boolean evaluateObjectObject(Object lhs, Object rhs, org.jaxen.Navigator nav)">3</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.saxpath.base.XPathReader</name>
		<wmc>42</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>17</cbo>
		<rfc>108</rfc>
		<lcom>833</lcom>
		<ca>0</ca>
		<ce>17</ce>
		<npm>4</npm>
		<lcom3>0.43089430894308944</lcom3>
		<loc>1368</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.21825396825396826</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>31.5</amc>
		<cc>
			<method name="void nodeTypeTest(int axis)">1</method>
			<method name="void throwUnexpected()">1</method>
			<method name="void functionCall()">1</method>
			<method name="void absoluteLocationPath()">1</method>
			<method name="void multiplicativeExpr()">4</method>
			<method name="void predicateExpr()">1</method>
			<method name="void variableReference()">1</method>
			<method name="void abbrStep()">3</method>
			<method name="org.jaxen.saxpath.XPathSyntaxException createSyntaxException(String message)">1</method>
			<method name="int axisSpecifier()">1</method>
			<method name="org.jaxen.saxpath.base.Token LT(int position)">3</method>
			<method name="void numberDouble()">1</method>
			<method name="void filterExpr()">7</method>
			<method name="void nameTest(int axis)">1</method>
			<method name="void relationalExpr()">1</method>
			<method name="void throwInvalidAxis(String invalidAxis)">1</method>
			<method name="void unaryExpr()">2</method>
			<method name="org.jaxen.saxpath.base.Token match(int tokenType)">1</method>
			<method name="public void setXPathHandler(org.jaxen.saxpath.XPathHandler handler)">1</method>
			<method name="void equalityExpr()">3</method>
			<method name="boolean isNodeTypeName(org.jaxen.saxpath.base.Token name)">5</method>
			<method name="public org.jaxen.saxpath.XPathHandler getXPathHandler()">1</method>
			<method name="void additiveExpr()">3</method>
			<method name="void literal()">1</method>
			<method name="public void parse(String xpath)">1</method>
			<method name="void nodeTest(int axis)">2</method>
			<method name="void arguments()">1</method>
			<method name="void predicates()">1</method>
			<method name="void unionExpr()">2</method>
			<method name="void orExpr()">2</method>
			<method name="void locationPath(boolean isAbsolute)">1</method>
			<method name="void setUpParse(String xpath)">1</method>
			<method name="void relativeLocationPath()">3</method>
			<method name="void predicate()">1</method>
			<method name="void steps()">1</method>
			<method name="void pathExpr()">1</method>
			<method name="int LA(int position)">1</method>
			<method name="void step()">1</method>
			<method name="void andExpr()">2</method>
			<method name="void numberInteger()">1</method>
			<method name="void expr()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.ext.MatrixConcatFunction$MatrixEnum</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>12</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>4</npm>
		<lcom3>0.22222222222222218</lcom3>
		<loc>121</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5833333333333334</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>28.5</amc>
		<cc>
			<method name="public void _init_(java.util.ArrayList _source)">2</method>
			<method name="public boolean hasMoreElements()">3</method>
			<method name="public Object nextElement()">4</method>
			<method name="public void _init_(java.util.ArrayList _source, int _maxSize)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultNotEqualsExpr</name>
		<wmc>5</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>16</rfc>
		<lcom>10</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>56</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.2</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="protected boolean evaluateObjectObject(Object lhs, Object rhs)">5</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public String getOperator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.iter.IterableAncestorOrSelfAxis</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>5</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>11</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.5</amc>
		<cc>
			<method name="public java.util.Iterator iterator(Object contextNode, org.jaxen.ContextSupport support)">1</method>
			<method name="public void _init_(int value)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.ext.EvaluateFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>17</cbo>
		<rfc>21</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>16</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>74</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>23.666666666666668</amc>
		<cc>
			<method name="public void _init_()">1</method>
			<method name="public static java.util.List evaluate(org.jaxen.Context context, Object arg)">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.UnionExpr</name>
		<wmc>0</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>0</rfc>
		<lcom>0</lcom>
		<ca>9</ca>
		<ce>2</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>0</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
		</cc>
	</class>
	<class>
		<name>com.adobe.ac.ant.tasks.FlexUnitTask$1</name>
		<wmc>9</wmc>
		<dit>2</dit>
		<noc>0</noc>
		<cbo>16</cbo>
		<rfc>39</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>16</ce>
		<npm>1</npm>
		<lcom3>0.475</lcom3>
		<loc>290</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.8888888888888888</mfa>
		<cam>0.4074074074074074</cam>
		<ic>1</ic>
		<cbm>1</cbm>
		<amc>30.666666666666668</amc>
		<cc>
			<method name="private void saveTestReport(String arg0)">2</method>
			<method name="private void sendAcknowledgement()">1</method>
			<method name="void _init_(com.adobe.ac.ant.tasks.FlexUnitTask arg0)">1</method>
			<method name="private void openServerSocket()">1</method>
			<method name="private void openClientSocket()">1</method>
			<method name="private void closeServerSocket()">2</method>
			<method name="private void closeClientSocket()">4</method>
			<method name="public void run()">5</method>
			<method name="private void sendPolicyFile()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.STAXEventWriter$AttributeIterator</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>13</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>11</ce>
		<npm>4</npm>
		<lcom3>0.5</lcom3>
		<loc>44</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.5</amc>
		<cc>
			<method name="public boolean hasNext()">1</method>
			<method name="public void remove()">1</method>
			<method name="public void _init_(org.dom4j.io.STAXEventWriter this$0, java.util.Iterator iter)">1</method>
			<method name="public Object next()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.XPathException</name>
		<wmc>4</wmc>
		<dit>4</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>9</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>6</ce>
		<npm>4</npm>
		<lcom3>0.0</lcom3>
		<loc>59</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.9545454545454546</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.5</amc>
		<cc>
			<method name="public void _init_(String xpath, String reason)">1</method>
			<method name="public String getXPath()">1</method>
			<method name="public void _init_(String xpath, Exception e)">1</method>
			<method name="public void _init_(String xpath)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.xpath.DefaultXPath$1</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>6</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>0.5</lcom3>
		<loc>54</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>25.0</amc>
		<cc>
			<method name="void _init_(org.dom4j.xpath.DefaultXPath this$0, java.util.Map val$sortValues)">1</method>
			<method name="public int compare(Object o1, Object o2)">6</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.JaxenConstants</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>15</cbo>
		<rfc>5</rfc>
		<lcom>1</lcom>
		<ca>9</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>1.0</lcom3>
		<loc>14</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.0</amc>
		<cc>
			<method name="static void _clinit_()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.jaxb.JAXBReader</name>
		<wmc>19</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>23</cbo>
		<rfc>40</rfc>
		<lcom>169</lcom>
		<ca>2</ca>
		<ce>23</ce>
		<npm>18</npm>
		<lcom3>0.5555555555555556</lcom3>
		<loc>240</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.17982456140350878</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.526315789473685</amc>
		<cc>
			<method name="public void _init_(String contextPath, ClassLoader classloader)">1</method>
			<method name="public org.dom4j.Document read(java.io.File source)">1</method>
			<method name="public org.dom4j.Document read(java.io.InputStream source)">1</method>
			<method name="public void resetHandlers()">1</method>
			<method name="public boolean isPruneElements()">1</method>
			<method name="public org.dom4j.Document read(java.io.Reader source)">1</method>
			<method name="public void _init_(String contextPath)">1</method>
			<method name="public void addObjectHandler(String path, org.dom4j.jaxb.JAXBObjectHandler handler)">1</method>
			<method name="public org.dom4j.Document read(java.io.File file, java.nio.charset.Charset charset)">1</method>
			<method name="public org.dom4j.Document read(java.net.URL source)">1</method>
			<method name="public void setPruneElements(boolean pruneElements)">2</method>
			<method name="public void removeHandler(String path)">1</method>
			<method name="public org.dom4j.Document read(String source)">1</method>
			<method name="public org.dom4j.Document read(java.io.Reader source, String systemId)">1</method>
			<method name="private org.dom4j.io.SAXReader getReader()">2</method>
			<method name="public org.dom4j.Document read(org.xml.sax.InputSource source)">1</method>
			<method name="public org.dom4j.Document read(java.io.InputStream source, String systemId)">1</method>
			<method name="public void removeObjectHandler(String path)">1</method>
			<method name="public void addHandler(String path, org.dom4j.ElementHandler handler)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.FunctionCallExpr</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>4</rfc>
		<lcom>6</lcom>
		<ca>7</ca>
		<ce>5</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>4</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract java.util.List getParameters()">1</method>
			<method name="public abstract void addParameter(org.jaxen.expr.Expr)">1</method>
			<method name="public abstract String getFunctionName()">1</method>
			<method name="public abstract String getPrefix()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.SAXReader</name>
		<wmc>56</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>37</cbo>
		<rfc>111</rfc>
		<lcom>974</lcom>
		<ca>7</ca>
		<ce>30</ce>
		<npm>49</npm>
		<lcom3>0.8972727272727273</lcom3>
		<loc>878</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.1092436974789916</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.321428571428571</amc>
		<cc>
			<method name="public org.dom4j.DocumentFactory getDocumentFactory()">2</method>
			<method name="public void setDefaultHandler(org.dom4j.ElementHandler handler)">1</method>
			<method name="public boolean isIncludeExternalDTDDeclarations()">1</method>
			<method name="public void setEntityResolver(org.xml.sax.EntityResolver entityResolver)">1</method>
			<method name="public void resetHandlers()">1</method>
			<method name="public org.dom4j.Document read(java.io.InputStream in)">1</method>
			<method name="protected org.dom4j.io.DispatchHandler getDispatchHandler()">2</method>
			<method name="public void _init_(String xmlReaderClassName)">1</method>
			<method name="public boolean isIgnoreComments()">1</method>
			<method name="public org.xml.sax.ErrorHandler getErrorHandler()">1</method>
			<method name="public void setDocumentFactory(org.dom4j.DocumentFactory documentFactory)">1</method>
			<method name="protected org.xml.sax.EntityResolver createDefaultEntityResolver(String systemId)">4</method>
			<method name="public void setStripWhitespaceText(boolean stripWhitespaceText)">1</method>
			<method name="public void setIncludeExternalDTDDeclarations(boolean include)">1</method>
			<method name="public boolean isStripWhitespaceText()">1</method>
			<method name="public org.xml.sax.EntityResolver getEntityResolver()">1</method>
			<method name="public org.dom4j.Document read(java.io.InputStream in, String systemId)">1</method>
			<method name="public void _init_(org.xml.sax.XMLReader xmlReader)">1</method>
			<method name="public org.dom4j.Document read(java.io.Reader reader)">1</method>
			<method name="public void setIncludeInternalDTDDeclarations(boolean include)">1</method>
			<method name="public org.xml.sax.XMLReader getXMLReader()">1</method>
			<method name="public void setValidation(boolean validation)">1</method>
			<method name="public void setProperty(String name, Object value)">1</method>
			<method name="public org.dom4j.Document read(java.net.URL url)">1</method>
			<method name="protected org.dom4j.io.SAXContentHandler createContentHandler(org.xml.sax.XMLReader reader)">1</method>
			<method name="public void _init_(org.dom4j.DocumentFactory factory, boolean validating)">1</method>
			<method name="public void addHandler(String path, org.dom4j.ElementHandler handler)">1</method>
			<method name="public void setMergeAdjacentText(boolean mergeAdjacentText)">1</method>
			<method name="public void _init_(org.xml.sax.XMLReader xmlReader, boolean validating)">1</method>
			<method name="public boolean isStringInternEnabled()">1</method>
			<method name="public void setStringInternEnabled(boolean stringInternEnabled)">1</method>
			<method name="public org.xml.sax.XMLFilter getXMLFilter()">1</method>
			<method name="public boolean isValidating()">1</method>
			<method name="public void _init_(String xmlReaderClassName, boolean validating)">1</method>
			<method name="public boolean isMergeAdjacentText()">1</method>
			<method name="public void setIgnoreComments(boolean ignoreComments)">1</method>
			<method name="public void setXMLReaderClassName(String xmlReaderClassName)">1</method>
			<method name="public void _init_(org.dom4j.DocumentFactory factory)">1</method>
			<method name="public boolean isIncludeInternalDTDDeclarations()">1</method>
			<method name="protected org.xml.sax.XMLReader createXMLReader()">1</method>
			<method name="public void setErrorHandler(org.xml.sax.ErrorHandler errorHandler)">1</method>
			<method name="protected void configureReader(org.xml.sax.XMLReader reader, org.xml.sax.helpers.DefaultHandler handler)">1</method>
			<method name="public org.dom4j.Document read(java.io.File file)">1</method>
			<method name="public org.dom4j.Document read(java.io.Reader reader, String systemId)">1</method>
			<method name="public void setEncoding(String encoding)">1</method>
			<method name="protected org.xml.sax.XMLReader installXMLFilter(org.xml.sax.XMLReader reader)">3</method>
			<method name="public void setXMLFilter(org.xml.sax.XMLFilter filter)">1</method>
			<method name="public void setFeature(String name, boolean value)">1</method>
			<method name="public void setXMLReader(org.xml.sax.XMLReader reader)">1</method>
			<method name="public void removeHandler(String path)">1</method>
			<method name="public void _init_(boolean validating)">1</method>
			<method name="public String getEncoding()">1</method>
			<method name="protected void setDispatchHandler(org.dom4j.io.DispatchHandler dispatchHandler)">1</method>
			<method name="public org.dom4j.Document read(String systemId)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public org.dom4j.Document read(org.xml.sax.InputSource in)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.pattern.Pattern</name>
		<wmc>8</wmc>
		<dit>1</dit>
		<noc>3</noc>
		<cbo>11</cbo>
		<rfc>9</rfc>
		<lcom>28</lcom>
		<ca>6</ca>
		<ce>5</ce>
		<npm>8</npm>
		<lcom3>1.1428571428571428</lcom3>
		<loc>35</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4166666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>1.625</amc>
		<cc>
			<method name="public abstract String getText()">1</method>
			<method name="public org.jaxen.pattern.Pattern[] getUnionPatterns()">1</method>
			<method name="public org.jaxen.pattern.Pattern simplify()">1</method>
			<method name="public short getMatchType()">1</method>
			<method name="public abstract boolean matches(Object, org.jaxen.Context)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public String getMatchesNodeName()">1</method>
			<method name="public double getPriority()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.FunctionCallException</name>
		<wmc>8</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>49</cbo>
		<rfc>20</rfc>
		<lcom>0</lcom>
		<ca>40</ca>
		<ce>9</ce>
		<npm>8</npm>
		<lcom3>0.14285714285714285</lcom3>
		<loc>81</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2916666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.0</amc>
		<cc>
			<method name="public void _init_(String message)">1</method>
			<method name="public void printStackTrace(java.io.PrintStream s)">2</method>
			<method name="public void _init_(Throwable nestedException)">1</method>
			<method name="public void printStackTrace(java.io.PrintWriter w)">2</method>
			<method name="public Throwable getNestedException()">1</method>
			<method name="public void _init_(String message, Exception nestedException)">1</method>
			<method name="public void printStackTrace()">2</method>
			<method name="public Throwable fillInStackTrace()">2</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.RoundFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>14</rfc>
		<lcom>3</lcom>
		<ca>2</ca>
		<ce>12</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>50</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>15.666666666666666</amc>
		<cc>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
			<method name="public static Number evaluate(Object obj, org.jaxen.Navigator nav)">4</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.ext.LowerFunction</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>11</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>52</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3888888888888889</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>16.333333333333332</amc>
		<cc>
			<method name="public static String evaluate(Object strArg, java.util.Locale locale, org.jaxen.Navigator nav)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.dom.DOMDocumentType</name>
		<wmc>34</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>63</rfc>
		<lcom>561</lcom>
		<ca>2</ca>
		<ce>12</ce>
		<npm>33</npm>
		<lcom3>2.0</lcom3>
		<loc>159</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3382352941176471</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.676470588235294</amc>
		<cc>
			<method name="public boolean isSupported(String feature, String version)">1</method>
			<method name="public org.w3c.dom.NamedNodeMap getEntities()">1</method>
			<method name="public org.w3c.dom.Node getFirstChild()">1</method>
			<method name="public String getNodeName()">1</method>
			<method name="public org.w3c.dom.NamedNodeMap getAttributes()">1</method>
			<method name="public org.w3c.dom.NodeList getChildNodes()">1</method>
			<method name="public org.w3c.dom.Node getNextSibling()">1</method>
			<method name="public void setPrefix(String prefix)">1</method>
			<method name="public String getNodeValue()">1</method>
			<method name="public boolean supports(String feature, String version)">1</method>
			<method name="public String getPublicId()">1</method>
			<method name="public void _init_(String name, String publicID, String systemID)">1</method>
			<method name="public org.w3c.dom.Document getOwnerDocument()">1</method>
			<method name="public String getSystemId()">1</method>
			<method name="public String getNamespaceURI()">1</method>
			<method name="public org.w3c.dom.Node insertBefore(org.w3c.dom.Node newChild, org.w3c.dom.Node refChild)">1</method>
			<method name="public org.w3c.dom.Node replaceChild(org.w3c.dom.Node newChild, org.w3c.dom.Node oldChild)">1</method>
			<method name="public void _init_(String elementName, String systemID)">1</method>
			<method name="public org.w3c.dom.Node appendChild(org.w3c.dom.Node newChild)">1</method>
			<method name="public boolean hasAttributes()">1</method>
			<method name="public String getPrefix()">1</method>
			<method name="public org.w3c.dom.Node removeChild(org.w3c.dom.Node oldChild)">1</method>
			<method name="public org.w3c.dom.NamedNodeMap getNotations()">1</method>
			<method name="public String getInternalSubset()">1</method>
			<method name="public org.w3c.dom.Node getParentNode()">1</method>
			<method name="public String getLocalName()">1</method>
			<method name="private void checkNewChildNode(org.w3c.dom.Node newChild)">1</method>
			<method name="public boolean hasChildNodes()">1</method>
			<method name="public org.w3c.dom.Node cloneNode(boolean deep)">1</method>
			<method name="public void setNodeValue(String nodeValue)">1</method>
			<method name="public org.w3c.dom.Node getPreviousSibling()">1</method>
			<method name="public org.w3c.dom.Node getLastChild()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void normalize()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.DocumentType</name>
		<wmc>10</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>21</cbo>
		<rfc>10</rfc>
		<lcom>45</lcom>
		<ca>16</ca>
		<ce>5</ce>
		<npm>10</npm>
		<lcom3>2.0</lcom3>
		<loc>10</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void setExternalDeclarations(java.util.List)">1</method>
			<method name="public abstract String getElementName()">1</method>
			<method name="public abstract void setElementName(String)">1</method>
			<method name="public abstract String getPublicID()">1</method>
			<method name="public abstract String getSystemID()">1</method>
			<method name="public abstract java.util.List getInternalDeclarations()">1</method>
			<method name="public abstract void setSystemID(String)">1</method>
			<method name="public abstract void setPublicID(String)">1</method>
			<method name="public abstract java.util.List getExternalDeclarations()">1</method>
			<method name="public abstract void setInternalDeclarations(java.util.List)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.UnsupportedAxisException</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>34</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>30</ca>
		<ce>4</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>5</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public void _init_(String msg)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.SAXModifyException</name>
		<wmc>1</wmc>
		<dit>4</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>3</ca>
		<ce>4</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>5</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>1.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="protected void _init_(Throwable cause)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.swing.XMLTableModel</name>
		<wmc>15</wmc>
		<dit>2</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>33</rfc>
		<lcom>35</lcom>
		<ca>0</ca>
		<ce>14</ce>
		<npm>14</npm>
		<lcom3>0.42857142857142855</lcom3>
		<loc>149</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.5714285714285714</mfa>
		<cam>0.26666666666666666</cam>
		<ic>1</ic>
		<cbm>1</cbm>
		<amc>8.733333333333333</amc>
		<cc>
			<method name="public Object getSource()">1</method>
			<method name="public void _init_(org.dom4j.Element tableDefinition, Object source)">1</method>
			<method name="public String getColumnName(int columnIndex)">2</method>
			<method name="public Class getColumnClass(int columnIndex)">1</method>
			<method name="public int getRowCount()">1</method>
			<method name="public void _init_(org.dom4j.swing.XMLTableDefinition definition, Object source)">1</method>
			<method name="public void _init_(org.dom4j.Document tableDefinition, Object source)">1</method>
			<method name="public Object getRowValue(int rowIndex)">1</method>
			<method name="public int getColumnCount()">1</method>
			<method name="public Object getValueAt(int rowIndex, int columnIndex)">1</method>
			<method name="public org.dom4j.swing.XMLTableDefinition getDefinition()">1</method>
			<method name="public void setSource(Object source)">1</method>
			<method name="public void setDefinition(org.dom4j.swing.XMLTableDefinition definition)">1</method>
			<method name="public java.util.List getRows()">2</method>
			<method name="protected void handleException(Exception e)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultUnaryExpr</name>
		<wmc>7</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>15</cbo>
		<rfc>20</rfc>
		<lcom>15</lcom>
		<ca>1</ca>
		<ce>14</ce>
		<npm>7</npm>
		<lcom3>0.16666666666666666</lcom3>
		<loc>69</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.35714285714285715</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.714285714285714</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public String getText()">1</method>
			<method name="public Object evaluate(org.jaxen.Context context)">1</method>
			<method name="public org.jaxen.expr.Expr simplify()">1</method>
			<method name="public org.jaxen.expr.Expr getExpr()">1</method>
			<method name="public void _init_(org.jaxen.expr.Expr expr)">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.DefaultDocument</name>
		<wmc>30</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>20</cbo>
		<rfc>62</rfc>
		<lcom>269</lcom>
		<ca>2</ca>
		<ce>19</ce>
		<npm>23</npm>
		<lcom3>0.8189655172413793</lcom3>
		<loc>503</loc>
		<dam>1.0</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.19540229885057472</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>15.5</amc>
		<cc>
			<method name="public void setName(String name)">1</method>
			<method name="protected org.dom4j.DocumentFactory getDocumentFactory()">1</method>
			<method name="protected java.util.List contentList()">3</method>
			<method name="public void _init_(String name)">1</method>
			<method name="public void setEntityResolver(org.xml.sax.EntityResolver entityResolver)">1</method>
			<method name="protected void addNode(int index, org.dom4j.Node node)">4</method>
			<method name="public Object clone()">1</method>
			<method name="public void _init_(org.dom4j.Element rootElement)">1</method>
			<method name="public org.dom4j.ProcessingInstruction processingInstruction(String target)">4</method>
			<method name="public void _init_(String name, org.dom4j.Element rootElement, org.dom4j.DocumentType docType)">1</method>
			<method name="public void _init_(org.dom4j.DocumentType docType)">1</method>
			<method name="public void setDocumentFactory(org.dom4j.DocumentFactory documentFactory)">1</method>
			<method name="public void setDocType(org.dom4j.DocumentType docType)">1</method>
			<method name="public String getXMLEncoding()">1</method>
			<method name="public org.dom4j.Document addDocType(String docTypeName, String publicId, String systemId)">1</method>
			<method name="protected void rootElementAdded(org.dom4j.Element element)">1</method>
			<method name="protected void addNode(org.dom4j.Node node)">4</method>
			<method name="public org.dom4j.Element getRootElement()">1</method>
			<method name="public java.util.List processingInstructions(String target)">4</method>
			<method name="public org.dom4j.DocumentType getDocType()">1</method>
			<method name="public java.util.List processingInstructions()">3</method>
			<method name="public String getName()">1</method>
			<method name="public org.xml.sax.EntityResolver getEntityResolver()">1</method>
			<method name="public void setContent(java.util.List content)">9</method>
			<method name="public void clearContent()">1</method>
			<method name="protected boolean removeNode(org.dom4j.Node node)">3</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void _init_(org.dom4j.Element rootElement, org.dom4j.DocumentType docType)">1</method>
			<method name="public boolean removeProcessingInstruction(String target)">2</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.XPathExpr</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>5</rfc>
		<lcom>10</lcom>
		<ca>6</ca>
		<ce>8</ce>
		<npm>5</npm>
		<lcom3>2.0</lcom3>
		<loc>5</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract String getText()">1</method>
			<method name="public abstract org.jaxen.expr.Expr getRootExpr()">1</method>
			<method name="public abstract void setRootExpr(org.jaxen.expr.Expr)">1</method>
			<method name="public abstract void simplify()">1</method>
			<method name="public abstract java.util.List asList(org.jaxen.Context)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.pattern.UnionPattern</name>
		<wmc>14</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>26</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>13</npm>
		<lcom3>0.4230769230769231</lcom3>
		<loc>185</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.3392857142857143</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.928571428571429</amc>
		<cc>
			<method name="public boolean matches(Object node, org.jaxen.Context context)">1</method>
			<method name="public org.jaxen.pattern.Pattern[] getUnionPatterns()">1</method>
			<method name="public void _init_(org.jaxen.pattern.Pattern lhs, org.jaxen.pattern.Pattern rhs)">1</method>
			<method name="public org.jaxen.pattern.Pattern getRHS()">1</method>
			<method name="public org.jaxen.pattern.Pattern getLHS()">1</method>
			<method name="public String getMatchesNodeName()">1</method>
			<method name="private void init()">5</method>
			<method name="public String toString()">1</method>
			<method name="public String getText()">1</method>
			<method name="public void setLHS(org.jaxen.pattern.Pattern lhs)">1</method>
			<method name="public org.jaxen.pattern.Pattern simplify()">1</method>
			<method name="public short getMatchType()">1</method>
			<method name="public void setRHS(org.jaxen.pattern.Pattern rhs)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.swing.LeafTreeNode$1</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>4</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>10</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>2.3333333333333335</amc>
		<cc>
			<method name="void _init_()">1</method>
			<method name="public boolean hasMoreElements()">1</method>
			<method name="public Object nextElement()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.ConcurrentReaderHashMap$KeySet</name>
		<wmc>7</wmc>
		<dit>3</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>13</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>5</npm>
		<lcom3>0.0</lcom3>
		<loc>46</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.7916666666666666</mfa>
		<cam>0.42857142857142855</cam>
		<ic>2</ic>
		<cbm>9</cbm>
		<amc>5.428571428571429</amc>
		<cc>
			<method name="private void _init_(org.dom4j.tree.ConcurrentReaderHashMap this$0)">1</method>
			<method name="public boolean contains(Object o)">1</method>
			<method name="public void clear()">1</method>
			<method name="void _init_(org.dom4j.tree.ConcurrentReaderHashMap x0, org.dom4j.tree.ConcurrentReaderHashMap$1 x1)">1</method>
			<method name="public boolean remove(Object o)">2</method>
			<method name="public int size()">1</method>
			<method name="public java.util.Iterator iterator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.dtd.ElementDecl</name>
		<wmc>7</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>11</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>7</npm>
		<lcom3>0.5</lcom3>
		<loc>52</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.7142857142857143</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.142857142857143</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void setName(String name)">1</method>
			<method name="public void setModel(String model)">1</method>
			<method name="public String getName()">1</method>
			<method name="public String getModel()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(String name, String model)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.xpp.ProxyXmlStartTag</name>
		<wmc>28</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>57</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>13</ce>
		<npm>28</npm>
		<lcom3>0.48148148148148145</lcom3>
		<loc>370</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.26785714285714285</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.142857142857142</amc>
		<cc>
			<method name="public org.dom4j.DocumentFactory getDocumentFactory()">1</method>
			<method name="public void addAttribute(String namespaceURI, String localName, String rawName, String value)">1</method>
			<method name="public void removeAtttributes()">1</method>
			<method name="public int getAttributeCount()">2</method>
			<method name="public String getAttributeNamespaceUri(int index)">3</method>
			<method name="public String getAttributeRawName(int index)">3</method>
			<method name="public void addAttribute(String namespaceURI, String localName, String rawName, String value, boolean isNamespaceDeclaration)">1</method>
			<method name="public void modifyTag(String namespaceURI, String lName, String rawName)">1</method>
			<method name="public String getNamespaceUri()">1</method>
			<method name="public void resetTag()">1</method>
			<method name="public void setDocumentFactory(org.dom4j.DocumentFactory documentFactory)">1</method>
			<method name="public boolean removeAttributeByName(String namespaceURI, String localName)">1</method>
			<method name="public String getAttributeValueFromName(String namespaceURI, String localName)">3</method>
			<method name="public String getAttributeValueFromRawName(String rawName)">3</method>
			<method name="public void resetStartTag()">1</method>
			<method name="public String getAttributePrefix(int index)">5</method>
			<method name="public boolean isAttributeNamespaceDeclaration(int index)">3</method>
			<method name="public void ensureAttributesCapacity(int minCapacity)">1</method>
			<method name="public void removeAttributes()">1</method>
			<method name="public String getPrefix()">1</method>
			<method name="public String getAttributeValue(int index)">3</method>
			<method name="public String getLocalName()">1</method>
			<method name="public String getRawName()">1</method>
			<method name="public void _init_(org.dom4j.Element element)">1</method>
			<method name="public org.dom4j.Element getElement()">1</method>
			<method name="public String getAttributeLocalName(int index)">3</method>
			<method name="public boolean removeAttributeByRawName(String rawName)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.iter.IterableFollowingAxis</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>5</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>11</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.5</amc>
		<cc>
			<method name="public java.util.Iterator iterator(Object contextNode, org.jaxen.ContextSupport support)">1</method>
			<method name="public void _init_(int value)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultStep</name>
		<wmc>12</wmc>
		<dit>1</dit>
		<noc>5</noc>
		<cbo>24</cbo>
		<rfc>40</rfc>
		<lcom>24</lcom>
		<ca>6</ca>
		<ce>18</ce>
		<npm>12</npm>
		<lcom3>0.45454545454545453</lcom3>
		<loc>146</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.21428571428571427</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.0</amc>
		<cc>
			<method name="public void _init_(org.jaxen.expr.iter.IterableAxis axis, org.jaxen.expr.PredicateSet predicates)">1</method>
			<method name="public int getAxis()">1</method>
			<method name="public String toString()">1</method>
			<method name="public void addPredicate(org.jaxen.expr.Predicate predicate)">1</method>
			<method name="public org.jaxen.expr.iter.IterableAxis getIterableAxis()">1</method>
			<method name="public String getText()">1</method>
			<method name="public org.jaxen.expr.PredicateSet getPredicateSet()">1</method>
			<method name="public java.util.Iterator axisIterator(Object contextNode, org.jaxen.ContextSupport support)">1</method>
			<method name="public java.util.List evaluate(org.jaxen.Context context)">1</method>
			<method name="public String getAxisName()">1</method>
			<method name="public void simplify()">1</method>
			<method name="public java.util.List getPredicates()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.util.SimpleSingleton</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>10</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>4</npm>
		<lcom3>0.16666666666666666</lcom3>
		<loc>52</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.5</amc>
		<cc>
			<method name="public Object instance()">1</method>
			<method name="public void reset()">2</method>
			<method name="public void setSingletonClassName(String singletonClassName)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.Expr</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>54</cbo>
		<rfc>3</rfc>
		<lcom>3</lcom>
		<ca>48</ca>
		<ce>6</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>3</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract String getText()">1</method>
			<method name="public abstract org.jaxen.expr.Expr simplify()">1</method>
			<method name="public abstract Object evaluate(org.jaxen.Context)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.javabean.ElementIterator</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>9</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>4</npm>
		<lcom3>0.5555555555555555</lcom3>
		<loc>38</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.75</amc>
		<cc>
			<method name="public boolean hasNext()">1</method>
			<method name="public void remove()">1</method>
			<method name="public void _init_(org.jaxen.javabean.Element parent, String name, java.util.Iterator iterator)">1</method>
			<method name="public Object next()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultLiteralExpr</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>11</rfc>
		<lcom>13</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>6</npm>
		<lcom3>0.2</lcom3>
		<loc>47</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.666666666666667</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public String getText()">1</method>
			<method name="public Object evaluate(org.jaxen.Context context)">1</method>
			<method name="public String getLiteral()">1</method>
			<method name="public void _init_(String literal)">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.dom.DOMNamespace</name>
		<wmc>26</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>52</rfc>
		<lcom>325</lcom>
		<ca>1</ca>
		<ce>12</ce>
		<npm>26</npm>
		<lcom3>2.0</lcom3>
		<loc>122</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2923076923076923</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.6923076923076925</amc>
		<cc>
			<method name="public boolean isSupported(String feature, String version)">1</method>
			<method name="public org.w3c.dom.Node getFirstChild()">1</method>
			<method name="public String getNodeName()">1</method>
			<method name="public org.w3c.dom.NamedNodeMap getAttributes()">1</method>
			<method name="public void _init_(org.dom4j.Element parent, String prefix, String uri)">1</method>
			<method name="public org.w3c.dom.NodeList getChildNodes()">1</method>
			<method name="public org.w3c.dom.Node getNextSibling()">1</method>
			<method name="public void setPrefix(String prefix)">1</method>
			<method name="public String getNodeValue()">1</method>
			<method name="public boolean supports(String feature, String version)">1</method>
			<method name="public org.w3c.dom.Document getOwnerDocument()">1</method>
			<method name="public String getNamespaceURI()">1</method>
			<method name="public void _init_(String prefix, String uri)">1</method>
			<method name="public org.w3c.dom.Node insertBefore(org.w3c.dom.Node newChild, org.w3c.dom.Node refChild)">1</method>
			<method name="public org.w3c.dom.Node replaceChild(org.w3c.dom.Node newChild, org.w3c.dom.Node oldChild)">1</method>
			<method name="public org.w3c.dom.Node appendChild(org.w3c.dom.Node newChild)">1</method>
			<method name="public boolean hasAttributes()">1</method>
			<method name="public org.w3c.dom.Node removeChild(org.w3c.dom.Node oldChild)">1</method>
			<method name="public org.w3c.dom.Node getParentNode()">1</method>
			<method name="public String getLocalName()">1</method>
			<method name="public boolean hasChildNodes()">1</method>
			<method name="public org.w3c.dom.Node cloneNode(boolean deep)">1</method>
			<method name="public void setNodeValue(String nodeValue)">1</method>
			<method name="public org.w3c.dom.Node getPreviousSibling()">1</method>
			<method name="public org.w3c.dom.Node getLastChild()">1</method>
			<method name="public void normalize()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.saxpath.base.Verifier</name>
		<wmc>7</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>3</cbo>
		<rfc>8</rfc>
		<lcom>21</lcom>
		<ca>1</ca>
		<ce>2</ce>
		<npm>5</npm>
		<lcom3>2.0</lcom3>
		<loc>2868</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>408.7142857142857</amc>
		<cc>
			<method name="void _init_()">1</method>
			<method name="public static boolean isXMLDigit(char c)">31</method>
			<method name="static boolean isXMLNCNameCharacter(char c)">8</method>
			<method name="public static boolean isXMLNCNameStartCharacter(char c)">3</method>
			<method name="public static boolean isXMLExtender(char c)">16</method>
			<method name="public static boolean isXMLCombiningChar(char c)">162</method>
			<method name="public static boolean isXMLLetter(char c)">358</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.MultiplicativeExpr</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>7</ca>
		<ce>3</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract String getOperator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.iter.IterableAncestorAxis</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>5</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>11</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.5</amc>
		<cc>
			<method name="public java.util.Iterator iterator(Object contextNode, org.jaxen.ContextSupport support)">1</method>
			<method name="public void _init_(int value)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.BaseElement</name>
		<wmc>17</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>13</cbo>
		<rfc>27</rfc>
		<lcom>90</lcom>
		<ca>1</ca>
		<ce>12</ce>
		<npm>13</npm>
		<lcom3>0.8125</lcom3>
		<loc>171</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.20588235294117646</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.823529411764707</amc>
		<cc>
			<method name="public boolean supportsParent()">1</method>
			<method name="protected java.util.List attributeList()">2</method>
			<method name="protected java.util.List contentList()">2</method>
			<method name="public void _init_(String name)">1</method>
			<method name="public void _init_(org.dom4j.QName qname)">1</method>
			<method name="public void _init_(String name, org.dom4j.Namespace namespace)">1</method>
			<method name="public void setAttributes(java.util.List attributes)">2</method>
			<method name="protected void setAttributeList(java.util.List attributeList)">1</method>
			<method name="public void setContent(java.util.List content)">2</method>
			<method name="public org.dom4j.Document getDocument()">3</method>
			<method name="public void setParent(org.dom4j.Element parent)">3</method>
			<method name="public void clearContent()">1</method>
			<method name="public void setDocument(org.dom4j.Document document)">3</method>
			<method name="public void setQName(org.dom4j.QName name)">1</method>
			<method name="public org.dom4j.QName getQName()">1</method>
			<method name="protected java.util.List attributeList(int size)">2</method>
			<method name="public org.dom4j.Element getParent()">2</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.STAXEventWriter$NamespaceIterator</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>12</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>4</npm>
		<lcom3>0.5</lcom3>
		<loc>41</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.75</amc>
		<cc>
			<method name="public boolean hasNext()">1</method>
			<method name="public void remove()">1</method>
			<method name="public void _init_(org.dom4j.io.STAXEventWriter this$0, java.util.Iterator iter)">1</method>
			<method name="public Object next()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.Comment</name>
		<wmc>0</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>22</cbo>
		<rfc>0</rfc>
		<lcom>0</lcom>
		<ca>20</ca>
		<ce>2</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>0</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
		</cc>
	</class>
	<class>
		<name>org.dom4j.datatype.InvalidSchemaException</name>
		<wmc>1</wmc>
		<dit>5</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>4</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>5</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>1.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public void _init_(String reason)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.util.PerThreadSingleton</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>15</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>10</ce>
		<npm>4</npm>
		<lcom3>0.3333333333333333</lcom3>
		<loc>74</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.0</amc>
		<cc>
			<method name="public Object instance()">3</method>
			<method name="public void reset()">1</method>
			<method name="public void setSingletonClassName(String singletonClassName)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.dom.DOMNodeHelper</name>
		<wmc>44</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>35</cbo>
		<rfc>87</rfc>
		<lcom>944</lcom>
		<ca>12</ca>
		<ce>24</ce>
		<npm>42</npm>
		<lcom3>0.9767441860465116</lcom3>
		<loc>835</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.1331923890063425</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.954545454545453</amc>
		<cc>
			<method name="public static void appendData(org.dom4j.CharacterData charData, String arg)">1</method>
			<method name="public static boolean hasChildNodes(org.dom4j.Node node)">1</method>
			<method name="public static org.w3c.dom.Node getParentNode(org.dom4j.Node node)">1</method>
			<method name="public static boolean hasAttributes(org.dom4j.Node node)">4</method>
			<method name="public static void setNodeValue(org.dom4j.Node node, String nodeValue)">1</method>
			<method name="public static void notSupported()">1</method>
			<method name="public static org.w3c.dom.NodeList createNodeList(java.util.List list)">1</method>
			<method name="protected void _init_()">1</method>
			<method name="public static void setPrefix(org.dom4j.Node node, String prefix)">1</method>
			<method name="public static org.w3c.dom.NamedNodeMap getAttributes(org.dom4j.Node node)">1</method>
			<method name="public static org.w3c.dom.Attr asDOMAttr(org.dom4j.Node attribute)">3</method>
			<method name="public static boolean isSupported(org.dom4j.Node n, String feature, String version)">1</method>
			<method name="public static org.w3c.dom.Node removeChild(org.dom4j.Node node, org.w3c.dom.Node oldChild)">1</method>
			<method name="public static org.w3c.dom.Node appendChild(org.dom4j.Node node, org.w3c.dom.Node newChild)">1</method>
			<method name="public static void appendElementsByTagNameNS(java.util.List list, org.dom4j.Branch parent, String namespace, String localName)">12</method>
			<method name="public static int getLength(org.dom4j.CharacterData charData)">2</method>
			<method name="public static org.w3c.dom.DocumentType asDOMDocumentType(org.dom4j.DocumentType dt)">3</method>
			<method name="public static void setData(org.dom4j.CharacterData charData, String data)">1</method>
			<method name="public static org.w3c.dom.Node getFirstChild(org.dom4j.Node node)">1</method>
			<method name="public static void normalize(org.dom4j.Node node)">1</method>
			<method name="public static org.w3c.dom.Node cloneNode(org.dom4j.Node node, boolean deep)">1</method>
			<method name="public static void replaceData(org.dom4j.CharacterData charData, int offset, int count, String arg)">1</method>
			<method name="public static org.w3c.dom.Node getPreviousSibling(org.dom4j.Node node)">3</method>
			<method name="public static org.w3c.dom.Node insertBefore(org.dom4j.Node node, org.w3c.dom.Node newChild, org.w3c.dom.Node refChild)">1</method>
			<method name="public static String getLocalName(org.dom4j.Node node)">1</method>
			<method name="public static org.w3c.dom.Text asDOMText(org.dom4j.CharacterData text)">3</method>
			<method name="public static String getData(org.dom4j.CharacterData charData)">1</method>
			<method name="public static String substringData(org.dom4j.CharacterData charData, int offset, int count)">1</method>
			<method name="public static String getNodeValue(org.dom4j.Node node)">1</method>
			<method name="public static org.w3c.dom.Document getOwnerDocument(org.dom4j.Node node)">1</method>
			<method name="public static org.w3c.dom.Element asDOMElement(org.dom4j.Node element)">3</method>
			<method name="public static void deleteData(org.dom4j.CharacterData charData, int offset, int count)">1</method>
			<method name="public static String getNamespaceURI(org.dom4j.Node node)">1</method>
			<method name="public static org.w3c.dom.Node replaceChild(org.dom4j.Node node, org.w3c.dom.Node newChild, org.w3c.dom.Node oldChild)">1</method>
			<method name="public static org.w3c.dom.Node asDOMNode(org.dom4j.Node node)">3</method>
			<method name="public static org.w3c.dom.Node getNextSibling(org.dom4j.Node node)">4</method>
			<method name="public static void insertData(org.dom4j.CharacterData data, int offset, String arg)">1</method>
			<method name="public static String getPrefix(org.dom4j.Node node)">1</method>
			<method name="public static org.w3c.dom.Document asDOMDocument(org.dom4j.Document document)">3</method>
			<method name="static void _clinit_()">1</method>
			<method name="public static org.w3c.dom.NodeList getChildNodes(org.dom4j.Node node)">1</method>
			<method name="public static boolean supports(org.dom4j.Node node, String feature, String version)">1</method>
			<method name="public static org.w3c.dom.Node getLastChild(org.dom4j.Node node)">1</method>
			<method name="public static void appendElementsByTagName(java.util.List list, org.dom4j.Branch parent, String name)">5</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.HTMLWriter</name>
		<wmc>29</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>23</cbo>
		<rfc>87</rfc>
		<lcom>270</lcom>
		<ca>1</ca>
		<ce>23</ce>
		<npm>16</npm>
		<lcom3>0.7777777777777778</lcom3>
		<loc>661</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.19047619047619047</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>21.482758620689655</amc>
		<cc>
			<method name="public void _init_(java.io.OutputStream out, org.dom4j.io.OutputFormat format)">1</method>
			<method name="public void startCDATA()">1</method>
			<method name="public void setOmitElementCloseSet(java.util.Set newSet)">4</method>
			<method name="protected void writeEmptyElementClose(String qualifiedName)">1</method>
			<method name="public java.util.Set getPreformattedTags()">1</method>
			<method name="protected void writeString(String text)">1</method>
			<method name="public void setPreformattedTags(java.util.Set newSet)">4</method>
			<method name="public void _init_(java.io.OutputStream out)">1</method>
			<method name="public static String prettyPrintHTML(String html)">1</method>
			<method name="public boolean isPreformattedTag(String qualifiedName)">3</method>
			<method name="protected void writeDeclaration()">1</method>
			<method name="private java.util.HashSet internalGetOmitElementCloseSet()">2</method>
			<method name="public void _init_(java.io.Writer writer, org.dom4j.io.OutputFormat format)">1</method>
			<method name="public static String prettyPrintXHTML(String html)">1</method>
			<method name="private void lazyInitNewLinesAfterNTags()">2</method>
			<method name="public static String prettyPrintHTML(String html, boolean newlines, boolean trim, boolean isXHTML, boolean expandEmpty)">1</method>
			<method name="protected void writeEntity(org.dom4j.Entity entity)">1</method>
			<method name="public void _init_(java.io.Writer writer)">1</method>
			<method name="protected boolean omitElementClose(String qualifiedName)">1</method>
			<method name="protected void writeElement(org.dom4j.Element element)">1</method>
			<method name="public void endCDATA()">1</method>
			<method name="protected void writeCDATA(String text)">1</method>
			<method name="protected void writeClose(String qualifiedName)">1</method>
			<method name="public java.util.Set getOmitElementCloseSet()">1</method>
			<method name="protected void loadOmitElementCloseSet(java.util.Set set)">1</method>
			<method name="public void _init_(org.dom4j.io.OutputFormat format)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="private String justSpaces(String text)">5</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.SumFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>14</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>11</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>58</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>18.333333333333332</amc>
		<cc>
			<method name="public static Double evaluate(Object obj, org.jaxen.Navigator nav)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.NormalizeSpaceFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>12</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>84</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>27.0</amc>
		<cc>
			<method name="public static String evaluate(Object strArg, org.jaxen.Navigator nav)">6</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.Text</name>
		<wmc>0</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>24</cbo>
		<rfc>0</rfc>
		<lcom>0</lcom>
		<ca>22</ca>
		<ce>2</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>0</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.AbstractCharacterData</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>3</noc>
		<cbo>10</cbo>
		<rfc>13</rfc>
		<lcom>6</lcom>
		<ca>3</ca>
		<ce>7</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>61</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5833333333333334</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.25</amc>
		<cc>
			<method name="public void appendText(String text)">1</method>
			<method name="public String getPath(org.dom4j.Element context)">3</method>
			<method name="public void _init_()">1</method>
			<method name="public String getUniquePath(org.dom4j.Element context)">3</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.DOMReader</name>
		<wmc>11</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>20</cbo>
		<rfc>65</rfc>
		<lcom>29</lcom>
		<ca>0</ca>
		<ce>20</ce>
		<npm>5</npm>
		<lcom3>0.45</lcom3>
		<loc>407</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.30303030303030304</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>35.81818181818182</amc>
		<cc>
			<method name="public org.dom4j.DocumentFactory getDocumentFactory()">1</method>
			<method name="protected org.dom4j.Namespace getNamespace(String prefix, String uri)">1</method>
			<method name="protected void readElement(org.w3c.dom.Node node, org.dom4j.Branch current)">11</method>
			<method name="public void setDocumentFactory(org.dom4j.DocumentFactory docFactory)">1</method>
			<method name="protected void clearNamespaceStack()">2</method>
			<method name="public org.dom4j.Document read(org.w3c.dom.Document domDocument)">3</method>
			<method name="public void _init_()">1</method>
			<method name="protected org.dom4j.Document createDocument()">1</method>
			<method name="protected void readTree(org.w3c.dom.Node node, org.dom4j.Branch current)">6</method>
			<method name="public void _init_(org.dom4j.DocumentFactory factory)">1</method>
			<method name="private String getPrefix(String xmlnsDecl)">2</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.SAXModifyContentHandler</name>
		<wmc>27</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>18</cbo>
		<rfc>79</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>17</ce>
		<npm>25</npm>
		<lcom3>0.19230769230769232</lcom3>
		<loc>375</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.1962962962962963</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.851851851851851</amc>
		<cc>
			<method name="public void endDocument()">1</method>
			<method name="public void startElement(String uri, String localName, String qName, org.xml.sax.Attributes atts)">1</method>
			<method name="public void characters(char[] parm1, int parm2, int parm3)">1</method>
			<method name="protected org.dom4j.io.XMLWriter getXMLWriter()">1</method>
			<method name="public void startCDATA()">1</method>
			<method name="public void _init_(org.dom4j.DocumentFactory documentFactory, org.dom4j.ElementHandler elementHandler)">1</method>
			<method name="public void startDTD(String name, String publicId, String systemId)">1</method>
			<method name="public void endDTD()">1</method>
			<method name="public void startEntity(String name)">1</method>
			<method name="public void processingInstruction(String target, String data)">1</method>
			<method name="public void comment(char[] characters, int parm2, int parm3)">1</method>
			<method name="public void notationDecl(String name, String publicId, String systemId)">1</method>
			<method name="public void ignorableWhitespace(char[] parm1, int parm2, int parm3)">1</method>
			<method name="public void startDocument()">1</method>
			<method name="public void startPrefixMapping(String prefix, String uri)">1</method>
			<method name="public void endPrefixMapping(String prefix)">1</method>
			<method name="public void _init_(org.dom4j.DocumentFactory documentFactory)">1</method>
			<method name="public void endEntity(String name)">1</method>
			<method name="public void setDocumentLocator(org.xml.sax.Locator locator)">2</method>
			<method name="public void unparsedEntityDecl(String name, String publicId, String systemId, String notation)">1</method>
			<method name="private boolean activeHandlers()">2</method>
			<method name="public void setXMLWriter(org.dom4j.io.XMLWriter writer)">1</method>
			<method name="public void endCDATA()">1</method>
			<method name="public void _init_(org.dom4j.DocumentFactory documentFactory, org.dom4j.ElementHandler elementHandler, org.dom4j.io.ElementStack elementStack)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void endElement(String uri, String localName, String qName)">1</method>
			<method name="public void skippedEntity(String name)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.iter.IterablePrecedingAxis</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>5</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>11</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.5</amc>
		<cc>
			<method name="public java.util.Iterator iterator(Object contextNode, org.jaxen.ContextSupport support)">1</method>
			<method name="public void _init_(int value)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.bean.BeanDocumentFactory</name>
		<wmc>10</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>19</cbo>
		<rfc>26</rfc>
		<lcom>43</lcom>
		<ca>2</ca>
		<ce>18</ce>
		<npm>5</npm>
		<lcom3>0.8888888888888888</lcom3>
		<loc>114</loc>
		<dam>0.5</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.3333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.2</amc>
		<cc>
			<method name="static Class class$(String x0)">1</method>
			<method name="public org.dom4j.Element createElement(org.dom4j.QName qname)">2</method>
			<method name="public static org.dom4j.DocumentFactory getInstance()">1</method>
			<method name="protected Object createBean(org.dom4j.QName qname)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public org.dom4j.Attribute createAttribute(org.dom4j.Element owner, org.dom4j.QName qname, String value)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public org.dom4j.Element createElement(org.dom4j.QName qname, org.xml.sax.Attributes attributes)">2</method>
			<method name="protected Object createBean(org.dom4j.QName qname, org.xml.sax.Attributes attributes)">3</method>
			<method name="protected void handleException(Exception e)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.FunctionContext</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>9</ca>
		<ce>4</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract org.jaxen.Function getFunction(String, String, String)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.ext.LocaleFunctionSupport</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>2</noc>
		<cbo>11</cbo>
		<rfc>19</rfc>
		<lcom>6</lcom>
		<ca>2</ca>
		<ce>9</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>129</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>31.25</amc>
		<cc>
			<method name="protected java.util.Locale findLocale(String localeText)">4</method>
			<method name="protected java.util.Locale getLocale(Object value, org.jaxen.Navigator navigator)">5</method>
			<method name="protected java.util.Locale findLocaleForLanguage(String language)">7</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.ProcessingInstructionNodeStep</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>4</ca>
		<ce>3</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract String getName()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.FilterIterator</name>
		<wmc>6</wmc>
		<dit>1</dit>
		<noc>3</noc>
		<cbo>8</cbo>
		<rfc>11</rfc>
		<lcom>9</lcom>
		<ca>3</ca>
		<ce>5</ce>
		<npm>4</npm>
		<lcom3>0.6</lcom3>
		<loc>80</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4444444444444444</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.833333333333334</amc>
		<cc>
			<method name="public boolean hasNext()">3</method>
			<method name="public void remove()">1</method>
			<method name="protected abstract boolean matches(Object)">1</method>
			<method name="protected Object findNext()">3</method>
			<method name="public void _init_(java.util.Iterator proxy)">1</method>
			<method name="public Object next()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.IdentitySet</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>8</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>4</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>33</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.8333333333333334</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.666666666666666</amc>
		<cc>
			<method name="void _init_()">1</method>
			<method name="public boolean contains(Object object)">1</method>
			<method name="void add(Object object)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.TextNodeStep</name>
		<wmc>0</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>0</rfc>
		<lcom>0</lcom>
		<ca>4</ca>
		<ce>2</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>0</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.iter.IterableAxis</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>13</noc>
		<cbo>28</cbo>
		<rfc>7</rfc>
		<lcom>8</lcom>
		<ca>20</ca>
		<ce>8</ce>
		<npm>5</npm>
		<lcom3>0.75</lcom3>
		<loc>22</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.48</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.2</amc>
		<cc>
			<method name="public void _init_(int axisValue)">1</method>
			<method name="public java.util.Iterator namedAccessIterator(Object contextNode, org.jaxen.ContextSupport support, String localName, String namespacePrefix, String namespaceURI)">1</method>
			<method name="public boolean supportsNamedAccess(org.jaxen.ContextSupport support)">1</method>
			<method name="public int value()">1</method>
			<method name="public abstract java.util.Iterator iterator(Object, org.jaxen.ContextSupport)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.ext.UpperFunction</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>11</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>52</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3888888888888889</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>16.333333333333332</amc>
		<cc>
			<method name="public static String evaluate(Object strArg, java.util.Locale locale, org.jaxen.Navigator nav)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.DispatchHandler</name>
		<wmc>11</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>18</cbo>
		<rfc>31</rfc>
		<lcom>0</lcom>
		<ca>9</ca>
		<ce>9</ce>
		<npm>11</npm>
		<lcom3>0.6</lcom3>
		<loc>233</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4318181818181818</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>19.636363636363637</amc>
		<cc>
			<method name="public void setDefaultHandler(org.dom4j.ElementHandler handler)">1</method>
			<method name="public String getPath()">1</method>
			<method name="public void resetHandlers()">1</method>
			<method name="public void addHandler(String handlerPath, org.dom4j.ElementHandler handler)">1</method>
			<method name="public void onStart(org.dom4j.ElementPath elementPath)">6</method>
			<method name="public org.dom4j.ElementHandler removeHandler(String handlerPath)">1</method>
			<method name="public int getActiveHandlerCount()">1</method>
			<method name="public org.dom4j.ElementHandler getHandler(String handlerPath)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public boolean containsHandler(String handlerPath)">1</method>
			<method name="public void onEnd(org.dom4j.ElementPath elementPath)">6</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.Entity</name>
		<wmc>0</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>19</cbo>
		<rfc>0</rfc>
		<lcom>0</lcom>
		<ca>17</ca>
		<ce>2</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>0</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
		</cc>
	</class>
	<class>
		<name>org.dom4j.datatype.DatatypeElementFactory</name>
		<wmc>8</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>15</cbo>
		<rfc>17</rfc>
		<lcom>14</lcom>
		<ca>3</ca>
		<ce>12</ce>
		<npm>8</npm>
		<lcom3>0.6666666666666666</lcom3>
		<loc>112</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.475</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.625</amc>
		<cc>
			<method name="public com.sun.msv.datatype.xsd.XSDatatype getChildElementXSDatatype(org.dom4j.QName qname)">1</method>
			<method name="public void setChildElementXSDatatype(org.dom4j.QName qname, com.sun.msv.datatype.xsd.XSDatatype dataType)">1</method>
			<method name="public org.dom4j.Element createElement(org.dom4j.QName qname)">4</method>
			<method name="public com.sun.msv.datatype.xsd.XSDatatype getAttributeXSDatatype(org.dom4j.QName attributeQName)">1</method>
			<method name="public org.dom4j.Attribute createAttribute(org.dom4j.Element owner, org.dom4j.QName qname, String value)">2</method>
			<method name="public org.dom4j.QName getQName()">1</method>
			<method name="public void _init_(org.dom4j.QName elementQName)">1</method>
			<method name="public void setAttributeXSDatatype(org.dom4j.QName attributeQName, com.sun.msv.datatype.xsd.XSDatatype type)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.xpath.DefaultNamespaceContext</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>9</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>3</npm>
		<lcom3>0.0</lcom3>
		<loc>62</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4166666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>19.333333333333332</amc>
		<cc>
			<method name="public void _init_(org.dom4j.Element element)">1</method>
			<method name="public String translateNamespacePrefixToUri(String prefix)">4</method>
			<method name="public static org.dom4j.xpath.DefaultNamespaceContext create(Object node)">5</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.util.UserDataDocumentFactory</name>
		<wmc>5</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>8</rfc>
		<lcom>8</lcom>
		<ca>0</ca>
		<ce>9</ce>
		<npm>4</npm>
		<lcom3>0.75</lcom3>
		<loc>27</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.2</amc>
		<cc>
			<method name="public org.dom4j.Element createElement(org.dom4j.QName qname)">1</method>
			<method name="public static org.dom4j.DocumentFactory getInstance()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public org.dom4j.Attribute createAttribute(org.dom4j.Element owner, org.dom4j.QName qname, String value)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.NameFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>21</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>101</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>32.666666666666664</amc>
		<cc>
			<method name="public static String evaluate(java.util.List list, org.jaxen.Navigator nav)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.VisitorSupport</name>
		<wmc>21</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>23</cbo>
		<rfc>22</rfc>
		<lcom>210</lcom>
		<ca>0</ca>
		<ce>23</ce>
		<npm>21</npm>
		<lcom3>2.0</lcom3>
		<loc>44</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.09297052154195011</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>1.0952380952380953</amc>
		<cc>
			<method name="public void visit(org.jaxen.expr.UnionExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.LiteralExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.PathExpr path)">1</method>
			<method name="public void visit(org.jaxen.expr.TextNodeStep step)">1</method>
			<method name="public void visit(org.jaxen.expr.NumberExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.VariableReferenceExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.RelationalExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.FunctionCallExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.CommentNodeStep step)">1</method>
			<method name="public void visit(org.jaxen.expr.AdditiveExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.UnaryExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.NameStep step)">1</method>
			<method name="public void visit(org.jaxen.expr.ProcessingInstructionNodeStep step)">1</method>
			<method name="public void visit(org.jaxen.expr.AllNodeStep step)">1</method>
			<method name="public void visit(org.jaxen.expr.LogicalExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.FilterExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.EqualityExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.Predicate predicate)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void visit(org.jaxen.expr.MultiplicativeExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.LocationPath path)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.AncestorOrSelfAxisIterator</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>11</cbo>
		<rfc>9</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>9</ce>
		<npm>4</npm>
		<lcom3>0.5</lcom3>
		<loc>51</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.25</amc>
		<cc>
			<method name="public boolean hasNext()">2</method>
			<method name="public void remove()">1</method>
			<method name="public Object next()">2</method>
			<method name="public void _init_(Object contextNode, org.jaxen.Navigator navigator)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.ProcessingInstruction</name>
		<wmc>8</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>26</cbo>
		<rfc>8</rfc>
		<lcom>28</lcom>
		<ca>21</ca>
		<ce>5</ce>
		<npm>8</npm>
		<lcom3>2.0</lcom3>
		<loc>8</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5416666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract String getValue(String)">1</method>
			<method name="public abstract String getText()">1</method>
			<method name="public abstract void setValue(String, String)">1</method>
			<method name="public abstract String getTarget()">1</method>
			<method name="public abstract void setTarget(String)">1</method>
			<method name="public abstract void setValues(java.util.Map)">1</method>
			<method name="public abstract boolean removeValue(String)">1</method>
			<method name="public abstract java.util.Map getValues()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.ElementStack</name>
		<wmc>17</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>14</cbo>
		<rfc>29</rfc>
		<lcom>32</lcom>
		<ca>4</ca>
		<ce>10</ce>
		<npm>15</npm>
		<lcom3>0.5416666666666666</lcom3>
		<loc>213</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.2647058823529412</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.352941176470589</amc>
		<cc>
			<method name="public org.dom4j.Element peekElement()">2</method>
			<method name="public void pushElement(org.dom4j.Element element)">2</method>
			<method name="public int size()">1</method>
			<method name="public void _init_(int defaultCapacity)">1</method>
			<method name="public org.dom4j.Element getCurrent()">1</method>
			<method name="public void setDispatchHandler(org.dom4j.io.DispatchHandler dispatchHandler)">1</method>
			<method name="public void clear()">1</method>
			<method name="public org.dom4j.io.DispatchHandler getDispatchHandler()">1</method>
			<method name="public boolean containsHandler(String path)">1</method>
			<method name="public void addHandler(String path, org.dom4j.ElementHandler elementHandler)">1</method>
			<method name="protected void reallocate(int size)">1</method>
			<method name="public String getPath()">2</method>
			<method name="private String getHandlerPath(String path)">4</method>
			<method name="public org.dom4j.Element getElement(int depth)">1</method>
			<method name="public void removeHandler(String path)">1</method>
			<method name="public org.dom4j.Element popElement()">2</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.FlyweightProcessingInstruction</name>
		<wmc>9</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>10</cbo>
		<rfc>16</rfc>
		<lcom>16</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>8</npm>
		<lcom3>0.625</lcom3>
		<loc>79</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4166666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.444444444444445</amc>
		<cc>
			<method name="public String getTarget()">1</method>
			<method name="public void setTarget(String target)">1</method>
			<method name="public String getText()">1</method>
			<method name="protected org.dom4j.Node createXPathResult(org.dom4j.Element parent)">1</method>
			<method name="public String getValue(String name)">2</method>
			<method name="public java.util.Map getValues()">1</method>
			<method name="public void _init_(String target, String text)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(String target, java.util.Map values)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.BaseXPath</name>
		<wmc>27</wmc>
		<dit>1</dit>
		<noc>6</noc>
		<cbo>40</cbo>
		<rfc>61</rfc>
		<lcom>335</lcom>
		<ca>7</ca>
		<ce>33</ce>
		<npm>19</npm>
		<lcom3>0.8173076923076923</lcom3>
		<loc>343</loc>
		<dam>1.0</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.2037037037037037</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.555555555555555</amc>
		<cc>
			<method name="public boolean booleanValueOf(Object node)">1</method>
			<method name="public org.jaxen.FunctionContext getFunctionContext()">2</method>
			<method name="public String debug()">1</method>
			<method name="public Number numberValueOf(Object node)">1</method>
			<method name="protected org.jaxen.FunctionContext createFunctionContext()">1</method>
			<method name="public org.jaxen.VariableContext getVariableContext()">2</method>
			<method name="public String toString()">1</method>
			<method name="public void setFunctionContext(org.jaxen.FunctionContext functionContext)">1</method>
			<method name="public void _init_(String xpathExpr, org.jaxen.Navigator navigator)">1</method>
			<method name="protected org.jaxen.ContextSupport getContextSupport()">2</method>
			<method name="public String valueOf(Object node)">1</method>
			<method name="public Object selectSingleNode(Object node)">1</method>
			<method name="public Object evaluate(Object node)">1</method>
			<method name="public void setVariableContext(org.jaxen.VariableContext variableContext)">1</method>
			<method name="public void addNamespace(String prefix, String uri)">1</method>
			<method name="protected org.jaxen.VariableContext createVariableContext()">1</method>
			<method name="protected org.jaxen.NamespaceContext createNamespaceContext()">1</method>
			<method name="public java.util.List selectNodes(Object node)">1</method>
			<method name="public org.jaxen.expr.Expr getRootExpr()">1</method>
			<method name="protected org.jaxen.Context getContext(Object node)">3</method>
			<method name="public org.jaxen.NamespaceContext getNamespaceContext()">2</method>
			<method name="protected void _init_(String xpathExpr)">1</method>
			<method name="protected Object selectSingleNodeForContext(org.jaxen.Context context)">1</method>
			<method name="public org.jaxen.Navigator getNavigator()">1</method>
			<method name="public String stringValueOf(Object node)">1</method>
			<method name="public void setNamespaceContext(org.jaxen.NamespaceContext namespaceContext)">1</method>
			<method name="protected java.util.List selectNodesForContext(org.jaxen.Context context)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultMultiplyExpr</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>13</rfc>
		<lcom>6</lcom>
		<ca>1</ca>
		<ce>13</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>42</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.5</amc>
		<cc>
			<method name="public Object evaluate(org.jaxen.Context context)">1</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public String getOperator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.SAXEventRecorder</name>
		<wmc>23</wmc>
		<dit>2</dit>
		<noc>0</noc>
		<cbo>26</cbo>
		<rfc>80</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>26</ce>
		<npm>23</npm>
		<lcom3>0.8977272727272727</lcom3>
		<loc>864</loc>
		<dam>0.875</dam>
		<moa>0</moa>
		<mfa>0.4358974358974359</mfa>
		<cam>0.23369565217391305</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>36.21739130434783</amc>
		<cc>
			<method name="public void replay(org.xml.sax.ContentHandler handler)">1</method>
			<method name="public void externalEntityDecl(String name, String publicId, String sysId)">1</method>
			<method name="public void endDocument()">1</method>
			<method name="public void endEntity(String name)">1</method>
			<method name="public void comment(char[] ch, int start, int end)">1</method>
			<method name="public void startCDATA()">1</method>
			<method name="public void attributeDecl(String eName, String aName, String type, String valueDefault, String value)">1</method>
			<method name="public void internalEntityDecl(String name, String value)">1</method>
			<method name="public void readExternal(java.io.ObjectInput in)">1</method>
			<method name="public void endCDATA()">1</method>
			<method name="public void writeExternal(java.io.ObjectOutput out)">1</method>
			<method name="public void startDTD(String name, String publicId, String systemId)">1</method>
			<method name="public void processingInstruction(String target, String data)">1</method>
			<method name="public void endDTD()">1</method>
			<method name="public void startEntity(String name)">1</method>
			<method name="public void elementDecl(String name, String model)">1</method>
			<method name="public void endElement(String namespaceURI, String localName, String qName)">1</method>
			<method name="public void characters(char[] ch, int start, int end)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void startElement(String namespaceURI, String localName, String qualifiedName, org.xml.sax.Attributes attributes)">1</method>
			<method name="public void startPrefixMapping(String prefix, String uri)">1</method>
			<method name="public void startDocument()">1</method>
			<method name="public void endPrefixMapping(String prefix)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.HTMLWriter$FormatState</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>5</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>4</npm>
		<lcom3>0.75</lcom3>
		<loc>41</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.25</amc>
		<cc>
			<method name="public String getIndent()">1</method>
			<method name="public boolean isNewlines()">1</method>
			<method name="public void _init_(org.dom4j.io.HTMLWriter this$0, boolean newLines, boolean trimText, String indent)">1</method>
			<method name="public boolean isTrimText()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.ext.EndsWithFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>10</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>41</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.666666666666666</amc>
		<cc>
			<method name="public static Boolean evaluate(Object strArg, Object matchArg, org.jaxen.Navigator nav)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.AbstractText</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>10</cbo>
		<rfc>14</rfc>
		<lcom>15</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>6</npm>
		<lcom3>2.0</lcom3>
		<loc>38</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4444444444444444</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.333333333333333</amc>
		<cc>
			<method name="public void write(java.io.Writer writer)">1</method>
			<method name="public String toString()">1</method>
			<method name="public String asXML()">1</method>
			<method name="public short getNodeType()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void accept(org.dom4j.Visitor visitor)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.saxpath.SAXPathException</name>
		<wmc>6</wmc>
		<dit>3</dit>
		<noc>3</noc>
		<cbo>27</cbo>
		<rfc>14</rfc>
		<lcom>3</lcom>
		<ca>19</ca>
		<ce>8</ce>
		<npm>6</npm>
		<lcom3>0.2</lcom3>
		<loc>54</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.84</mfa>
		<cam>0.3333333333333333</cam>
		<ic>1</ic>
		<cbm>2</cbm>
		<amc>7.833333333333333</amc>
		<cc>
			<method name="public void printStackTrace(java.io.PrintStream s)">2</method>
			<method name="public void printStackTrace(java.io.PrintWriter s)">2</method>
			<method name="public void _init_(Throwable src)">1</method>
			<method name="public void _init_(String msg)">1</method>
			<method name="public Throwable getCause()">1</method>
			<method name="public void printStackTrace()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.NamespaceCache</name>
		<wmc>6</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>19</rfc>
		<lcom>11</lcom>
		<ca>1</ca>
		<ce>12</ce>
		<npm>3</npm>
		<lcom3>0.8666666666666666</lcom3>
		<loc>267</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.9</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>43.0</amc>
		<cc>
			<method name="protected java.util.Map getURICache(String uri)">3</method>
			<method name="public org.dom4j.Namespace get(String prefix, String uri)">5</method>
			<method name="public org.dom4j.Namespace get(String uri)">5</method>
			<method name="protected org.dom4j.Namespace createNamespace(String prefix, String uri)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.ElementNameIterator</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>5</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>24</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.5</amc>
		<cc>
			<method name="public void _init_(java.util.Iterator proxy, String name)">1</method>
			<method name="protected boolean matches(Object object)">2</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.DocumentHelper</name>
		<wmc>28</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>34</cbo>
		<rfc>74</rfc>
		<lcom>378</lcom>
		<ca>5</ca>
		<ce>29</ce>
		<npm>25</npm>
		<lcom3>2.0</lcom3>
		<loc>285</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.12337662337662338</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.178571428571429</amc>
		<cc>
			<method name="private static org.dom4j.DocumentFactory getDocumentFactory()">1</method>
			<method name="public static org.dom4j.XPath createXPath(String xpathExpression, org.jaxen.VariableContext context)">1</method>
			<method name="public static org.dom4j.Entity createEntity(String name, String text)">1</method>
			<method name="public static void sort(java.util.List list, String xpathExpression)">1</method>
			<method name="public static org.dom4j.Document parseText(String text)">1</method>
			<method name="public static org.dom4j.Attribute createAttribute(org.dom4j.Element owner, String name, String value)">1</method>
			<method name="public static org.dom4j.QName createQName(String localName)">1</method>
			<method name="private void _init_()">1</method>
			<method name="public static org.dom4j.Attribute createAttribute(org.dom4j.Element owner, org.dom4j.QName qname, String value)">1</method>
			<method name="public static org.dom4j.Comment createComment(String text)">1</method>
			<method name="public static org.dom4j.Element createElement(String name)">1</method>
			<method name="public static org.dom4j.ProcessingInstruction createProcessingInstruction(String pi, String d)">1</method>
			<method name="public static java.util.List selectNodes(String xpathFilterExpression, java.util.List nodes)">1</method>
			<method name="public static java.util.List selectNodes(String xpathFilterExpression, org.dom4j.Node node)">1</method>
			<method name="public static org.dom4j.Text createText(String text)">1</method>
			<method name="public static org.dom4j.ProcessingInstruction createProcessingInstruction(String pi, java.util.Map data)">1</method>
			<method name="public static org.dom4j.QName createQName(String localName, org.dom4j.Namespace namespace)">1</method>
			<method name="public static org.dom4j.NodeFilter createXPathFilter(String xpathFilterExpression)">1</method>
			<method name="public static org.dom4j.rule.Pattern createPattern(String xpathPattern)">1</method>
			<method name="public static void sort(java.util.List list, String expression, boolean distinct)">1</method>
			<method name="public static org.dom4j.Document createDocument(org.dom4j.Element rootElement)">1</method>
			<method name="public static org.dom4j.CDATA createCDATA(String text)">1</method>
			<method name="public static org.dom4j.XPath createXPath(String xpathExpression)">1</method>
			<method name="public static org.dom4j.Namespace createNamespace(String prefix, String uri)">1</method>
			<method name="private static String getEncoding(String text)">4</method>
			<method name="public static org.dom4j.Element makeElement(org.dom4j.Branch source, String path)">5</method>
			<method name="public static org.dom4j.Element createElement(org.dom4j.QName qname)">1</method>
			<method name="public static org.dom4j.Document createDocument()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.pattern.NamespaceTest</name>
		<wmc>7</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>22</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>8</ce>
		<npm>6</npm>
		<lcom3>0.4166666666666667</lcom3>
		<loc>124</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.37142857142857144</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>16.428571428571427</amc>
		<cc>
			<method name="public boolean matches(Object node, org.jaxen.Context context)">7</method>
			<method name="public String toString()">1</method>
			<method name="public String getText()">1</method>
			<method name="public short getMatchType()">1</method>
			<method name="public void _init_(String prefix, short nodeType)">2</method>
			<method name="protected String getURI(Object node, org.jaxen.Context context)">3</method>
			<method name="public double getPriority()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.QNameCache</name>
		<wmc>13</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>37</rfc>
		<lcom>48</lcom>
		<ca>2</ca>
		<ce>14</ce>
		<npm>8</npm>
		<lcom3>0.4444444444444444</lcom3>
		<loc>270</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4153846153846154</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>19.53846153846154</amc>
		<cc>
			<method name="public org.dom4j.QName get(String name, org.dom4j.Namespace namespace)">3</method>
			<method name="protected org.dom4j.QName createQName(String name, org.dom4j.Namespace namespace, String qualifiedName)">1</method>
			<method name="public void _init_(org.dom4j.DocumentFactory documentFactory)">1</method>
			<method name="public java.util.List getQNames()">2</method>
			<method name="protected org.dom4j.QName createQName(String name)">1</method>
			<method name="public org.dom4j.QName get(String localName, org.dom4j.Namespace namespace, String qName)">3</method>
			<method name="protected java.util.Map getNamespaceCache(org.dom4j.Namespace namespace)">4</method>
			<method name="protected java.util.Map createMap()">1</method>
			<method name="public org.dom4j.QName intern(org.dom4j.QName qname)">1</method>
			<method name="protected org.dom4j.QName createQName(String name, org.dom4j.Namespace namespace)">1</method>
			<method name="public org.dom4j.QName get(String qualifiedName, String uri)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public org.dom4j.QName get(String name)">3</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.iter.IterableNamespaceAxis</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>5</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>11</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.5</amc>
		<cc>
			<method name="public java.util.Iterator iterator(Object contextNode, org.jaxen.ContextSupport support)">1</method>
			<method name="public void _init_(int value)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.dom4j.DocumentNavigator</name>
		<wmc>38</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>33</cbo>
		<rfc>86</rfc>
		<lcom>701</lcom>
		<ca>3</ca>
		<ce>32</ce>
		<npm>37</npm>
		<lcom3>0.9459459459459459</lcom3>
		<loc>497</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.39473684210526316</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.052631578947368</amc>
		<cc>
			<method name="public java.util.Iterator getChildAxisIterator(Object contextNode)">3</method>
			<method name="public String getCommentStringValue(Object obj)">1</method>
			<method name="public String getAttributeNamespaceUri(Object obj)">2</method>
			<method name="public String getNamespaceStringValue(Object obj)">1</method>
			<method name="public String getElementNamespaceUri(Object obj)">2</method>
			<method name="public java.util.Iterator getAttributeAxisIterator(Object contextNode)">2</method>
			<method name="public org.dom4j.io.SAXReader getSAXReader()">2</method>
			<method name="public String getTextStringValue(Object obj)">1</method>
			<method name="public java.util.Iterator getParentAxisIterator(Object contextNode)">3</method>
			<method name="public boolean isElement(Object obj)">1</method>
			<method name="public String getProcessingInstructionData(Object obj)">1</method>
			<method name="public String getAttributeQName(Object obj)">1</method>
			<method name="public String getAttributeStringValue(Object obj)">1</method>
			<method name="public void setSAXReader(org.dom4j.io.SAXReader reader)">1</method>
			<method name="public boolean isProcessingInstruction(Object obj)">1</method>
			<method name="public java.util.Iterator getAttributeAxisIterator(Object contextNode, String localName, String namespacePrefix, String namespaceURI)">3</method>
			<method name="public String getElementStringValue(Object obj)">1</method>
			<method name="private String getNodeStringValue(org.dom4j.Node node)">1</method>
			<method name="public Object getParentNode(Object contextNode)">4</method>
			<method name="public short getNodeType(Object node)">2</method>
			<method name="public static org.jaxen.Navigator getInstance()">1</method>
			<method name="public boolean isNamespace(Object obj)">1</method>
			<method name="public Object getDocument(String uri)">1</method>
			<method name="public Object getDocumentNode(Object contextNode)">3</method>
			<method name="public String getElementQName(Object obj)">1</method>
			<method name="public String getNamespacePrefix(Object obj)">1</method>
			<method name="public String getProcessingInstructionTarget(Object obj)">1</method>
			<method name="public boolean isDocument(Object obj)">1</method>
			<method name="public boolean isAttribute(Object obj)">1</method>
			<method name="public boolean isText(Object obj)">3</method>
			<method name="public org.jaxen.XPath parseXPath(String xpath)">1</method>
			<method name="public boolean isComment(Object obj)">1</method>
			<method name="public String getAttributeName(Object obj)">1</method>
			<method name="public java.util.Iterator getNamespaceAxisIterator(Object contextNode)">5</method>
			<method name="public String translateNamespacePrefixToUri(String prefix, Object context)">5</method>
			<method name="public String getElementName(Object obj)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public java.util.Iterator getChildAxisIterator(Object contextNode, String localName, String namespacePrefix, String namespaceURI)">6</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.iter.IterablePrecedingSiblingAxis</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>5</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>11</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.5</amc>
		<cc>
			<method name="public java.util.Iterator iterator(Object contextNode, org.jaxen.ContextSupport support)">1</method>
			<method name="public void _init_(int value)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.ContentListFacade</name>
		<wmc>21</wmc>
		<dit>3</dit>
		<noc>0</noc>
		<cbo>15</cbo>
		<rfc>49</rfc>
		<lcom>0</lcom>
		<ca>5</ca>
		<ce>11</ce>
		<npm>19</npm>
		<lcom3>0.3</lcom3>
		<loc>250</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.6296296296296297</mfa>
		<cam>0.2789115646258503</cam>
		<ic>2</ic>
		<cbm>8</cbm>
		<amc>10.80952380952381</amc>
		<cc>
			<method name="protected java.util.List getBackingList()">1</method>
			<method name="public boolean removeAll(java.util.Collection c)">2</method>
			<method name="protected org.dom4j.Node asNode(Object object)">2</method>
			<method name="public boolean addAll(java.util.Collection collection)">3</method>
			<method name="public boolean add(Object object)">1</method>
			<method name="public int indexOf(Object o)">1</method>
			<method name="public int size()">1</method>
			<method name="public boolean addAll(int index, java.util.Collection collection)">3</method>
			<method name="public Object set(int index, Object object)">1</method>
			<method name="public void clear()">2</method>
			<method name="public boolean contains(Object o)">1</method>
			<method name="public void _init_(org.dom4j.tree.AbstractBranch branch, java.util.List branchContent)">1</method>
			<method name="public boolean remove(Object object)">1</method>
			<method name="public Object remove(int index)">2</method>
			<method name="public Object[] toArray()">1</method>
			<method name="public void add(int index, Object object)">1</method>
			<method name="public Object[] toArray(Object[] a)">1</method>
			<method name="public int lastIndexOf(Object o)">1</method>
			<method name="public Object get(int index)">1</method>
			<method name="public boolean isEmpty()">1</method>
			<method name="public boolean containsAll(java.util.Collection c)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.LocationPath</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>18</cbo>
		<rfc>4</rfc>
		<lcom>6</lcom>
		<ca>12</ca>
		<ce>6</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>4</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract String getText()">1</method>
			<method name="public abstract boolean isAbsolute()">1</method>
			<method name="public abstract java.util.List getSteps()">1</method>
			<method name="public abstract void addStep(org.jaxen.expr.Step)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultPlusExpr</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>13</rfc>
		<lcom>6</lcom>
		<ca>1</ca>
		<ce>13</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>42</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.5</amc>
		<cc>
			<method name="public Object evaluate(org.jaxen.Context context)">1</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public String getOperator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.PruningElementStack</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>18</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>9</ce>
		<npm>3</npm>
		<lcom3>0.33333333333333337</lcom3>
		<loc>143</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>22.333333333333332</amc>
		<cc>
			<method name="public void _init_(String[] path, org.dom4j.ElementHandler elementHandler, int defaultCapacity)">1</method>
			<method name="protected void pathMatches(org.dom4j.Element parent, org.dom4j.Element selectedNode)">1</method>
			<method name="public void _init_(String[] path, org.dom4j.ElementHandler elementHandler)">1</method>
			<method name="protected boolean validElement(org.dom4j.Element element, int index)">4</method>
			<method name="public org.dom4j.Element popElement()">7</method>
			<method name="private void checkPath()">2</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.DocumentInputSource</name>
		<wmc>6</wmc>
		<dit>2</dit>
		<noc>0</noc>
		<cbo>16</cbo>
		<rfc>17</rfc>
		<lcom>3</lcom>
		<ca>4</ca>
		<ce>13</ce>
		<npm>6</npm>
		<lcom3>0.4</lcom3>
		<loc>63</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.7142857142857143</mfa>
		<cam>0.5</cam>
		<ic>1</ic>
		<cbm>1</cbm>
		<amc>9.333333333333334</amc>
		<cc>
			<method name="public void setCharacterStream(java.io.Reader characterStream)">1</method>
			<method name="public void setDocument(org.dom4j.Document document)">1</method>
			<method name="public java.io.Reader getCharacterStream()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(org.dom4j.Document document)">1</method>
			<method name="public org.dom4j.Document getDocument()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.javabean.DocumentNavigator$Singleton</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>3</cbo>
		<rfc>5</rfc>
		<lcom>1</lcom>
		<ca>0</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>0.5</lcom3>
		<loc>14</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.3333333333333335</amc>
		<cc>
			<method name="private void _init_()">1</method>
			<method name="static org.jaxen.javabean.DocumentNavigator access$000()">1</method>
			<method name="static void _clinit_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.Navigator</name>
		<wmc>41</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>104</cbo>
		<rfc>41</rfc>
		<lcom>820</lcom>
		<ca>96</ca>
		<ce>9</ce>
		<npm>41</npm>
		<lcom3>2.0</lcom3>
		<loc>41</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6829268292682927</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract java.util.Iterator getAncestorOrSelfAxisIterator(Object)">1</method>
			<method name="public abstract String getAttributeQName(Object)">1</method>
			<method name="public abstract boolean isComment(Object)">1</method>
			<method name="public abstract org.jaxen.XPath parseXPath(String)">1</method>
			<method name="public abstract boolean isNamespace(Object)">1</method>
			<method name="public abstract java.util.Iterator getPrecedingAxisIterator(Object)">1</method>
			<method name="public abstract String getElementName(Object)">1</method>
			<method name="public abstract String translateNamespacePrefixToUri(String, Object)">1</method>
			<method name="public abstract java.util.Iterator getSelfAxisIterator(Object)">1</method>
			<method name="public abstract java.util.Iterator getChildAxisIterator(Object)">1</method>
			<method name="public abstract String getTextStringValue(Object)">1</method>
			<method name="public abstract java.util.Iterator getFollowingAxisIterator(Object)">1</method>
			<method name="public abstract String getElementStringValue(Object)">1</method>
			<method name="public abstract Object getParentNode(Object)">1</method>
			<method name="public abstract String getCommentStringValue(Object)">1</method>
			<method name="public abstract java.util.Iterator getDescendantOrSelfAxisIterator(Object)">1</method>
			<method name="public abstract String getProcessingInstructionData(Object)">1</method>
			<method name="public abstract Object getElementById(Object, String)">1</method>
			<method name="public abstract String getElementNamespaceUri(Object)">1</method>
			<method name="public abstract String getAttributeNamespaceUri(Object)">1</method>
			<method name="public abstract java.util.Iterator getAttributeAxisIterator(Object)">1</method>
			<method name="public abstract String getElementQName(Object)">1</method>
			<method name="public abstract java.util.Iterator getNamespaceAxisIterator(Object)">1</method>
			<method name="public abstract java.util.Iterator getAncestorAxisIterator(Object)">1</method>
			<method name="public abstract java.util.Iterator getDescendantAxisIterator(Object)">1</method>
			<method name="public abstract java.util.Iterator getParentAxisIterator(Object)">1</method>
			<method name="public abstract String getAttributeStringValue(Object)">1</method>
			<method name="public abstract String getNamespaceStringValue(Object)">1</method>
			<method name="public abstract Object getDocumentNode(Object)">1</method>
			<method name="public abstract boolean isElement(Object)">1</method>
			<method name="public abstract String getNamespacePrefix(Object)">1</method>
			<method name="public abstract java.util.Iterator getFollowingSiblingAxisIterator(Object)">1</method>
			<method name="public abstract String getAttributeName(Object)">1</method>
			<method name="public abstract boolean isDocument(Object)">1</method>
			<method name="public abstract short getNodeType(Object)">1</method>
			<method name="public abstract Object getDocument(String)">1</method>
			<method name="public abstract boolean isAttribute(Object)">1</method>
			<method name="public abstract String getProcessingInstructionTarget(Object)">1</method>
			<method name="public abstract boolean isText(Object)">1</method>
			<method name="public abstract boolean isProcessingInstruction(Object)">1</method>
			<method name="public abstract java.util.Iterator getPrecedingSiblingAxisIterator(Object)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultAndExpr</name>
		<wmc>5</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>17</rfc>
		<lcom>10</lcom>
		<ca>1</ca>
		<ce>13</ce>
		<npm>5</npm>
		<lcom3>2.0</lcom3>
		<loc>62</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.4</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public Object evaluate(org.jaxen.Context context)">1</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public String getOperator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultNumberExpr</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>13</rfc>
		<lcom>13</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>6</npm>
		<lcom3>0.2</lcom3>
		<loc>39</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.333333333333333</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public String getText()">1</method>
			<method name="public Object evaluate(org.jaxen.Context context)">1</method>
			<method name="public Number getNumber()">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public void _init_(Number number)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.pattern.LocationPathPattern</name>
		<wmc>15</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>17</cbo>
		<rfc>44</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>15</ce>
		<npm>15</npm>
		<lcom3>0.6428571428571429</lcom3>
		<loc>367</loc>
		<dam>1.0</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.21904761904761905</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>23.133333333333333</amc>
		<cc>
			<method name="public void setAncestorPattern(org.jaxen.pattern.Pattern ancestorPattern)">1</method>
			<method name="public boolean matches(Object node, org.jaxen.Context context)">1</method>
			<method name="public void _init_(org.jaxen.pattern.NodeTest nodeTest)">1</method>
			<method name="public boolean isAbsolute()">1</method>
			<method name="public double getPriority()">2</method>
			<method name="public void setNodeTest(org.jaxen.pattern.NodeTest nodeTest)">1</method>
			<method name="public boolean hasAnyNodeTest()">1</method>
			<method name="public String toString()">1</method>
			<method name="public String getText()">8</method>
			<method name="public org.jaxen.pattern.Pattern simplify()">9</method>
			<method name="public void setParentPattern(org.jaxen.pattern.Pattern parentPattern)">1</method>
			<method name="public short getMatchType()">1</method>
			<method name="public void addFilter(org.jaxen.expr.FilterExpr filter)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public void setAbsolute(boolean absolute)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.PrecedingAxisIterator</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>15</cbo>
		<rfc>24</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>14</ce>
		<npm>4</npm>
		<lcom3>0.44999999999999996</lcom3>
		<loc>156</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>29.2</amc>
		<cc>
			<method name="public boolean hasNext()">5</method>
			<method name="public void remove()">1</method>
			<method name="public Object next()">1</method>
			<method name="public void _init_(Object contextNode, org.jaxen.Navigator navigator)">1</method>
			<method name="private java.util.ListIterator childrenOrSelf(Object node)">3</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.NodeFilter</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>8</ca>
		<ce>3</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract boolean matches(org.dom4j.Node)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.DefaultNamespace</name>
		<wmc>9</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>6</cbo>
		<rfc>14</rfc>
		<lcom>16</lcom>
		<ca>2</ca>
		<ce>5</ce>
		<npm>8</npm>
		<lcom3>0.5</lcom3>
		<loc>68</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.3888888888888889</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.444444444444445</amc>
		<cc>
			<method name="public void setParent(org.dom4j.Element parent)">1</method>
			<method name="public boolean supportsParent()">1</method>
			<method name="protected int createHashCode()">2</method>
			<method name="public int hashCode()">1</method>
			<method name="public void _init_(String prefix, String uri)">1</method>
			<method name="public boolean isReadOnly()">1</method>
			<method name="public boolean equals(Object object)">3</method>
			<method name="public void _init_(org.dom4j.Element parent, String prefix, String uri)">1</method>
			<method name="public org.dom4j.Element getParent()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.saxpath.helpers.XPathReaderFactory</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>17</cbo>
		<rfc>20</rfc>
		<lcom>8</lcom>
		<ca>2</ca>
		<ce>15</ce>
		<npm>3</npm>
		<lcom3>0.95</lcom3>
		<loc>137</loc>
		<dam>0.4</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>25.4</amc>
		<cc>
			<method name="public static org.jaxen.saxpath.XPathReader createReader(String className)">1</method>
			<method name="static Class class$(String x0)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public static org.jaxen.saxpath.XPathReader createReader()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.DefaultComment</name>
		<wmc>7</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>7</cbo>
		<rfc>8</rfc>
		<lcom>15</lcom>
		<ca>3</ca>
		<ce>5</ce>
		<npm>7</npm>
		<lcom3>0.6666666666666666</lcom3>
		<loc>34</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5714285714285714</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.7142857142857144</amc>
		<cc>
			<method name="public void setParent(org.dom4j.Element parent)">1</method>
			<method name="public boolean supportsParent()">1</method>
			<method name="public void _init_(String text)">1</method>
			<method name="public void _init_(org.dom4j.Element parent, String text)">1</method>
			<method name="public boolean isReadOnly()">1</method>
			<method name="public void setText(String text)">1</method>
			<method name="public org.dom4j.Element getParent()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.STAXEventWriter</name>
		<wmc>35</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>48</cbo>
		<rfc>88</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>48</ce>
		<npm>33</npm>
		<lcom3>0.5098039215686274</lcom3>
		<loc>454</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.09428571428571429</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.885714285714286</amc>
		<cc>
			<method name="public void writeEntity(org.dom4j.Entity entity)">1</method>
			<method name="public javax.xml.stream.events.StartElement createStartElement(org.dom4j.Element elem)">1</method>
			<method name="public javax.xml.stream.events.Namespace createNamespace(org.dom4j.Namespace ns)">1</method>
			<method name="public javax.xml.stream.XMLEventFactory getEventFactory()">1</method>
			<method name="public void writeComment(org.dom4j.Comment comment)">1</method>
			<method name="public void writeNamespace(org.dom4j.Namespace ns)">1</method>
			<method name="public javax.xml.stream.events.Characters createCharacters(org.dom4j.CDATA cdata)">1</method>
			<method name="public javax.xml.namespace.QName createQName(org.dom4j.QName qname)">1</method>
			<method name="public javax.xml.stream.events.Attribute createAttribute(org.dom4j.Attribute attr)">1</method>
			<method name="public javax.xml.stream.events.EndElement createEndElement(org.dom4j.Element elem)">1</method>
			<method name="public javax.xml.stream.events.Characters createCharacters(org.dom4j.Text text)">1</method>
			<method name="public javax.xml.stream.events.Comment createComment(org.dom4j.Comment comment)">1</method>
			<method name="public javax.xml.stream.events.ProcessingInstruction createProcessingInstruction(org.dom4j.ProcessingInstruction pi)">1</method>
			<method name="public void _init_(java.io.File file)">1</method>
			<method name="public void writeElement(org.dom4j.Element elem)">1</method>
			<method name="public void writeCDATA(org.dom4j.CDATA cdata)">1</method>
			<method name="public void _init_(javax.xml.stream.util.XMLEventConsumer consumer)">1</method>
			<method name="public void writeChildNodes(org.dom4j.Branch branch)">1</method>
			<method name="public javax.xml.stream.events.StartDocument createStartDocument(org.dom4j.Document doc)">2</method>
			<method name="public void _init_(java.io.Writer writer)">1</method>
			<method name="public void writeNode(org.dom4j.Node n)">1</method>
			<method name="static javax.xml.stream.XMLEventFactory access$000(org.dom4j.io.STAXEventWriter x0)">1</method>
			<method name="private javax.xml.stream.events.EntityReference createEntityReference(org.dom4j.Entity entity)">1</method>
			<method name="public javax.xml.stream.events.EndDocument createEndDocument(org.dom4j.Document doc)">1</method>
			<method name="public void writeAttribute(org.dom4j.Attribute attr)">1</method>
			<method name="public void writeDocumentType(org.dom4j.DocumentType docType)">1</method>
			<method name="public void setEventFactory(javax.xml.stream.XMLEventFactory eventFactory)">1</method>
			<method name="public void writeDocument(org.dom4j.Document doc)">1</method>
			<method name="public void writeText(org.dom4j.Text text)">1</method>
			<method name="public javax.xml.stream.util.XMLEventConsumer getConsumer()">1</method>
			<method name="public void setConsumer(javax.xml.stream.util.XMLEventConsumer consumer)">1</method>
			<method name="public void writeProcessingInstruction(org.dom4j.ProcessingInstruction pi)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public javax.xml.stream.events.DTD createDTD(org.dom4j.DocumentType docType)">1</method>
			<method name="public void _init_(java.io.OutputStream stream)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.xslt.DocumentFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>10</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>32</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.666666666666666</amc>
		<cc>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
			<method name="public static Object evaluate(String url, org.jaxen.Navigator nav)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.Predicate</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>21</cbo>
		<rfc>5</rfc>
		<lcom>10</lcom>
		<ca>13</ca>
		<ce>8</ce>
		<npm>5</npm>
		<lcom3>2.0</lcom3>
		<loc>5</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract org.jaxen.expr.Expr getExpr()">1</method>
			<method name="public abstract String getText()">1</method>
			<method name="public abstract void simplify()">1</method>
			<method name="public abstract Object evaluate(org.jaxen.Context)">1</method>
			<method name="public abstract void setExpr(org.jaxen.expr.Expr)">1</method>
		</cc>
	</class>
	<class>
		<name>com.adobe.ac.ant.tasks.SWFLauncher</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>4</ca>
		<ce>4</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void launch(String)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.SAXContentHandler</name>
		<wmc>55</wmc>
		<dit>2</dit>
		<noc>1</noc>
		<cbo>43</cbo>
		<rfc>120</rfc>
		<lcom>1123</lcom>
		<ca>4</ca>
		<ce>39</ce>
		<npm>46</npm>
		<lcom3>0.9005486968449932</lcom3>
		<loc>976</loc>
		<dam>1.0</dam>
		<moa>6</moa>
		<mfa>0.25</mfa>
		<cam>0.11878787878787879</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>16.254545454545454</amc>
		<cc>
			<method name="public void attributeDecl(String eName, String aName, String type, String valueDefault, String val)">1</method>
			<method name="public void externalEntityDecl(String name, String publicId, String sysId)">1</method>
			<method name="public void endDocument()">1</method>
			<method name="public void setEntityResolver(org.xml.sax.EntityResolver entityResolver)">1</method>
			<method name="public boolean isIncludeExternalDTDDeclarations()">1</method>
			<method name="public void comment(char[] ch, int start, int end)">1</method>
			<method name="public boolean isIgnoreComments()">1</method>
			<method name="protected org.dom4j.io.ElementStack createElementStack()">1</method>
			<method name="public void endDTD()">1</method>
			<method name="public void notationDecl(String name, String publicId, String systemId)">1</method>
			<method name="public void setElementStack(org.dom4j.io.ElementStack elementStack)">1</method>
			<method name="protected void addDeclaredNamespaces(org.dom4j.Element element)">2</method>
			<method name="public void characters(char[] ch, int start, int end)">1</method>
			<method name="public void unparsedEntityDecl(String name, String publicId, String systemId, String notationName)">1</method>
			<method name="public void startElement(String namespaceURI, String localName, String qualifiedName, org.xml.sax.Attributes attributes)">1</method>
			<method name="public void startPrefixMapping(String prefix, String uri)">1</method>
			<method name="public void startDocument()">1</method>
			<method name="public void endPrefixMapping(String prefix)">1</method>
			<method name="public void _init_(org.dom4j.DocumentFactory documentFactory)">1</method>
			<method name="public void endEntity(String name)">1</method>
			<method name="public void setStripWhitespaceText(boolean stripWhitespaceText)">1</method>
			<method name="public void setIncludeExternalDTDDeclarations(boolean include)">1</method>
			<method name="public boolean isStripWhitespaceText()">1</method>
			<method name="public org.xml.sax.EntityResolver getEntityResolver()">1</method>
			<method name="public void endCDATA()">1</method>
			<method name="public void setIncludeInternalDTDDeclarations(boolean include)">1</method>
			<method name="public void endElement(String namespaceURI, String localName, String qName)">1</method>
			<method name="public void error(org.xml.sax.SAXParseException exception)">1</method>
			<method name="public org.dom4j.io.ElementStack getElementStack()">1</method>
			<method name="protected void addAttributes(org.dom4j.Element element, org.xml.sax.Attributes attributes)">5</method>
			<method name="protected void addExternalDTDDeclaration(Object declaration)">2</method>
			<method name="public void setMergeAdjacentText(boolean mergeAdjacentText)">1</method>
			<method name="public void startCDATA()">1</method>
			<method name="public void internalEntityDecl(String name, String value)">1</method>
			<method name="public void _init_(org.dom4j.DocumentFactory documentFactory, org.dom4j.ElementHandler elementHandler)">1</method>
			<method name="public org.dom4j.Document getDocument()">2</method>
			<method name="public void startDTD(String name, String publicId, String systemId)">1</method>
			<method name="public void processingInstruction(String target, String data)">1</method>
			<method name="public void startEntity(String name)">1</method>
			<method name="private String getEncoding()">2</method>
			<method name="protected void addDTDDeclaration(Object declaration)">2</method>
			<method name="public boolean isMergeAdjacentText()">1</method>
			<method name="public void setIgnoreComments(boolean ignoreComments)">1</method>
			<method name="public boolean isIncludeInternalDTDDeclarations()">1</method>
			<method name="protected boolean isIgnorableEntity(String name)">6</method>
			<method name="protected org.dom4j.Document createDocument()">2</method>
			<method name="public void setDocumentLocator(org.xml.sax.Locator documentLocator)">1</method>
			<method name="public org.xml.sax.InputSource getInputSource()">1</method>
			<method name="protected void completeCurrentTextNode()">4</method>
			<method name="public void fatalError(org.xml.sax.SAXParseException exception)">1</method>
			<method name="public void _init_(org.dom4j.DocumentFactory documentFactory, org.dom4j.ElementHandler elementHandler, org.dom4j.io.ElementStack elementStack)">1</method>
			<method name="public void elementDecl(String name, String model)">1</method>
			<method name="public void warning(org.xml.sax.SAXParseException exception)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void setInputSource(org.xml.sax.InputSource inputSource)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.CountFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>8</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>43</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4166666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.333333333333334</amc>
		<cc>
			<method name="public void _init_()">1</method>
			<method name="public static Number evaluate(Object obj)">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.PathExpr</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>3</rfc>
		<lcom>3</lcom>
		<ca>7</ca>
		<ce>4</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>3</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract org.jaxen.expr.Expr getFilterExpr()">1</method>
			<method name="public abstract org.jaxen.expr.LocationPath getLocationPath()">1</method>
			<method name="public abstract void setFilterExpr(org.jaxen.expr.Expr)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.QName</name>
		<wmc>23</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>66</cbo>
		<rfc>52</rfc>
		<lcom>197</lcom>
		<ca>51</ca>
		<ce>17</ce>
		<npm>18</npm>
		<lcom3>0.8246753246753247</lcom3>
		<loc>356</loc>
		<dam>0.8571428571428571</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.2077922077922078</cam>
		<ic>1</ic>
		<cbm>1</cbm>
		<amc>14.173913043478262</amc>
		<cc>
			<method name="public org.dom4j.DocumentFactory getDocumentFactory()">1</method>
			<method name="public void _init_(String name, org.dom4j.Namespace namespace, String qualifiedName)">3</method>
			<method name="public org.dom4j.Namespace getNamespace()">1</method>
			<method name="public String getNamespaceURI()">2</method>
			<method name="public void _init_(String name)">1</method>
			<method name="public void _init_(String name, org.dom4j.Namespace namespace)">3</method>
			<method name="public static org.dom4j.QName get(String name, String prefix, String uri)">7</method>
			<method name="public String getName()">1</method>
			<method name="public String getNamespacePrefix()">2</method>
			<method name="public boolean equals(Object object)">6</method>
			<method name="public static org.dom4j.QName get(String qualifiedName, String uri)">2</method>
			<method name="static Class class$(String x0)">1</method>
			<method name="public String toString()">1</method>
			<method name="public static org.dom4j.QName get(String name, org.dom4j.Namespace namespace)">1</method>
			<method name="public static org.dom4j.QName get(String localName, org.dom4j.Namespace namespace, String qualifiedName)">1</method>
			<method name="public int hashCode()">3</method>
			<method name="private void writeObject(java.io.ObjectOutputStream out)">1</method>
			<method name="public String getQualifiedName()">4</method>
			<method name="public void setDocumentFactory(org.dom4j.DocumentFactory documentFactory)">1</method>
			<method name="public static org.dom4j.QName get(String name)">1</method>
			<method name="private void readObject(java.io.ObjectInputStream in)">1</method>
			<method name="static void _clinit_()">2</method>
			<method name="private static org.dom4j.tree.QNameCache getCache()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.pattern.PatternParser</name>
		<wmc>8</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>42</cbo>
		<rfc>62</rfc>
		<lcom>28</lcom>
		<ca>1</ca>
		<ce>41</ce>
		<npm>2</npm>
		<lcom3>1.0476190476190477</lcom3>
		<loc>367</loc>
		<dam>0.6666666666666666</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.17857142857142858</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>44.5</amc>
		<cc>
			<method name="static Class class$(String x0)">1</method>
			<method name="protected static org.jaxen.pattern.LocationPathPattern convertExpr(org.jaxen.expr.LocationPath locationPath)">1</method>
			<method name="protected static org.jaxen.pattern.Pattern convertExpr(org.jaxen.expr.Expr expr)">1</method>
			<method name="public static org.jaxen.pattern.Pattern parse(String text)">1</method>
			<method name="protected static org.jaxen.pattern.LocationPathPattern convertDefaultStep(org.jaxen.pattern.LocationPathPattern path, org.jaxen.expr.DefaultStep step)">1</method>
			<method name="public void _init_()">1</method>
			<method name="protected static org.jaxen.pattern.LocationPathPattern convertStep(org.jaxen.pattern.LocationPathPattern path, org.jaxen.expr.Step step)">1</method>
			<method name="protected static boolean navigationStep(org.jaxen.expr.Step step)">5</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.DefaultElement</name>
		<wmc>50</wmc>
		<dit>0</dit>
		<noc>5</noc>
		<cbo>28</cbo>
		<rfc>115</rfc>
		<lcom>501</lcom>
		<ca>6</ca>
		<ce>23</ce>
		<npm>42</npm>
		<lcom3>0.7673469387755102</lcom3>
		<loc>1571</loc>
		<dam>1.0</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.16938775510204082</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>30.32</amc>
		<cc>
			<method name="protected org.dom4j.DocumentFactory getDocumentFactory()">2</method>
			<method name="public void _init_(org.dom4j.QName qname)">1</method>
			<method name="public org.dom4j.Namespace getNamespaceForURI(String uri)">10</method>
			<method name="public void setAttributes(java.util.List attributes)">2</method>
			<method name="protected void setAttributeList(java.util.List attributeList)">1</method>
			<method name="public void add(org.dom4j.Attribute attribute)">4</method>
			<method name="public org.dom4j.ProcessingInstruction processingInstruction(String target)">6</method>
			<method name="public void _init_(org.dom4j.QName qname, int attributeCount)">2</method>
			<method name="public void setDocument(org.dom4j.Document document)">3</method>
			<method name="public org.dom4j.Element element(org.dom4j.QName qName)">6</method>
			<method name="public org.dom4j.Attribute attribute(String name)">5</method>
			<method name="public org.dom4j.Attribute attribute(int index)">4</method>
			<method name="public java.util.List additionalNamespaces(String defaultNamespaceURI)">7</method>
			<method name="public int indexOf(org.dom4j.Node node)">4</method>
			<method name="public boolean supportsParent()">1</method>
			<method name="protected void addNewNode(org.dom4j.Node node)">3</method>
			<method name="public java.util.List additionalNamespaces()">7</method>
			<method name="public java.util.List processingInstructions()">5</method>
			<method name="public java.util.List declaredNamespaces()">4</method>
			<method name="public void setContent(java.util.List content)">8</method>
			<method name="public void clearContent()">2</method>
			<method name="public String getText()">3</method>
			<method name="protected boolean removeNode(org.dom4j.Node node)">5</method>
			<method name="static void _clinit_()">1</method>
			<method name="public boolean removeProcessingInstruction(String target)">4</method>
			<method name="public org.dom4j.Attribute attribute(String name, org.dom4j.Namespace namespace)">1</method>
			<method name="public void setQName(org.dom4j.QName name)">1</method>
			<method name="public org.dom4j.Element element(String name, org.dom4j.Namespace namespace)">1</method>
			<method name="public org.dom4j.Element getParent()">2</method>
			<method name="public java.util.Iterator nodeIterator()">3</method>
			<method name="public java.util.Iterator attributeIterator()">3</method>
			<method name="protected java.util.List attributeList()">3</method>
			<method name="protected java.util.List contentList()">3</method>
			<method name="public void _init_(String name)">1</method>
			<method name="public void _init_(String name, org.dom4j.Namespace namespace)">1</method>
			<method name="public Object clone()">2</method>
			<method name="public int attributeCount()">3</method>
			<method name="public org.dom4j.Document getDocument()">3</method>
			<method name="public java.util.List attributes()">1</method>
			<method name="public String getStringValue()">6</method>
			<method name="public org.dom4j.Attribute attribute(org.dom4j.QName qName)">5</method>
			<method name="public int nodeCount()">3</method>
			<method name="public org.dom4j.QName getQName()">1</method>
			<method name="protected java.util.List attributeList(int size)">3</method>
			<method name="public org.dom4j.Element element(String name)">6</method>
			<method name="public java.util.List processingInstructions(String target)">7</method>
			<method name="public org.dom4j.Namespace getNamespaceForPrefix(String prefix)">13</method>
			<method name="public void setParent(org.dom4j.Element parent)">3</method>
			<method name="public org.dom4j.Node node(int index)">7</method>
			<method name="public boolean remove(org.dom4j.Attribute attribute)">6</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.iter.IterableDescendantAxis</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>5</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>11</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.5</amc>
		<cc>
			<method name="public java.util.Iterator iterator(Object contextNode, org.jaxen.ContextSupport support)">1</method>
			<method name="public void _init_(int value)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.Node</name>
		<wmc>33</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>80</cbo>
		<rfc>33</rfc>
		<lcom>528</lcom>
		<ca>69</ca>
		<ce>13</ce>
		<npm>33</npm>
		<lcom3>1.03125</lcom3>
		<loc>46</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.22510822510822512</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract boolean matches(String)">1</method>
			<method name="public abstract String getPath(org.dom4j.Element)">1</method>
			<method name="public abstract java.util.List selectNodes(String, String)">1</method>
			<method name="public abstract short getNodeType()">1</method>
			<method name="public abstract org.dom4j.Node selectSingleNode(String)">1</method>
			<method name="public abstract org.dom4j.XPath createXPath(String)">1</method>
			<method name="public abstract String getName()">1</method>
			<method name="public abstract String getStringValue()">1</method>
			<method name="public abstract String asXML()">1</method>
			<method name="public abstract String getUniquePath(org.dom4j.Element)">1</method>
			<method name="public abstract void accept(org.dom4j.Visitor)">1</method>
			<method name="public abstract void write(java.io.Writer)">1</method>
			<method name="public abstract void setDocument(org.dom4j.Document)">1</method>
			<method name="public abstract org.dom4j.Document getDocument()">1</method>
			<method name="public abstract void setName(String)">1</method>
			<method name="public abstract java.util.List selectNodes(String)">1</method>
			<method name="public abstract String getNodeTypeName()">1</method>
			<method name="public abstract org.dom4j.Node asXPathResult(org.dom4j.Element)">1</method>
			<method name="public abstract void setText(String)">1</method>
			<method name="public abstract org.dom4j.Node detach()">1</method>
			<method name="public abstract String valueOf(String)">1</method>
			<method name="public abstract Object clone()">1</method>
			<method name="public abstract java.util.List selectNodes(String, String, boolean)">1</method>
			<method name="public abstract org.dom4j.Element getParent()">1</method>
			<method name="public abstract boolean hasContent()">1</method>
			<method name="public abstract boolean isReadOnly()">1</method>
			<method name="public abstract boolean supportsParent()">1</method>
			<method name="public abstract String getText()">1</method>
			<method name="public abstract String getUniquePath()">1</method>
			<method name="public abstract String getPath()">1</method>
			<method name="public abstract Object selectObject(String)">1</method>
			<method name="public abstract Number numberValueOf(String)">1</method>
			<method name="public abstract void setParent(org.dom4j.Element)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.dtd.ExternalEntityDecl</name>
		<wmc>9</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>15</rfc>
		<lcom>4</lcom>
		<ca>1</ca>
		<ce>4</ce>
		<npm>9</npm>
		<lcom3>0.625</lcom3>
		<loc>131</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.7222222222222222</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.222222222222221</amc>
		<cc>
			<method name="public String getSystemID()">1</method>
			<method name="public String toString()">5</method>
			<method name="public void setName(String name)">1</method>
			<method name="public void setPublicID(String publicID)">1</method>
			<method name="public void setSystemID(String systemID)">1</method>
			<method name="public void _init_(String name, String publicID, String systemID)">1</method>
			<method name="public String getName()">1</method>
			<method name="public String getPublicID()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.SubstringBeforeFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>11</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>46</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.333333333333334</amc>
		<cc>
			<method name="public static String evaluate(Object strArg, Object matchArg, org.jaxen.Navigator nav)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.DefaultCDATA</name>
		<wmc>7</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>7</cbo>
		<rfc>8</rfc>
		<lcom>15</lcom>
		<ca>3</ca>
		<ce>5</ce>
		<npm>7</npm>
		<lcom3>0.6666666666666666</lcom3>
		<loc>34</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5714285714285714</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.7142857142857144</amc>
		<cc>
			<method name="public void setParent(org.dom4j.Element parent)">1</method>
			<method name="public boolean supportsParent()">1</method>
			<method name="public void _init_(String text)">1</method>
			<method name="public void _init_(org.dom4j.Element parent, String text)">1</method>
			<method name="public boolean isReadOnly()">1</method>
			<method name="public void setText(String text)">1</method>
			<method name="public org.dom4j.Element getParent()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.SAXReader$SAXEntityResolver</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>9</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>36</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>16.5</amc>
		<cc>
			<method name="public void _init_(String uriPrefix)">1</method>
			<method name="public org.xml.sax.InputSource resolveEntity(String publicId, String systemId)">5</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.XPath2XMLVisitor</name>
		<wmc>25</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>33</cbo>
		<rfc>79</rfc>
		<lcom>204</lcom>
		<ca>0</ca>
		<ce>33</ce>
		<npm>22</npm>
		<lcom3>0.08333333333333333</lcom3>
		<loc>613</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.0784</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>23.44</amc>
		<cc>
			<method name="public void visit(org.jaxen.expr.UnionExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.VariableReferenceExpr expr)">1</method>
			<method name="public void _init_(java.io.PrintWriter printer)">1</method>
			<method name="public void visit(org.jaxen.expr.AdditiveExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.UnaryExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.NameStep step)">2</method>
			<method name="public void visit(org.jaxen.expr.ProcessingInstructionNodeStep step)">1</method>
			<method name="public void visit(org.jaxen.expr.FilterExpr expr)">3</method>
			<method name="public void visit(org.jaxen.expr.EqualityExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.MultiplicativeExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.LocationPath expr)">2</method>
			<method name="protected void printLn(String str)">2</method>
			<method name="public void visit(org.jaxen.expr.LiteralExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.PathExpr expr)">3</method>
			<method name="public void visit(org.jaxen.expr.TextNodeStep step)">1</method>
			<method name="public void visit(org.jaxen.expr.NumberExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.RelationalExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.FunctionCallExpr expr)">2</method>
			<method name="public void visit(org.jaxen.expr.CommentNodeStep step)">1</method>
			<method name="protected void handlePredicates(java.util.List predicates)">3</method>
			<method name="void printLhsRhs(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="public void visit(org.jaxen.expr.AllNodeStep step)">1</method>
			<method name="public void visit(org.jaxen.expr.LogicalExpr expr)">1</method>
			<method name="public void visit(org.jaxen.expr.Predicate predicate)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.xom.DocumentNavigator$2</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>4</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>1.0</lcom3>
		<loc>17</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.875</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.0</amc>
		<cc>
			<method name="public Object get(Object o, int i)">1</method>
			<method name="void _init_(org.jaxen.xom.DocumentNavigator this$0, Object x0, int x1, int x2)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.AbstractAttribute</name>
		<wmc>20</wmc>
		<dit>0</dit>
		<noc>3</noc>
		<cbo>18</cbo>
		<rfc>40</rfc>
		<lcom>190</lcom>
		<ca>3</ca>
		<ce>15</ce>
		<npm>19</npm>
		<lcom3>2.0</lcom3>
		<loc>253</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.20714285714285716</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.65</amc>
		<cc>
			<method name="public void write(java.io.Writer writer)">1</method>
			<method name="public String asXML()">1</method>
			<method name="public org.dom4j.Namespace getNamespace()">1</method>
			<method name="public String getNamespaceURI()">1</method>
			<method name="public void setValue(String value)">1</method>
			<method name="public String getName()">1</method>
			<method name="public short getNodeType()">1</method>
			<method name="public void setNamespace(org.dom4j.Namespace namespace)">1</method>
			<method name="public String getNamespacePrefix()">1</method>
			<method name="public void setData(Object data)">2</method>
			<method name="public void accept(org.dom4j.Visitor visitor)">1</method>
			<method name="public String getUniquePath(org.dom4j.Element context)">7</method>
			<method name="public String toString()">1</method>
			<method name="public String getText()">1</method>
			<method name="protected org.dom4j.Node createXPathResult(org.dom4j.Element parent)">1</method>
			<method name="public String getQualifiedName()">1</method>
			<method name="public Object getData()">1</method>
			<method name="public void setText(String text)">1</method>
			<method name="public String getPath(org.dom4j.Element context)">7</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.xom.DocumentNavigator$1</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>4</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>1.0</lcom3>
		<loc>17</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.875</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.0</amc>
		<cc>
			<method name="public Object get(Object o, int i)">1</method>
			<method name="void _init_(org.jaxen.xom.DocumentNavigator this$0, Object x0, int x1, int x2)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.saxpath.helpers.DefaultXPathHandler</name>
		<wmc>45</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>46</rfc>
		<lcom>990</lcom>
		<ca>0</ca>
		<ce>5</ce>
		<npm>45</npm>
		<lcom3>2.0</lcom3>
		<loc>92</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.28888888888888886</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>1.0444444444444445</amc>
		<cc>
			<method name="public void startTextNodeStep(int axis)">1</method>
			<method name="public void endOrExpr(boolean create)">1</method>
			<method name="public void startAbsoluteLocationPath()">1</method>
			<method name="public void endRelativeLocationPath()">1</method>
			<method name="public void startAllNodeStep(int axis)">1</method>
			<method name="public void endTextNodeStep()">1</method>
			<method name="public void endProcessingInstructionNodeStep()">1</method>
			<method name="public void startPredicate()">1</method>
			<method name="public void endAdditiveExpr(int operator)">1</method>
			<method name="public void startXPath()">1</method>
			<method name="public void startCommentNodeStep(int axis)">1</method>
			<method name="public void endFilterExpr()">1</method>
			<method name="public void endUnaryExpr(int operator)">1</method>
			<method name="public void startUnaryExpr()">1</method>
			<method name="public void startAndExpr()">1</method>
			<method name="public void endUnionExpr(boolean create)">1</method>
			<method name="public void startOrExpr()">1</method>
			<method name="public void startNameStep(int axis, String prefix, String localName)">1</method>
			<method name="public void number(double number)">1</method>
			<method name="public void startRelationalExpr()">1</method>
			<method name="public void startUnionExpr()">1</method>
			<method name="public void endAndExpr(boolean create)">1</method>
			<method name="public void endEqualityExpr(int operator)">1</method>
			<method name="public void endPathExpr()">1</method>
			<method name="public void startMultiplicativeExpr()">1</method>
			<method name="public void endNameStep()">1</method>
			<method name="public void literal(String literal)">1</method>
			<method name="public void endAbsoluteLocationPath()">1</method>
			<method name="public void startFunction(String prefix, String functionName)">1</method>
			<method name="public void endCommentNodeStep()">1</method>
			<method name="public void endFunction()">1</method>
			<method name="public void number(int number)">1</method>
			<method name="public void endXPath()">1</method>
			<method name="public void startEqualityExpr()">1</method>
			<method name="public void startAdditiveExpr()">1</method>
			<method name="public void startRelativeLocationPath()">1</method>
			<method name="public void startProcessingInstructionNodeStep(int axis, String name)">1</method>
			<method name="public void startFilterExpr()">1</method>
			<method name="public void variableReference(String prefix, String variableName)">1</method>
			<method name="public void endPredicate()">1</method>
			<method name="public void endRelationalExpr(int operator)">1</method>
			<method name="public void endMultiplicativeExpr(int operator)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void startPathExpr()">1</method>
			<method name="public void endAllNodeStep()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultPredicated</name>
		<wmc>6</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>18</rfc>
		<lcom>13</lcom>
		<ca>0</ca>
		<ce>8</ce>
		<npm>5</npm>
		<lcom3>0.0</lcom3>
		<loc>91</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5833333333333334</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.0</amc>
		<cc>
			<method name="protected void _init_()">1</method>
			<method name="public String toString()">3</method>
			<method name="public void addPredicate(org.jaxen.expr.Predicate predicate)">1</method>
			<method name="public String getText()">2</method>
			<method name="public void simplifyAllPredicates()">2</method>
			<method name="public java.util.List getPredicates()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.dom.DOMElement</name>
		<wmc>51</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>25</cbo>
		<rfc>117</rfc>
		<lcom>1269</lcom>
		<ca>3</ca>
		<ce>24</ce>
		<npm>44</npm>
		<lcom3>0.88</lcom3>
		<loc>558</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.2125</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.92156862745098</amc>
		<cc>
			<method name="public boolean isSupported(String feature, String version)">1</method>
			<method name="protected org.dom4j.DocumentFactory getDocumentFactory()">2</method>
			<method name="public void _init_(org.dom4j.QName qname)">1</method>
			<method name="public org.w3c.dom.Node getFirstChild()">1</method>
			<method name="public org.w3c.dom.Attr setAttributeNode(org.w3c.dom.Attr newAttr)">1</method>
			<method name="public String getNodeName()">1</method>
			<method name="public org.w3c.dom.NodeList getElementsByTagNameNS(String namespace, String lName)">1</method>
			<method name="public org.w3c.dom.NamedNodeMap getAttributes()">1</method>
			<method name="public String getTagName()">1</method>
			<method name="public org.w3c.dom.NodeList getChildNodes()">1</method>
			<method name="public org.w3c.dom.Node getNextSibling()">1</method>
			<method name="public org.w3c.dom.Attr getAttributeNode(String name)">1</method>
			<method name="public org.w3c.dom.Attr removeAttributeNode(org.w3c.dom.Attr oldAttr)">1</method>
			<method name="public String getNodeValue()">1</method>
			<method name="public void setAttribute(String name, String value)">1</method>
			<method name="public boolean supports(String feature, String version)">1</method>
			<method name="public void _init_(org.dom4j.QName qname, int attributeCount)">1</method>
			<method name="public org.w3c.dom.Document getOwnerDocument()">1</method>
			<method name="protected org.dom4j.Attribute attribute(org.w3c.dom.Attr attr)">1</method>
			<method name="public String getAttributeNS(String namespaceURI, String localName)">3</method>
			<method name="public String getNamespaceURI()">1</method>
			<method name="public void removeAttributeNS(String namespaceURI, String localName)">1</method>
			<method name="public org.w3c.dom.NodeList getElementsByTagName(String name)">1</method>
			<method name="public org.w3c.dom.Node replaceChild(org.w3c.dom.Node newChild, org.w3c.dom.Node oldChild)">1</method>
			<method name="public org.w3c.dom.Node appendChild(org.w3c.dom.Node newChild)">1</method>
			<method name="public org.w3c.dom.Node removeChild(org.w3c.dom.Node oldChild)">1</method>
			<method name="public String getLocalName()">1</method>
			<method name="public org.w3c.dom.Node cloneNode(boolean deep)">1</method>
			<method name="public void setNodeValue(String nodeValue)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public org.w3c.dom.Node getLastChild()">1</method>
			<method name="public String getAttribute(String name)">2</method>
			<method name="public void _init_(String name)">1</method>
			<method name="public void _init_(String name, org.dom4j.Namespace namespace)">1</method>
			<method name="public void setPrefix(String prefix)">1</method>
			<method name="protected org.dom4j.Attribute attribute(String namespaceURI, String localName)">9</method>
			<method name="public org.w3c.dom.Attr getAttributeNodeNS(String namespaceURI, String localName)">2</method>
			<method name="public org.w3c.dom.Attr setAttributeNodeNS(org.w3c.dom.Attr newAttr)">1</method>
			<method name="public org.w3c.dom.Node insertBefore(org.w3c.dom.Node newChild, org.w3c.dom.Node refChild)">1</method>
			<method name="public boolean hasAttribute(String name)">2</method>
			<method name="public boolean hasAttributes()">1</method>
			<method name="protected org.dom4j.Attribute createAttribute(org.w3c.dom.Attr newAttr)">2</method>
			<method name="public String getPrefix()">1</method>
			<method name="public org.w3c.dom.Node getParentNode()">1</method>
			<method name="protected org.dom4j.QName getQName(String namespace, String qualifiedName)">2</method>
			<method name="private void checkNewChildNode(org.w3c.dom.Node newChild)">1</method>
			<method name="public boolean hasChildNodes()">2</method>
			<method name="public org.w3c.dom.Node getPreviousSibling()">1</method>
			<method name="public void removeAttribute(String name)">1</method>
			<method name="public boolean hasAttributeNS(String namespaceURI, String localName)">2</method>
			<method name="public void setAttributeNS(String namespaceURI, String qualifiedName, String value)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.util.UserDataElement</name>
		<wmc>9</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>21</rfc>
		<lcom>16</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>6</npm>
		<lcom3>0.25</lcom3>
		<loc>76</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3888888888888889</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.333333333333333</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="protected org.dom4j.Element createElement(String name)">1</method>
			<method name="public void _init_(String name)">1</method>
			<method name="public void _init_(org.dom4j.QName qname)">1</method>
			<method name="public Object getData()">1</method>
			<method name="public Object clone()">2</method>
			<method name="protected Object getCopyOfUserData()">1</method>
			<method name="public void setData(Object data)">1</method>
			<method name="protected org.dom4j.Element createElement(org.dom4j.QName qName)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultPredicate</name>
		<wmc>8</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>17</rfc>
		<lcom>26</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>8</npm>
		<lcom3>0.14285714285714285</lcom3>
		<loc>62</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.625</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void setExpr(org.jaxen.expr.Expr expr)">1</method>
			<method name="public String getText()">1</method>
			<method name="public Object evaluate(org.jaxen.Context context)">1</method>
			<method name="public org.jaxen.expr.Expr getExpr()">1</method>
			<method name="public void _init_(org.jaxen.expr.Expr expr)">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public void simplify()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.dom4j.DocumentNavigator$Singleton</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>3</cbo>
		<rfc>5</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>0.5</lcom3>
		<loc>14</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.3333333333333335</amc>
		<cc>
			<method name="static org.jaxen.dom4j.DocumentNavigator access$000()">1</method>
			<method name="private void _init_()">1</method>
			<method name="static void _clinit_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.rule.Stylesheet</name>
		<wmc>20</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>15</cbo>
		<rfc>40</rfc>
		<lcom>44</lcom>
		<ca>0</ca>
		<ce>15</ce>
		<npm>20</npm>
		<lcom3>0.42105263157894735</lcom3>
		<loc>287</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.25555555555555554</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.25</amc>
		<cc>
			<method name="public void applyTemplates(Object input, org.jaxen.XPath xpath)">1</method>
			<method name="public void run(Object input)">1</method>
			<method name="public void applyTemplates(Object input, org.dom4j.XPath xpath, String mode)">1</method>
			<method name="public void removeRule(org.dom4j.rule.Rule rule)">1</method>
			<method name="public void clear()">1</method>
			<method name="public org.dom4j.rule.Action getValueOfAction()">1</method>
			<method name="public String getModeName()">1</method>
			<method name="public void run(org.dom4j.Node node, String mode)">1</method>
			<method name="public void applyTemplates(Object input, org.dom4j.XPath xpath)">1</method>
			<method name="public void applyTemplates(Object input, String mode)">1</method>
			<method name="public void run(java.util.List list)">1</method>
			<method name="public void setValueOfAction(org.dom4j.rule.Action valueOfAction)">1</method>
			<method name="public void run(org.dom4j.Node node)">1</method>
			<method name="public void applyTemplates(Object input, org.jaxen.XPath xpath, String mode)">1</method>
			<method name="public void addRule(org.dom4j.rule.Rule rule)">1</method>
			<method name="public void setModeName(String modeName)">1</method>
			<method name="public void run(java.util.List list, String mode)">1</method>
			<method name="public void applyTemplates(Object input)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void run(Object input, String mode)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.AbstractEntity</name>
		<wmc>9</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>11</cbo>
		<rfc>20</rfc>
		<lcom>36</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>9</npm>
		<lcom3>2.0</lcom3>
		<loc>110</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3611111111111111</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.222222222222221</amc>
		<cc>
			<method name="public void write(java.io.Writer writer)">1</method>
			<method name="public String toString()">1</method>
			<method name="public String getStringValue()">1</method>
			<method name="public String asXML()">1</method>
			<method name="public String getPath(org.dom4j.Element context)">3</method>
			<method name="public short getNodeType()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public String getUniquePath(org.dom4j.Element context)">3</method>
			<method name="public void accept(org.dom4j.Visitor visitor)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.ElementIterator</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>3</rfc>
		<lcom>1</lcom>
		<ca>0</ca>
		<ce>5</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>9</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.5</amc>
		<cc>
			<method name="protected boolean matches(Object element)">1</method>
			<method name="public void _init_(java.util.Iterator proxy)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.FalseFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>6</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>18</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4444444444444444</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.0</amc>
		<cc>
			<method name="public static Boolean evaluate()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.dom.NamespaceNode$EmptyNodeList</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>5</rfc>
		<lcom>6</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>14</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>2.5</amc>
		<cc>
			<method name="public int getLength()">1</method>
			<method name="void _init_(org.jaxen.dom.NamespaceNode$1 x0)">1</method>
			<method name="private void _init_()">1</method>
			<method name="public org.w3c.dom.Node item(int index)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.TrueFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>6</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>18</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4444444444444444</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.0</amc>
		<cc>
			<method name="public static Boolean evaluate()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.iter.IterableChildAxis</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>8</rfc>
		<lcom>6</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>28</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.55</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.0</amc>
		<cc>
			<method name="public java.util.Iterator iterator(Object contextNode, org.jaxen.ContextSupport support)">1</method>
			<method name="public java.util.Iterator namedAccessIterator(Object contextNode, org.jaxen.ContextSupport support, String localName, String namespacePrefix, String namespaceURI)">1</method>
			<method name="public void _init_(int value)">1</method>
			<method name="public boolean supportsNamedAccess(org.jaxen.ContextSupport support)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.SAXModifyElementHandler</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>15</cbo>
		<rfc>21</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>13</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>118</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.5833333333333334</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>28.0</amc>
		<cc>
			<method name="protected org.dom4j.Element getModifiedElement()">1</method>
			<method name="public void onStart(org.dom4j.ElementPath elementPath)">1</method>
			<method name="public void _init_(org.dom4j.io.ElementModifier elemModifier)">1</method>
			<method name="public void onEnd(org.dom4j.ElementPath elementPath)">5</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.bean.BeanAttribute</name>
		<wmc>7</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>13</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>7</npm>
		<lcom3>0.08333333333333333</lcom3>
		<loc>58</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.3142857142857143</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.0</amc>
		<cc>
			<method name="public void setValue(String data)">1</method>
			<method name="public Object getData()">1</method>
			<method name="public String getValue()">2</method>
			<method name="public void _init_(org.dom4j.bean.BeanAttributeList beanList, int index)">1</method>
			<method name="public void setData(Object data)">1</method>
			<method name="public org.dom4j.QName getQName()">1</method>
			<method name="public org.dom4j.Element getParent()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.XMLWriter</name>
		<wmc>94</wmc>
		<dit>2</dit>
		<noc>1</noc>
		<cbo>55</cbo>
		<rfc>214</rfc>
		<lcom>2309</lcom>
		<ca>11</ca>
		<ce>44</ce>
		<npm>57</npm>
		<lcom3>0.8581669226830517</lcom3>
		<loc>2681</loc>
		<dam>1.0</dam>
		<moa>3</moa>
		<mfa>0.2809917355371901</mfa>
		<cam>0.07196029776674938</cam>
		<ic>2</ic>
		<cbm>3</cbm>
		<amc>27.29787234042553</amc>
		<cc>
			<method name="protected boolean shouldEncodeChar(char c)">3</method>
			<method name="public void endDocument()">1</method>
			<method name="protected String escapeAttributeEntities(String text)">20</method>
			<method name="public void _init_(java.io.OutputStream out, org.dom4j.io.OutputFormat format)">1</method>
			<method name="protected void writeEntityRef(String name)">1</method>
			<method name="protected boolean isExpandEmptyElements()">1</method>
			<method name="public boolean isEscapeText()">1</method>
			<method name="protected void writeAttribute(org.xml.sax.Attributes attributes, int index)">1</method>
			<method name="protected final boolean isElementSpacePreserved(org.dom4j.Element element)">4</method>
			<method name="public void endDTD()">1</method>
			<method name="public void _init_(java.io.OutputStream out)">1</method>
			<method name="public void setResolveEntityRefs(boolean resolve)">1</method>
			<method name="protected void writePrintln()">1</method>
			<method name="protected void writeAttribute(org.dom4j.Attribute attribute)">1</method>
			<method name="protected void writeDeclaration()">1</method>
			<method name="public void write(org.dom4j.Entity entity)">1</method>
			<method name="public void startDocument()">1</method>
			<method name="public void startPrefixMapping(String prefix, String uri)">1</method>
			<method name="public void _init_(java.io.Writer writer, org.dom4j.io.OutputFormat format)">1</method>
			<method name="public void endPrefixMapping(String prefix)">1</method>
			<method name="protected java.io.Writer createWriter(java.io.OutputStream outStream, String encoding)">1</method>
			<method name="public void ignorableWhitespace(char[] ch, int start, int length)">1</method>
			<method name="public void characters(char[] ch, int start, int length)">1</method>
			<method name="public void endEntity(String name)">1</method>
			<method name="public void write(org.dom4j.Attribute attribute)">1</method>
			<method name="public void write(org.dom4j.Document doc)">1</method>
			<method name="public void setMaximumAllowedCharacter(int maximumAllowedCharacter)">1</method>
			<method name="protected void writeNamespace(org.dom4j.Namespace namespace)">1</method>
			<method name="public void unparsedEntityDecl(String name, String publicID, String systemID, String notationName)">1</method>
			<method name="public void _init_(java.io.Writer writer)">1</method>
			<method name="protected void writeElement(org.dom4j.Element element)">1</method>
			<method name="public void notationDecl(String name, String publicID, String systemID)">1</method>
			<method name="public void endCDATA()">1</method>
			<method name="protected void writeClose(String qualifiedName)">1</method>
			<method name="public void comment(char[] ch, int start, int length)">1</method>
			<method name="public void write(org.dom4j.Node node)">1</method>
			<method name="public void setProperty(String name, Object value)">1</method>
			<method name="protected boolean isNamespaceDeclaration(org.dom4j.Namespace ns)">5</method>
			<method name="protected void installLexicalHandler()">3</method>
			<method name="protected void writeNode(org.dom4j.Node node)">1</method>
			<method name="protected void writeElementContent(org.dom4j.Element element)">1</method>
			<method name="public void _init_(org.dom4j.io.OutputFormat format)">1</method>
			<method name="public void writeClose(org.dom4j.Element element)">1</method>
			<method name="public void parse(org.xml.sax.InputSource source)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void endElement(String namespaceURI, String localName, String qName)">1</method>
			<method name="public void setOutputStream(java.io.OutputStream out)">1</method>
			<method name="public void write(org.dom4j.Text text)">1</method>
			<method name="public void println()">1</method>
			<method name="public void write(org.dom4j.CDATA cdata)">1</method>
			<method name="protected void writeProcessingInstruction(org.dom4j.ProcessingInstruction pi)">1</method>
			<method name="protected org.dom4j.io.OutputFormat getOutputFormat()">1</method>
			<method name="public void write(String text)">1</method>
			<method name="public void startCDATA()">1</method>
			<method name="protected void writeDocType(String name, String publicID, String systemID)">1</method>
			<method name="protected void writeEmptyElementClose(String qualifiedName)">1</method>
			<method name="protected void writeNamespaces()">1</method>
			<method name="protected void writeString(String text)">1</method>
			<method name="protected void writeNodeText(org.dom4j.Node node)">1</method>
			<method name="public void write(org.dom4j.ProcessingInstruction processingInstruction)">1</method>
			<method name="public void setEscapeText(boolean escapeText)">1</method>
			<method name="public void processingInstruction(String target, String data)">1</method>
			<method name="public void startEntity(String name)">1</method>
			<method name="public void close()">1</method>
			<method name="protected void writeComment(String text)">1</method>
			<method name="protected void writeEscapeAttributeEntities(String txt)">1</method>
			<method name="protected void indent()">1</method>
			<method name="public void setWriter(java.io.Writer writer)">1</method>
			<method name="protected void writeEntity(org.dom4j.Entity entity)">1</method>
			<method name="public void setLexicalHandler(org.xml.sax.ext.LexicalHandler handler)">2</method>
			<method name="protected void writeDocType(org.dom4j.DocumentType docType)">1</method>
			<method name="public void setDocumentLocator(org.xml.sax.Locator locator)">1</method>
			<method name="protected void writeAttributes(org.xml.sax.Attributes attributes)">1</method>
			<method name="protected int defaultMaximumAllowedCharacter()">3</method>
			<method name="public void setIndentLevel(int indentLevel)">1</method>
			<method name="public void write(org.dom4j.Comment comment)">1</method>
			<method name="public Object getProperty(String name)">1</method>
			<method name="protected void writeCDATA(String text)">1</method>
			<method name="public org.xml.sax.ext.LexicalHandler getLexicalHandler()">1</method>
			<method name="protected void writeAttributes(org.dom4j.Element element)">1</method>
			<method name="public void write(org.dom4j.Namespace namespace)">1</method>
			<method name="public int getMaximumAllowedCharacter()">2</method>
			<method name="public void write(Object object)">1</method>
			<method name="public void startDTD(String name, String publicID, String systemID)">1</method>
			<method name="public boolean resolveEntityRefs()">1</method>
			<method name="public void flush()">1</method>
			<method name="protected void writeNamespace(String prefix, String uri)">1</method>
			<method name="protected void handleException(java.io.IOException e)">1</method>
			<method name="public void writeOpen(org.dom4j.Element element)">1</method>
			<method name="public void write(org.dom4j.DocumentType docType)">1</method>
			<method name="protected String escapeElementEntities(String text)">17</method>
			<method name="public void _init_()">1</method>
			<method name="public void write(org.dom4j.Element element)">1</method>
			<method name="public void startElement(String namespaceURI, String localName, String qName, org.xml.sax.Attributes attributes)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.XPP3Reader</name>
		<wmc>22</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>22</cbo>
		<rfc>77</rfc>
		<lcom>221</lcom>
		<ca>0</ca>
		<ce>22</ce>
		<npm>18</npm>
		<lcom3>0.8333333333333334</lcom3>
		<loc>410</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.16942148760330578</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.454545454545453</amc>
		<cc>
			<method name="public org.dom4j.DocumentFactory getDocumentFactory()">2</method>
			<method name="public void setDefaultHandler(org.dom4j.ElementHandler handler)">1</method>
			<method name="public org.dom4j.Document read(char[] text)">1</method>
			<method name="public void setXPPFactory(org.xmlpull.v1.XmlPullParserFactory xPPfactory)">1</method>
			<method name="public org.dom4j.Document read(java.io.File file)">1</method>
			<method name="public org.dom4j.Document read(java.io.InputStream in)">1</method>
			<method name="public org.dom4j.Document read(java.io.Reader reader, String systemID)">1</method>
			<method name="protected org.dom4j.io.DispatchHandler getDispatchHandler()">2</method>
			<method name="protected java.io.Reader createReader(java.io.InputStream in)">1</method>
			<method name="public org.dom4j.Document read(java.io.InputStream in, String systemID)">1</method>
			<method name="public org.dom4j.Document read(java.io.Reader reader)">1</method>
			<method name="public org.xmlpull.v1.XmlPullParserFactory getXPPFactory()">1</method>
			<method name="public org.dom4j.Document read(java.net.URL url)">1</method>
			<method name="public org.xmlpull.v1.XmlPullParser getXPPParser()">1</method>
			<method name="public void setDocumentFactory(org.dom4j.DocumentFactory documentFactory)">1</method>
			<method name="public void removeHandler(String path)">1</method>
			<method name="protected org.dom4j.Document parseDocument()">1</method>
			<method name="protected void setDispatchHandler(org.dom4j.io.DispatchHandler dispatchHandler)">1</method>
			<method name="public org.dom4j.Document read(String systemID)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void _init_(org.dom4j.DocumentFactory factory)">1</method>
			<method name="public void addHandler(String path, org.dom4j.ElementHandler handler)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.swing.LeafTreeNode</name>
		<wmc>14</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>8</cbo>
		<rfc>18</rfc>
		<lcom>71</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>13</npm>
		<lcom3>0.8461538461538461</lcom3>
		<loc>73</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.2923076923076923</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public javax.swing.tree.TreeNode getParent()">1</method>
			<method name="public org.dom4j.Node getXmlNode()">1</method>
			<method name="public boolean isLeaf()">1</method>
			<method name="public String toString()">2</method>
			<method name="public int getIndex(javax.swing.tree.TreeNode node)">1</method>
			<method name="public void _init_(javax.swing.tree.TreeNode parent, org.dom4j.Node xmlNode)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public java.util.Enumeration children()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public javax.swing.tree.TreeNode getChildAt(int childIndex)">1</method>
			<method name="public int getChildCount()">1</method>
			<method name="public void _init_(org.dom4j.Node xmlNode)">1</method>
			<method name="public void setParent(org.dom4j.swing.LeafTreeNode parent)">1</method>
			<method name="public boolean getAllowsChildren()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.pattern.NoNodeTest</name>
		<wmc>7</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>8</rfc>
		<lcom>19</lcom>
		<ca>0</ca>
		<ce>5</ce>
		<npm>6</npm>
		<lcom3>0.8333333333333334</lcom3>
		<loc>26</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.3888888888888889</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>2.5714285714285716</amc>
		<cc>
			<method name="public boolean matches(Object node, org.jaxen.Context context)">1</method>
			<method name="public String getText()">1</method>
			<method name="public static org.jaxen.pattern.NoNodeTest getInstance()">1</method>
			<method name="public short getMatchType()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public double getPriority()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.datatype.DatatypeDocumentFactory</name>
		<wmc>9</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>19</cbo>
		<rfc>34</rfc>
		<lcom>18</lcom>
		<ca>1</ca>
		<ce>19</ce>
		<npm>6</npm>
		<lcom3>0.796875</lcom3>
		<loc>305</loc>
		<dam>1.0</dam>
		<moa>6</moa>
		<mfa>0.0</mfa>
		<cam>0.3958333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>32.0</amc>
		<cc>
			<method name="public org.dom4j.datatype.DatatypeElementFactory getElementFactory(org.dom4j.QName elementQName)">2</method>
			<method name="public static org.dom4j.DocumentFactory getInstance()">1</method>
			<method name="protected void loadSchema(org.dom4j.Document document, String schemaInstanceURI, org.dom4j.Namespace namespace)">3</method>
			<method name="protected void loadSchema(org.dom4j.Document document, String schemaInstanceURI)">3</method>
			<method name="static void _clinit_()">1</method>
			<method name="public org.dom4j.Attribute createAttribute(org.dom4j.Element owner, org.dom4j.QName qname, String value)">7</method>
			<method name="public void loadSchema(org.dom4j.Document schemaDocument, org.dom4j.Namespace targetNamespace)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void loadSchema(org.dom4j.Document schemaDocument)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.saxpath.SAXPathParseException</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>4</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>5</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public void _init_(String msg)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.ElementPath</name>
		<wmc>6</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>6</rfc>
		<lcom>15</lcom>
		<ca>9</ca>
		<ce>5</ce>
		<npm>6</npm>
		<lcom3>2.0</lcom3>
		<loc>6</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4166666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract int size()">1</method>
			<method name="public abstract org.dom4j.Element getCurrent()">1</method>
			<method name="public abstract void addHandler(String, org.dom4j.ElementHandler)">1</method>
			<method name="public abstract void removeHandler(String)">1</method>
			<method name="public abstract String getPath()">1</method>
			<method name="public abstract org.dom4j.Element getElement(int)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.dom.DOMEntityReference</name>
		<wmc>29</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>56</rfc>
		<lcom>406</lcom>
		<ca>1</ca>
		<ce>13</ce>
		<npm>28</npm>
		<lcom3>2.0</lcom3>
		<loc>164</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.296551724137931</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.655172413793103</amc>
		<cc>
			<method name="public boolean isSupported(String feature, String version)">1</method>
			<method name="public void _init_(String name)">1</method>
			<method name="public org.w3c.dom.Node getFirstChild()">1</method>
			<method name="public String getNodeName()">1</method>
			<method name="public org.w3c.dom.NamedNodeMap getAttributes()">1</method>
			<method name="public org.w3c.dom.NodeList getChildNodes()">1</method>
			<method name="public org.w3c.dom.Node getNextSibling()">1</method>
			<method name="public void _init_(org.dom4j.Element parent, String name, String text)">1</method>
			<method name="public void setPrefix(String prefix)">1</method>
			<method name="public String getNodeValue()">1</method>
			<method name="public boolean supports(String feature, String version)">1</method>
			<method name="public org.w3c.dom.Document getOwnerDocument()">1</method>
			<method name="public String getNamespaceURI()">1</method>
			<method name="public org.w3c.dom.Node insertBefore(org.w3c.dom.Node newChild, org.w3c.dom.Node refChild)">1</method>
			<method name="public void _init_(String name, String text)">1</method>
			<method name="public org.w3c.dom.Node replaceChild(org.w3c.dom.Node newChild, org.w3c.dom.Node oldChild)">1</method>
			<method name="public org.w3c.dom.Node appendChild(org.w3c.dom.Node newChild)">1</method>
			<method name="public boolean hasAttributes()">1</method>
			<method name="public String getPrefix()">1</method>
			<method name="public org.w3c.dom.Node removeChild(org.w3c.dom.Node oldChild)">1</method>
			<method name="public org.w3c.dom.Node getParentNode()">1</method>
			<method name="public String getLocalName()">1</method>
			<method name="private void checkNewChildNode(org.w3c.dom.Node newChild)">1</method>
			<method name="public boolean hasChildNodes()">1</method>
			<method name="public org.w3c.dom.Node cloneNode(boolean deep)">1</method>
			<method name="public void setNodeValue(String nodeValue)">1</method>
			<method name="public org.w3c.dom.Node getPreviousSibling()">1</method>
			<method name="public org.w3c.dom.Node getLastChild()">1</method>
			<method name="public void normalize()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.saxpath.base.TokenTypes</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>6</cbo>
		<rfc>8</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>120</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>41.5</amc>
		<cc>
			<method name="void _init_()">1</method>
			<method name="String getTokenText(int tokenType)">2</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.jaxb.JAXBModifier</name>
		<wmc>25</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>32</cbo>
		<rfc>60</rfc>
		<lcom>230</lcom>
		<ca>1</ca>
		<ce>32</ce>
		<npm>21</npm>
		<lcom3>0.6416666666666667</lcom3>
		<loc>359</loc>
		<dam>1.0</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.14857142857142858</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.16</amc>
		<cc>
			<method name="public void _init_(String contextPath, ClassLoader classloader)">1</method>
			<method name="public void setOutput(java.io.Writer writer)">1</method>
			<method name="public void _init_(String contextPath, ClassLoader classloader, org.dom4j.io.OutputFormat outputFormat)">1</method>
			<method name="public org.dom4j.Document modify(org.xml.sax.InputSource source)">1</method>
			<method name="public org.dom4j.Document modify(java.io.File source, java.nio.charset.Charset charset)">1</method>
			<method name="public org.dom4j.Document modify(java.io.InputStream source, String systemId)">1</method>
			<method name="public org.dom4j.Document modify(String url)">1</method>
			<method name="public void resetObjectModifiers()">1</method>
			<method name="public void setPruneElements(boolean pruneElements)">1</method>
			<method name="public org.dom4j.Document modify(java.net.URL source)">1</method>
			<method name="private org.dom4j.io.XMLWriter getXMLWriter()">1</method>
			<method name="public void addObjectModifier(String path, org.dom4j.jaxb.JAXBObjectModifier mod)">1</method>
			<method name="private org.dom4j.io.SAXModifier getModifier()">2</method>
			<method name="public boolean isPruneElements()">1</method>
			<method name="public org.dom4j.Document modify(java.io.Reader r)">1</method>
			<method name="public org.dom4j.Document modify(java.io.File source)">1</method>
			<method name="public void removeObjectModifier(String path)">1</method>
			<method name="public void _init_(String contextPath)">1</method>
			<method name="public void _init_(String contextPath, org.dom4j.io.OutputFormat outputFormat)">1</method>
			<method name="public org.dom4j.Document modify(java.io.Reader source, String systemId)">1</method>
			<method name="public void setOutput(java.io.OutputStream outputStream)">1</method>
			<method name="private org.dom4j.io.XMLWriter createXMLWriter()">1</method>
			<method name="public void setOutput(java.io.File file)">1</method>
			<method name="private org.dom4j.io.SAXModifier installModifier()">1</method>
			<method name="public org.dom4j.Document modify(java.io.InputStream source)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.rule.Mode</name>
		<wmc>10</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>16</cbo>
		<rfc>31</rfc>
		<lcom>29</lcom>
		<ca>3</ca>
		<ce>13</ce>
		<npm>7</npm>
		<lcom3>0.37037037037037035</lcom3>
		<loc>363</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.2875</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>35.0</amc>
		<cc>
			<method name="public void applyTemplates(org.dom4j.Document document)">1</method>
			<method name="public void removeRule(org.dom4j.rule.Rule rule)">6</method>
			<method name="protected java.util.Map addToNameMap(java.util.Map map, String name, org.dom4j.rule.Rule rule)">3</method>
			<method name="public void fireRule(org.dom4j.Node node)">1</method>
			<method name="public void addRule(org.dom4j.rule.Rule rule)">8</method>
			<method name="protected void removeFromNameMap(java.util.Map map, String name, org.dom4j.rule.Rule rule)">3</method>
			<method name="public void applyTemplates(org.dom4j.Element element)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public org.dom4j.rule.Rule getMatchingRule(org.dom4j.Node node)">13</method>
			<method name="protected org.dom4j.rule.RuleSet getRuleSet(int matchType)">4</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.NameStep</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>2</rfc>
		<lcom>1</lcom>
		<ca>4</ca>
		<ce>3</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>2</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract String getPrefix()">1</method>
			<method name="public abstract String getLocalName()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultXPathExpr</name>
		<wmc>7</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>16</rfc>
		<lcom>15</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>7</npm>
		<lcom3>0.0</lcom3>
		<loc>55</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.47619047619047616</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.714285714285714</amc>
		<cc>
			<method name="public org.jaxen.expr.Expr getRootExpr()">1</method>
			<method name="public String toString()">1</method>
			<method name="public void setRootExpr(org.jaxen.expr.Expr rootExpr)">1</method>
			<method name="public String getText()">1</method>
			<method name="public void _init_(org.jaxen.expr.Expr rootExpr)">1</method>
			<method name="public java.util.List asList(org.jaxen.Context context)">1</method>
			<method name="public void simplify()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.saxpath.base.DefaultXPathHandler$1</name>
		<wmc>0</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>2</cbo>
		<rfc>0</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>1</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>0</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.SelfAxisIterator</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>5</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public void _init_(Object node)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.Context</name>
		<wmc>14</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>87</cbo>
		<rfc>22</rfc>
		<lcom>75</lcom>
		<ca>76</ca>
		<ce>12</ce>
		<npm>14</npm>
		<lcom3>0.7692307692307693</lcom3>
		<loc>104</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.3142857142857143</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.142857142857143</amc>
		<cc>
			<method name="public Object getVariableValue(String namespaceURI, String prefix, String localName)">1</method>
			<method name="public void _init_(org.jaxen.ContextSupport contextSupport)">1</method>
			<method name="public org.jaxen.ContextSupport getContextSupport()">1</method>
			<method name="public void setNodeSet(java.util.List nodeSet)">1</method>
			<method name="public void setPosition(int position)">1</method>
			<method name="public org.jaxen.Navigator getNavigator()">1</method>
			<method name="public org.jaxen.Context duplicate()">2</method>
			<method name="public String translateNamespacePrefixToUri(String prefix)">1</method>
			<method name="public java.util.List getNodeSet()">1</method>
			<method name="public void setContextSupport(org.jaxen.ContextSupport contextSupport)">1</method>
			<method name="public int getPosition()">1</method>
			<method name="public org.jaxen.Function getFunction(String namespaceURI, String prefix, String localName)">1</method>
			<method name="public int getSize()">1</method>
			<method name="public void setSize(int size)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.swing.XMLTableColumnDefinition</name>
		<wmc>18</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>16</cbo>
		<rfc>34</rfc>
		<lcom>77</lcom>
		<ca>1</ca>
		<ce>15</ce>
		<npm>15</npm>
		<lcom3>0.9411764705882353</lcom3>
		<loc>210</loc>
		<dam>0.3333333333333333</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.2962962962962963</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.0</amc>
		<cc>
			<method name="public void setColumnNameXPath(org.dom4j.XPath columnNameXPath)">1</method>
			<method name="public void setName(String name)">1</method>
			<method name="public void _init_(String name, String expression, int type)">1</method>
			<method name="public static int parseType(String typeName)">6</method>
			<method name="public String getName()">1</method>
			<method name="public void setXPath(org.dom4j.XPath xPath)">1</method>
			<method name="protected org.dom4j.XPath createXPath(String expression)">1</method>
			<method name="public void setType(int type)">1</method>
			<method name="public void _init_(org.dom4j.XPath columnXPath, org.dom4j.XPath xpath, int type)">1</method>
			<method name="public org.dom4j.XPath getXPath()">1</method>
			<method name="static Class class$(String x0)">1</method>
			<method name="public void _init_(String name, org.dom4j.XPath xpath, int type)">1</method>
			<method name="public int getType()">1</method>
			<method name="public Object getValue(Object row)">2</method>
			<method name="public Class getColumnClass()">6</method>
			<method name="public org.dom4j.XPath getColumnNameXPath()">1</method>
			<method name="public void _init_()">1</method>
			<method name="protected void handleException(Exception e)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.VisitorSupport</name>
		<wmc>11</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>12</rfc>
		<lcom>55</lcom>
		<ca>0</ca>
		<ce>13</ce>
		<npm>11</npm>
		<lcom3>2.0</lcom3>
		<loc>24</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.17355371900826447</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>1.1818181818181819</amc>
		<cc>
			<method name="public void visit(org.dom4j.Document document)">1</method>
			<method name="public void visit(org.dom4j.ProcessingInstruction node)">1</method>
			<method name="public void visit(org.dom4j.CDATA node)">1</method>
			<method name="public void visit(org.dom4j.DocumentType documentType)">1</method>
			<method name="public void visit(org.dom4j.Comment node)">1</method>
			<method name="public void visit(org.dom4j.Namespace namespace)">1</method>
			<method name="public void visit(org.dom4j.Text node)">1</method>
			<method name="public void visit(org.dom4j.Attribute node)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void visit(org.dom4j.Entity node)">1</method>
			<method name="public void visit(org.dom4j.Element node)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.iter.IterableAttributeAxis</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>8</rfc>
		<lcom>6</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>28</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.55</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.0</amc>
		<cc>
			<method name="public java.util.Iterator iterator(Object contextNode, org.jaxen.ContextSupport support)">1</method>
			<method name="public java.util.Iterator namedAccessIterator(Object contextNode, org.jaxen.ContextSupport support, String localName, String namespacePrefix, String namespaceURI)">1</method>
			<method name="public void _init_(int value)">1</method>
			<method name="public boolean supportsNamedAccess(org.jaxen.ContextSupport support)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultAllNodeStep</name>
		<wmc>5</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>12</rfc>
		<lcom>10</lcom>
		<ca>2</ca>
		<ce>10</ce>
		<npm>5</npm>
		<lcom3>2.0</lcom3>
		<loc>41</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.2</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public String getText()">1</method>
			<method name="public void _init_(org.jaxen.expr.iter.IterableAxis axis, org.jaxen.expr.PredicateSet predicateSet)">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public boolean matches(Object node, org.jaxen.ContextSupport contextSupport)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.Element</name>
		<wmc>69</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>109</cbo>
		<rfc>69</rfc>
		<lcom>2346</lcom>
		<ca>98</ca>
		<ce>14</ce>
		<npm>69</npm>
		<lcom3>2.0</lcom3>
		<loc>69</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.13600891861761427</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract org.dom4j.Element element(String)">1</method>
			<method name="public abstract org.dom4j.Element element(org.dom4j.QName)">1</method>
			<method name="public abstract void appendAttributes(org.dom4j.Element)">1</method>
			<method name="public abstract java.util.Iterator elementIterator(org.dom4j.QName)">1</method>
			<method name="public abstract String attributeValue(org.dom4j.QName)">1</method>
			<method name="public abstract org.dom4j.Attribute attribute(String)">1</method>
			<method name="public abstract String elementTextTrim(String)">1</method>
			<method name="public abstract String elementText(org.dom4j.QName)">1</method>
			<method name="public abstract String getQualifiedName()">1</method>
			<method name="public abstract org.dom4j.Attribute attribute(org.dom4j.QName)">1</method>
			<method name="public abstract String elementTextTrim(org.dom4j.QName)">1</method>
			<method name="public abstract void setAttributeValue(String, String)">1</method>
			<method name="public abstract String elementText(String)">1</method>
			<method name="public abstract org.dom4j.Element addCDATA(String)">1</method>
			<method name="public abstract void add(org.dom4j.Entity)">1</method>
			<method name="public abstract org.dom4j.Element addAttribute(String, String)">1</method>
			<method name="public abstract String getTextTrim()">1</method>
			<method name="public abstract org.dom4j.Namespace getNamespace()">1</method>
			<method name="public abstract void setAttributes(java.util.List)">1</method>
			<method name="public abstract java.util.Iterator elementIterator(String)">1</method>
			<method name="public abstract org.dom4j.Element addEntity(String, String)">1</method>
			<method name="public abstract org.dom4j.Element addProcessingInstruction(String, String)">1</method>
			<method name="public abstract boolean isRootElement()">1</method>
			<method name="public abstract java.util.List elements(org.dom4j.QName)">1</method>
			<method name="public abstract org.dom4j.Element createCopy(org.dom4j.QName)">1</method>
			<method name="public abstract org.dom4j.Element addComment(String)">1</method>
			<method name="public abstract void add(org.dom4j.Namespace)">1</method>
			<method name="public abstract String getNamespaceURI()">1</method>
			<method name="public abstract String attributeValue(org.dom4j.QName, String)">1</method>
			<method name="public abstract boolean remove(org.dom4j.Namespace)">1</method>
			<method name="public abstract Object getData()">1</method>
			<method name="public abstract java.util.List elements()">1</method>
			<method name="public abstract org.dom4j.Element createCopy()">1</method>
			<method name="public abstract java.util.List elements(String)">1</method>
			<method name="public abstract void setData(Object)">1</method>
			<method name="public abstract boolean hasMixedContent()">1</method>
			<method name="public abstract java.util.Iterator attributeIterator()">1</method>
			<method name="public abstract java.util.List declaredNamespaces()">1</method>
			<method name="public abstract java.util.List getNamespacesForURI(String)">1</method>
			<method name="public abstract org.dom4j.Element addAttribute(org.dom4j.QName, String)">1</method>
			<method name="public abstract org.dom4j.Element addProcessingInstruction(String, java.util.Map)">1</method>
			<method name="public abstract String getStringValue()">1</method>
			<method name="public abstract org.dom4j.QName getQName(String)">1</method>
			<method name="public abstract boolean remove(org.dom4j.CDATA)">1</method>
			<method name="public abstract org.dom4j.Element addText(String)">1</method>
			<method name="public abstract boolean remove(org.dom4j.Text)">1</method>
			<method name="public abstract org.dom4j.Element addNamespace(String, String)">1</method>
			<method name="public abstract java.util.Iterator elementIterator()">1</method>
			<method name="public abstract boolean remove(org.dom4j.Entity)">1</method>
			<method name="public abstract org.dom4j.QName getQName()">1</method>
			<method name="public abstract String getNamespacePrefix()">1</method>
			<method name="public abstract org.dom4j.Attribute attribute(int)">1</method>
			<method name="public abstract void add(org.dom4j.Attribute)">1</method>
			<method name="public abstract void add(org.dom4j.Text)">1</method>
			<method name="public abstract java.util.List attributes()">1</method>
			<method name="public abstract String attributeValue(String, String)">1</method>
			<method name="public abstract org.dom4j.Namespace getNamespaceForURI(String)">1</method>
			<method name="public abstract void setQName(org.dom4j.QName)">1</method>
			<method name="public abstract String getText()">1</method>
			<method name="public abstract org.dom4j.Element createCopy(String)">1</method>
			<method name="public abstract org.dom4j.Node getXPathResult(int)">1</method>
			<method name="public abstract java.util.List additionalNamespaces()">1</method>
			<method name="public abstract org.dom4j.Namespace getNamespaceForPrefix(String)">1</method>
			<method name="public abstract String attributeValue(String)">1</method>
			<method name="public abstract boolean isTextOnly()">1</method>
			<method name="public abstract void setAttributeValue(org.dom4j.QName, String)">1</method>
			<method name="public abstract int attributeCount()">1</method>
			<method name="public abstract void add(org.dom4j.CDATA)">1</method>
			<method name="public abstract boolean remove(org.dom4j.Attribute)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.saxpath.XPathReader</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>4</ca>
		<ce>5</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void parse(String)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.saxpath.Operator</name>
		<wmc>0</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>2</cbo>
		<rfc>0</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>2</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>13</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
		</cc>
	</class>
	<class>
		<name>org.dom4j.dom.DOMCDATA</name>
		<wmc>38</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>18</cbo>
		<rfc>86</rfc>
		<lcom>703</lcom>
		<ca>1</ca>
		<ce>17</ce>
		<npm>36</npm>
		<lcom3>2.0</lcom3>
		<loc>259</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2675438596491228</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.815789473684211</amc>
		<cc>
			<method name="public boolean isSupported(String feature, String version)">1</method>
			<method name="public void deleteData(int offset, int count)">1</method>
			<method name="public void _init_(String text)">1</method>
			<method name="public org.w3c.dom.Node getFirstChild()">1</method>
			<method name="public String getNodeName()">1</method>
			<method name="public org.w3c.dom.NamedNodeMap getAttributes()">1</method>
			<method name="public int getLength()">1</method>
			<method name="public org.w3c.dom.NodeList getChildNodes()">1</method>
			<method name="public org.w3c.dom.Node getNextSibling()">1</method>
			<method name="public void setPrefix(String prefix)">1</method>
			<method name="public String getNodeValue()">1</method>
			<method name="public void setData(String data)">1</method>
			<method name="public org.w3c.dom.Text splitText(int offset)">1</method>
			<method name="public boolean supports(String feature, String version)">1</method>
			<method name="protected org.dom4j.CDATA createCDATA(String text)">1</method>
			<method name="public org.w3c.dom.Document getOwnerDocument()">1</method>
			<method name="public String getNamespaceURI()">1</method>
			<method name="public org.w3c.dom.Node insertBefore(org.w3c.dom.Node newChild, org.w3c.dom.Node refChild)">1</method>
			<method name="public org.w3c.dom.Node replaceChild(org.w3c.dom.Node newChild, org.w3c.dom.Node oldChild)">1</method>
			<method name="public org.w3c.dom.Node appendChild(org.w3c.dom.Node newChild)">1</method>
			<method name="public boolean hasAttributes()">1</method>
			<method name="public String getPrefix()">1</method>
			<method name="public org.w3c.dom.Node removeChild(org.w3c.dom.Node oldChild)">1</method>
			<method name="public void insertData(int offset, String arg)">1</method>
			<method name="public void replaceData(int offset, int count, String arg)">1</method>
			<method name="public org.w3c.dom.Node getParentNode()">1</method>
			<method name="public void _init_(org.dom4j.Element parent, String text)">1</method>
			<method name="public String substringData(int offset, int count)">1</method>
			<method name="public String getLocalName()">1</method>
			<method name="private void checkNewChildNode(org.w3c.dom.Node newChild)">1</method>
			<method name="public boolean hasChildNodes()">1</method>
			<method name="public org.w3c.dom.Node cloneNode(boolean deep)">1</method>
			<method name="public void setNodeValue(String nodeValue)">1</method>
			<method name="public org.w3c.dom.Node getPreviousSibling()">1</method>
			<method name="public org.w3c.dom.Node getLastChild()">1</method>
			<method name="public void appendData(String arg)">1</method>
			<method name="public void normalize()">1</method>
			<method name="public String getData()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.SimpleFunctionContext</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>1</noc>
		<cbo>10</cbo>
		<rfc>13</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>3</npm>
		<lcom3>0.0</lcom3>
		<loc>56</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.333333333333332</amc>
		<cc>
			<method name="public void registerFunction(String namespaceURI, String localName, org.jaxen.Function function)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public org.jaxen.Function getFunction(String namespaceURI, String prefix, String localName)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultNameStep</name>
		<wmc>11</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>22</cbo>
		<rfc>58</rfc>
		<lcom>33</lcom>
		<ca>2</ca>
		<ce>20</ce>
		<npm>9</npm>
		<lcom3>0.625</lcom3>
		<loc>566</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.22727272727272727</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>50.09090909090909</amc>
		<cc>
			<method name="protected boolean matchesNamespaceURIs(String uri1, String uri2)">6</method>
			<method name="public void _init_(org.jaxen.expr.iter.IterableAxis axis, String prefix, String localName, org.jaxen.expr.PredicateSet predicateSet)">3</method>
			<method name="public String toString()">1</method>
			<method name="public String getText()">3</method>
			<method name="public String getLocalName()">1</method>
			<method name="public boolean isMatchesAnyName()">1</method>
			<method name="public java.util.List evaluate(org.jaxen.Context context)">1</method>
			<method name="private boolean hasNamespace(String uri)">3</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public String getPrefix()">1</method>
			<method name="public boolean matches(Object node, org.jaxen.ContextSupport contextSupport)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.IdentitySet$IdentityWrapper</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>4</cbo>
		<rfc>5</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>2</npm>
		<lcom3>0.0</lcom3>
		<loc>26</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.8333333333333334</cam>
		<ic>1</ic>
		<cbm>1</cbm>
		<amc>7.333333333333333</amc>
		<cc>
			<method name="public int hashCode()">1</method>
			<method name="public boolean equals(Object o)">2</method>
			<method name="void _init_(Object object)">1</method>
		</cc>
	</class>
	<class>
		<name>com.adobe.ac.ant.tasks.WindowsSWFLauncher</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>9</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>23</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.0</amc>
		<cc>
			<method name="public void launch(String arg0)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.swing.DocumentTreeModel</name>
		<wmc>3</wmc>
		<dit>2</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>6</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>0.0</lcom3>
		<loc>27</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.9393939393939394</mfa>
		<cam>0.8333333333333334</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.666666666666667</amc>
		<cc>
			<method name="public void setDocument(org.dom4j.Document document)">1</method>
			<method name="public void _init_(org.dom4j.Document document)">1</method>
			<method name="public org.dom4j.Document getDocument()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultMultiplicativeExpr</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>3</noc>
		<cbo>10</cbo>
		<rfc>9</rfc>
		<lcom>1</lcom>
		<ca>3</ca>
		<ce>7</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>24</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>11.0</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.DefaultNavigator</name>
		<wmc>22</wmc>
		<dit>1</dit>
		<noc>5</noc>
		<cbo>21</cbo>
		<rfc>41</rfc>
		<lcom>231</lcom>
		<ca>5</ca>
		<ce>16</ce>
		<npm>22</npm>
		<lcom3>2.0</lcom3>
		<loc>162</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6818181818181818</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>6.363636363636363</amc>
		<cc>
			<method name="public java.util.Iterator getChildAxisIterator(Object contextNode)">1</method>
			<method name="public short getNodeType(Object node)">7</method>
			<method name="public Object getParentNode(Object contextNode)">1</method>
			<method name="public java.util.Iterator getDescendantAxisIterator(Object contextNode)">1</method>
			<method name="public Object getDocument(String url)">1</method>
			<method name="public java.util.Iterator getAncestorOrSelfAxisIterator(Object contextNode)">1</method>
			<method name="public Object getDocumentNode(Object contextNode)">1</method>
			<method name="public String getProcessingInstructionTarget(Object obj)">1</method>
			<method name="public java.util.Iterator getPrecedingSiblingAxisIterator(Object contextNode)">1</method>
			<method name="public java.util.Iterator getAttributeAxisIterator(Object contextNode)">1</method>
			<method name="public java.util.Iterator getPrecedingAxisIterator(Object contextNode)">1</method>
			<method name="public java.util.Iterator getDescendantOrSelfAxisIterator(Object contextNode)">1</method>
			<method name="public java.util.Iterator getParentAxisIterator(Object contextNode)">1</method>
			<method name="public Object getElementById(Object contextNode, String elementId)">1</method>
			<method name="public java.util.Iterator getFollowingSiblingAxisIterator(Object contextNode)">1</method>
			<method name="public String translateNamespacePrefixToUri(String prefix, Object element)">1</method>
			<method name="public java.util.Iterator getAncestorAxisIterator(Object contextNode)">1</method>
			<method name="public String getProcessingInstructionData(Object obj)">1</method>
			<method name="public java.util.Iterator getNamespaceAxisIterator(Object contextNode)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public java.util.Iterator getFollowingAxisIterator(Object contextNode)">1</method>
			<method name="public java.util.Iterator getSelfAxisIterator(Object contextNode)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.XPathFactory</name>
		<wmc>25</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>22</cbo>
		<rfc>25</rfc>
		<lcom>300</lcom>
		<ca>4</ca>
		<ce>18</ce>
		<npm>25</npm>
		<lcom3>2.0</lcom3>
		<loc>25</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3142857142857143</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract org.jaxen.expr.LocationPath createRelativeLocationPath()">1</method>
			<method name="public abstract org.jaxen.expr.FilterExpr createFilterExpr(org.jaxen.expr.Expr)">1</method>
			<method name="public abstract org.jaxen.expr.NumberExpr createNumberExpr(double)">1</method>
			<method name="public abstract org.jaxen.expr.Predicate createPredicate(org.jaxen.expr.Expr)">1</method>
			<method name="public abstract org.jaxen.expr.BinaryExpr createMultiplicativeExpr(org.jaxen.expr.Expr, org.jaxen.expr.Expr, int)">1</method>
			<method name="public abstract org.jaxen.expr.Expr createUnaryExpr(org.jaxen.expr.Expr, int)">1</method>
			<method name="public abstract org.jaxen.expr.XPathExpr createXPath(org.jaxen.expr.Expr)">1</method>
			<method name="public abstract org.jaxen.expr.Step createAllNodeStep(int)">1</method>
			<method name="public abstract org.jaxen.expr.PathExpr createPathExpr(org.jaxen.expr.FilterExpr, org.jaxen.expr.LocationPath)">1</method>
			<method name="public abstract org.jaxen.expr.LiteralExpr createLiteralExpr(String)">1</method>
			<method name="public abstract org.jaxen.expr.Step createTextNodeStep(int)">1</method>
			<method name="public abstract org.jaxen.expr.BinaryExpr createRelationalExpr(org.jaxen.expr.Expr, org.jaxen.expr.Expr, int)">1</method>
			<method name="public abstract org.jaxen.expr.PredicateSet createPredicateSet()">1</method>
			<method name="public abstract org.jaxen.expr.Step createProcessingInstructionNodeStep(int, String)">1</method>
			<method name="public abstract org.jaxen.expr.BinaryExpr createOrExpr(org.jaxen.expr.Expr, org.jaxen.expr.Expr)">1</method>
			<method name="public abstract org.jaxen.expr.LocationPath createAbsoluteLocationPath()">1</method>
			<method name="public abstract org.jaxen.expr.BinaryExpr createAdditiveExpr(org.jaxen.expr.Expr, org.jaxen.expr.Expr, int)">1</method>
			<method name="public abstract org.jaxen.expr.UnionExpr createUnionExpr(org.jaxen.expr.Expr, org.jaxen.expr.Expr)">1</method>
			<method name="public abstract org.jaxen.expr.BinaryExpr createAndExpr(org.jaxen.expr.Expr, org.jaxen.expr.Expr)">1</method>
			<method name="public abstract org.jaxen.expr.Step createNameStep(int, String, String)">1</method>
			<method name="public abstract org.jaxen.expr.Step createCommentNodeStep(int)">1</method>
			<method name="public abstract org.jaxen.expr.VariableReferenceExpr createVariableReferenceExpr(String, String)">1</method>
			<method name="public abstract org.jaxen.expr.NumberExpr createNumberExpr(int)">1</method>
			<method name="public abstract org.jaxen.expr.BinaryExpr createEqualityExpr(org.jaxen.expr.Expr, org.jaxen.expr.Expr, int)">1</method>
			<method name="public abstract org.jaxen.expr.FunctionCallExpr createFunctionCallExpr(String, String)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.jdom.JDOMXPath</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>6</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.0</amc>
		<cc>
			<method name="public void _init_(String xpathExpr)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.jaxb.JAXBModifier$JAXBElementModifier</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>6</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>2</npm>
		<lcom3>0.33333333333333326</lcom3>
		<loc>32</loc>
		<dam>1.0</dam>
		<moa>3</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.5</amc>
		<cc>
			<method name="public void _init_(org.dom4j.jaxb.JAXBModifier this$0, org.dom4j.jaxb.JAXBModifier jaxbModifier, org.dom4j.jaxb.JAXBObjectModifier objectModifier)">1</method>
			<method name="public org.dom4j.Element modifyElement(org.dom4j.Element element)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.BinaryExpr</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>2</rfc>
		<lcom>1</lcom>
		<ca>10</ca>
		<ce>2</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>2</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract org.jaxen.expr.Expr getLHS()">1</method>
			<method name="public abstract org.jaxen.expr.Expr getRHS()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.CommentNodeStep</name>
		<wmc>0</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>0</rfc>
		<lcom>0</lcom>
		<ca>4</ca>
		<ce>2</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>0</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.AbstractCDATA</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>11</cbo>
		<rfc>16</rfc>
		<lcom>15</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>6</npm>
		<lcom3>2.0</lcom3>
		<loc>56</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4444444444444444</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.333333333333334</amc>
		<cc>
			<method name="public void write(java.io.Writer writer)">1</method>
			<method name="public String toString()">1</method>
			<method name="public String asXML()">1</method>
			<method name="public short getNodeType()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void accept(org.dom4j.Visitor visitor)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.bean.BeanMetaData</name>
		<wmc>11</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>18</cbo>
		<rfc>26</rfc>
		<lcom>35</lcom>
		<ca>1</ca>
		<ce>18</ce>
		<npm>9</npm>
		<lcom3>0.8222222222222222</lcom3>
		<loc>231</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.25</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>19.181818181818183</amc>
		<cc>
			<method name="public static org.dom4j.bean.BeanMetaData get(Class beanClass)">2</method>
			<method name="public int getIndex(org.dom4j.QName qName)">2</method>
			<method name="public Object getData(int index, Object bean)">1</method>
			<method name="public void _init_(Class beanClass)">4</method>
			<method name="public org.dom4j.bean.BeanAttributeList createAttributeList(org.dom4j.bean.BeanElement parent)">1</method>
			<method name="public void setData(int index, Object bean, Object data)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public int attributeCount()">1</method>
			<method name="public org.dom4j.QName getQName(int index)">1</method>
			<method name="public int getIndex(String name)">2</method>
			<method name="protected void handleException(Exception e)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.SAXWriter</name>
		<wmc>49</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>42</cbo>
		<rfc>129</rfc>
		<lcom>914</lcom>
		<ca>1</ca>
		<ce>41</ce>
		<npm>33</npm>
		<lcom3>0.890625</lcom3>
		<loc>940</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.0859375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.93877551020408</amc>
		<cc>
			<method name="public void setLexicalHandler(org.xml.sax.ext.LexicalHandler lexicalHandler)">1</method>
			<method name="public void setEntityResolver(org.xml.sax.EntityResolver entityResolver)">1</method>
			<method name="protected boolean isIgnoreableNamespace(org.dom4j.Namespace namespace, org.dom4j.tree.NamespaceStack namespaceStack)">5</method>
			<method name="protected void documentLocator(org.dom4j.Document document)">1</method>
			<method name="protected void endDocument()">1</method>
			<method name="public org.xml.sax.ErrorHandler getErrorHandler()">1</method>
			<method name="protected org.xml.sax.helpers.AttributesImpl addNamespaceAttribute(org.xml.sax.helpers.AttributesImpl attrs, org.dom4j.Namespace namespace)">5</method>
			<method name="public void write(org.dom4j.Entity entity)">1</method>
			<method name="public org.xml.sax.ContentHandler getContentHandler()">1</method>
			<method name="protected org.xml.sax.Attributes createAttributes(org.dom4j.Element element, org.xml.sax.Attributes namespaceAttributes)">1</method>
			<method name="protected void startDocument()">1</method>
			<method name="public void setDeclareNamespaceAttributes(boolean declareNamespaceAttrs)">1</method>
			<method name="public void write(org.dom4j.Document document)">1</method>
			<method name="public void parse(org.xml.sax.InputSource input)">1</method>
			<method name="public org.xml.sax.EntityResolver getEntityResolver()">1</method>
			<method name="public void write(org.dom4j.Node node)">1</method>
			<method name="public void setProperty(String name, Object value)">3</method>
			<method name="protected void dtdHandler(org.dom4j.Document document)">1</method>
			<method name="public void writeClose(org.dom4j.Element element)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void setXMLReader(org.xml.sax.XMLReader xmlReader)">1</method>
			<method name="protected void endElement(org.dom4j.Element element)">1</method>
			<method name="public void write(org.dom4j.ProcessingInstruction pi)">1</method>
			<method name="protected void checkForNullHandlers()">1</method>
			<method name="public void write(org.dom4j.CDATA cdata)">1</method>
			<method name="public boolean isDeclareNamespaceAttributes()">1</method>
			<method name="public void _init_(org.xml.sax.ContentHandler contentHandler)">1</method>
			<method name="public void parse(String systemId)">1</method>
			<method name="public void write(String text)">1</method>
			<method name="protected void endPrefixMapping(org.dom4j.tree.NamespaceStack stack, int stackSize)">1</method>
			<method name="protected org.xml.sax.helpers.AttributesImpl startPrefixMapping(org.dom4j.Element element, org.dom4j.tree.NamespaceStack namespaceStack)">1</method>
			<method name="protected void startElement(org.dom4j.Element element, org.xml.sax.helpers.AttributesImpl namespaceAttributes)">1</method>
			<method name="public void _init_(org.xml.sax.ContentHandler contentHandler, org.xml.sax.ext.LexicalHandler lexicalHandler, org.xml.sax.EntityResolver entityResolver)">1</method>
			<method name="protected void write(org.dom4j.Element element, org.dom4j.tree.NamespaceStack namespaceStack)">1</method>
			<method name="public void setDTDHandler(org.xml.sax.DTDHandler handler)">1</method>
			<method name="public void setErrorHandler(org.xml.sax.ErrorHandler errorHandler)">1</method>
			<method name="public boolean getFeature(String name)">1</method>
			<method name="protected void writeContent(org.dom4j.Branch branch, org.dom4j.tree.NamespaceStack namespaceStack)">1</method>
			<method name="public void write(org.dom4j.Comment comment)">1</method>
			<method name="public Object getProperty(String name)">1</method>
			<method name="public void setContentHandler(org.xml.sax.ContentHandler contentHandler)">1</method>
			<method name="public org.xml.sax.ext.LexicalHandler getLexicalHandler()">1</method>
			<method name="public org.xml.sax.DTDHandler getDTDHandler()">1</method>
			<method name="protected void entityResolver(org.dom4j.Document document)">1</method>
			<method name="public void _init_(org.xml.sax.ContentHandler contentHandler, org.xml.sax.ext.LexicalHandler lexicalHandler)">1</method>
			<method name="public void setFeature(String name, boolean value)">1</method>
			<method name="public void writeOpen(org.dom4j.Element element)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void write(org.dom4j.Element element)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.SAXModifier</name>
		<wmc>23</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>29</cbo>
		<rfc>56</rfc>
		<lcom>187</lcom>
		<ca>1</ca>
		<ce>28</ce>
		<npm>20</npm>
		<lcom3>0.6818181818181818</lcom3>
		<loc>319</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.15217391304347827</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.652173913043478</amc>
		<cc>
			<method name="public org.dom4j.DocumentFactory getDocumentFactory()">1</method>
			<method name="private org.dom4j.io.SAXReader installModifyReader()">1</method>
			<method name="public org.dom4j.Document modify(java.io.Reader source)">1</method>
			<method name="public void resetModifiers()">1</method>
			<method name="public org.dom4j.io.XMLWriter getXMLWriter()">1</method>
			<method name="public void addModifier(String path, org.dom4j.io.ElementModifier modifier)">1</method>
			<method name="public org.dom4j.Document modify(String source)">1</method>
			<method name="public boolean isPruneElements()">1</method>
			<method name="public org.dom4j.Document modify(java.io.File source)">1</method>
			<method name="public org.dom4j.Document modify(org.xml.sax.InputSource source)">1</method>
			<method name="public void setXMLWriter(org.dom4j.io.XMLWriter writer)">1</method>
			<method name="private org.xml.sax.XMLReader getXMLReader()">1</method>
			<method name="private org.dom4j.io.SAXModifyReader getSAXModifyReader()">2</method>
			<method name="public void _init_(org.xml.sax.XMLReader xmlReader)">1</method>
			<method name="public void removeModifier(String path)">1</method>
			<method name="public org.dom4j.Document modify(java.io.InputStream source, String systemId)">1</method>
			<method name="public void _init_(org.xml.sax.XMLReader xmlReader, boolean pruneElements)">1</method>
			<method name="public void setDocumentFactory(org.dom4j.DocumentFactory factory)">1</method>
			<method name="public org.dom4j.Document modify(java.io.Reader source, String systemId)">1</method>
			<method name="public org.dom4j.Document modify(java.net.URL source)">1</method>
			<method name="public void _init_(boolean pruneElements)">1</method>
			<method name="public org.dom4j.Document modify(java.io.InputStream source)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.ConcurrentReaderHashMap$Entry</name>
		<wmc>7</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>17</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>6</ce>
		<npm>6</npm>
		<lcom3>0.625</lcom3>
		<loc>91</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.42857142857142855</cam>
		<ic>1</ic>
		<cbm>1</cbm>
		<amc>11.428571428571429</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public int hashCode()">1</method>
			<method name="void _init_(int hash, Object key, Object value, org.dom4j.tree.ConcurrentReaderHashMap$Entry next)">1</method>
			<method name="public boolean equals(Object o)">4</method>
			<method name="public Object getKey()">1</method>
			<method name="public Object setValue(Object value)">2</method>
			<method name="public Object getValue()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.IdentityHashMap$EmptyHashIterator</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>7</rfc>
		<lcom>6</lcom>
		<ca>0</ca>
		<ce>5</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>17</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.25</amc>
		<cc>
			<method name="public boolean hasNext()">1</method>
			<method name="void _init_()">1</method>
			<method name="public void remove()">1</method>
			<method name="public Object next()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultEqualsExpr</name>
		<wmc>5</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>16</rfc>
		<lcom>10</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>52</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.4</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="protected boolean evaluateObjectObject(Object lhs, Object rhs)">4</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public String getOperator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultGreaterThanExpr</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>7</rfc>
		<lcom>6</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>23</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.75</amc>
		<cc>
			<method name="protected boolean evaluateDoubleDouble(Double lhs, Double rhs)">2</method>
			<method name="public void _init_(org.jaxen.expr.Expr lhs, org.jaxen.expr.Expr rhs)">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public String getOperator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.IdentityHashMap</name>
		<wmc>29</wmc>
		<dit>2</dit>
		<noc>0</noc>
		<cbo>28</cbo>
		<rfc>61</rfc>
		<lcom>148</lcom>
		<ca>4</ca>
		<ce>28</ce>
		<npm>17</npm>
		<lcom3>0.806547619047619</lcom3>
		<loc>862</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.4186046511627907</mfa>
		<cam>0.1853448275862069</cam>
		<ic>2</ic>
		<cbm>10</cbm>
		<amc>28.310344827586206</amc>
		<cc>
			<method name="public boolean containsKey(Object key)">6</method>
			<method name="public void _init_(int initialCapacity)">1</method>
			<method name="private void rehash()">2</method>
			<method name="public Object remove(Object key)">8</method>
			<method name="private void writeObject(java.io.ObjectOutputStream s)">1</method>
			<method name="public java.util.Set entrySet()">2</method>
			<method name="static int access$308(org.jaxen.util.IdentityHashMap x0)">1</method>
			<method name="public Object clone()">3</method>
			<method name="public int size()">1</method>
			<method name="static org.jaxen.util.IdentityHashMap$Entry[] access$200(org.jaxen.util.IdentityHashMap x0)">1</method>
			<method name="public void clear()">2</method>
			<method name="int capacity()">1</method>
			<method name="static int access$110(org.jaxen.util.IdentityHashMap x0)">1</method>
			<method name="float loadFactor()">1</method>
			<method name="public void _init_(java.util.Map t)">1</method>
			<method name="public java.util.Collection values()">2</method>
			<method name="static int access$300(org.jaxen.util.IdentityHashMap x0)">1</method>
			<method name="private java.util.Iterator getHashIterator(int type)">2</method>
			<method name="public java.util.Set keySet()">2</method>
			<method name="public Object put(Object key, Object value)">7</method>
			<method name="public boolean containsValue(Object value)">7</method>
			<method name="static java.util.Iterator access$000(org.jaxen.util.IdentityHashMap x0, int x1)">1</method>
			<method name="static int access$100(org.jaxen.util.IdentityHashMap x0)">1</method>
			<method name="public void putAll(java.util.Map t)">2</method>
			<method name="private void readObject(java.io.ObjectInputStream s)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public boolean isEmpty()">2</method>
			<method name="public Object get(Object key)">6</method>
			<method name="public void _init_(int initialCapacity, float loadFactor)">5</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.PrecedingSiblingAxisIterator</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>16</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>9</ce>
		<npm>4</npm>
		<lcom3>0.625</lcom3>
		<loc>107</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>19.6</amc>
		<cc>
			<method name="public boolean hasNext()">2</method>
			<method name="public void remove()">1</method>
			<method name="public Object next()">1</method>
			<method name="public void _init_(Object contextNode, org.jaxen.Navigator navigator)">1</method>
			<method name="private void init()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.JAXPHelper</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>14</rfc>
		<lcom>3</lcom>
		<ca>2</ca>
		<ce>9</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>34</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.333333333333334</amc>
		<cc>
			<method name="protected void _init_()">1</method>
			<method name="public static org.xml.sax.XMLReader createXMLReader(boolean validating, boolean namespaceAware)">1</method>
			<method name="public static org.w3c.dom.Document createDocument(boolean validating, boolean namespaceAware)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.jaxb.JAXBObjectModifier</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>3</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract javax.xml.bind.Element modifyObject(javax.xml.bind.Element)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.FlyweightAttribute</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>8</cbo>
		<rfc>10</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>6</npm>
		<lcom3>0.3</lcom3>
		<loc>54</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.666666666666667</amc>
		<cc>
			<method name="public void _init_(String name, String value)">1</method>
			<method name="public void _init_(String name, String value, org.dom4j.Namespace namespace)">1</method>
			<method name="public void _init_(org.dom4j.QName qname)">1</method>
			<method name="public String getValue()">1</method>
			<method name="public void _init_(org.dom4j.QName qname, String value)">1</method>
			<method name="public org.dom4j.QName getQName()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.IllegalAddException</name>
		<wmc>3</wmc>
		<dit>5</dit>
		<noc>0</noc>
		<cbo>15</cbo>
		<rfc>10</rfc>
		<lcom>3</lcom>
		<ca>7</ca>
		<ce>8</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>49</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>1.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>15.333333333333334</amc>
		<cc>
			<method name="public void _init_(String reason)">1</method>
			<method name="public void _init_(org.dom4j.Element parent, org.dom4j.Node node, String reason)">1</method>
			<method name="public void _init_(org.dom4j.Branch parent, org.dom4j.Node node, String reason)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.jaxb.JAXBReader$PruningElementHandler</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>6</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>1.0</lcom3>
		<loc>20</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.333333333333333</amc>
		<cc>
			<method name="public void onStart(org.dom4j.ElementPath parm1)">1</method>
			<method name="public void _init_(org.dom4j.jaxb.JAXBReader this$0)">1</method>
			<method name="public void onEnd(org.dom4j.ElementPath elementPath)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.NodeComparator</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>13</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>0.0</lcom3>
		<loc>156</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>30.0</amc>
		<cc>
			<method name="private int compareSiblings(Object sib1, Object sib2)">1</method>
			<method name="private int getDepth(Object o)">1</method>
			<method name="public int compare(Object o1, Object o2)">9</method>
			<method name="void _init_(org.jaxen.Navigator navigator)">1</method>
			<method name="private boolean isNonChild(Object o)">3</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.SubstringAfterFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>12</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>48</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>15.0</amc>
		<cc>
			<method name="public static String evaluate(Object strArg, Object matchArg, org.jaxen.Navigator nav)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.AbstractNode</name>
		<wmc>35</wmc>
		<dit>1</dit>
		<noc>7</noc>
		<cbo>27</cbo>
		<rfc>63</rfc>
		<lcom>591</lcom>
		<ca>7</ca>
		<ce>20</ce>
		<npm>32</npm>
		<lcom3>0.9264705882352942</lcom3>
		<loc>336</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.25980392156862747</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.542857142857143</amc>
		<cc>
			<method name="public void write(java.io.Writer writer)">1</method>
			<method name="public java.util.List selectNodes(String xpathExpression, String comparisonXPathExpression)">1</method>
			<method name="public void setName(String name)">1</method>
			<method name="protected org.dom4j.DocumentFactory getDocumentFactory()">1</method>
			<method name="public org.dom4j.Node asXPathResult(org.dom4j.Element parent)">2</method>
			<method name="public short getNodeType()">1</method>
			<method name="public Object clone()">2</method>
			<method name="public String getUniquePath()">1</method>
			<method name="public org.dom4j.Document getDocument()">2</method>
			<method name="public String getStringValue()">1</method>
			<method name="public String getNodeTypeName()">3</method>
			<method name="public org.dom4j.NodeFilter createXPathFilter(String patternText)">1</method>
			<method name="public boolean isReadOnly()">1</method>
			<method name="public void setDocument(org.dom4j.Document document)">1</method>
			<method name="public org.dom4j.Node detach()">3</method>
			<method name="public boolean supportsParent()">1</method>
			<method name="public Number numberValueOf(String xpathExpression)">1</method>
			<method name="public java.util.List selectNodes(String xpathExpression)">1</method>
			<method name="public String valueOf(String xpathExpression)">1</method>
			<method name="public String getName()">1</method>
			<method name="public org.dom4j.rule.Pattern createPattern(String patternText)">1</method>
			<method name="public void setParent(org.dom4j.Element parent)">1</method>
			<method name="public String getText()">1</method>
			<method name="protected org.dom4j.Node createXPathResult(org.dom4j.Element parent)">1</method>
			<method name="public java.util.List selectNodes(String xpathExpression, String comparisonXPathExpression, boolean removeDuplicates)">1</method>
			<method name="public String getPath()">1</method>
			<method name="public boolean hasContent()">1</method>
			<method name="public void setText(String text)">1</method>
			<method name="public Object selectObject(String xpathExpression)">1</method>
			<method name="public org.dom4j.Node selectSingleNode(String xpathExpression)">1</method>
			<method name="public org.dom4j.XPath createXPath(String xpathExpression)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public boolean matches(String patternText)">1</method>
			<method name="public org.dom4j.Element getParent()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.Visitor</name>
		<wmc>10</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>23</cbo>
		<rfc>10</rfc>
		<lcom>45</lcom>
		<ca>12</ca>
		<ce>12</ce>
		<npm>10</npm>
		<lcom3>2.0</lcom3>
		<loc>10</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.18181818181818182</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void visit(org.dom4j.Element)">1</method>
			<method name="public abstract void visit(org.dom4j.CDATA)">1</method>
			<method name="public abstract void visit(org.dom4j.Attribute)">1</method>
			<method name="public abstract void visit(org.dom4j.Comment)">1</method>
			<method name="public abstract void visit(org.dom4j.DocumentType)">1</method>
			<method name="public abstract void visit(org.dom4j.Entity)">1</method>
			<method name="public abstract void visit(org.dom4j.ProcessingInstruction)">1</method>
			<method name="public abstract void visit(org.dom4j.Text)">1</method>
			<method name="public abstract void visit(org.dom4j.Document)">1</method>
			<method name="public abstract void visit(org.dom4j.Namespace)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.xom.DocumentNavigator$XPathNamespace</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>10</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>5</npm>
		<lcom3>0.5</lcom3>
		<loc>52</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>8.8</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public String getNamespaceURI()">1</method>
			<method name="public void _init_(nu.xom.Element elt, String uri, String prefix)">1</method>
			<method name="public String getNamespacePrefix()">1</method>
			<method name="public nu.xom.Element getElement()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.CharacterData</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>17</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>13</ca>
		<ce>4</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void appendText(String)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.util.IndexedDocumentFactory</name>
		<wmc>5</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>8</rfc>
		<lcom>8</lcom>
		<ca>0</ca>
		<ce>6</ce>
		<npm>4</npm>
		<lcom3>0.75</lcom3>
		<loc>27</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.2</amc>
		<cc>
			<method name="public org.dom4j.Element createElement(org.dom4j.QName qname)">1</method>
			<method name="public org.dom4j.Element createElement(org.dom4j.QName qname, int attributeCount)">1</method>
			<method name="public static org.dom4j.DocumentFactory getInstance()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.datatype.SchemaParser</name>
		<wmc>19</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>30</cbo>
		<rfc>66</rfc>
		<lcom>99</lcom>
		<ca>1</ca>
		<ce>30</ce>
		<npm>4</npm>
		<lcom3>0.6626984126984127</lcom3>
		<loc>785</loc>
		<dam>1.0</dam>
		<moa>13</moa>
		<mfa>0.0</mfa>
		<cam>0.22777777777777777</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>39.578947368421055</amc>
		<cc>
			<method name="public void _init_(org.dom4j.datatype.DatatypeDocumentFactory documentFactory)">1</method>
			<method name="private com.sun.msv.datatype.xsd.XSDatatype getTypeByName(String type)">6</method>
			<method name="private void onDatatypeElement(org.dom4j.Element xsdElement, org.dom4j.DocumentFactory parentFactory)">8</method>
			<method name="private com.sun.msv.datatype.xsd.XSDatatype loadXSDatatypeFromSimpleType(org.dom4j.Element xsdSimpleType)">5</method>
			<method name="private void onSchemaError(String message)">1</method>
			<method name="private void onSchemaComplexType(org.dom4j.Element schemaComplexType, org.dom4j.datatype.DatatypeElementFactory elementFactory)">5</method>
			<method name="private com.sun.msv.datatype.xsd.XSDatatype dataTypeForXsdAttribute(org.dom4j.Element xsdAttribute)">3</method>
			<method name="private void onNamedSchemaSimpleType(org.dom4j.Element schemaSimpleType)">2</method>
			<method name="private synchronized void internalBuild(org.dom4j.Document schemaDocument)">8</method>
			<method name="private void onDatatypeAttribute(org.dom4j.Element xsdElement, org.dom4j.datatype.DatatypeElementFactory elementFactory, org.dom4j.Element xsdAttribute)">2</method>
			<method name="public void build(org.dom4j.Document schemaDocument, org.dom4j.Namespace namespace)">1</method>
			<method name="public void build(org.dom4j.Document schemaDocument)">1</method>
			<method name="private void onChildElements(org.dom4j.Element element, org.dom4j.datatype.DatatypeElementFactory fact)">2</method>
			<method name="private com.sun.msv.datatype.xsd.XSDatatype deriveSimpleType(com.sun.msv.datatype.xsd.XSDatatype baseType, org.dom4j.Element xsdRestriction)">2</method>
			<method name="static void _clinit_()">1</method>
			<method name="private org.dom4j.datatype.DatatypeElementFactory getDatatypeElementFactory(org.dom4j.QName name)">2</method>
			<method name="public void _init_()">1</method>
			<method name="private void onNamedSchemaComplexType(org.dom4j.Element schemaComplexType)">2</method>
			<method name="private org.dom4j.QName getQName(String name)">2</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.NamespaceUriFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>21</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>101</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>32.666666666666664</amc>
		<cc>
			<method name="public static String evaluate(java.util.List list, org.jaxen.Navigator nav)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.rule.pattern.DefaultPattern</name>
		<wmc>6</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>8</rfc>
		<lcom>13</lcom>
		<ca>0</ca>
		<ce>6</ce>
		<npm>6</npm>
		<lcom3>0.8</lcom3>
		<loc>26</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4444444444444444</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.1666666666666665</amc>
		<cc>
			<method name="public boolean matches(org.dom4j.Node node)">1</method>
			<method name="public org.dom4j.rule.Pattern[] getUnionPatterns()">1</method>
			<method name="public short getMatchType()">1</method>
			<method name="public String getMatchesNodeName()">1</method>
			<method name="public double getPriority()">1</method>
			<method name="public void _init_(org.dom4j.NodeFilter filter)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultPathExpr</name>
		<wmc>9</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>25</rfc>
		<lcom>28</lcom>
		<ca>1</ca>
		<ce>13</ce>
		<npm>9</npm>
		<lcom3>0.3125</lcom3>
		<loc>160</loc>
		<dam>1.0</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.3111111111111111</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>16.555555555555557</amc>
		<cc>
			<method name="public String toString()">2</method>
			<method name="public String getText()">3</method>
			<method name="public Object evaluate(org.jaxen.Context context)">1</method>
			<method name="public org.jaxen.expr.Expr simplify()">7</method>
			<method name="public void _init_(org.jaxen.expr.Expr filterExpr, org.jaxen.expr.LocationPath locationPath)">1</method>
			<method name="public org.jaxen.expr.LocationPath getLocationPath()">1</method>
			<method name="public org.jaxen.expr.Expr getFilterExpr()">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public void setFilterExpr(org.jaxen.expr.Expr filterExpr)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.FilterExpr</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>16</cbo>
		<rfc>2</rfc>
		<lcom>1</lcom>
		<ca>10</ca>
		<ce>6</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>2</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract boolean asBoolean(org.jaxen.Context)">1</method>
			<method name="public abstract org.jaxen.expr.Expr getExpr()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.VariableReferenceExpr</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>2</rfc>
		<lcom>1</lcom>
		<ca>7</ca>
		<ce>3</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>2</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract String getVariableName()">1</method>
			<method name="public abstract String getPrefix()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.dom.DocumentNavigator$AttributeIterator</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>10</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>3</npm>
		<lcom3>0.3333333333333333</lcom3>
		<loc>49</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.75</amc>
		<cc>
			<method name="public boolean hasNext()">2</method>
			<method name="public void remove()">1</method>
			<method name="public Object next()">2</method>
			<method name="void _init_(org.w3c.dom.Node parent)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.LastFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>8</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>24</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.0</amc>
		<cc>
			<method name="public static Double evaluate(org.jaxen.Context context)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.ConcurrentReaderHashMap$Values</name>
		<wmc>6</wmc>
		<dit>2</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>11</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>4</npm>
		<lcom3>0.0</lcom3>
		<loc>36</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.8</mfa>
		<cam>0.4166666666666667</cam>
		<ic>1</ic>
		<cbm>5</cbm>
		<amc>4.833333333333333</amc>
		<cc>
			<method name="private void _init_(org.dom4j.tree.ConcurrentReaderHashMap this$0)">1</method>
			<method name="public boolean contains(Object o)">1</method>
			<method name="public void clear()">1</method>
			<method name="void _init_(org.dom4j.tree.ConcurrentReaderHashMap x0, org.dom4j.tree.ConcurrentReaderHashMap$1 x1)">1</method>
			<method name="public int size()">1</method>
			<method name="public java.util.Iterator iterator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.SAXHelper</name>
		<wmc>7</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>18</cbo>
		<rfc>23</rfc>
		<lcom>19</lcom>
		<ca>4</ca>
		<ce>14</ce>
		<npm>3</npm>
		<lcom3>0.6666666666666666</lcom3>
		<loc>127</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.0</amc>
		<cc>
			<method name="protected void _init_()">1</method>
			<method name="public static boolean setParserFeature(org.xml.sax.XMLReader reader, String featureName, boolean value)">1</method>
			<method name="protected static org.xml.sax.XMLReader createXMLReaderViaJAXP(boolean validating, boolean namespaceAware)">3</method>
			<method name="protected static boolean isVerboseErrorReporting()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public static org.xml.sax.XMLReader createXMLReader(boolean validating)">1</method>
			<method name="public static boolean setParserProperty(org.xml.sax.XMLReader reader, String propertyName, Object value)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.dom.NamespaceNode$1</name>
		<wmc>0</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>3</cbo>
		<rfc>0</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>1</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>0</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
		</cc>
	</class>
	<class>
		<name>org.jaxen.javabean.JavaBeanXPath</name>
		<wmc>3</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>15</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>13</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>106</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>34.333333333333336</amc>
		<cc>
			<method name="protected org.jaxen.Context getContext(Object node)">5</method>
			<method name="public Object evaluate(Object node)">1</method>
			<method name="public void _init_(String xpathExpr)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.saxpath.base.XPathLexer</name>
		<wmc>44</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>51</rfc>
		<lcom>920</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>3</npm>
		<lcom3>0.5697674418604651</lcom3>
		<loc>1082</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.2318181818181818</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>23.5</amc>
		<cc>
			<method name="org.jaxen.saxpath.base.Token at()">1</method>
			<method name="org.jaxen.saxpath.base.Token relationalOperator()">6</method>
			<method name="char LA(int i)">2</method>
			<method name="int currentPosition()">1</method>
			<method name="void setPreviousToken(org.jaxen.saxpath.base.Token previousToken)">1</method>
			<method name="org.jaxen.saxpath.base.Token rightBracket()">1</method>
			<method name="org.jaxen.saxpath.base.Token slashes()">3</method>
			<method name="org.jaxen.saxpath.base.Token and()">5</method>
			<method name="org.jaxen.saxpath.base.Token div()">5</method>
			<method name="int endPosition()">1</method>
			<method name="org.jaxen.saxpath.base.Token minus()">1</method>
			<method name="public void _init_(String xpath)">1</method>
			<method name="void consume(int i)">1</method>
			<method name="org.jaxen.saxpath.base.Token literal()">4</method>
			<method name="org.jaxen.saxpath.base.Token identifier()">3</method>
			<method name="org.jaxen.saxpath.base.Token leftBracket()">1</method>
			<method name="org.jaxen.saxpath.base.Token rightParen()">1</method>
			<method name="boolean hasMoreChars()">2</method>
			<method name="org.jaxen.saxpath.base.Token operatorName()">6</method>
			<method name="boolean isIdentifierStartChar(char c)">1</method>
			<method name="public org.jaxen.saxpath.base.Token nextToken()">9</method>
			<method name="org.jaxen.saxpath.base.Token mod()">5</method>
			<method name="org.jaxen.saxpath.base.Token whitespace()">7</method>
			<method name="void _init_()">1</method>
			<method name="void consume()">1</method>
			<method name="org.jaxen.saxpath.base.Token dots()">3</method>
			<method name="org.jaxen.saxpath.base.Token notEquals()">1</method>
			<method name="org.jaxen.saxpath.base.Token leftParen()">1</method>
			<method name="org.jaxen.saxpath.base.Token number()">3</method>
			<method name="org.jaxen.saxpath.base.Token or()">4</method>
			<method name="org.jaxen.saxpath.base.Token plus()">1</method>
			<method name="void setXPath(String xpath)">1</method>
			<method name="org.jaxen.saxpath.base.Token pipe()">1</method>
			<method name="org.jaxen.saxpath.base.Token getPreviousToken()">1</method>
			<method name="public String getXPath()">1</method>
			<method name="org.jaxen.saxpath.base.Token star()">1</method>
			<method name="org.jaxen.saxpath.base.Token equals()">1</method>
			<method name="org.jaxen.saxpath.base.Token doubleColon()">1</method>
			<method name="boolean isIdentifierChar(char c)">1</method>
			<method name="org.jaxen.saxpath.base.Token dollar()">1</method>
			<method name="org.jaxen.saxpath.base.Token identifierOrOperatorName()">3</method>
			<method name="org.jaxen.saxpath.base.Token comma()">1</method>
			<method name="org.jaxen.saxpath.base.Token not()">1</method>
			<method name="org.jaxen.saxpath.base.Token colon()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.saxpath.Axis</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>6</rfc>
		<lcom>3</lcom>
		<ca>2</ca>
		<ce>4</ce>
		<npm>3</npm>
		<lcom3>1.5</lcom3>
		<loc>133</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3333333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>38.666666666666664</amc>
		<cc>
			<method name="public static String lookup(int axisNum)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public static int lookup(String axisName)">14</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.util.AttributeHelper</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>11</rfc>
		<lcom>6</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>42</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.3</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.5</amc>
		<cc>
			<method name="protected void _init_()">1</method>
			<method name="protected static boolean booleanValue(org.dom4j.Attribute attribute)">4</method>
			<method name="public static boolean booleanValue(org.dom4j.Element element, org.dom4j.QName attributeQName)">1</method>
			<method name="public static boolean booleanValue(org.dom4j.Element element, String attributeName)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.SubstringFunction</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>14</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>13</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>103</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>50.5</amc>
		<cc>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.ContainsFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>10</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>10</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>41</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.666666666666666</amc>
		<cc>
			<method name="public static Boolean evaluate(Object strArg, Object matchArg, org.jaxen.Navigator nav)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.util.XMLErrorHandler</name>
		<wmc>15</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>28</rfc>
		<lcom>17</lcom>
		<ca>0</ca>
		<ce>9</ce>
		<npm>13</npm>
		<lcom3>0.7551020408163265</lcom3>
		<loc>170</loc>
		<dam>1.0</dam>
		<moa>7</moa>
		<mfa>0.0</mfa>
		<cam>0.42857142857142855</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>9.866666666666667</amc>
		<cc>
			<method name="public org.dom4j.Element getErrors()">1</method>
			<method name="public org.dom4j.QName getFatalErrorQName()">1</method>
			<method name="public void _init_(org.dom4j.Element errors)">1</method>
			<method name="protected void addException(org.dom4j.Element element, org.xml.sax.SAXParseException e)">5</method>
			<method name="public org.dom4j.QName getErrorQName()">1</method>
			<method name="public void error(org.xml.sax.SAXParseException e)">1</method>
			<method name="public void setWarningQName(org.dom4j.QName warningQName)">1</method>
			<method name="public void fatalError(org.xml.sax.SAXParseException e)">1</method>
			<method name="public org.dom4j.QName getWarningQName()">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public void warning(org.xml.sax.SAXParseException e)">1</method>
			<method name="public void setErrors(org.dom4j.Element errors)">1</method>
			<method name="public void setFatalErrorQName(org.dom4j.QName fatalErrorQName)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void setErrorQName(org.dom4j.QName errorQName)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultTextNodeStep</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>13</rfc>
		<lcom>6</lcom>
		<ca>2</ca>
		<ce>11</ce>
		<npm>4</npm>
		<lcom3>2.0</lcom3>
		<loc>33</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.25</amc>
		<cc>
			<method name="public String getText()">1</method>
			<method name="public void _init_(org.jaxen.expr.iter.IterableAxis axis, org.jaxen.expr.PredicateSet predicateSet)">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public boolean matches(Object node, org.jaxen.ContextSupport support)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.FloorFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>12</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>12</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>33</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.0</amc>
		<cc>
			<method name="public static Double evaluate(Object obj, org.jaxen.Navigator nav)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultVariableReferenceExpr</name>
		<wmc>7</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>14</rfc>
		<lcom>17</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>7</npm>
		<lcom3>0.3333333333333333</lcom3>
		<loc>104</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.35714285714285715</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.571428571428571</amc>
		<cc>
			<method name="public String toString()">2</method>
			<method name="public String getText()">2</method>
			<method name="public Object evaluate(org.jaxen.Context context)">1</method>
			<method name="public String getVariableName()">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public void _init_(String prefix, String variableName)">1</method>
			<method name="public String getPrefix()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.DocumentSource</name>
		<wmc>7</wmc>
		<dit>2</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>17</rfc>
		<lcom>9</lcom>
		<ca>0</ca>
		<ce>12</ce>
		<npm>7</npm>
		<lcom3>0.8333333333333334</lcom3>
		<loc>99</loc>
		<dam>0.5</dam>
		<moa>0</moa>
		<mfa>0.5833333333333334</mfa>
		<cam>0.34285714285714286</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.857142857142858</amc>
		<cc>
			<method name="public void setXMLReader(org.xml.sax.XMLReader reader)">1</method>
			<method name="public void setDocument(org.dom4j.Document document)">1</method>
			<method name="public void _init_(org.dom4j.Node node)">1</method>
			<method name="public void _init_(org.dom4j.Document document)">1</method>
			<method name="public org.xml.sax.XMLReader getXMLReader()">1</method>
			<method name="public void setInputSource(org.xml.sax.InputSource inputSource)">1</method>
			<method name="public org.dom4j.Document getDocument()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.dom.html.HTMLXPath</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>4</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>13</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.8333333333333334</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.5</amc>
		<cc>
			<method name="public void _init_(String xpathExpr, boolean toLowerCase)">1</method>
			<method name="public void _init_(String xpathExpr)">1</method>
		</cc>
	</class>
	<class>
		<name>com.adobe.ac.ant.tasks.UnixSWFLauncher</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>10</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>39</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>18.0</amc>
		<cc>
			<method name="public void launch(String arg0)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.xom.DocumentNavigator</name>
		<wmc>34</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>32</cbo>
		<rfc>77</rfc>
		<lcom>561</lcom>
		<ca>3</ca>
		<ce>31</ce>
		<npm>33</npm>
		<lcom3>2.0</lcom3>
		<loc>477</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4117647058823529</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.029411764705882</amc>
		<cc>
			<method name="public boolean isDocument(Object o)">1</method>
			<method name="public String getProcessingInstructionTarget(Object o)">2</method>
			<method name="public String getElementNamespaceUri(Object o)">2</method>
			<method name="public String getCommentStringValue(Object o)">2</method>
			<method name="public String getAttributeQName(Object o)">2</method>
			<method name="public String getAttributeStringValue(Object o)">2</method>
			<method name="public boolean isElement(Object o)">1</method>
			<method name="private boolean addNamespaceForElement(nu.xom.Element elt, String uri, String prefix, java.util.Map map)">4</method>
			<method name="public String translateNamespacePrefixToUri(String s, Object o)">6</method>
			<method name="public java.util.Iterator getNamespaceAxisIterator(Object o)">4</method>
			<method name="public boolean isAttribute(Object o)">1</method>
			<method name="public String getProcessingInstructionData(Object o)">2</method>
			<method name="public String getElementQName(Object o)">2</method>
			<method name="public String getElementName(Object o)">2</method>
			<method name="public boolean isProcessingInstruction(Object o)">1</method>
			<method name="public boolean isNamespace(Object o)">1</method>
			<method name="public String getTextStringValue(Object o)">2</method>
			<method name="public String getNamespaceStringValue(Object o)">4</method>
			<method name="public boolean isText(Object o)">1</method>
			<method name="public String getElementStringValue(Object o)">2</method>
			<method name="public Object getDocument(String s)">1</method>
			<method name="public java.util.Iterator getAttributeAxisIterator(Object o)">1</method>
			<method name="public Object getDocumentNode(Object o)">3</method>
			<method name="public java.util.Iterator getChildAxisIterator(Object o)">1</method>
			<method name="public boolean isComment(Object o)">1</method>
			<method name="public java.util.Iterator getPrecedingSiblingAxisIterator(Object o)">1</method>
			<method name="public String getAttributeName(Object o)">2</method>
			<method name="public java.util.Iterator getParentAxisIterator(Object o)">1</method>
			<method name="public String getAttributeNamespaceUri(Object o)">2</method>
			<method name="public java.util.Iterator getPrecedingAxisIterator(Object o)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public String getNamespacePrefix(Object o)">4</method>
			<method name="public Object getParentNode(Object o)">1</method>
			<method name="public org.jaxen.XPath parseXPath(String s)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.CeilingFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>13</cbo>
		<rfc>12</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>12</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>33</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.0</amc>
		<cc>
			<method name="public static Double evaluate(Object obj, org.jaxen.Navigator nav)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.dom.DocumentNavigator$NodeIterator</name>
		<wmc>7</wmc>
		<dit>1</dit>
		<noc>7</noc>
		<cbo>14</cbo>
		<rfc>11</rfc>
		<lcom>15</lcom>
		<ca>7</ca>
		<ce>7</ce>
		<npm>4</npm>
		<lcom3>0.8333333333333334</lcom3>
		<loc>84</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5714285714285714</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>10.714285714285714</amc>
		<cc>
			<method name="public boolean hasNext()">2</method>
			<method name="public void remove()">1</method>
			<method name="protected abstract org.w3c.dom.Node getFirstNode(org.w3c.dom.Node)">1</method>
			<method name="public Object next()">3</method>
			<method name="protected abstract org.w3c.dom.Node getNextNode(org.w3c.dom.Node)">1</method>
			<method name="private boolean isXPathNode(org.w3c.dom.Node node)">3</method>
			<method name="public void _init_(org.jaxen.dom.DocumentNavigator this$0, org.w3c.dom.Node contextNode)">2</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.FollowingAxisIterator</name>
		<wmc>6</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>16</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>11</ce>
		<npm>4</npm>
		<lcom3>0.25</lcom3>
		<loc>120</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4444444444444444</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>18.333333333333332</amc>
		<cc>
			<method name="public boolean hasNext()">3</method>
			<method name="public void remove()">1</method>
			<method name="private boolean goForward()">3</method>
			<method name="private boolean goUp()">5</method>
			<method name="public Object next()">1</method>
			<method name="public void _init_(Object contextNode, org.jaxen.Navigator navigator)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.javabean.Element</name>
		<wmc>4</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>5</rfc>
		<lcom>0</lcom>
		<ca>3</ca>
		<ce>3</ce>
		<npm>4</npm>
		<lcom3>0.6666666666666666</lcom3>
		<loc>28</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.25</amc>
		<cc>
			<method name="public Object getObject()">1</method>
			<method name="public void _init_(org.jaxen.javabean.Element parent, String name, Object object)">1</method>
			<method name="public String getName()">1</method>
			<method name="public org.jaxen.javabean.Element getParent()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.jdom.DocumentNavigator</name>
		<wmc>33</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>31</cbo>
		<rfc>90</rfc>
		<lcom>528</lcom>
		<ca>2</ca>
		<ce>31</ce>
		<npm>33</npm>
		<lcom3>2.0</lcom3>
		<loc>664</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.6666666666666666</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>19.12121212121212</amc>
		<cc>
			<method name="public java.util.Iterator getChildAxisIterator(Object contextNode)">3</method>
			<method name="public String getCommentStringValue(Object obj)">1</method>
			<method name="public Object getDocument(String url)">1</method>
			<method name="public String getAttributeNamespaceUri(Object obj)">3</method>
			<method name="public String getNamespaceStringValue(Object obj)">2</method>
			<method name="public String getElementNamespaceUri(Object obj)">3</method>
			<method name="public java.util.Iterator getAttributeAxisIterator(Object contextNode)">2</method>
			<method name="public String getTextStringValue(Object obj)">3</method>
			<method name="public java.util.Iterator getParentAxisIterator(Object contextNode)">11</method>
			<method name="public boolean isElement(Object obj)">1</method>
			<method name="public String getProcessingInstructionData(Object obj)">1</method>
			<method name="public String getAttributeQName(Object obj)">3</method>
			<method name="public String getAttributeStringValue(Object obj)">1</method>
			<method name="public boolean isProcessingInstruction(Object obj)">1</method>
			<method name="public java.util.Iterator getAttributeAxisIterator(Object contextNode, String localName, String namespacePrefix, String namespaceURI)">4</method>
			<method name="public String getElementStringValue(Object obj)">5</method>
			<method name="public static org.jaxen.Navigator getInstance()">1</method>
			<method name="public boolean isNamespace(Object obj)">3</method>
			<method name="public Object getDocumentNode(Object contextNode)">2</method>
			<method name="public String getElementQName(Object obj)">3</method>
			<method name="public String getNamespacePrefix(Object obj)">2</method>
			<method name="public String getProcessingInstructionTarget(Object obj)">1</method>
			<method name="public boolean isDocument(Object obj)">1</method>
			<method name="public boolean isAttribute(Object obj)">1</method>
			<method name="public boolean isText(Object obj)">3</method>
			<method name="public org.jaxen.XPath parseXPath(String xpath)">1</method>
			<method name="public boolean isComment(Object obj)">1</method>
			<method name="public String getAttributeName(Object obj)">1</method>
			<method name="public java.util.Iterator getNamespaceAxisIterator(Object contextNode)">8</method>
			<method name="public String translateNamespacePrefixToUri(String prefix, Object context)">9</method>
			<method name="public String getElementName(Object obj)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public java.util.Iterator getChildAxisIterator(Object contextNode, String localName, String namespacePrefix, String namespaceURI)">7</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.util.NodeComparator</name>
		<wmc>14</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>22</cbo>
		<rfc>46</rfc>
		<lcom>91</lcom>
		<ca>0</ca>
		<ce>22</ce>
		<npm>14</npm>
		<lcom3>2.0</lcom3>
		<loc>434</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.1377551020408163</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>30.0</amc>
		<cc>
			<method name="public int compare(org.dom4j.ProcessingInstruction n1, org.dom4j.ProcessingInstruction n2)">2</method>
			<method name="public int compare(Object o1, Object o2)">8</method>
			<method name="public int compare(org.dom4j.Element n1, org.dom4j.Element n2)">5</method>
			<method name="public int compare(org.dom4j.Namespace n1, org.dom4j.Namespace n2)">2</method>
			<method name="public int compare(String o1, String o2)">4</method>
			<method name="public int compareContent(org.dom4j.Branch b1, org.dom4j.Branch b2)">4</method>
			<method name="public int compare(org.dom4j.Node n1, org.dom4j.Node n2)">3</method>
			<method name="public int compare(org.dom4j.Entity n1, org.dom4j.Entity n2)">2</method>
			<method name="public int compare(org.dom4j.CharacterData t1, org.dom4j.CharacterData t2)">1</method>
			<method name="public int compare(org.dom4j.Document n1, org.dom4j.Document n2)">2</method>
			<method name="public int compare(org.dom4j.DocumentType o1, org.dom4j.DocumentType o2)">6</method>
			<method name="public void _init_()">1</method>
			<method name="public int compare(org.dom4j.Attribute n1, org.dom4j.Attribute n2)">2</method>
			<method name="public int compare(org.dom4j.QName n1, org.dom4j.QName n2)">2</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.ConcurrentReaderHashMap$1</name>
		<wmc>0</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>0</rfc>
		<lcom>0</lcom>
		<ca>4</ca>
		<ce>1</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>0</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
		</cc>
	</class>
	<class>
		<name>org.dom4j.dom.DOMDocument</name>
		<wmc>51</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>38</cbo>
		<rfc>101</rfc>
		<lcom>1263</lcom>
		<ca>2</ca>
		<ce>37</ce>
		<npm>47</npm>
		<lcom3>0.64</lcom3>
		<loc>356</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.2733333333333333</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.96078431372549</amc>
		<cc>
			<method name="public boolean isSupported(String feature, String version)">1</method>
			<method name="protected org.dom4j.DocumentFactory getDocumentFactory()">2</method>
			<method name="public org.w3c.dom.Node getFirstChild()">1</method>
			<method name="public String getNodeName()">1</method>
			<method name="public org.w3c.dom.NamedNodeMap getAttributes()">1</method>
			<method name="public org.w3c.dom.Attr createAttribute(String name)">1</method>
			<method name="public org.w3c.dom.NodeList getChildNodes()">1</method>
			<method name="public org.w3c.dom.Node getNextSibling()">1</method>
			<method name="public org.w3c.dom.Element createElementNS(String namespaceURI, String qualifiedName)">1</method>
			<method name="public org.w3c.dom.Node importNode(org.w3c.dom.Node importedNode, boolean deep)">1</method>
			<method name="public String getNodeValue()">1</method>
			<method name="public void _init_(org.dom4j.dom.DOMElement rootElement, org.dom4j.dom.DOMDocumentType docType)">1</method>
			<method name="public boolean supports(String feature, String version)">1</method>
			<method name="public org.w3c.dom.Document getOwnerDocument()">1</method>
			<method name="public org.w3c.dom.DocumentFragment createDocumentFragment()">1</method>
			<method name="public String getNamespaceURI()">1</method>
			<method name="public org.w3c.dom.Element getDocumentElement()">1</method>
			<method name="public org.w3c.dom.NodeList getElementsByTagName(String name)">1</method>
			<method name="public void _init_(org.dom4j.dom.DOMElement rootElement)">1</method>
			<method name="public org.w3c.dom.Node replaceChild(org.w3c.dom.Node newChild, org.w3c.dom.Node oldChild)">1</method>
			<method name="public org.w3c.dom.Node appendChild(org.w3c.dom.Node newChild)">1</method>
			<method name="public org.w3c.dom.Node removeChild(org.w3c.dom.Node oldChild)">1</method>
			<method name="public org.w3c.dom.CDATASection createCDATASection(String data)">1</method>
			<method name="public org.w3c.dom.Comment createComment(String data)">1</method>
			<method name="public String getLocalName()">1</method>
			<method name="public org.w3c.dom.Node cloneNode(boolean deep)">1</method>
			<method name="public void setNodeValue(String nodeValue)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public org.w3c.dom.Node getLastChild()">1</method>
			<method name="public org.w3c.dom.EntityReference createEntityReference(String name)">1</method>
			<method name="public org.w3c.dom.Element createElement(String name)">1</method>
			<method name="public void _init_(String name)">1</method>
			<method name="public org.w3c.dom.DocumentType getDoctype()">1</method>
			<method name="public org.w3c.dom.Text createTextNode(String data)">1</method>
			<method name="public void setPrefix(String prefix)">1</method>
			<method name="public org.w3c.dom.DOMImplementation getImplementation()">2</method>
			<method name="public org.w3c.dom.NodeList getElementsByTagNameNS(String namespace, String name)">1</method>
			<method name="public org.w3c.dom.Element getElementById(String elementId)">1</method>
			<method name="public org.w3c.dom.ProcessingInstruction createProcessingInstruction(String target, String data)">1</method>
			<method name="public void _init_(String name, org.dom4j.dom.DOMElement rootElement, org.dom4j.dom.DOMDocumentType docType)">1</method>
			<method name="public org.w3c.dom.Node insertBefore(org.w3c.dom.Node newChild, org.w3c.dom.Node refChild)">1</method>
			<method name="public boolean hasAttributes()">1</method>
			<method name="public String getPrefix()">1</method>
			<method name="private void init()">1</method>
			<method name="public void _init_(org.dom4j.dom.DOMDocumentType docType)">1</method>
			<method name="public org.w3c.dom.Node getParentNode()">1</method>
			<method name="private void checkNewChildNode(org.w3c.dom.Node newChild)">1</method>
			<method name="public boolean hasChildNodes()">2</method>
			<method name="public org.w3c.dom.Attr createAttributeNS(String namespaceURI, String qualifiedName)">1</method>
			<method name="public org.w3c.dom.Node getPreviousSibling()">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.SingletonList</name>
		<wmc>3</wmc>
		<dit>3</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>9</rfc>
		<lcom>1</lcom>
		<ca>4</ca>
		<ce>6</ce>
		<npm>3</npm>
		<lcom3>0.5</lcom3>
		<loc>29</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.9444444444444444</mfa>
		<cam>0.5555555555555556</cam>
		<ic>2</ic>
		<cbm>5</cbm>
		<amc>8.333333333333334</amc>
		<cc>
			<method name="public Object get(int index)">2</method>
			<method name="public int size()">1</method>
			<method name="public void _init_(Object element)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.NamedAccessNavigator</name>
		<wmc>2</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>2</rfc>
		<lcom>1</lcom>
		<ca>5</ca>
		<ce>5</ce>
		<npm>2</npm>
		<lcom3>2.0</lcom3>
		<loc>2</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract java.util.Iterator getChildAxisIterator(Object, String, String, String)">1</method>
			<method name="public abstract java.util.Iterator getAttributeAxisIterator(Object, String, String, String)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.PruningDispatchHandler</name>
		<wmc>2</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>7</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>6</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>16</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.75</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.0</amc>
		<cc>
			<method name="void _init_()">1</method>
			<method name="public void onEnd(org.dom4j.ElementPath elementPath)">2</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.TranslateFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>14</cbo>
		<rfc>23</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>13</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>140</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>45.666666666666664</amc>
		<cc>
			<method name="public static String evaluate(Object strArg, Object fromArg, Object toArg, org.jaxen.Navigator nav)">6</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.util.IdentityHashMap$Entry</name>
		<wmc>8</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>17</rfc>
		<lcom>0</lcom>
		<ca>3</ca>
		<ce>5</ce>
		<npm>6</npm>
		<lcom3>0.5357142857142857</lcom3>
		<loc>123</loc>
		<dam>0.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.40625</cam>
		<ic>1</ic>
		<cbm>1</cbm>
		<amc>13.875</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="void _init_(int hash, Object key, Object value, org.jaxen.util.IdentityHashMap$Entry next)">1</method>
			<method name="public int hashCode()">2</method>
			<method name="public boolean equals(Object o)">8</method>
			<method name="protected Object clone()">2</method>
			<method name="public Object getKey()">1</method>
			<method name="public Object setValue(Object value)">1</method>
			<method name="public Object getValue()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.bean.BeanAttributeList</name>
		<wmc>18</wmc>
		<dit>3</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>32</rfc>
		<lcom>63</lcom>
		<ca>3</ca>
		<ce>11</ce>
		<npm>17</npm>
		<lcom3>0.5490196078431373</lcom3>
		<loc>215</loc>
		<dam>1.0</dam>
		<moa>3</moa>
		<mfa>0.68</mfa>
		<cam>0.30158730158730157</cam>
		<ic>2</ic>
		<cbm>7</cbm>
		<amc>10.777777777777779</amc>
		<cc>
			<method name="public void _init_(org.dom4j.bean.BeanElement parent)">2</method>
			<method name="public void _init_(org.dom4j.bean.BeanElement parent, org.dom4j.bean.BeanMetaData beanMetaData)">1</method>
			<method name="public void setData(int index, Object data)">1</method>
			<method name="public org.dom4j.Attribute attribute(org.dom4j.QName qname)">1</method>
			<method name="public boolean add(Object object)">1</method>
			<method name="public int size()">1</method>
			<method name="protected org.dom4j.bean.BeanAttribute createAttribute(org.dom4j.bean.BeanElement element, int index)">1</method>
			<method name="public Object set(int index, Object object)">1</method>
			<method name="public void clear()">3</method>
			<method name="public org.dom4j.bean.BeanAttribute attribute(int index)">4</method>
			<method name="public boolean remove(Object object)">1</method>
			<method name="public Object remove(int index)">1</method>
			<method name="public Object getData(int index)">1</method>
			<method name="public void add(int index, Object object)">1</method>
			<method name="public org.dom4j.bean.BeanElement getParent()">1</method>
			<method name="public Object get(int index)">2</method>
			<method name="public org.dom4j.Attribute attribute(String name)">1</method>
			<method name="public org.dom4j.QName getQName(int index)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.io.OutputFormat</name>
		<wmc>35</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>15</cbo>
		<rfc>45</rfc>
		<lcom>323</lcom>
		<ca>8</ca>
		<ce>7</ce>
		<npm>35</npm>
		<lcom3>0.7857142857142857</lcom3>
		<loc>554</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2619047619047619</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.428571428571429</amc>
		<cc>
			<method name="public void setAttributeQuoteCharacter(char quoteChar)">3</method>
			<method name="public void setIndentSize(int indentSize)">2</method>
			<method name="public boolean isExpandEmptyElements()">1</method>
			<method name="public void setNewLineAfterDeclaration(boolean newLineAfterDeclaration)">1</method>
			<method name="public String getIndent()">1</method>
			<method name="public void setIndent(boolean doIndent)">2</method>
			<method name="public void _init_(String indent, boolean newlines)">1</method>
			<method name="public boolean isNewlines()">1</method>
			<method name="public boolean isPadText()">1</method>
			<method name="public boolean isXHTML()">1</method>
			<method name="public static org.dom4j.io.OutputFormat createCompactFormat()">1</method>
			<method name="public void _init_(String indent)">1</method>
			<method name="public void setXHTML(boolean xhtml)">1</method>
			<method name="public char getAttributeQuoteCharacter()">1</method>
			<method name="public int getNewLineAfterNTags()">1</method>
			<method name="public void setNewlines(boolean newlines)">1</method>
			<method name="public String getLineSeparator()">1</method>
			<method name="public void setSuppressDeclaration(boolean suppressDeclaration)">1</method>
			<method name="public boolean isNewLineAfterDeclaration()">1</method>
			<method name="public void setEncoding(String encoding)">2</method>
			<method name="public void setOmitEncoding(boolean omitEncoding)">1</method>
			<method name="public void _init_(String indent, boolean newlines, String encoding)">1</method>
			<method name="public boolean isTrimText()">1</method>
			<method name="public int parseOptions(String[] args, int i)">13</method>
			<method name="public void setLineSeparator(String separator)">1</method>
			<method name="public void setNewLineAfterNTags(int tagCount)">1</method>
			<method name="public boolean isOmitEncoding()">1</method>
			<method name="public void setIndent(String indent)">3</method>
			<method name="public boolean isSuppressDeclaration()">1</method>
			<method name="public String getEncoding()">1</method>
			<method name="public void setExpandEmptyElements(boolean expandEmptyElements)">1</method>
			<method name="public static org.dom4j.io.OutputFormat createPrettyPrint()">1</method>
			<method name="public void setTrimText(boolean trimText)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void setPadText(boolean padText)">1</method>
		</cc>
	</class>
	<class>
		<name>com.adobe.ac.ant.tasks.FlexUnitTask</name>
		<wmc>21</wmc>
		<dit>3</dit>
		<noc>0</noc>
		<cbo>24</cbo>
		<rfc>51</rfc>
		<lcom>160</lcom>
		<ca>1</ca>
		<ce>24</ce>
		<npm>11</npm>
		<lcom3>0.9194444444444445</lcom3>
		<loc>399</loc>
		<dam>0.9444444444444444</dam>
		<moa>0</moa>
		<mfa>0.6491228070175439</mfa>
		<cam>0.23129251700680273</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>17.142857142857142</amc>
		<cc>
			<method name="public void setToDir(String arg0)">1</method>
			<method name="private void receiveFlexUnitResults()">1</method>
			<method name="public void setFailureproperty(String arg0)">1</method>
			<method name="private String formatLogReport(org.dom4j.Element arg0)">1</method>
			<method name="public void execute()">1</method>
			<method name="public void setHaltonfailure(boolean arg0)">1</method>
			<method name="public void setSWF(String arg0)">1</method>
			<method name="static int access$500(com.adobe.ac.ant.tasks.FlexUnitTask arg0)">1</method>
			<method name="private void handleFailures()">3</method>
			<method name="static int access$200(com.adobe.ac.ant.tasks.FlexUnitTask arg0)">1</method>
			<method name="static String access$002(com.adobe.ac.ant.tasks.FlexUnitTask arg0, String arg1)">1</method>
			<method name="public void setTimeout(int arg0)">1</method>
			<method name="private void writeTestReport(String arg0)">4</method>
			<method name="public void log(String arg0)">1</method>
			<method name="public void setPort(int arg0)">1</method>
			<method name="static void access$400(com.adobe.ac.ant.tasks.FlexUnitTask arg0, String arg1)">1</method>
			<method name="public static void main(String[] arg0)">1</method>
			<method name="public void setVerbose(boolean arg0)">1</method>
			<method name="static boolean access$102(com.adobe.ac.ant.tasks.FlexUnitTask arg0, boolean arg1)">1</method>
			<method name="static boolean access$300(com.adobe.ac.ant.tasks.FlexUnitTask arg0)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.AbstractElement</name>
		<wmc>118</wmc>
		<dit>0</dit>
		<noc>2</noc>
		<cbo>43</cbo>
		<rfc>232</rfc>
		<lcom>6901</lcom>
		<ca>4</ca>
		<ce>39</ce>
		<npm>102</npm>
		<lcom3>0.9606837606837607</lcom3>
		<loc>2326</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.09230769230769231</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>18.66949152542373</amc>
		<cc>
			<method name="public org.dom4j.Element addAttribute(String name, String value)">5</method>
			<method name="protected org.dom4j.Element createElement(String name)">1</method>
			<method name="public String getNamespacePrefix()">1</method>
			<method name="public boolean remove(org.dom4j.Entity entity)">1</method>
			<method name="public void add(org.dom4j.Element element)">1</method>
			<method name="public String getQualifiedName()">1</method>
			<method name="public org.dom4j.ProcessingInstruction processingInstruction(String target)">4</method>
			<method name="public org.dom4j.Element addProcessingInstruction(String target, String data)">1</method>
			<method name="public boolean remove(org.dom4j.Node node)">2</method>
			<method name="public void add(org.dom4j.Comment comment)">1</method>
			<method name="public void write(java.io.Writer out)">1</method>
			<method name="public org.dom4j.Attribute attribute(String name)">3</method>
			<method name="public org.dom4j.Attribute attribute(int index)">1</method>
			<method name="public String elementText(String name)">2</method>
			<method name="public int indexOf(org.dom4j.Node node)">1</method>
			<method name="public java.util.List additionalNamespaces(String defaultNamespaceURI)">4</method>
			<method name="protected void addNode(org.dom4j.Node node)">2</method>
			<method name="public String getNamespaceURI()">1</method>
			<method name="protected void addNewNode(org.dom4j.Node node)">1</method>
			<method name="public java.util.Iterator elementIterator(org.dom4j.QName qName)">1</method>
			<method name="public java.util.List processingInstructions()">3</method>
			<method name="public void add(org.dom4j.ProcessingInstruction pi)">1</method>
			<method name="public String attributeValue(String name, String defaultValue)">2</method>
			<method name="public String getName()">1</method>
			<method name="public java.util.List elements()">3</method>
			<method name="public org.dom4j.Element createCopy()">1</method>
			<method name="public boolean isRootElement()">3</method>
			<method name="protected org.dom4j.Element createElement(org.dom4j.QName qName)">1</method>
			<method name="public java.util.List getNamespacesForURI(String uri)">4</method>
			<method name="public void appendAttributes(org.dom4j.Element element)">3</method>
			<method name="public void setText(String text)">3</method>
			<method name="public String getXPathNameStep()">5</method>
			<method name="protected boolean removeNode(org.dom4j.Node node)">2</method>
			<method name="public org.dom4j.Attribute attribute(String name, org.dom4j.Namespace namespace)">1</method>
			<method name="public org.dom4j.Element element(String name, org.dom4j.Namespace namespace)">1</method>
			<method name="public org.dom4j.Element addEntity(String name, String text)">1</method>
			<method name="public boolean remove(org.dom4j.Namespace namespace)">1</method>
			<method name="public String elementText(org.dom4j.QName qName)">2</method>
			<method name="public void setName(String name)">1</method>
			<method name="protected java.util.List createAttributeList(int size)">1</method>
			<method name="protected void addNode(int index, org.dom4j.Node node)">2</method>
			<method name="public void setAttributeValue(org.dom4j.QName qName, String value)">1</method>
			<method name="public void setData(Object data)">1</method>
			<method name="public String getUniquePath(org.dom4j.Element context)">5</method>
			<method name="public java.util.List elements(org.dom4j.QName qName)">4</method>
			<method name="public java.util.List attributes()">1</method>
			<method name="public String toString()">3</method>
			<method name="public org.dom4j.Element addNamespace(String prefix, String uri)">1</method>
			<method name="public void add(org.dom4j.Namespace namespace)">1</method>
			<method name="public boolean remove(org.dom4j.Comment comment)">1</method>
			<method name="public int nodeCount()">1</method>
			<method name="public java.util.List elements(String name, org.dom4j.Namespace namespace)">1</method>
			<method name="public org.dom4j.Element addComment(String comment)">1</method>
			<method name="public org.dom4j.Namespace getNamespace()">1</method>
			<method name="public org.dom4j.Element element(String name)">4</method>
			<method name="public void add(org.dom4j.Entity entity)">1</method>
			<method name="public org.dom4j.Namespace getNamespaceForPrefix(String prefix)">11</method>
			<method name="public void setNamespace(org.dom4j.Namespace namespace)">1</method>
			<method name="public void ensureAttributesCapacity(int minCapacity)">3</method>
			<method name="public org.dom4j.Element addElement(String name)">4</method>
			<method name="protected void childAdded(org.dom4j.Node node)">2</method>
			<method name="public void add(org.dom4j.Node node)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public org.dom4j.Node node(int index)">5</method>
			<method name="public boolean remove(org.dom4j.Attribute attribute)">3</method>
			<method name="public void setAttributeValue(String name, String value)">1</method>
			<method name="protected org.dom4j.DocumentFactory getDocumentFactory()">3</method>
			<method name="public String attributeValue(org.dom4j.QName qName)">2</method>
			<method name="public boolean remove(org.dom4j.CDATA cdata)">1</method>
			<method name="public void add(org.dom4j.Text text)">1</method>
			<method name="public org.dom4j.Namespace getNamespaceForURI(String uri)">7</method>
			<method name="public boolean isTextOnly()">4</method>
			<method name="public short getNodeType()">1</method>
			<method name="public String elementTextTrim(org.dom4j.QName qName)">2</method>
			<method name="public void add(org.dom4j.Attribute attribute)">3</method>
			<method name="public org.dom4j.Element addAttribute(org.dom4j.QName qName, String value)">5</method>
			<method name="public org.dom4j.Element addProcessingInstruction(String target, java.util.Map data)">1</method>
			<method name="public org.dom4j.Element element(org.dom4j.QName qName)">4</method>
			<method name="public void setAttributes(org.xml.sax.Attributes attributes, org.dom4j.tree.NamespaceStack namespaceStack, boolean noNamespaceAttributes)">7</method>
			<method name="public java.util.Iterator elementIterator(String name)">1</method>
			<method name="public org.dom4j.Node getXPathResult(int index)">3</method>
			<method name="public boolean hasMixedContent()">6</method>
			<method name="public boolean remove(org.dom4j.Element element)">1</method>
			<method name="public java.util.List additionalNamespaces()">4</method>
			<method name="public boolean remove(org.dom4j.ProcessingInstruction pi)">1</method>
			<method name="public org.dom4j.Element addCDATA(String cdata)">1</method>
			<method name="public java.util.List declaredNamespaces()">3</method>
			<method name="protected java.util.List createAttributeList()">1</method>
			<method name="public org.dom4j.QName getQName(String qualifiedName)">3</method>
			<method name="static void _clinit_()">1</method>
			<method name="public boolean removeProcessingInstruction(String target)">2</method>
			<method name="public java.util.List elements(String name)">4</method>
			<method name="public java.util.Iterator nodeIterator()">1</method>
			<method name="public java.util.Iterator attributeIterator()">1</method>
			<method name="public void add(org.dom4j.CDATA cdata)">1</method>
			<method name="public boolean remove(org.dom4j.Text text)">1</method>
			<method name="protected java.util.Iterator createSingleIterator(Object result)">1</method>
			<method name="public java.util.Iterator elementIterator(String name, org.dom4j.Namespace ns)">1</method>
			<method name="public int attributeCount()">1</method>
			<method name="public org.dom4j.Element createCopy(org.dom4j.QName qName)">1</method>
			<method name="protected void addNewNode(int index, org.dom4j.Node node)">1</method>
			<method name="protected abstract java.util.List attributeList(int)">1</method>
			<method name="public String getStringValue()">5</method>
			<method name="protected abstract java.util.List attributeList()">1</method>
			<method name="public org.dom4j.Attribute attribute(org.dom4j.QName qName)">3</method>
			<method name="public String attributeValue(org.dom4j.QName qName, String defaultValue)">2</method>
			<method name="protected void childRemoved(org.dom4j.Node node)">2</method>
			<method name="public String getPath(org.dom4j.Element context)">4</method>
			<method name="public org.dom4j.Element addText(String text)">1</method>
			<method name="public String asXML()">1</method>
			<method name="public java.util.List processingInstructions(String target)">4</method>
			<method name="public java.util.Iterator elementIterator()">1</method>
			<method name="public void accept(org.dom4j.Visitor visitor)">3</method>
			<method name="public org.dom4j.Element createCopy(String name)">1</method>
			<method name="public Object getData()">1</method>
			<method name="public String attributeValue(String name)">2</method>
			<method name="public String elementTextTrim(String name)">2</method>
			<method name="public void normalize()">7</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.DocumentFactory</name>
		<wmc>38</wmc>
		<dit>1</dit>
		<noc>7</noc>
		<cbo>81</cbo>
		<rfc>79</rfc>
		<lcom>653</lcom>
		<ca>37</ca>
		<ce>49</ce>
		<npm>30</npm>
		<lcom3>0.8783783783783784</lcom3>
		<loc>343</loc>
		<dam>0.75</dam>
		<moa>2</moa>
		<mfa>0.0</mfa>
		<cam>0.23310810810810811</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.921052631578948</amc>
		<cc>
			<method name="public org.dom4j.Text createText(String text)">2</method>
			<method name="public org.dom4j.CDATA createCDATA(String text)">1</method>
			<method name="public org.dom4j.Element createElement(org.dom4j.QName qname)">1</method>
			<method name="public org.dom4j.Namespace createNamespace(String prefix, String uri)">1</method>
			<method name="public org.dom4j.ProcessingInstruction createProcessingInstruction(String target, String data)">1</method>
			<method name="public org.dom4j.QName createQName(String qualifiedName, String uri)">1</method>
			<method name="public java.util.Map getXPathNamespaceURIs()">1</method>
			<method name="public org.dom4j.Element createElement(String name)">1</method>
			<method name="public org.dom4j.QName createQName(String name, String prefix, String uri)">1</method>
			<method name="static Class class$(String x0)">1</method>
			<method name="public org.dom4j.Document createDocument()">1</method>
			<method name="public org.dom4j.rule.Pattern createPattern(String xpathPattern)">1</method>
			<method name="protected org.dom4j.QName intern(org.dom4j.QName qname)">1</method>
			<method name="public org.dom4j.Document createDocument(org.dom4j.Element rootElement)">1</method>
			<method name="private void readObject(java.io.ObjectInputStream in)">1</method>
			<method name="public void setXPathNamespaceURIs(java.util.Map namespaceURIs)">1</method>
			<method name="protected void init()">1</method>
			<method name="public org.dom4j.Document createDocument(String encoding)">2</method>
			<method name="public org.dom4j.DocumentType createDocType(String name, String publicId, String systemId)">1</method>
			<method name="public org.dom4j.QName createQName(String localName)">1</method>
			<method name="private static org.dom4j.util.SingletonStrategy createSingleton()">1</method>
			<method name="public java.util.List getQNames()">1</method>
			<method name="protected org.dom4j.tree.QNameCache createQNameCache()">1</method>
			<method name="public org.dom4j.Entity createEntity(String name, String text)">1</method>
			<method name="public org.dom4j.Attribute createAttribute(org.dom4j.Element owner, String name, String value)">1</method>
			<method name="public org.dom4j.NodeFilter createXPathFilter(String xpathFilterExpression)">1</method>
			<method name="public org.dom4j.Element createElement(String qualifiedName, String namespaceURI)">1</method>
			<method name="public org.dom4j.Comment createComment(String text)">1</method>
			<method name="public org.dom4j.Attribute createAttribute(org.dom4j.Element owner, org.dom4j.QName qname, String value)">1</method>
			<method name="public static synchronized org.dom4j.DocumentFactory getInstance()">2</method>
			<method name="public org.dom4j.NodeFilter createXPathFilter(String xpathFilterExpression, org.jaxen.VariableContext variableContext)">1</method>
			<method name="protected static org.dom4j.DocumentFactory createSingleton(String className)">2</method>
			<method name="public org.dom4j.QName createQName(String localName, org.dom4j.Namespace namespace)">1</method>
			<method name="public org.dom4j.XPath createXPath(String xpathExpression)">1</method>
			<method name="static void _clinit_()">1</method>
			<method name="public org.dom4j.XPath createXPath(String xpathExpression, org.jaxen.VariableContext variableContext)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public org.dom4j.ProcessingInstruction createProcessingInstruction(String target, java.util.Map data)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.pattern.PatternHandler</name>
		<wmc>20</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>20</cbo>
		<rfc>46</rfc>
		<lcom>188</lcom>
		<ca>0</ca>
		<ce>20</ce>
		<npm>16</npm>
		<lcom3>0.8947368421052632</lcom3>
		<loc>305</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.3625</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>14.2</amc>
		<cc>
			<method name="public void startTextNodeStep(int axis)">1</method>
			<method name="protected org.jaxen.pattern.Pattern createRelativeLocationPath()">1</method>
			<method name="public void endPathExpr()">1</method>
			<method name="public void startAbsoluteLocationPath()">1</method>
			<method name="public void endRelativeLocationPath()">1</method>
			<method name="public void startAllNodeStep(int axis)">1</method>
			<method name="public void endAbsoluteLocationPath()">1</method>
			<method name="public org.jaxen.pattern.Pattern getPattern()">1</method>
			<method name="protected void endStep()">3</method>
			<method name="public void endXPath()">1</method>
			<method name="public void startCommentNodeStep(int axis)">1</method>
			<method name="public void startRelativeLocationPath()">1</method>
			<method name="public void startProcessingInstructionNodeStep(int axis, String name)">1</method>
			<method name="public org.jaxen.pattern.Pattern getPattern(boolean shouldSimplify)">3</method>
			<method name="public void endUnionExpr(boolean create)">1</method>
			<method name="public void startNameStep(int axis, String prefix, String localName)">1</method>
			<method name="protected void endLocationPath()">1</method>
			<method name="protected org.jaxen.pattern.Pattern createAbsoluteLocationPath()">1</method>
			<method name="public void _init_()">1</method>
			<method name="public void startUnionExpr()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.DocumentException</name>
		<wmc>9</wmc>
		<dit>3</dit>
		<noc>0</noc>
		<cbo>19</cbo>
		<rfc>24</rfc>
		<lcom>0</lcom>
		<ca>10</ca>
		<ce>9</ce>
		<npm>9</npm>
		<lcom3>0.25</lcom3>
		<loc>96</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.8076923076923077</mfa>
		<cam>0.3333333333333333</cam>
		<ic>1</ic>
		<cbm>2</cbm>
		<amc>9.555555555555555</amc>
		<cc>
			<method name="public void _init_(String message)">1</method>
			<method name="public void _init_(Throwable nestedException)">1</method>
			<method name="public void printStackTrace(java.io.PrintWriter writer)">2</method>
			<method name="public Throwable getNestedException()">1</method>
			<method name="public void printStackTrace()">2</method>
			<method name="public void _init_(String message, Throwable nestedException)">1</method>
			<method name="public void printStackTrace(java.io.PrintStream out)">2</method>
			<method name="public void _init_()">1</method>
			<method name="public String getMessage()">2</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.saxpath.XPathHandler</name>
		<wmc>44</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>44</rfc>
		<lcom>946</lcom>
		<ca>7</ca>
		<ce>4</ce>
		<npm>44</npm>
		<lcom3>2.0</lcom3>
		<loc>44</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2909090909090909</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void startRelativeLocationPath()">1</method>
			<method name="public abstract void variableReference(String, String)">1</method>
			<method name="public abstract void startPredicate()">1</method>
			<method name="public abstract void endCommentNodeStep()">1</method>
			<method name="public abstract void endAndExpr(boolean)">1</method>
			<method name="public abstract void endEqualityExpr(int)">1</method>
			<method name="public abstract void startUnaryExpr()">1</method>
			<method name="public abstract void startCommentNodeStep(int)">1</method>
			<method name="public abstract void startFilterExpr()">1</method>
			<method name="public abstract void startTextNodeStep(int)">1</method>
			<method name="public abstract void startNameStep(int, String, String)">1</method>
			<method name="public abstract void endAdditiveExpr(int)">1</method>
			<method name="public abstract void startProcessingInstructionNodeStep(int, String)">1</method>
			<method name="public abstract void startXPath()">1</method>
			<method name="public abstract void endPathExpr()">1</method>
			<method name="public abstract void startMultiplicativeExpr()">1</method>
			<method name="public abstract void endAbsoluteLocationPath()">1</method>
			<method name="public abstract void endAllNodeStep()">1</method>
			<method name="public abstract void endRelativeLocationPath()">1</method>
			<method name="public abstract void endUnaryExpr(int)">1</method>
			<method name="public abstract void startAdditiveExpr()">1</method>
			<method name="public abstract void endPredicate()">1</method>
			<method name="public abstract void endRelationalExpr(int)">1</method>
			<method name="public abstract void startRelationalExpr()">1</method>
			<method name="public abstract void number(double)">1</method>
			<method name="public abstract void startOrExpr()">1</method>
			<method name="public abstract void endMultiplicativeExpr(int)">1</method>
			<method name="public abstract void endXPath()">1</method>
			<method name="public abstract void endProcessingInstructionNodeStep()">1</method>
			<method name="public abstract void endTextNodeStep()">1</method>
			<method name="public abstract void endOrExpr(boolean)">1</method>
			<method name="public abstract void endNameStep()">1</method>
			<method name="public abstract void number(int)">1</method>
			<method name="public abstract void startUnionExpr()">1</method>
			<method name="public abstract void startAbsoluteLocationPath()">1</method>
			<method name="public abstract void startFunction(String, String)">1</method>
			<method name="public abstract void startPathExpr()">1</method>
			<method name="public abstract void endFilterExpr()">1</method>
			<method name="public abstract void literal(String)">1</method>
			<method name="public abstract void endFunction()">1</method>
			<method name="public abstract void startEqualityExpr()">1</method>
			<method name="public abstract void endUnionExpr(boolean)">1</method>
			<method name="public abstract void startAllNodeStep(int)">1</method>
			<method name="public abstract void startAndExpr()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.dom.DOMXPath</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>7</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>6</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.0</amc>
		<cc>
			<method name="public void _init_(String xpathExpr)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.xom.XOMXPath</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>3</rfc>
		<lcom>0</lcom>
		<ca>0</ca>
		<ce>7</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>8</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.0</amc>
		<cc>
			<method name="public void _init_(String xpathExpr)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.DefaultEntity</name>
		<wmc>9</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>7</cbo>
		<rfc>11</rfc>
		<lcom>30</lcom>
		<ca>3</ca>
		<ce>5</ce>
		<npm>9</npm>
		<lcom3>0.75</lcom3>
		<loc>46</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5925925925925926</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public void setParent(org.dom4j.Element parent)">1</method>
			<method name="public boolean supportsParent()">1</method>
			<method name="public void setName(String name)">1</method>
			<method name="public void _init_(String name)">1</method>
			<method name="public void _init_(org.dom4j.Element parent, String name, String text)">1</method>
			<method name="public boolean isReadOnly()">1</method>
			<method name="public void setText(String text)">1</method>
			<method name="public void _init_(String name, String text)">1</method>
			<method name="public org.dom4j.Element getParent()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.ConcurrentReaderHashMap$EntrySet</name>
		<wmc>7</wmc>
		<dit>3</dit>
		<noc>0</noc>
		<cbo>8</cbo>
		<rfc>16</rfc>
		<lcom>0</lcom>
		<ca>1</ca>
		<ce>8</ce>
		<npm>5</npm>
		<lcom3>0.0</lcom3>
		<loc>68</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.7916666666666666</mfa>
		<cam>0.42857142857142855</cam>
		<ic>2</ic>
		<cbm>10</cbm>
		<amc>8.571428571428571</amc>
		<cc>
			<method name="private void _init_(org.dom4j.tree.ConcurrentReaderHashMap this$0)">1</method>
			<method name="public boolean contains(Object o)">4</method>
			<method name="public void clear()">1</method>
			<method name="void _init_(org.dom4j.tree.ConcurrentReaderHashMap x0, org.dom4j.tree.ConcurrentReaderHashMap$1 x1)">1</method>
			<method name="public boolean remove(Object o)">2</method>
			<method name="public int size()">1</method>
			<method name="public java.util.Iterator iterator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.XPathSyntaxException</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>9</cbo>
		<rfc>15</rfc>
		<lcom>5</lcom>
		<ca>2</ca>
		<ce>7</ce>
		<npm>6</npm>
		<lcom3>0.3</lcom3>
		<loc>88</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.375</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.333333333333334</amc>
		<cc>
			<method name="public void _init_(String xpath, int position, String message)">1</method>
			<method name="public String getXPath()">1</method>
			<method name="public String getMultilineMessage()">1</method>
			<method name="public int getPosition()">1</method>
			<method name="public String getPositionMarker()">2</method>
			<method name="public void _init_(org.jaxen.saxpath.XPathSyntaxException e)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.XPathFunctionContext$Singleton</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>3</cbo>
		<rfc>5</rfc>
		<lcom>1</lcom>
		<ca>1</ca>
		<ce>3</ce>
		<npm>0</npm>
		<lcom3>0.5</lcom3>
		<loc>14</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.3333333333333335</amc>
		<cc>
			<method name="static org.jaxen.XPathFunctionContext access$000()">1</method>
			<method name="private void _init_()">1</method>
			<method name="static void _clinit_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.jaxb.JAXBRuntimeException</name>
		<wmc>1</wmc>
		<dit>4</dit>
		<noc>0</noc>
		<cbo>7</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>3</ca>
		<ce>4</ce>
		<npm>0</npm>
		<lcom3>2.0</lcom3>
		<loc>5</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>1.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="protected void _init_(Throwable cause)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.StringLengthFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>12</cbo>
		<rfc>12</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>11</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>42</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>13.0</amc>
		<cc>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
			<method name="public static Number evaluate(Object obj, org.jaxen.Navigator nav)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.tree.DefaultProcessingInstruction</name>
		<wmc>11</wmc>
		<dit>0</dit>
		<noc>1</noc>
		<cbo>8</cbo>
		<rfc>16</rfc>
		<lcom>43</lcom>
		<ca>3</ca>
		<ce>6</ce>
		<npm>11</npm>
		<lcom3>0.8</lcom3>
		<loc>70</loc>
		<dam>1.0</dam>
		<moa>1</moa>
		<mfa>0.0</mfa>
		<cam>0.4772727272727273</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>5.2727272727272725</amc>
		<cc>
			<method name="public void setParent(org.dom4j.Element parent)">1</method>
			<method name="public void setValues(java.util.Map values)">1</method>
			<method name="public boolean supportsParent()">1</method>
			<method name="public void setTarget(String target)">1</method>
			<method name="public boolean isReadOnly()">1</method>
			<method name="public void setText(String text)">1</method>
			<method name="public void _init_(String target, String values)">1</method>
			<method name="public void _init_(String target, java.util.Map values)">1</method>
			<method name="public void _init_(org.dom4j.Element parent, String target, String values)">1</method>
			<method name="public void setValue(String name, String value)">1</method>
			<method name="public org.dom4j.Element getParent()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.util.UserDataAttribute</name>
		<wmc>4</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>6</cbo>
		<rfc>6</rfc>
		<lcom>4</lcom>
		<ca>1</ca>
		<ce>5</ce>
		<npm>4</npm>
		<lcom3>0.6666666666666666</lcom3>
		<loc>21</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.0</amc>
		<cc>
			<method name="public void _init_(org.dom4j.QName qname)">1</method>
			<method name="public Object getData()">1</method>
			<method name="public void _init_(org.dom4j.QName qname, String text)">1</method>
			<method name="public void setData(Object data)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.pattern.NodeTest</name>
		<wmc>1</wmc>
		<dit>0</dit>
		<noc>7</noc>
		<cbo>13</cbo>
		<rfc>2</rfc>
		<lcom>0</lcom>
		<ca>10</ca>
		<ce>3</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>4</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>3.0</amc>
		<cc>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.function.PositionFunction</name>
		<wmc>3</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>8</rfc>
		<lcom>3</lcom>
		<ca>1</ca>
		<ce>9</ce>
		<npm>3</npm>
		<lcom3>2.0</lcom3>
		<loc>24</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.5555555555555556</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>7.0</amc>
		<cc>
			<method name="public static Number evaluate(org.jaxen.Context context)">1</method>
			<method name="public void _init_()">1</method>
			<method name="public Object call(org.jaxen.Context context, java.util.List args)">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.rule.Action</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>6</ca>
		<ce>4</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract void run(org.dom4j.Node)">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.DefaultAbsoluteLocationPath</name>
		<wmc>6</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>15</cbo>
		<rfc>23</rfc>
		<lcom>15</lcom>
		<ca>1</ca>
		<ce>14</ce>
		<npm>6</npm>
		<lcom3>2.0</lcom3>
		<loc>80</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4444444444444444</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.333333333333334</amc>
		<cc>
			<method name="public String toString()">1</method>
			<method name="public String getText()">1</method>
			<method name="public Object evaluate(org.jaxen.Context context)">1</method>
			<method name="public boolean isAbsolute()">1</method>
			<method name="public void accept(org.jaxen.expr.Visitor visitor)">1</method>
			<method name="public void _init_()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.NumberExpr</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>10</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>7</ca>
		<ce>3</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract Number getNumber()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.QualifiedName</name>
		<wmc>5</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>5</cbo>
		<rfc>8</rfc>
		<lcom>0</lcom>
		<ca>2</ca>
		<ce>3</ce>
		<npm>4</npm>
		<lcom3>0.25</lcom3>
		<loc>75</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.4666666666666667</cam>
		<ic>1</ic>
		<cbm>1</cbm>
		<amc>13.6</amc>
		<cc>
			<method name="void _init_(String namespaceURI, String localName)">1</method>
			<method name="public String getNamespaceURI()">1</method>
			<method name="public int hashCode()">2</method>
			<method name="public boolean equals(Object o)">7</method>
			<method name="public String getLocalName()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.dom.DOMComment</name>
		<wmc>36</wmc>
		<dit>0</dit>
		<noc>0</noc>
		<cbo>15</cbo>
		<rfc>70</rfc>
		<lcom>630</lcom>
		<ca>1</ca>
		<ce>14</ce>
		<npm>35</npm>
		<lcom3>2.0</lcom3>
		<loc>181</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.2638888888888889</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>4.027777777777778</amc>
		<cc>
			<method name="public boolean isSupported(String feature, String version)">1</method>
			<method name="public void deleteData(int offset, int count)">1</method>
			<method name="public void _init_(String text)">1</method>
			<method name="public org.w3c.dom.Node getFirstChild()">1</method>
			<method name="public String getNodeName()">1</method>
			<method name="public org.w3c.dom.NamedNodeMap getAttributes()">1</method>
			<method name="public int getLength()">1</method>
			<method name="public org.w3c.dom.NodeList getChildNodes()">1</method>
			<method name="public org.w3c.dom.Node getNextSibling()">1</method>
			<method name="public void setPrefix(String prefix)">1</method>
			<method name="public String getNodeValue()">1</method>
			<method name="public void setData(String data)">1</method>
			<method name="public boolean supports(String feature, String version)">1</method>
			<method name="public org.w3c.dom.Document getOwnerDocument()">1</method>
			<method name="public String getNamespaceURI()">1</method>
			<method name="public org.w3c.dom.Node insertBefore(org.w3c.dom.Node newChild, org.w3c.dom.Node refChild)">1</method>
			<method name="public org.w3c.dom.Node replaceChild(org.w3c.dom.Node newChild, org.w3c.dom.Node oldChild)">1</method>
			<method name="public org.w3c.dom.Node appendChild(org.w3c.dom.Node newChild)">1</method>
			<method name="public boolean hasAttributes()">1</method>
			<method name="public String getPrefix()">1</method>
			<method name="public org.w3c.dom.Node removeChild(org.w3c.dom.Node oldChild)">1</method>
			<method name="public void insertData(int offset, String arg)">1</method>
			<method name="public void replaceData(int offset, int count, String arg)">1</method>
			<method name="public org.w3c.dom.Node getParentNode()">1</method>
			<method name="public void _init_(org.dom4j.Element parent, String text)">1</method>
			<method name="public String substringData(int offset, int count)">1</method>
			<method name="public String getLocalName()">1</method>
			<method name="private void checkNewChildNode(org.w3c.dom.Node newChild)">1</method>
			<method name="public boolean hasChildNodes()">1</method>
			<method name="public org.w3c.dom.Node cloneNode(boolean deep)">1</method>
			<method name="public void setNodeValue(String nodeValue)">1</method>
			<method name="public org.w3c.dom.Node getPreviousSibling()">1</method>
			<method name="public org.w3c.dom.Node getLastChild()">1</method>
			<method name="public void appendData(String arg)">1</method>
			<method name="public void normalize()">1</method>
			<method name="public String getData()">1</method>
		</cc>
	</class>
	<class>
		<name>org.jaxen.expr.RelationalExpr</name>
		<wmc>1</wmc>
		<dit>1</dit>
		<noc>0</noc>
		<cbo>11</cbo>
		<rfc>1</rfc>
		<lcom>0</lcom>
		<ca>8</ca>
		<ce>3</ce>
		<npm>1</npm>
		<lcom3>2.0</lcom3>
		<loc>1</loc>
		<dam>0.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>1.0</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>0.0</amc>
		<cc>
			<method name="public abstract String getOperator()">1</method>
		</cc>
	</class>
	<class>
		<name>org.dom4j.jaxb.JAXBSupport</name>
		<wmc>7</wmc>
		<dit>1</dit>
		<noc>3</noc>
		<cbo>19</cbo>
		<rfc>19</rfc>
		<lcom>15</lcom>
		<ca>3</ca>
		<ce>16</ce>
		<npm>2</npm>
		<lcom3>0.6333333333333333</lcom3>
		<loc>98</loc>
		<dam>1.0</dam>
		<moa>0</moa>
		<mfa>0.0</mfa>
		<cam>0.34285714285714286</cam>
		<ic>0</ic>
		<cbm>0</cbm>
		<amc>12.285714285714286</amc>
		<cc>
			<method name="private javax.xml.bind.Unmarshaller getUnmarshaller()">1</method>
			<method name="public void _init_(String contextPath, ClassLoader classloader)">1</method>
			<method name="protected org.dom4j.Element marshal(javax.xml.bind.Element element)">1</method>
			<method name="private javax.xml.bind.Marshaller getMarshaller()">1</method>
			<method name="private javax.xml.bind.JAXBContext getContext()">1</method>
			<method name="protected javax.xml.bind.Element unmarshal(org.dom4j.Element element)">1</method>
			<method name="public void _init_(String contextPath)">1</method>
		</cc>
	</class>

</metrics>
